"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[9432],{"./src/components/_FIXED/TextField/stories/InputPhone.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AlignActions:()=>AlignActions,AlignActionsExternal:()=>AlignActionsExternal,AutoComplete:()=>AutoComplete,CmpSpacing:()=>CmpSpacing,ColorActive:()=>ColorActive,ColorLabel:()=>ColorLabel,ColorText:()=>ColorText,CopyAction:()=>CopyAction,Default:()=>Default,Direction:()=>Direction,Disabled:()=>Disabled,EndCmpExternal_:()=>EndCmpExternal_,EndCmp_:()=>EndCmp_,Error:()=>Error,Focused:()=>Focused,Formik_:()=>Formik_,FullWidth:()=>FullWidth,HelperText:()=>HelperText,HideStartActionsOnEmpty_:()=>HideStartActionsOnEmpty_,Label:()=>Label,LetterSpacing:()=>LetterSpacing,Margin_:()=>Margin_,OnChangeText:()=>OnChangeText,ReadOnly:()=>ReadOnly,Required:()=>Required,ShowMaskAsPlaceholder:()=>ShowMaskAsPlaceholder,StartCmpExternal_:()=>StartCmpExternal_,StartCmp_:()=>StartCmp_,TextAlign:()=>TextAlign,Value:()=>Value,Variant_:()=>Variant_,__namedExportsOrder:()=>__namedExportsOrder,default:()=>InputPhone_stories});var react=__webpack_require__("./node_modules/react/index.js"),Send=__webpack_require__("./node_modules/@mui/icons-material/esm/Send.js"),Stack=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),dist=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),formik_esm=__webpack_require__("./node_modules/formik/dist/formik.esm.js"),InputPattern=__webpack_require__("./src/components/_FIXED/TextField/InputPattern.tsx"),helpers=__webpack_require__("./src/utils/helpers.ts");const _excluded=["innerRef"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const InputPhone=_ref=>{let{innerRef}=_ref,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.includes(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.includes(o)||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);props=(0,helpers.$B)(props,"definitions",{"#":/[1-9]/}),props=(0,helpers.$B)(props,"direction","ltr"),props=(0,helpers.$B)(props,"value",""),props=(0,helpers.$B)(props,"mask","000-000-0000");(0,react.useRef)(null);return react.createElement(InputPattern.A,_extends({inputRef:innerRef,type:"tel"},props))};InputPhone.displayName="InputPhone",InputPhone.displayName="InputPhone";const TextField_InputPhone=InputPhone;try{InputPhone.displayName="InputPhone",InputPhone.__docgenInfo={description:"",displayName:"InputPhone",props:{alignActions:{defaultValue:null,description:"",name:"alignActions",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"start"'},{value:'"end"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"normal"'},{value:'"baseline"'},{value:'"first baseline"'},{value:'"last baseline"'},{value:'"space-between"'},{value:'"space-around"'},{value:'"space-evenly"'},{value:'"stretch"'},{value:'"safe center"'},{value:'"unsafe center"'},{value:'"inherit"'},{value:'"initial"'},{value:'"revert"'},{value:'"revert-layer"'},{value:'"unset"'}]}},alignActionsExternal:{defaultValue:null,description:"",name:"alignActionsExternal",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"start"'},{value:'"end"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"normal"'},{value:'"baseline"'},{value:'"first baseline"'},{value:'"last baseline"'},{value:'"space-between"'},{value:'"space-around"'},{value:'"space-evenly"'},{value:'"stretch"'},{value:'"safe center"'},{value:'"unsafe center"'},{value:'"inherit"'},{value:'"initial"'},{value:'"revert"'},{value:'"revert-layer"'},{value:'"unset"'}]}},autoComplete:{defaultValue:null,description:"",name:"autoComplete",required:!1,type:{name:"string"}},cmpSpacing:{defaultValue:null,description:"",name:"cmpSpacing",required:!1,type:{name:"number"}},colorActive:{defaultValue:null,description:"",name:"colorActive",required:!1,type:{name:"string"}},colorLabel:{defaultValue:null,description:"",name:"colorLabel",required:!1,type:{name:"string"}},colorText:{defaultValue:null,description:"",name:"colorText",required:!1,type:{name:"string"}},copyAction:{defaultValue:null,description:"",name:"copyAction",required:!1,type:{name:"boolean"}},copyMessage:{defaultValue:null,description:"",name:"copyMessage",required:!1,type:{name:"string"}},copyTooltipProps:{defaultValue:null,description:"",name:"copyTooltipProps",required:!1,type:{name:"TooltipProps"}},copyValueHandler:{defaultValue:null,description:"",name:"copyValueHandler",required:!1,type:{name:"((value: any) => any) & ((value: string, unmaskvalue: string) => string)"}},debounceDelay:{defaultValue:null,description:"",name:"debounceDelay",required:!1,type:{name:"number"}},direction:{defaultValue:null,description:"",name:"direction",required:!1,type:{name:"enum",value:[{value:'"ltr"'},{value:'"rtl"'}]}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},endCmp:{defaultValue:null,description:"",name:"endCmp",required:!1,type:{name:"IconType"}},endCmpExternal:{defaultValue:null,description:"",name:"endCmpExternal",required:!1,type:{name:"IconType"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"boolean"}},focused:{defaultValue:null,description:"",name:"focused",required:!1,type:{name:"boolean"}},fullWidth:{defaultValue:null,description:"",name:"fullWidth",required:!1,type:{name:"boolean"}},helperText:{defaultValue:null,description:"",name:"helperText",required:!1,type:{name:"string"}},hideStartActionsOnEmpty:{defaultValue:null,description:"",name:"hideStartActionsOnEmpty",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},letterSpacing:{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"string | number"}},margin:{defaultValue:null,description:"",name:"margin",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"dense"'}]}},maxRows:{defaultValue:null,description:"",name:"maxRows",required:!1,type:{name:"number"}},multiline:{defaultValue:null,description:"",name:"multiline",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"(Event: any) => void"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"(Event: any) => void"}},onEnterKeyPress:{defaultValue:null,description:"",name:"onEnterKeyPress",required:!1,type:{name:"((Event: any) => void) & (() => void)"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"(Event: any) => void"}},onKeyPress:{defaultValue:null,description:"",name:"onKeyPress",required:!1,type:{name:"((Event: any) => void) & ((event: any) => void)"}},padding:{defaultValue:null,description:"",name:"padding",required:!1,type:{name:"string | number"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},rows:{defaultValue:null,description:"",name:"rows",required:!1,type:{name:"number"}},startCmp:{defaultValue:null,description:"",name:"startCmp",required:!1,type:{name:"IconType"}},startCmpExternal:{defaultValue:null,description:"",name:"startCmpExternal",required:!1,type:{name:"IconType"}},textAlign:{defaultValue:null,description:"",name:"textAlign",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"start"'},{value:'"end"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"normal"'},{value:'"baseline"'},{value:'"first baseline"'},{value:'"last baseline"'},{value:'"space-between"'},{value:'"space-around"'},{value:'"space-evenly"'},{value:'"stretch"'},{value:'"safe center"'},{value:'"unsafe center"'},{value:'"inherit"'},{value:'"initial"'},{value:'"revert"'},{value:'"revert-layer"'},{value:'"unset"'}]}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"any"}},variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"filled"'},{value:'"standard"'},{value:'"outlined"'}]}},autofix:{defaultValue:null,description:"",name:"autofix",required:!1,type:{name:"boolean"}},blocks:{defaultValue:null,description:"",name:"blocks",required:!1,type:{name:"object"}},definitions:{defaultValue:null,description:"",name:"definitions",required:!1,type:{name:"object"}},lazy:{defaultValue:null,description:"",name:"lazy",required:!1,type:{name:"boolean"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string | any[] | ((event: any) => void)"}},onAccept:{defaultValue:null,description:"",name:"onAccept",required:!1,type:{name:"(value: any, mask: { [key: string]: any; _value: string; _unmaskedValue: string; }) => void"}},overwrite:{defaultValue:null,description:"",name:"overwrite",required:!1,type:{name:"boolean"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!1,type:{name:"string"}},showMaskAsPlaceholder:{defaultValue:null,description:"",name:"showMaskAsPlaceholder",required:!1,type:{name:"boolean"}},unmask:{defaultValue:null,description:"",name:"unmask",required:!1,type:{name:"boolean"}},copyTooltip:{defaultValue:null,description:"",name:"copyTooltip",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TextField/InputPhone.tsx#InputPhone"]={docgenInfo:InputPhone.__docgenInfo,name:"InputPhone",path:"src/components/_FIXED/TextField/InputPhone.tsx#InputPhone"})}catch(__react_docgen_typescript_loader_error){}var Checkbox=__webpack_require__("./src/components/_FIXED/Checkbox/Checkbox.tsx"),Typography=__webpack_require__("./src/components/_FIXED/Typography/Typography.tsx");function InputPhone_stories_extends(){return InputPhone_stories_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},InputPhone_stories_extends.apply(null,arguments)}const InputPhone_stories={parameters:{storySource:{source:"\nimport React, { useState } from 'react';\nimport type { ReactElement } from 'react';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport { Send as SendIcon } from '@mui/icons-material';\nimport { Box, Stack } from '@mui/material';\nimport { action } from '@storybook/addon-actions';\nimport { Formik } from 'formik';\nimport InputPhone from '../InputPhone';\nimport Checkbox from '../../Checkbox/Checkbox';\nimport Typography from '../../Typography/Typography';\n\nconst meta: Meta<typeof InputPhone> = {\n    title: 'Inputs/Inputs/InputPhone',\n    component: InputPhone,\n    tags: ['autodocs'],\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof InputPhone>;\n\nconst render = (args) => {\n    const [value, setValue] = useState(args.value);\n\n    return (\n        <InputPhone\n            {...args}\n            value={value}\n            copyAction\n            onChange={(e) => {\n                setValue(e.target.value);\n            }}\n            // OR\n            // onAccept={(value, mask) => {\n            //     setValue(value);\n            // }}\n        />\n    );\n};\n\nconst value = '0512345678';\n\nexport const Default: Story = {\n    args: {},\n    render,\n};\n\nexport const TextAlign: Story = {\n    args: {\n        label: 'Text Align',\n        textAlign: 'center',\n        value,\n    },\n    render,\n};\n\nexport const Direction: Story = {\n    args: {\n        label: 'RTL Direction',\n        direction: 'rtl',\n        value,\n    },\n    render,\n};\n\nexport const LetterSpacing: Story = {\n    args: {\n        label: 'Letter Spacing',\n        letterSpacing: '5px',\n        value,\n    },\n    render,\n};\n\nexport const ShowMaskAsPlaceholder: Story = {\n    args: {\n        label: 'Show Mask As Placeholder',\n        letterSpacing: '5px',\n        value,\n        showMaskAsPlaceholder: true,\n    },\n    render,\n};\n\nexport const AlignActions: Story = {\n    args: {\n        alignActions: 'flex-start',\n        startCmp: 'Phone',\n        endCmp: 'Fingerprint',\n        multiline: true,\n        label: 'Align Actions',\n        value,\n    },\n    render,\n};\n\nexport const AlignActionsExternal: Story = {\n    args: {\n        alignActions: 'flex-start',\n        startCmpExternal: 'Phone',\n        endCmpExternal: 'Fingerprint',\n        multiline: true,\n        label: 'Align Actions External',\n        value,\n    },\n    render,\n};\n\nexport const AutoComplete: Story = {\n    args: {\n        autoComplete: 'phone',\n        name: 'phone',\n        label: 'Auto Complete',\n    },\n    render,\n};\n\nexport const CmpSpacing: Story = {\n    args: {\n        alignActions: 'flex-start',\n        startCmp: 'Phone',\n        endCmp: 'Fingerprint',\n        cmpSpacing: 6,\n        label: 'Cmp Spacing',\n        value,\n    },\n    render,\n};\n\nexport const ColorActive: Story = {\n    args: {\n        colorActive: 'warning',\n        label: 'Color Active',\n        value,\n    },\n    render,\n};\n\nexport const ColorLabel: Story = {\n    args: {\n        colorLabel: 'success',\n        label: 'Color Label',\n        value,\n    },\n    render,\n};\n\nexport const ColorText: Story = {\n    args: {\n        colorText: '#D10DAA',\n        label: 'Color Text',\n        value,\n    },\n    render,\n};\n\nexport const Disabled: Story = {\n    args: {\n        colorText: '#D10DAA',\n        label: 'Disabled',\n        disabled: true,\n        value,\n    },\n    render,\n};\n\nexport const EndCmp_ = (args): ReactElement | React.ReactNode => (\n    <Stack spacing={3}>\n        <InputPhone {...args} endCmp=\"Send\" label=\"End Cmp\" value=\"endCmp with mui icon name or mui icon element\" />\n        <InputPhone\n            {...args}\n            endCmp={<SendIcon />}\n            label=\"End Cmp\"\n            value=\"endCmp with mui icon name or mui icon element\"\n        />\n    </Stack>\n);\n\nexport const EndCmpExternal_ = (args): ReactElement | React.ReactNode => (\n    <Stack spacing={3}>\n        <InputPhone\n            {...args}\n            endCmpExternal=\"Send\"\n            label=\"End Cmp External\"\n            value=\"endCmpExternal with mui icon name or mui icon element\"\n        />\n        <InputPhone\n            {...args}\n            endCmpExternal={<SendIcon />}\n            label=\"End Cmp External\"\n            value=\"endCmpExternal with mui icon name or mui icon element\"\n        />\n    </Stack>\n);\n\nexport const Error: Story = {\n    args: {\n        error: true,\n        label: 'With Error',\n        value,\n    },\n    render,\n};\n\nexport const Focused: Story = {\n    args: {\n        focused: true,\n        label: 'Focused',\n        value,\n    },\n    render,\n};\n\nexport const FullWidth: Story = {\n    args: {\n        fullWidth: false,\n        label: 'Not FullWidth',\n        value,\n    },\n    render,\n};\n\nexport const HelperText: Story = {\n    args: {\n        helperText: 'some helperText',\n        label: 'HelperText',\n        value,\n    },\n    render,\n};\n\nexport const HideStartActionsOnEmpty_ = (args): ReactElement | React.ReactNode => (\n    <Stack spacing={3}>\n        <InputPhone\n            {...args}\n            hideStartActionsOnEmpty={true}\n            startCmp=\"Send\"\n            endCmp=\"Fingerprint\"\n            label=\"Hide Start Actions OnEmpty\"\n        />\n        <InputPhone\n            {...args}\n            hideStartActionsOnEmpty={false}\n            startCmp=\"Send\"\n            endCmp=\"Fingerprint\"\n            label=\"Not Hide Start Actions OnEmpty\"\n        />\n    </Stack>\n);\n\nexport const Label: Story = {\n    args: {\n        label: 'Some Label Input',\n    },\n    render,\n};\n\nexport const Margin_ = (args): ReactElement | React.ReactNode => (\n    <Stack>\n        <div style={{ backgroundColor: '#8d8773', textAlign: 'center' }}>some text for see the margin</div>\n        <InputPhone {...args} label=\"None Margin\" />\n        <div style={{ backgroundColor: '#8d8773', textAlign: 'center' }}>some text for see the margin</div>\n        <InputPhone {...args} margin=\"dense\" label=\"Dense Margin\" />\n        <div style={{ backgroundColor: '#8d8773', textAlign: 'center' }}>some text for see the margin</div>\n        <InputPhone {...args} margin=\"normal\" label=\"Normal Margin\" />\n        <div style={{ backgroundColor: '#8d8773', textAlign: 'center' }}>some text for see the margin</div>\n    </Stack>\n);\n\nexport const OnChangeText: Story = {\n    args: {\n        label: 'text field state',\n    },\n    render,\n};\n\nexport const ReadOnly: Story = {\n    args: {\n        readOnly: true,\n        label: 'Read Only',\n        value: 'some text for show only',\n    },\n    render,\n};\n\nexport const Required: Story = {\n    args: {\n        required: true,\n        label: 'Required field',\n    },\n    render,\n};\n\nexport const StartCmp_ = (args): ReactElement | React.ReactNode => (\n    <Stack spacing={3}>\n        <InputPhone {...args} startCmp=\"Send\" label=\"Start Cmp\" value=\"with string mui icon name\" />\n        <InputPhone {...args} startCmp={<SendIcon />} label=\"Start Cmp\" value=\"with mui icon element\" />\n    </Stack>\n);\n\nexport const StartCmpExternal_ = (args): ReactElement | React.ReactNode => (\n    <Stack spacing={3}>\n        <InputPhone {...args} startCmpExternal=\"Send\" label=\"Start Cmp External\" value=\"with string mui icon name\" />\n        <InputPhone\n            {...args}\n            startCmpExternal={<SendIcon />}\n            label=\"Start Cmp External\"\n            value=\"with mui icon element\"\n        />\n    </Stack>\n);\n\nexport const Value: Story = {\n    args: {\n        value: '0501234567',\n    },\n    render,\n};\n\nexport const Variant_ = (args): ReactElement | React.ReactNode => (\n    <Stack spacing={3}>\n        <InputPhone {...args} variant=\"filled\" label=\"filled variant\" value=\"some text here\" />\n        <InputPhone {...args} variant=\"outlined\" label=\"outlined variant\" value=\"some text here\" />\n        <InputPhone {...args} variant=\"standard\" label=\"standard variant\" value=\"some text here\" />\n    </Stack>\n);\n\nexport const CopyAction: Story = {\n    args: {\n        value: '0501234567',\n        copyAction: true,\n        copyMessage: 'COPIED!',\n        copyTooltip: 'copy tooltip',\n    },\n    render,\n};\n\nexport const Formik_ = (args): React.ReactElement | React.ReactNode => {\n    return (\n        <Formik\n            initialValues={{ phone: '050-000-0124', unmask: false }}\n            validate={(values) => (!values.phone.length ? { error: 'Required!' } : {})}\n            onSubmit={(values) => alert(values.phone)}\n        >\n            {({ values, touched, errors, handleChange, handleSubmit }: any) => {\n                action('formikRender')(values);\n                return (\n                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                        <InputPhone\n                            {...args}\n                            name=\"phone\"\n                            label=\"Phone\"\n                            helperText={touched.error && errors.phone ? errors.phone : ''}\n                            error={!!(touched.error && errors.phone)}\n                            value={values.phone}\n                            unmask={values.unmask}\n                            onChange={handleChange}\n                            showMaskAsPlaceholder={touched.phone}\n                            onEnterKeyPress={handleSubmit}\n                        />\n                        <Checkbox name=\"unmask\" label=\"unmask value\" checked={values.unmask} onChange={handleChange} />\n                        <Typography>VALUE: {values.phone}</Typography>\n                    </Box>\n                );\n            }}\n        </Formik>\n    );\n};\n",locationsMap:{default:{startLoc:{col:30,line:44},endLoc:{col:1,line:47},startBody:{col:30,line:44},endBody:{col:1,line:47}},"text-align":{startLoc:{col:32,line:49},endLoc:{col:1,line:56},startBody:{col:32,line:49},endBody:{col:1,line:56}},direction:{startLoc:{col:32,line:58},endLoc:{col:1,line:65},startBody:{col:32,line:58},endBody:{col:1,line:65}},"letter-spacing":{startLoc:{col:36,line:67},endLoc:{col:1,line:74},startBody:{col:36,line:67},endBody:{col:1,line:74}},"show-mask-as-placeholder":{startLoc:{col:44,line:76},endLoc:{col:1,line:84},startBody:{col:44,line:76},endBody:{col:1,line:84}},"align-actions":{startLoc:{col:35,line:86},endLoc:{col:1,line:96},startBody:{col:35,line:86},endBody:{col:1,line:96}},"align-actions-external":{startLoc:{col:43,line:98},endLoc:{col:1,line:108},startBody:{col:43,line:98},endBody:{col:1,line:108}},"auto-complete":{startLoc:{col:35,line:110},endLoc:{col:1,line:117},startBody:{col:35,line:110},endBody:{col:1,line:117}},"cmp-spacing":{startLoc:{col:33,line:119},endLoc:{col:1,line:129},startBody:{col:33,line:119},endBody:{col:1,line:129}},"color-active":{startLoc:{col:34,line:131},endLoc:{col:1,line:138},startBody:{col:34,line:131},endBody:{col:1,line:138}},"color-label":{startLoc:{col:33,line:140},endLoc:{col:1,line:147},startBody:{col:33,line:140},endBody:{col:1,line:147}},"color-text":{startLoc:{col:32,line:149},endLoc:{col:1,line:156},startBody:{col:32,line:149},endBody:{col:1,line:156}},disabled:{startLoc:{col:31,line:158},endLoc:{col:1,line:166},startBody:{col:31,line:158},endBody:{col:1,line:166}},"end-cmp":{startLoc:{col:23,line:168},endLoc:{col:1,line:178},startBody:{col:23,line:168},endBody:{col:1,line:178}},"end-cmp-external":{startLoc:{col:31,line:180},endLoc:{col:1,line:195},startBody:{col:31,line:180},endBody:{col:1,line:195}},error:{startLoc:{col:28,line:197},endLoc:{col:1,line:204},startBody:{col:28,line:197},endBody:{col:1,line:204}},focused:{startLoc:{col:30,line:206},endLoc:{col:1,line:213},startBody:{col:30,line:206},endBody:{col:1,line:213}},"full-width":{startLoc:{col:32,line:215},endLoc:{col:1,line:222},startBody:{col:32,line:215},endBody:{col:1,line:222}},"helper-text":{startLoc:{col:33,line:224},endLoc:{col:1,line:231},startBody:{col:33,line:224},endBody:{col:1,line:231}},"hide-start-actions-on-empty":{startLoc:{col:40,line:233},endLoc:{col:1,line:250},startBody:{col:40,line:233},endBody:{col:1,line:250}},label:{startLoc:{col:28,line:252},endLoc:{col:1,line:257},startBody:{col:28,line:252},endBody:{col:1,line:257}},margin:{startLoc:{col:23,line:259},endLoc:{col:1,line:269},startBody:{col:23,line:259},endBody:{col:1,line:269}},"on-change-text":{startLoc:{col:35,line:271},endLoc:{col:1,line:276},startBody:{col:35,line:271},endBody:{col:1,line:276}},"read-only":{startLoc:{col:31,line:278},endLoc:{col:1,line:285},startBody:{col:31,line:278},endBody:{col:1,line:285}},required:{startLoc:{col:31,line:287},endLoc:{col:1,line:293},startBody:{col:31,line:287},endBody:{col:1,line:293}},"start-cmp":{startLoc:{col:25,line:295},endLoc:{col:1,line:300},startBody:{col:25,line:295},endBody:{col:1,line:300}},"start-cmp-external":{startLoc:{col:33,line:302},endLoc:{col:1,line:312},startBody:{col:33,line:302},endBody:{col:1,line:312}},value:{startLoc:{col:28,line:314},endLoc:{col:1,line:319},startBody:{col:28,line:314},endBody:{col:1,line:319}},variant:{startLoc:{col:24,line:321},endLoc:{col:1,line:327},startBody:{col:24,line:321},endBody:{col:1,line:327}},"copy-action":{startLoc:{col:33,line:329},endLoc:{col:1,line:337},startBody:{col:33,line:329},endBody:{col:1,line:337}},formik:{startLoc:{col:23,line:339},endLoc:{col:1,line:369},startBody:{col:23,line:339},endBody:{col:1,line:369}}}}},title:"Inputs/Inputs/InputPhone",component:TextField_InputPhone,tags:["autodocs"]},render=args=>{const[value,setValue]=(0,react.useState)(args.value);return react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{value,copyAction:!0,onChange:e=>{setValue(e.target.value)}}))};render.displayName="render";const value="0512345678",Default={args:{},render},TextAlign={args:{label:"Text Align",textAlign:"center",value},render},Direction={args:{label:"RTL Direction",direction:"rtl",value},render},LetterSpacing={args:{label:"Letter Spacing",letterSpacing:"5px",value},render},ShowMaskAsPlaceholder={args:{label:"Show Mask As Placeholder",letterSpacing:"5px",value,showMaskAsPlaceholder:!0},render},AlignActions={args:{alignActions:"flex-start",startCmp:"Phone",endCmp:"Fingerprint",multiline:!0,label:"Align Actions",value},render},AlignActionsExternal={args:{alignActions:"flex-start",startCmpExternal:"Phone",endCmpExternal:"Fingerprint",multiline:!0,label:"Align Actions External",value},render},AutoComplete={args:{autoComplete:"phone",name:"phone",label:"Auto Complete"},render},CmpSpacing={args:{alignActions:"flex-start",startCmp:"Phone",endCmp:"Fingerprint",cmpSpacing:6,label:"Cmp Spacing",value},render},ColorActive={args:{colorActive:"warning",label:"Color Active",value},render},ColorLabel={args:{colorLabel:"success",label:"Color Label",value},render},ColorText={args:{colorText:"#D10DAA",label:"Color Text",value},render},Disabled={args:{colorText:"#D10DAA",label:"Disabled",disabled:!0,value},render},EndCmp_=args=>react.createElement(Stack.A,{spacing:3},react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{endCmp:"Send",label:"End Cmp",value:"endCmp with mui icon name or mui icon element"})),react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{endCmp:react.createElement(Send.A,null),label:"End Cmp",value:"endCmp with mui icon name or mui icon element"})));EndCmp_.displayName="EndCmp_";const EndCmpExternal_=args=>react.createElement(Stack.A,{spacing:3},react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{endCmpExternal:"Send",label:"End Cmp External",value:"endCmpExternal with mui icon name or mui icon element"})),react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{endCmpExternal:react.createElement(Send.A,null),label:"End Cmp External",value:"endCmpExternal with mui icon name or mui icon element"})));EndCmpExternal_.displayName="EndCmpExternal_";const Error={args:{error:!0,label:"With Error",value},render},Focused={args:{focused:!0,label:"Focused",value},render},FullWidth={args:{fullWidth:!1,label:"Not FullWidth",value},render},HelperText={args:{helperText:"some helperText",label:"HelperText",value},render},HideStartActionsOnEmpty_=args=>react.createElement(Stack.A,{spacing:3},react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{hideStartActionsOnEmpty:!0,startCmp:"Send",endCmp:"Fingerprint",label:"Hide Start Actions OnEmpty"})),react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{hideStartActionsOnEmpty:!1,startCmp:"Send",endCmp:"Fingerprint",label:"Not Hide Start Actions OnEmpty"})));HideStartActionsOnEmpty_.displayName="HideStartActionsOnEmpty_";const Label={args:{label:"Some Label Input"},render},Margin_=args=>react.createElement(Stack.A,null,react.createElement("div",{style:{backgroundColor:"#8d8773",textAlign:"center"}},"some text for see the margin"),react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{label:"None Margin"})),react.createElement("div",{style:{backgroundColor:"#8d8773",textAlign:"center"}},"some text for see the margin"),react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{margin:"dense",label:"Dense Margin"})),react.createElement("div",{style:{backgroundColor:"#8d8773",textAlign:"center"}},"some text for see the margin"),react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{margin:"normal",label:"Normal Margin"})),react.createElement("div",{style:{backgroundColor:"#8d8773",textAlign:"center"}},"some text for see the margin"));Margin_.displayName="Margin_";const OnChangeText={args:{label:"text field state"},render},ReadOnly={args:{readOnly:!0,label:"Read Only",value:"some text for show only"},render},Required={args:{required:!0,label:"Required field"},render},StartCmp_=args=>react.createElement(Stack.A,{spacing:3},react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{startCmp:"Send",label:"Start Cmp",value:"with string mui icon name"})),react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{startCmp:react.createElement(Send.A,null),label:"Start Cmp",value:"with mui icon element"})));StartCmp_.displayName="StartCmp_";const StartCmpExternal_=args=>react.createElement(Stack.A,{spacing:3},react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{startCmpExternal:"Send",label:"Start Cmp External",value:"with string mui icon name"})),react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{startCmpExternal:react.createElement(Send.A,null),label:"Start Cmp External",value:"with mui icon element"})));StartCmpExternal_.displayName="StartCmpExternal_";const Value={args:{value:"0501234567"},render},Variant_=args=>react.createElement(Stack.A,{spacing:3},react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{variant:"filled",label:"filled variant",value:"some text here"})),react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{variant:"outlined",label:"outlined variant",value:"some text here"})),react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{variant:"standard",label:"standard variant",value:"some text here"})));Variant_.displayName="Variant_";const CopyAction={args:{value:"0501234567",copyAction:!0,copyMessage:"COPIED!",copyTooltip:"copy tooltip"},render},Formik_=args=>react.createElement(formik_esm.l1,{initialValues:{phone:"050-000-0124",unmask:!1},validate:values=>values.phone.length?{}:{error:"Required!"},onSubmit:values=>alert(values.phone)},(({values,touched,errors,handleChange,handleSubmit})=>((0,dist.XI)("formikRender")(values),react.createElement(Box.A,{sx:{display:"flex",flexDirection:"column",gap:2}},react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{name:"phone",label:"Phone",helperText:touched.error&&errors.phone?errors.phone:"",error:!(!touched.error||!errors.phone),value:values.phone,unmask:values.unmask,onChange:handleChange,showMaskAsPlaceholder:touched.phone,onEnterKeyPress:handleSubmit})),react.createElement(Checkbox.A,{name:"unmask",label:"unmask value",checked:values.unmask,onChange:handleChange}),react.createElement(Typography.A,null,"VALUE: ",values.phone)))));Formik_.displayName="Formik_",Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {},\n  render\n}",...Default.parameters?.docs?.source}}},TextAlign.parameters={...TextAlign.parameters,docs:{...TextAlign.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Text Align',\n    textAlign: 'center',\n    value\n  },\n  render\n}",...TextAlign.parameters?.docs?.source}}},Direction.parameters={...Direction.parameters,docs:{...Direction.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'RTL Direction',\n    direction: 'rtl',\n    value\n  },\n  render\n}",...Direction.parameters?.docs?.source}}},LetterSpacing.parameters={...LetterSpacing.parameters,docs:{...LetterSpacing.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Letter Spacing',\n    letterSpacing: '5px',\n    value\n  },\n  render\n}",...LetterSpacing.parameters?.docs?.source}}},ShowMaskAsPlaceholder.parameters={...ShowMaskAsPlaceholder.parameters,docs:{...ShowMaskAsPlaceholder.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Show Mask As Placeholder',\n    letterSpacing: '5px',\n    value,\n    showMaskAsPlaceholder: true\n  },\n  render\n}",...ShowMaskAsPlaceholder.parameters?.docs?.source}}},AlignActions.parameters={...AlignActions.parameters,docs:{...AlignActions.parameters?.docs,source:{originalSource:"{\n  args: {\n    alignActions: 'flex-start',\n    startCmp: 'Phone',\n    endCmp: 'Fingerprint',\n    multiline: true,\n    label: 'Align Actions',\n    value\n  },\n  render\n}",...AlignActions.parameters?.docs?.source}}},AlignActionsExternal.parameters={...AlignActionsExternal.parameters,docs:{...AlignActionsExternal.parameters?.docs,source:{originalSource:"{\n  args: {\n    alignActions: 'flex-start',\n    startCmpExternal: 'Phone',\n    endCmpExternal: 'Fingerprint',\n    multiline: true,\n    label: 'Align Actions External',\n    value\n  },\n  render\n}",...AlignActionsExternal.parameters?.docs?.source}}},AutoComplete.parameters={...AutoComplete.parameters,docs:{...AutoComplete.parameters?.docs,source:{originalSource:"{\n  args: {\n    autoComplete: 'phone',\n    name: 'phone',\n    label: 'Auto Complete'\n  },\n  render\n}",...AutoComplete.parameters?.docs?.source}}},CmpSpacing.parameters={...CmpSpacing.parameters,docs:{...CmpSpacing.parameters?.docs,source:{originalSource:"{\n  args: {\n    alignActions: 'flex-start',\n    startCmp: 'Phone',\n    endCmp: 'Fingerprint',\n    cmpSpacing: 6,\n    label: 'Cmp Spacing',\n    value\n  },\n  render\n}",...CmpSpacing.parameters?.docs?.source}}},ColorActive.parameters={...ColorActive.parameters,docs:{...ColorActive.parameters?.docs,source:{originalSource:"{\n  args: {\n    colorActive: 'warning',\n    label: 'Color Active',\n    value\n  },\n  render\n}",...ColorActive.parameters?.docs?.source}}},ColorLabel.parameters={...ColorLabel.parameters,docs:{...ColorLabel.parameters?.docs,source:{originalSource:"{\n  args: {\n    colorLabel: 'success',\n    label: 'Color Label',\n    value\n  },\n  render\n}",...ColorLabel.parameters?.docs?.source}}},ColorText.parameters={...ColorText.parameters,docs:{...ColorText.parameters?.docs,source:{originalSource:"{\n  args: {\n    colorText: '#D10DAA',\n    label: 'Color Text',\n    value\n  },\n  render\n}",...ColorText.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    colorText: '#D10DAA',\n    label: 'Disabled',\n    disabled: true,\n    value\n  },\n  render\n}",...Disabled.parameters?.docs?.source}}},EndCmp_.parameters={...EndCmp_.parameters,docs:{...EndCmp_.parameters?.docs,source:{originalSource:'(args): ReactElement | React.ReactNode => <Stack spacing={3}>\n        <InputPhone {...args} endCmp="Send" label="End Cmp" value="endCmp with mui icon name or mui icon element" />\n        <InputPhone {...args} endCmp={<SendIcon />} label="End Cmp" value="endCmp with mui icon name or mui icon element" />\n    </Stack>',...EndCmp_.parameters?.docs?.source}}},EndCmpExternal_.parameters={...EndCmpExternal_.parameters,docs:{...EndCmpExternal_.parameters?.docs,source:{originalSource:'(args): ReactElement | React.ReactNode => <Stack spacing={3}>\n        <InputPhone {...args} endCmpExternal="Send" label="End Cmp External" value="endCmpExternal with mui icon name or mui icon element" />\n        <InputPhone {...args} endCmpExternal={<SendIcon />} label="End Cmp External" value="endCmpExternal with mui icon name or mui icon element" />\n    </Stack>',...EndCmpExternal_.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:"{\n  args: {\n    error: true,\n    label: 'With Error',\n    value\n  },\n  render\n}",...Error.parameters?.docs?.source}}},Focused.parameters={...Focused.parameters,docs:{...Focused.parameters?.docs,source:{originalSource:"{\n  args: {\n    focused: true,\n    label: 'Focused',\n    value\n  },\n  render\n}",...Focused.parameters?.docs?.source}}},FullWidth.parameters={...FullWidth.parameters,docs:{...FullWidth.parameters?.docs,source:{originalSource:"{\n  args: {\n    fullWidth: false,\n    label: 'Not FullWidth',\n    value\n  },\n  render\n}",...FullWidth.parameters?.docs?.source}}},HelperText.parameters={...HelperText.parameters,docs:{...HelperText.parameters?.docs,source:{originalSource:"{\n  args: {\n    helperText: 'some helperText',\n    label: 'HelperText',\n    value\n  },\n  render\n}",...HelperText.parameters?.docs?.source}}},HideStartActionsOnEmpty_.parameters={...HideStartActionsOnEmpty_.parameters,docs:{...HideStartActionsOnEmpty_.parameters?.docs,source:{originalSource:'(args): ReactElement | React.ReactNode => <Stack spacing={3}>\n        <InputPhone {...args} hideStartActionsOnEmpty={true} startCmp="Send" endCmp="Fingerprint" label="Hide Start Actions OnEmpty" />\n        <InputPhone {...args} hideStartActionsOnEmpty={false} startCmp="Send" endCmp="Fingerprint" label="Not Hide Start Actions OnEmpty" />\n    </Stack>',...HideStartActionsOnEmpty_.parameters?.docs?.source}}},Label.parameters={...Label.parameters,docs:{...Label.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Some Label Input'\n  },\n  render\n}",...Label.parameters?.docs?.source}}},Margin_.parameters={...Margin_.parameters,docs:{...Margin_.parameters?.docs,source:{originalSource:"(args): ReactElement | React.ReactNode => <Stack>\n        <div style={{\n    backgroundColor: '#8d8773',\n    textAlign: 'center'\n  }}>some text for see the margin</div>\n        <InputPhone {...args} label=\"None Margin\" />\n        <div style={{\n    backgroundColor: '#8d8773',\n    textAlign: 'center'\n  }}>some text for see the margin</div>\n        <InputPhone {...args} margin=\"dense\" label=\"Dense Margin\" />\n        <div style={{\n    backgroundColor: '#8d8773',\n    textAlign: 'center'\n  }}>some text for see the margin</div>\n        <InputPhone {...args} margin=\"normal\" label=\"Normal Margin\" />\n        <div style={{\n    backgroundColor: '#8d8773',\n    textAlign: 'center'\n  }}>some text for see the margin</div>\n    </Stack>",...Margin_.parameters?.docs?.source}}},OnChangeText.parameters={...OnChangeText.parameters,docs:{...OnChangeText.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'text field state'\n  },\n  render\n}",...OnChangeText.parameters?.docs?.source}}},ReadOnly.parameters={...ReadOnly.parameters,docs:{...ReadOnly.parameters?.docs,source:{originalSource:"{\n  args: {\n    readOnly: true,\n    label: 'Read Only',\n    value: 'some text for show only'\n  },\n  render\n}",...ReadOnly.parameters?.docs?.source}}},Required.parameters={...Required.parameters,docs:{...Required.parameters?.docs,source:{originalSource:"{\n  args: {\n    required: true,\n    label: 'Required field'\n  },\n  render\n}",...Required.parameters?.docs?.source}}},StartCmp_.parameters={...StartCmp_.parameters,docs:{...StartCmp_.parameters?.docs,source:{originalSource:'(args): ReactElement | React.ReactNode => <Stack spacing={3}>\n        <InputPhone {...args} startCmp="Send" label="Start Cmp" value="with string mui icon name" />\n        <InputPhone {...args} startCmp={<SendIcon />} label="Start Cmp" value="with mui icon element" />\n    </Stack>',...StartCmp_.parameters?.docs?.source}}},StartCmpExternal_.parameters={...StartCmpExternal_.parameters,docs:{...StartCmpExternal_.parameters?.docs,source:{originalSource:'(args): ReactElement | React.ReactNode => <Stack spacing={3}>\n        <InputPhone {...args} startCmpExternal="Send" label="Start Cmp External" value="with string mui icon name" />\n        <InputPhone {...args} startCmpExternal={<SendIcon />} label="Start Cmp External" value="with mui icon element" />\n    </Stack>',...StartCmpExternal_.parameters?.docs?.source}}},Value.parameters={...Value.parameters,docs:{...Value.parameters?.docs,source:{originalSource:"{\n  args: {\n    value: '0501234567'\n  },\n  render\n}",...Value.parameters?.docs?.source}}},Variant_.parameters={...Variant_.parameters,docs:{...Variant_.parameters?.docs,source:{originalSource:'(args): ReactElement | React.ReactNode => <Stack spacing={3}>\n        <InputPhone {...args} variant="filled" label="filled variant" value="some text here" />\n        <InputPhone {...args} variant="outlined" label="outlined variant" value="some text here" />\n        <InputPhone {...args} variant="standard" label="standard variant" value="some text here" />\n    </Stack>',...Variant_.parameters?.docs?.source}}},CopyAction.parameters={...CopyAction.parameters,docs:{...CopyAction.parameters?.docs,source:{originalSource:"{\n  args: {\n    value: '0501234567',\n    copyAction: true,\n    copyMessage: 'COPIED!',\n    copyTooltip: 'copy tooltip'\n  },\n  render\n}",...CopyAction.parameters?.docs?.source}}},Formik_.parameters={...Formik_.parameters,docs:{...Formik_.parameters?.docs,source:{originalSource:"(args): React.ReactElement | React.ReactNode => {\n  return <Formik initialValues={{\n    phone: '050-000-0124',\n    unmask: false\n  }} validate={values => !values.phone.length ? {\n    error: 'Required!'\n  } : {}} onSubmit={values => alert(values.phone)}>\n            {({\n      values,\n      touched,\n      errors,\n      handleChange,\n      handleSubmit\n    }: any) => {\n      action('formikRender')(values);\n      return <Box sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2\n      }}>\n                        <InputPhone {...args} name=\"phone\" label=\"Phone\" helperText={touched.error && errors.phone ? errors.phone : ''} error={!!(touched.error && errors.phone)} value={values.phone} unmask={values.unmask} onChange={handleChange} showMaskAsPlaceholder={touched.phone} onEnterKeyPress={handleSubmit} />\n                        <Checkbox name=\"unmask\" label=\"unmask value\" checked={values.unmask} onChange={handleChange} />\n                        <Typography>VALUE: {values.phone}</Typography>\n                    </Box>;\n    }}\n        </Formik>;\n}",...Formik_.parameters?.docs?.source}}};const __namedExportsOrder=["Default","TextAlign","Direction","LetterSpacing","ShowMaskAsPlaceholder","AlignActions","AlignActionsExternal","AutoComplete","CmpSpacing","ColorActive","ColorLabel","ColorText","Disabled","EndCmp_","EndCmpExternal_","Error","Focused","FullWidth","HelperText","HideStartActionsOnEmpty_","Label","Margin_","OnChangeText","ReadOnly","Required","StartCmp_","StartCmpExternal_","Value","Variant_","CopyAction","Formik_"];try{EndCmp_.displayName="EndCmp_",EndCmp_.__docgenInfo={description:"",displayName:"EndCmp_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TextField/stories/InputPhone.stories.tsx#EndCmp_"]={docgenInfo:EndCmp_.__docgenInfo,name:"EndCmp_",path:"src/components/_FIXED/TextField/stories/InputPhone.stories.tsx#EndCmp_"})}catch(__react_docgen_typescript_loader_error){}try{EndCmpExternal_.displayName="EndCmpExternal_",EndCmpExternal_.__docgenInfo={description:"",displayName:"EndCmpExternal_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TextField/stories/InputPhone.stories.tsx#EndCmpExternal_"]={docgenInfo:EndCmpExternal_.__docgenInfo,name:"EndCmpExternal_",path:"src/components/_FIXED/TextField/stories/InputPhone.stories.tsx#EndCmpExternal_"})}catch(__react_docgen_typescript_loader_error){}try{HideStartActionsOnEmpty_.displayName="HideStartActionsOnEmpty_",HideStartActionsOnEmpty_.__docgenInfo={description:"",displayName:"HideStartActionsOnEmpty_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TextField/stories/InputPhone.stories.tsx#HideStartActionsOnEmpty_"]={docgenInfo:HideStartActionsOnEmpty_.__docgenInfo,name:"HideStartActionsOnEmpty_",path:"src/components/_FIXED/TextField/stories/InputPhone.stories.tsx#HideStartActionsOnEmpty_"})}catch(__react_docgen_typescript_loader_error){}try{Margin_.displayName="Margin_",Margin_.__docgenInfo={description:"",displayName:"Margin_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TextField/stories/InputPhone.stories.tsx#Margin_"]={docgenInfo:Margin_.__docgenInfo,name:"Margin_",path:"src/components/_FIXED/TextField/stories/InputPhone.stories.tsx#Margin_"})}catch(__react_docgen_typescript_loader_error){}try{StartCmp_.displayName="StartCmp_",StartCmp_.__docgenInfo={description:"",displayName:"StartCmp_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TextField/stories/InputPhone.stories.tsx#StartCmp_"]={docgenInfo:StartCmp_.__docgenInfo,name:"StartCmp_",path:"src/components/_FIXED/TextField/stories/InputPhone.stories.tsx#StartCmp_"})}catch(__react_docgen_typescript_loader_error){}try{StartCmpExternal_.displayName="StartCmpExternal_",StartCmpExternal_.__docgenInfo={description:"",displayName:"StartCmpExternal_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TextField/stories/InputPhone.stories.tsx#StartCmpExternal_"]={docgenInfo:StartCmpExternal_.__docgenInfo,name:"StartCmpExternal_",path:"src/components/_FIXED/TextField/stories/InputPhone.stories.tsx#StartCmpExternal_"})}catch(__react_docgen_typescript_loader_error){}try{Variant_.displayName="Variant_",Variant_.__docgenInfo={description:"",displayName:"Variant_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TextField/stories/InputPhone.stories.tsx#Variant_"]={docgenInfo:Variant_.__docgenInfo,name:"Variant_",path:"src/components/_FIXED/TextField/stories/InputPhone.stories.tsx#Variant_"})}catch(__react_docgen_typescript_loader_error){}try{Formik_.displayName="Formik_",Formik_.__docgenInfo={description:"",displayName:"Formik_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TextField/stories/InputPhone.stories.tsx#Formik_"]={docgenInfo:Formik_.__docgenInfo,name:"Formik_",path:"src/components/_FIXED/TextField/stories/InputPhone.stories.tsx#Formik_"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/_FIXED/TextField/InputPattern.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_imask__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-imask/esm/index.js"),_mui_material__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mui/material/node_modules/@mui/base/ClickAwayListener/ClickAwayListener.js"),_mui_material__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),_mui_material__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@mui/material/FormHelperText/FormHelperText.js"),_TextField__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/_FIXED/TextField/TextField.tsx"),_utils_helpers__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/utils/helpers.ts"),_Snackbar_Snackbar__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/_FIXED/Snackbar/Snackbar.tsx"),_Button_Button__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/_FIXED/Button/Button.tsx");const _excluded=["inputRef","copyAction","copyIcon","copyTooltipProps","handleClickCopyToClipboard","showMaskAsPlaceholder","InputLabelProps","endCmp"],_excluded2=["copyMessage","copyValueHandler","error","focused","helperText","inputRef","lazy","name","onAccept","onChange","onFocus","onKeyPress","placeholder","showMaskAsPlaceholder","unmask","value"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.includes(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.includes(o)||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}const MaskedInput=(0,react_imask__WEBPACK_IMPORTED_MODULE_1__.X1)((_ref=>{let{inputRef,copyAction,copyIcon,copyTooltipProps,handleClickCopyToClipboard,showMaskAsPlaceholder,InputLabelProps,endCmp}=_ref,otherProps=_objectWithoutProperties(_ref,_excluded);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_TextField__WEBPACK_IMPORTED_MODULE_2__.A,_extends({inputRef,InputLabelProps:_objectSpread({shrink:showMaskAsPlaceholder},InputLabelProps)},otherProps,{copyAction:!1,endCmp:[...endCmp?[endCmp]:[],...copyAction?[react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_5__.A,{key:"copy-pattern-action",onClick:handleClickCopyToClipboard,icon:copyIcon,tooltipProps:copyTooltipProps,sx:{ml:"0.5em"}})]:[]]}))})),InputPattern=props=>{props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"direction","ltr"),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"copyMessage","Copied"),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"copyIcon","ContentCopy"),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"copyValueHandler",((value,unmaskvalue)=>unmaskvalue)),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"value","");const{copyMessage,copyValueHandler,error,focused,helperText,inputRef,lazy:_lazy,name,onAccept,onChange,onFocus,onKeyPress,placeholder,showMaskAsPlaceholder,unmask,value:_value}=props,rest=_objectWithoutProperties(props,_excluded2),[maskedValue,setMaskedValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_value),[unmaskedValue,setUnmaskedValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_value),[isOnFocus,setIsOnFocus]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[showAlert,setShowAlert]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),lazy=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.O9)(_lazy)?!!_lazy:!isOnFocus||(!(unmaskedValue||!(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.O9)(placeholder))||!showMaskAsPlaceholder&&!unmaskedValue)),[_lazy,isOnFocus,placeholder,showMaskAsPlaceholder,unmaskedValue]),value=unmask?unmaskedValue:maskedValue;return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const value=unmask?unmaskedValue:maskedValue;onChange?.({target:{name,value}})}),[unmask]),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__.A,{onClickAway:()=>setIsOnFocus(!1)},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_7__.A,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(MaskedInput,_extends({},rest,{inputRef,name,unmask,value,focused:focused||isOnFocus,lazy,showMaskAsPlaceholder,onFocus:e=>{setIsOnFocus(!0),onFocus?.(e)},onAccept:(changeValue,mask)=>{setMaskedValue(mask._value),setUnmaskedValue(mask._unmaskedValue);const value=unmask?mask._unmaskedValue:mask._value;onAccept?onAccept(value,mask):onChange({target:{name,value:mask._unmaskedValue}})},handleClickCopyToClipboard:()=>{const textToCopy=copyValueHandler?.(value,unmaskedValue)??value,copied=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.lW)(textToCopy);copyMessage&&setShowAlert(copied)}})),helperText&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_8__.A,{error},helperText),rest.copyAction&&copyMessage&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Snackbar_Snackbar__WEBPACK_IMPORTED_MODULE_4__.A,{open:showAlert,onClose:()=>setShowAlert(!1),autoHideDuration:1500,message:copyMessage})))};InputPattern.displayName="InputPattern",InputPattern.displayName="InputPattern";const __WEBPACK_DEFAULT_EXPORT__=InputPattern;try{InputPattern.displayName="InputPattern",InputPattern.__docgenInfo={description:"",displayName:"InputPattern",props:{alignActions:{defaultValue:null,description:"",name:"alignActions",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"start"'},{value:'"end"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"normal"'},{value:'"baseline"'},{value:'"first baseline"'},{value:'"last baseline"'},{value:'"space-between"'},{value:'"space-around"'},{value:'"space-evenly"'},{value:'"stretch"'},{value:'"safe center"'},{value:'"unsafe center"'},{value:'"inherit"'},{value:'"initial"'},{value:'"revert"'},{value:'"revert-layer"'},{value:'"unset"'}]}},alignActionsExternal:{defaultValue:null,description:"",name:"alignActionsExternal",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"start"'},{value:'"end"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"normal"'},{value:'"baseline"'},{value:'"first baseline"'},{value:'"last baseline"'},{value:'"space-between"'},{value:'"space-around"'},{value:'"space-evenly"'},{value:'"stretch"'},{value:'"safe center"'},{value:'"unsafe center"'},{value:'"inherit"'},{value:'"initial"'},{value:'"revert"'},{value:'"revert-layer"'},{value:'"unset"'}]}},autoComplete:{defaultValue:null,description:"",name:"autoComplete",required:!1,type:{name:"string"}},cmpSpacing:{defaultValue:null,description:"",name:"cmpSpacing",required:!1,type:{name:"number"}},colorActive:{defaultValue:null,description:"",name:"colorActive",required:!1,type:{name:"string"}},colorLabel:{defaultValue:null,description:"",name:"colorLabel",required:!1,type:{name:"string"}},colorText:{defaultValue:null,description:"",name:"colorText",required:!1,type:{name:"string"}},copyAction:{defaultValue:null,description:"",name:"copyAction",required:!1,type:{name:"boolean"}},copyMessage:{defaultValue:null,description:"",name:"copyMessage",required:!1,type:{name:"string"}},copyTooltipProps:{defaultValue:null,description:"",name:"copyTooltipProps",required:!1,type:{name:"TooltipProps"}},copyValueHandler:{defaultValue:null,description:"",name:"copyValueHandler",required:!1,type:{name:"((value: any) => any) & ((value: string, unmaskvalue: string) => string)"}},debounceDelay:{defaultValue:null,description:"",name:"debounceDelay",required:!1,type:{name:"number"}},direction:{defaultValue:null,description:"",name:"direction",required:!1,type:{name:"enum",value:[{value:'"ltr"'},{value:'"rtl"'}]}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},endCmp:{defaultValue:null,description:"",name:"endCmp",required:!1,type:{name:"IconType"}},endCmpExternal:{defaultValue:null,description:"",name:"endCmpExternal",required:!1,type:{name:"IconType"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"boolean"}},focused:{defaultValue:null,description:"",name:"focused",required:!1,type:{name:"boolean"}},fullWidth:{defaultValue:null,description:"",name:"fullWidth",required:!1,type:{name:"boolean"}},helperText:{defaultValue:null,description:"",name:"helperText",required:!1,type:{name:"string"}},hideStartActionsOnEmpty:{defaultValue:null,description:"",name:"hideStartActionsOnEmpty",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},letterSpacing:{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"string | number"}},margin:{defaultValue:null,description:"",name:"margin",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"dense"'}]}},maxRows:{defaultValue:null,description:"",name:"maxRows",required:!1,type:{name:"number"}},multiline:{defaultValue:null,description:"",name:"multiline",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"(Event: any) => void"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"(Event: any) => void"}},onEnterKeyPress:{defaultValue:null,description:"",name:"onEnterKeyPress",required:!1,type:{name:"((Event: any) => void) & (() => void)"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"(Event: any) => void"}},onKeyPress:{defaultValue:null,description:"",name:"onKeyPress",required:!1,type:{name:"((Event: any) => void) & ((event: any) => void)"}},padding:{defaultValue:null,description:"",name:"padding",required:!1,type:{name:"string | number"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},rows:{defaultValue:null,description:"",name:"rows",required:!1,type:{name:"number"}},startCmp:{defaultValue:null,description:"",name:"startCmp",required:!1,type:{name:"IconType"}},startCmpExternal:{defaultValue:null,description:"",name:"startCmpExternal",required:!1,type:{name:"IconType"}},textAlign:{defaultValue:null,description:"",name:"textAlign",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"start"'},{value:'"end"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"normal"'},{value:'"baseline"'},{value:'"first baseline"'},{value:'"last baseline"'},{value:'"space-between"'},{value:'"space-around"'},{value:'"space-evenly"'},{value:'"stretch"'},{value:'"safe center"'},{value:'"unsafe center"'},{value:'"inherit"'},{value:'"initial"'},{value:'"revert"'},{value:'"revert-layer"'},{value:'"unset"'}]}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"any"}},variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"filled"'},{value:'"standard"'},{value:'"outlined"'}]}},autofix:{defaultValue:null,description:"",name:"autofix",required:!1,type:{name:"boolean"}},blocks:{defaultValue:null,description:"",name:"blocks",required:!1,type:{name:"object"}},definitions:{defaultValue:null,description:"",name:"definitions",required:!1,type:{name:"object"}},lazy:{defaultValue:null,description:"",name:"lazy",required:!1,type:{name:"boolean"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string | any[] | ((event: any) => void)"}},onAccept:{defaultValue:null,description:"",name:"onAccept",required:!1,type:{name:"(value: any, mask: { [key: string]: any; _value: string; _unmaskedValue: string; }) => void"}},overwrite:{defaultValue:null,description:"",name:"overwrite",required:!1,type:{name:"boolean"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!1,type:{name:"string"}},showMaskAsPlaceholder:{defaultValue:null,description:"",name:"showMaskAsPlaceholder",required:!1,type:{name:"boolean"}},unmask:{defaultValue:null,description:"",name:"unmask",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TextField/InputPattern.tsx#InputPattern"]={docgenInfo:InputPattern.__docgenInfo,name:"InputPattern",path:"src/components/_FIXED/TextField/InputPattern.tsx#InputPattern"})}catch(__react_docgen_typescript_loader_error){}}}]);