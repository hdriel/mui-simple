"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[5691],{"./src/components/_FIXED/Autocomplete/__stories__/InputAutocompleteMultiple.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,FilmOptions:()=>FilmOptions,GroupBy:()=>GroupBy,IncludeInputInList:()=>IncludeInputInList,OptionsConverter:()=>OptionsConverter,OptionsObjectList:()=>OptionsObjectList,OptionsStringList:()=>OptionsStringList,OptionsWithDisabled:()=>OptionsWithDisabled,Placeholder:()=>Placeholder,RenderOption:()=>RenderOption,Sort:()=>Sort,StartCmpExternal:()=>StartCmpExternal,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),_mui_material__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),_InputAutocompleteMultiple__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/_FIXED/Autocomplete/InputAutocompleteMultiple.tsx"),_InputAutocomplete_mocks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/_FIXED/Autocomplete/__stories__/InputAutocomplete.mocks.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Inputs/Inputs/Autocomplete/InputAutocompleteMultiple",component:_InputAutocompleteMultiple__WEBPACK_IMPORTED_MODULE_1__.A,tags:["autodocs"]},Default={args:{}},OPTIONS=[{title:"The Shawshank Redemption",year:1994,id:0},{title:"The Godfather",year:1972,id:1},{title:"The Godfather: Part II",year:1974,id:2},{title:"The Dark Knight",year:2008,id:3},{title:"12 Angry Men",year:1957,id:4},{title:"Schindler's List",year:1993,id:5},{title:"Pulp Fiction",year:1994,id:6}],render=args=>{const[selectedOptions,setSelectedOptions]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(args.value??[]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputAutocompleteMultiple__WEBPACK_IMPORTED_MODULE_1__.A,{...args,value:selectedOptions,onChange:(e,optionIds)=>setSelectedOptions(optionIds)})},IncludeInputInList={args:{label:"Movie",includeInputInList:!0,options:OPTIONS,getOptionLabel:"title"},render},OptionsStringList={args:{label:"Movie",options:OPTIONS.map((o=>o.title)),value:OPTIONS.map((o=>o.title)).filter(((_,i)=>i%4==0))},render},OptionsObjectList={args:{label:"Movie",options:OPTIONS,getOptionLabel:"title"},render},OptionsConverter={args:{label:"Movie",options:OPTIONS,optionConverter:(item,index)=>({id:index,label:`${item.title} (${item.year})`,year:item.year})},render},Placeholder={args:{label:"Movie",options:OPTIONS,placeholder:"choose you movie name",optionConverter:(item,index)=>({id:index,label:`${item.title} (${item.year})`,year:item.year})},render},StartCmpExternal={args:{label:"Movie",options:OPTIONS,startCmpExternal:"Tv",optionConverter:(item,index)=>({id:index,label:`${item.title} (${item.year})`,year:item.year})},render},Sort={args:{label:"Movie",options:OPTIONS,sortBy:"year",sortDir:-1,optionConverter:(item,index)=>({id:index,label:`${item.title} (${item.year})`,year:item.year})},render},FilmOptions=()=>{const[selectedOption,setSelectedOption]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__.A,{spacing:4},["filled","standard","outlined"].map((variant=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputAutocompleteMultiple__WEBPACK_IMPORTED_MODULE_1__.A,{key:variant,label:"Movie",optionConverter:film=>({id:film.title,label:`${film.title} (${film.year})`,year:film.year}),options:_InputAutocomplete_mocks__WEBPACK_IMPORTED_MODULE_2__.S1,value:selectedOption,onChange:(e,option)=>setSelectedOption(option),variant}))))},RenderOption={args:{id:"grouped-demo",label:"Choose a country",options:_InputAutocomplete_mocks__WEBPACK_IMPORTED_MODULE_2__.Xr,autoHighlight:!0,getOptionLabel:option=>option.label,renderOption:(props,option)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__.A,{component:"li",sx:{"& > img":{mr:2,flexShrink:0}},...props},react__WEBPACK_IMPORTED_MODULE_0__.createElement("img",{loading:"lazy",width:"20",src:`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`,srcSet:`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`,alt:""}),option.label," (",option.code,") +",option.phone)},render},GroupBy={args:{id:"grouped categories",label:"Categories",options:_InputAutocomplete_mocks__WEBPACK_IMPORTED_MODULE_2__.Xx,groupBy:option=>option.firstLetter,sortBy:"title",getOptionLabel:option=>option.title,width:400},render},OptionsWithDisabled={args:{id:"grouped-demo",label:"Disabled options",options:_InputAutocomplete_mocks__WEBPACK_IMPORTED_MODULE_2__.Vw.slice(0).map(((option,index)=>({time:option,disabled:index%4==0}))),getOptionLabel:option=>option.time,width:200},render},__namedExportsOrder=["Default","IncludeInputInList","OptionsStringList","OptionsObjectList","OptionsConverter","Placeholder","StartCmpExternal","Sort","FilmOptions","RenderOption","GroupBy","OptionsWithDisabled"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Default.parameters?.docs?.source}}},IncludeInputInList.parameters={...IncludeInputInList.parameters,docs:{...IncludeInputInList.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Movie',\n    includeInputInList: true,\n    options: OPTIONS,\n    getOptionLabel: 'title'\n  },\n  render\n}",...IncludeInputInList.parameters?.docs?.source}}},OptionsStringList.parameters={...OptionsStringList.parameters,docs:{...OptionsStringList.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Movie',\n    options: OPTIONS.map(o => o.title),\n    value: OPTIONS.map(o => o.title).filter((_, i) => i % 4 === 0)\n  },\n  render\n}",...OptionsStringList.parameters?.docs?.source}}},OptionsObjectList.parameters={...OptionsObjectList.parameters,docs:{...OptionsObjectList.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Movie',\n    options: OPTIONS,\n    getOptionLabel: 'title'\n  },\n  render\n}",...OptionsObjectList.parameters?.docs?.source}}},OptionsConverter.parameters={...OptionsConverter.parameters,docs:{...OptionsConverter.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Movie',\n    options: OPTIONS,\n    optionConverter: (item, index) => ({\n      id: index,\n      label: `${item.title} (${item.year})`,\n      year: item.year\n    })\n  },\n  render\n}",...OptionsConverter.parameters?.docs?.source}}},Placeholder.parameters={...Placeholder.parameters,docs:{...Placeholder.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Movie',\n    options: OPTIONS,\n    placeholder: 'choose you movie name',\n    optionConverter: (item, index) => ({\n      id: index,\n      label: `${item.title} (${item.year})`,\n      year: item.year\n    })\n  },\n  render\n}",...Placeholder.parameters?.docs?.source}}},StartCmpExternal.parameters={...StartCmpExternal.parameters,docs:{...StartCmpExternal.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Movie',\n    options: OPTIONS,\n    startCmpExternal: 'Tv',\n    optionConverter: (item, index) => ({\n      id: index,\n      label: `${item.title} (${item.year})`,\n      year: item.year\n    })\n  },\n  render\n}",...StartCmpExternal.parameters?.docs?.source}}},Sort.parameters={...Sort.parameters,docs:{...Sort.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Movie',\n    options: OPTIONS,\n    sortBy: 'year',\n    sortDir: -1,\n    optionConverter: (item, index) => ({\n      id: index,\n      label: `${item.title} (${item.year})`,\n      year: item.year\n    })\n  },\n  render\n}",...Sort.parameters?.docs?.source}}},FilmOptions.parameters={...FilmOptions.parameters,docs:{...FilmOptions.parameters?.docs,source:{originalSource:"() => {\n  const [selectedOption, setSelectedOption] = useState(null);\n  return <Stack spacing={4}>\n            {['filled', 'standard', 'outlined'].map(variant => <InputAutocompleteMultiple key={variant}\n    // getOptionLabel={(option) => option.title}\n    label=\"Movie\" optionConverter={film => ({\n      id: film.title,\n      label: `${film.title} (${film.year})`,\n      year: film.year\n    })} options={top100Films} value={selectedOption} onChange={(e, option) => setSelectedOption(option)} variant={variant} />)}\n        </Stack>;\n}",...FilmOptions.parameters?.docs?.source}}},RenderOption.parameters={...RenderOption.parameters,docs:{...RenderOption.parameters?.docs,source:{originalSource:'{\n  args: {\n    id: \'grouped-demo\',\n    label: \'Choose a country\',\n    options: countries,\n    autoHighlight: true,\n    getOptionLabel: option => option.label,\n    renderOption: (props, option) => <Box component="li" sx={{\n      \'& > img\': {\n        mr: 2,\n        flexShrink: 0\n      }\n    }} {...props}>\n                <img loading="lazy" width="20" src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`} srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`} alt="" />\n                {option.label} ({option.code}) +{option.phone}\n            </Box>\n  },\n  render\n}',...RenderOption.parameters?.docs?.source}}},GroupBy.parameters={...GroupBy.parameters,docs:{...GroupBy.parameters?.docs,source:{originalSource:"{\n  args: {\n    id: 'grouped categories',\n    label: 'Categories',\n    options: top100FilmsWithFirstLetters,\n    groupBy: option => option.firstLetter,\n    sortBy: 'title',\n    getOptionLabel: option => option.title,\n    width: 400\n  },\n  render\n}",...GroupBy.parameters?.docs?.source}}},OptionsWithDisabled.parameters={...OptionsWithDisabled.parameters,docs:{...OptionsWithDisabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    id: 'grouped-demo',\n    label: 'Disabled options',\n    options: timeSlots.slice(0).map((option, index) => ({\n      time: option,\n      disabled: index % 4 === 0\n    })),\n    getOptionLabel: option => option.time,\n    width: 200\n  },\n  render\n}",...OptionsWithDisabled.parameters?.docs?.source}}}},"./src/components/_FIXED/Autocomplete/InputAutocompleteMultiple.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_icons_material__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@mui/icons-material/esm/Close.js"),_mui_icons_material__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@mui/icons-material/esm/Check.js"),_mui_material__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),_InputAutocomplete__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/_FIXED/Autocomplete/InputAutocomplete.tsx"),_Chip_Chip__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/_FIXED/Chip/Chip.tsx"),_Checkbox_Checkbox__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/_FIXED/Checkbox/Checkbox.tsx"),_utils_helpers__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/utils/helpers.ts");const InputAutocompleteMultiple=({checkboxStyle=!0,chipProps={rounded:!1,endIcon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_5__.A,null)},fieldId="id",filterSelectedOptions=!1,getOptionLabel:_getOptionLabel="label",limitTags,name,onChange,options,raiseSelectedToTop,readOnly,renderOption:_renderOption,value:selectedOptions=[],...props})=>{selectedOptions=[].concat(selectedOptions);const getOptionLabel=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>"function"==typeof _getOptionLabel?_getOptionLabel:option=>option?.[_getOptionLabel]||""),[_getOptionLabel]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputAutocomplete__WEBPACK_IMPORTED_MODULE_1__.A,{value:selectedOptions,onChange:(event,options,action)=>{const optionIds=options.filter((v=>(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_4__.O9)(v))).map((o=>o[fieldId]??o));if(event.target.name=name,event.target.value=optionIds,"clear"===action){const newOptionsIds=selectedOptions.filter((option=>option?.disabled)).map((o=>o[fieldId]??o));event.target.value=newOptionsIds,onChange(event,newOptionsIds)}else onChange(event,optionIds)},name,multiple:!0,raiseSelectedToTop,disableCloseOnSelect:!0,blurOnSelect:!1,limitTags,filterSelectedOptions,getOptionLabel,readOnly,options,renderOption:(props,option,{selected})=>{const label=_renderOption?.(props,option,{selected})??getOptionLabel?.(option)??option;return react__WEBPACK_IMPORTED_MODULE_0__.createElement("li",{...props},checkboxStyle?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Checkbox_Checkbox__WEBPACK_IMPORTED_MODULE_3__.A,{style:{marginRight:2},checked:selected,edge:"start"}):null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__.A,{sx:{width:"100%",display:"flex",justifyContent:"space-between"}},label,!checkboxStyle&&selected?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_7__.A,null):null))},renderTags:(value,getTagProps)=>value.filter((v=>(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_4__.O9)(v))).map(((option,index)=>{const label=getOptionLabel?.(option)??option.label,disabled=readOnly?void 0:option.disabled,onDelete=readOnly||option.disabled?void 0:getTagProps({index}).onDelete;return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Chip_Chip__WEBPACK_IMPORTED_MODULE_2__.A,{key:label,...getTagProps({index}),..."function"==typeof chipProps?chipProps(option):chipProps,label,disabled,onDelete})})),...props})};InputAutocompleteMultiple.displayName="InputAutocompleteMultiple";const __WEBPACK_DEFAULT_EXPORT__=InputAutocompleteMultiple;InputAutocompleteMultiple.__docgenInfo={description:"",methods:[],displayName:"InputAutocompleteMultiple",props:{value:{required:!1,tsType:{name:"Array",elements:[{name:"any"}],raw:"any[]"},description:"",defaultValue:{value:"[]",computed:!1}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: any, optionIds: Array<string | number>) => void",signature:{arguments:[{type:{name:"any"},name:"event"},{type:{name:"Array",elements:[{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]}],raw:"Array<string | number>"},name:"optionIds"}],return:{name:"void"}}},description:""},limitTags:{required:!1,tsType:{name:"number"},description:""},checkboxStyle:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},chipProps:{defaultValue:{value:"{ rounded: false, endIcon: <CloseIcon /> }",computed:!1},required:!1},fieldId:{defaultValue:{value:"'id'",computed:!1},required:!1},filterSelectedOptions:{defaultValue:{value:"false",computed:!1},required:!1},getOptionLabel:{defaultValue:{value:"'label'",computed:!1},required:!1}}}},"./src/components/_FIXED/Checkbox/Checkbox.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>_FIXED_Checkbox_Checkbox});var react=__webpack_require__("./node_modules/react/index.js"),styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),Typography=__webpack_require__("./src/components/_FIXED/Typography/Typography.tsx"),FormControlLabel=__webpack_require__("./node_modules/@mui/material/FormControlLabel/FormControlLabel.js"),Checkbox=__webpack_require__("./node_modules/@mui/material/Checkbox/Checkbox.js"),FormHelperText=__webpack_require__("./node_modules/@mui/material/FormHelperText/FormHelperText.js");const Checkbox_styled_Checkbox=(0,styled.Ay)((props=>{const{ariaLabel,customColor,disabled,fontSize,helperText,inputProps,label="",labelProps,wrapperStyle,error,labelPlacement,onChange,muiColor,readOnly,required,sxLabel,sx,textColor,...rest}=props;return react.createElement("span",{style:wrapperStyle},react.createElement(FormControlLabel.A,{required,disabled,labelPlacement,error,label:(0,react.isValidElement)(label)?label:react.createElement(Typography.A,{sx:{fontSize,color:textColor,...sxLabel},...labelProps},label),sx:{m:0,userSelect:"none",color:textColor},control:react.createElement(Checkbox.A,{color:muiColor,onChange:readOnly?void 0:onChange,inputProps:{...inputProps,"aria-label":ariaLabel},sx:{...sx,...fontSize&&{"& .MuiSvgIcon-root":{fontSize}},...customColor&&{color:customColor,"&.Mui-checked":{color:customColor}}},...rest})}),helperText&&react.createElement(FormHelperText.A,{error},helperText))}),{shouldForwardProp:prop=>![].includes(prop)})``;var helpers=__webpack_require__("./src/utils/helpers.ts"),SVGIcon=__webpack_require__("./src/components/_FIXED/SVGIcon/SVGIcon.tsx");const Checkbox_Checkbox=props=>{const{color,textColor:_textColor,value,checked,checkedIcon,icon,children,label,wrapperStyle:_wrapperStyle,margin,...rest}=props,[customColor,muiColor]=(0,helpers.Es)(color),[textColor]=(0,helpers.Es)(_textColor),wrapperStyle={..._wrapperStyle,...(0,helpers.O9)(margin)&&{margin}};return react.createElement(Checkbox_styled_Checkbox,{checked:value??checked,checkedIcon:"string"==typeof checkedIcon?react.createElement(SVGIcon.A,null,checkedIcon):checkedIcon,customColor:muiColor?void 0:customColor,icon:"string"==typeof icon?react.createElement(SVGIcon.A,null,icon):icon,label:label??children,muiColor,textColor,wrapperStyle,...rest})};Checkbox_Checkbox.displayName="Checkbox";const _FIXED_Checkbox_Checkbox=Checkbox_Checkbox;Checkbox_Checkbox.__docgenInfo={description:"",methods:[],displayName:"Checkbox",props:{checked:{required:!1,tsType:{name:"boolean"},description:""},checkedIcon:{required:!1,tsType:{name:"union",raw:"IconName | ReactNode | ReactElement",elements:[{name:"unknown[number]",raw:"(typeof allIcons)[number]"},{name:"ReactNode"},{name:"ReactElement"}]},description:""},color:{required:!1,tsType:{name:"string"},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:""},fontSize:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:""},helperText:{required:!1,tsType:{name:"string"},description:""},icon:{required:!1,tsType:{name:"union",raw:"IconName | ReactNode | ReactElement",elements:[{name:"unknown[number]",raw:"(typeof allIcons)[number]"},{name:"ReactNode"},{name:"ReactElement"}]},description:""},label:{required:!1,tsType:{name:"union",raw:"string | ElementType",elements:[{name:"string"},{name:"union",raw:"ReactElement | ReactNode",elements:[{name:"ReactElement"},{name:"ReactNode"}]}]},description:""},labelProps:{required:!1,tsType:{name:"TypographyProps"},description:""},labelPlacement:{required:!1,tsType:{name:"union",raw:"'top' | 'start' | 'bottom' | 'end'",elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'start'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'end'"}]},description:""},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: ChangeEvent<HTMLInputElement>, checked: boolean) => void",signature:{arguments:[{type:{name:"ChangeEvent",elements:[{name:"HTMLInputElement"}],raw:"ChangeEvent<HTMLInputElement>"},name:"event"},{type:{name:"boolean"},name:"checked"}],return:{name:"void"}}},description:""},readOnly:{required:!1,tsType:{name:"boolean"},description:""},required:{required:!1,tsType:{name:"boolean"},description:""},size:{required:!1,tsType:{name:"union",raw:"'small' | 'medium'",elements:[{name:"literal",value:"'small'"},{name:"literal",value:"'medium'"}]},description:""},wrapperStyle:{required:!1,tsType:{name:"any"},description:""},margin:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:""},sx:{required:!1,tsType:{name:"SxProps"},description:""},sxLabel:{required:!1,tsType:{name:"SxProps"},description:""},textColor:{required:!1,tsType:{name:"string"},description:""},value:{required:!1,tsType:{name:"boolean"},description:""}}}},"./src/components/_FIXED/Typography/Typography.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_Text__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/_FIXED/Typography/Text.tsx"),_TextEllipsis__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/_FIXED/Typography/TextEllipsis.tsx"),_utils_helpers__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/utils/helpers.ts");const Typography=props=>(props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"autoWidth",!0),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"component","span"),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"dynamicEllipsis",!0),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"isEllipsis",!1),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"showTooltipOnEllipsis",!0),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"size","inherit"),[(props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"tooltip",!1)).showTooltipOnEllipsis,props.onEllipsisChange].some((v=>v))?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_TextEllipsis__WEBPACK_IMPORTED_MODULE_2__.A,{...props}):react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Text__WEBPACK_IMPORTED_MODULE_1__.A,{...props}));Typography.displayName="Typography";const __WEBPACK_DEFAULT_EXPORT__=Typography;Typography.__docgenInfo={description:"",methods:[],displayName:"Typography",props:{alignCenter:{required:!1,tsType:{name:"boolean"},description:""},alignJustify:{required:!1,tsType:{name:"boolean"},description:""},alignLeft:{required:!1,tsType:{name:"boolean"},description:""},alignRight:{required:!1,tsType:{name:"boolean"},description:""},autoWidth:{required:!1,tsType:{name:"boolean"},description:""},bgColor:{required:!1,tsType:{name:"string"},description:""},bold:{required:!1,tsType:{name:"union",raw:"boolean | string",elements:[{name:"boolean"},{name:"string"}]},description:""},border:{required:!1,tsType:{name:"union",raw:"boolean | string",elements:[{name:"boolean"},{name:"string"}]},description:""},charsCase:{required:!1,tsType:{name:"union",raw:"'upper' | 'lower' | 'capital'",elements:[{name:"literal",value:"'upper'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'capital'"}]},description:""},color:{required:!1,tsType:{name:"string"},description:""},component:{required:!1,tsType:{name:"string"},description:""},followCursor:{required:!1,tsType:{name:"boolean"},description:""},fullWidth:{required:!1,tsType:{name:"boolean"},description:""},gutterBottom:{required:!1,tsType:{name:"boolean"},description:""},html:{required:!1,tsType:{name:"boolean"},description:""},italic:{required:!1,tsType:{name:"boolean"},description:""},justifyContent:{required:!1,tsType:{name:"string"},description:""},lineHeight:{required:!1,tsType:{name:"number"},description:""},link:{required:!1,tsType:{name:"string"},description:""},monospace:{required:!1,tsType:{name:"boolean"},description:""},paragraph:{required:!1,tsType:{name:"boolean"},description:""},size:{required:!1,tsType:{name:"union",raw:"number | string",elements:[{name:"number"},{name:"string"}]},description:""},strike:{required:!1,tsType:{name:"boolean"},description:""},sub:{required:!1,tsType:{name:"boolean"},description:""},sup:{required:!1,tsType:{name:"boolean"},description:""},textDirection:{required:!1,tsType:{name:"union",raw:"'ltr' | 'rtl'",elements:[{name:"literal",value:"'ltr'"},{name:"literal",value:"'rtl'"}]},description:""},tooltip:{required:!1,tsType:{name:"union",raw:"boolean | string",elements:[{name:"boolean"},{name:"string"}]},description:""},tooltipPlacement:{required:!1,tsType:{name:"union",raw:"| 'bottom-end'\n| 'bottom-start'\n| 'bottom'\n| 'left-end'\n| 'left-start'\n| 'left'\n| 'right-end'\n| 'right-start'\n| 'right'\n| 'top-end'\n| 'top-start'\n| 'top'",elements:[{name:"literal",value:"'bottom-end'"},{name:"literal",value:"'bottom-start'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'left-end'"},{name:"literal",value:"'left-start'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right-end'"},{name:"literal",value:"'right-start'"},{name:"literal",value:"'right'"},{name:"literal",value:"'top-end'"},{name:"literal",value:"'top-start'"},{name:"literal",value:"'top'"}]},description:""},underline:{required:!1,tsType:{name:"boolean"},description:""},width:{required:!1,tsType:{name:"union",raw:"number | string",elements:[{name:"number"},{name:"string"}]},description:""},dynamicEllipsis:{required:!1,tsType:{name:"literal",value:"true"},description:""},noWrap:{required:!1,tsType:{name:"boolean"},description:""},onEllipsisChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(isEllipsis: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"isEllipsis"}],return:{name:"void"}}},description:""},rows:{required:!1,tsType:{name:"number"},description:""},showTooltipOnEllipsis:{required:!1,tsType:{name:"boolean"},description:""}}}}}]);