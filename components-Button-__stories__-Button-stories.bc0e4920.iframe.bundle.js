"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[3185],{"./node_modules/@mui/material/Stack/Stack.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>Stack_Stack});var objectWithoutPropertiesLoose=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"),esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),react=__webpack_require__("./node_modules/react/index.js"),clsx_m=__webpack_require__("./node_modules/clsx/dist/clsx.m.js"),deepmerge=__webpack_require__("./node_modules/@mui/utils/esm/deepmerge.js"),composeClasses=__webpack_require__("./node_modules/@mui/utils/esm/composeClasses/composeClasses.js"),generateUtilityClass=__webpack_require__("./node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js"),styled=__webpack_require__("./node_modules/@mui/system/esm/styled.js"),useThemeProps=__webpack_require__("./node_modules/@mui/system/esm/useThemeProps/useThemeProps.js"),extendSxProp=__webpack_require__("./node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js"),createTheme=__webpack_require__("./node_modules/@mui/system/esm/createTheme/createTheme.js"),breakpoints=__webpack_require__("./node_modules/@mui/system/esm/breakpoints.js"),spacing=__webpack_require__("./node_modules/@mui/system/esm/spacing.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const _excluded=["component","direction","spacing","divider","children","className","useFlexGap"],defaultTheme=(0,createTheme.Z)(),defaultCreateStyledComponent=(0,styled.Z)("div",{name:"MuiStack",slot:"Root",overridesResolver:(props,styles)=>styles.root});function useThemePropsDefault(props){return(0,useThemeProps.Z)({props,name:"MuiStack",defaultTheme})}function joinChildren(children,separator){const childrenArray=react.Children.toArray(children).filter(Boolean);return childrenArray.reduce(((output,child,index)=>(output.push(child),index<childrenArray.length-1&&output.push(react.cloneElement(separator,{key:`separator-${index}`})),output)),[])}const style=({ownerState,theme})=>{let styles=(0,esm_extends.Z)({display:"flex",flexDirection:"column"},(0,breakpoints.k9)({theme},(0,breakpoints.P$)({values:ownerState.direction,breakpoints:theme.breakpoints.values}),(propValue=>({flexDirection:propValue}))));if(ownerState.spacing){const transformer=(0,spacing.hB)(theme),base=Object.keys(theme.breakpoints.values).reduce(((acc,breakpoint)=>(("object"==typeof ownerState.spacing&&null!=ownerState.spacing[breakpoint]||"object"==typeof ownerState.direction&&null!=ownerState.direction[breakpoint])&&(acc[breakpoint]=!0),acc)),{}),directionValues=(0,breakpoints.P$)({values:ownerState.direction,base}),spacingValues=(0,breakpoints.P$)({values:ownerState.spacing,base});"object"==typeof directionValues&&Object.keys(directionValues).forEach(((breakpoint,index,breakpoints)=>{if(!directionValues[breakpoint]){const previousDirectionValue=index>0?directionValues[breakpoints[index-1]]:"column";directionValues[breakpoint]=previousDirectionValue}}));const styleFromPropValue=(propValue,breakpoint)=>{return ownerState.useFlexGap?{gap:(0,spacing.NA)(transformer,propValue)}:{"& > :not(style) + :not(style)":{margin:0,[`margin${direction=breakpoint?directionValues[breakpoint]:ownerState.direction,{row:"Left","row-reverse":"Right",column:"Top","column-reverse":"Bottom"}[direction]}`]:(0,spacing.NA)(transformer,propValue)}};var direction};styles=(0,deepmerge.Z)(styles,(0,breakpoints.k9)({theme},spacingValues,styleFromPropValue))}return styles=(0,breakpoints.dt)(theme.breakpoints,styles),styles};var styles_styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),styles_useThemeProps=__webpack_require__("./node_modules/@mui/material/styles/useThemeProps.js");const Stack=function createStack(options={}){const{createStyledComponent=defaultCreateStyledComponent,useThemeProps=useThemePropsDefault,componentName="MuiStack"}=options,StackRoot=createStyledComponent(style),Stack=react.forwardRef((function Grid(inProps,ref){const themeProps=useThemeProps(inProps),props=(0,extendSxProp.Z)(themeProps),{component="div",direction="column",spacing=0,divider,children,className,useFlexGap=!1}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,_excluded),ownerState={direction,spacing,useFlexGap},classes=(0,composeClasses.Z)({root:["root"]},(slot=>(0,generateUtilityClass.Z)(componentName,slot)),{});return(0,jsx_runtime.jsx)(StackRoot,(0,esm_extends.Z)({as:component,ownerState,ref,className:(0,clsx_m.default)(classes.root,className)},other,{children:divider?joinChildren(children,divider):children}))}));return Stack}({createStyledComponent:(0,styles_styled.ZP)("div",{name:"MuiStack",slot:"Root",overridesResolver:(props,styles)=>styles.root}),useThemeProps:inProps=>(0,styles_useThemeProps.Z)({props:inProps,name:"MuiStack"})}),Stack_Stack=Stack},"./node_modules/@mui/system/esm/styled.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=(0,__webpack_require__("./node_modules/@mui/system/esm/createStyled.js").ZP)()},"./src/components/Button/__stories__/Button.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,ThemedAndColored:()=>ThemedAndColored,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _a,_b,_c,_d,_e,_f,_g,_h,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_Button__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Button/Button.tsx"),_mui_icons_material__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/icons-material/esm/Send.js"),_mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}const __WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:'import React from \'react\';\nimport { action } from \'@storybook/addon-actions\';\nimport type { Meta, StoryObj } from \'@storybook/react\';\nimport Button from \'../Button\';\nimport { Delete as DeleteIcon, Send as SendIcon, Fingerprint as FingerprintIcon } from \'@mui/icons-material\';\nimport { Stack, Typography } from \'@mui/material\';\nconst meta: Meta<typeof Button> = {\n  title: \'Inputs/Button\',\n  component: Button,\n  argTypes: {\n    // variant: undefined,\n    // disabled: undefined,\n    // startIcon: undefined,\n    // endIcon: undefined,\n    // onClick: undefined,\n    // onRightClick: undefined,\n    // link: undefined,\n    // color: undefined,\n    // disableRipple: undefined,\n    // isLoading: undefined,\n    // loadingIconPosition: undefined,\n    // loadingLabel: undefined,\n    // size: undefined,\n    // icon: undefined,\n    // fullWidth: undefined,\n    // tooltipProps: undefined,\n    // uppercase: undefined,\n    // minWidth: undefined,\n  },\n  // parameters: { actions: { handles: \'click\' } },\n  tags: [\'autodocs\']\n};\nexport default meta;\ntype Story = StoryObj<typeof Button>;\n\n/** The button with default color as primary from palette theme */\nexport const Primary: Story = {\n  args: {\n    children: \'Primary\'\n  }\n};\n\n//\n// export default {\n//     title: \'Inputs/Button\',\n//     component: Button,\n// };\n\n// const actions = {\n//     onClick: action(\'onClick\'),\n// };\n//\n// export const Default = () => {\n//     return <Button {...actions} />;\n// };\n//\n// export const FullWidth = () => {\n//     return (\n//         <Stack spacing={3}>\n//             <Button {...actions} fullWidth variant="contained">\n//                 Full Width\n//             </Button>\n//             <Button {...actions} variant="contained">\n//                 Not Full Width\n//             </Button>\n//         </Stack>\n//     );\n// };\n//\n// export const Icons = () => {\n//     return (\n//         <Stack direction="row" spacing={3}>\n//             <Button {...actions}>Label only</Button>\n//             <Button {...actions} startIcon={<SendIcon />}>\n//                 Start Icon\n//             </Button>\n//             <Button {...actions} color="error" endIcon={<DeleteIcon />}>\n//                 End Icon\n//             </Button>\n//             <Button {...actions} color={\'#D05010\'} icon={<FingerprintIcon />} />\n//         </Stack>\n//     );\n// };\n//\n// export const Variants = () => {\n//     return (\n//         <Stack direction="row" spacing={3}>\n//             <Button {...actions} variant="text">\n//                 text\n//             </Button>\n//             <Button {...actions} variant="outlined">\n//                 outlined\n//             </Button>\n//             <Button {...actions} variant="contained">\n//                 contained\n//             </Button>\n//             <Button {...actions}>default</Button>\n//         </Stack>\n//     );\n// };\n//\n// export const DisableRipple = () => {\n//     return (\n//         <Stack direction="column" spacing={3}>\n//             <Stack direction="row" spacing={3}>\n//                 <Button {...actions} disableRipple color="primary">\n//                     Disable Ripple\n//                 </Button>\n//                 <Button {...actions} color={\'#D05010\'} disableRipple icon={<FingerprintIcon />} />\n//             </Stack>\n//             <Stack direction="row" spacing={3}>\n//                 <Button {...actions} color="secondary">\n//                     Ripple\n//                 </Button>\n//                 <Button {...actions} color={\'#D05010\'} icon={<FingerprintIcon />} />\n//             </Stack>\n//         </Stack>\n//     );\n// };\n//\n// export const ButtonLink = () => {\n//     return (\n//         <Stack direction={\'column\'} spacing={2}>\n//             <Stack direction={\'row\'} spacing={2}>\n//                 <Button {...actions} disableRipple disableElevation variant="text" link="https://chat.openai.com/">\n//                     Chat GTP\n//                 </Button>\n//                 <Button {...actions} color={\'#D05010\'} icon={<SendIcon />} link="https://chat.openai.com/" />\n//             </Stack>\n//             <Stack direction={\'row\'} spacing={2}>\n//                 <Button {...actions} variant="text">\n//                     normal button\n//                 </Button>\n//                 <Button {...actions} color={\'#D05010\'} icon={<FingerprintIcon />} />\n//             </Stack>\n//         </Stack>\n//     );\n// };\n//\n// export const Elevation = () => {\n//     return (\n//         <Stack direction={\'row\'} spacing={2}>\n//             <Button {...actions} disableElevation link="https://chat.openai.com/">\n//                 Disable Elevation\n//             </Button>\n//             <Button {...actions} link="https://chat.openai.com/">\n//                 Elevation\n//             </Button>\n//         </Stack>\n//     );\n// };\n//\nexport const ThemedAndColored = () => {\n  return <Stack direction="column" spacing={2}>\n            {[undefined, \'primary\', \'secondary\', \'info\', \'success\', \'error\', \'#df01fd\'].map((color, index) => <Stack key={index} direction="row" spacing={2}>\n                    {[\'contained\', \'outlined\', \'text\'].map(variant => <Button key={variant} variant={variant} color={color} sx={{\n        minWidth: 200\n      }}>\n                            {color ?? \'Default\'}\n                        </Button>)}\n                    <Button icon={<SendIcon />} color={color} />\n                </Stack>)}\n        </Stack>;\n};\n//\n// export const Loading = () => {\n//     return (\n//         <Stack direction={\'column\'} spacing={2}>\n//             <Stack direction={\'row\'} spacing={2}>\n//                 <Typography>Loading</Typography>\n//                 <Button {...actions} isLoading disableElevation startIcon={<SendIcon />} loadingIconPosition="start">\n//                     Start Send Data\n//                 </Button>\n//                 <Button {...actions} isLoading disableElevation endIcon={<SendIcon />} loadingIconPosition="end">\n//                     End Send Data\n//                 </Button>\n//                 <Button {...actions} isLoading disableElevation>\n//                     Send Data\n//                 </Button>\n//             </Stack>\n//             <Stack direction={\'row\'} spacing={2}>\n//                 <Typography>Loading Label</Typography>\n//                 <Button\n//                     {...actions}\n//                     isLoading\n//                     disableElevation\n//                     startIcon={<SendIcon />}\n//                     loadingIconPosition="start"\n//                     loadingLabel="Loading..."\n//                 >\n//                     Start Send Data\n//                 </Button>\n//                 <Button\n//                     {...actions}\n//                     isLoading\n//                     disableElevation\n//                     endIcon={<SendIcon />}\n//                     loadingIconPosition="end"\n//                     loadingLabel="Loading..."\n//                 >\n//                     End Send Data\n//                 </Button>\n//                 <Button {...actions} isLoading disableElevation loadingLabel="Loading...">\n//                     Send Data\n//                 </Button>\n//             </Stack>\n//             <Stack direction={\'row\'} spacing={2}>\n//                 <Typography>Size Small</Typography>\n//                 <Button\n//                     {...actions}\n//                     isLoading\n//                     disableElevation\n//                     startIcon={<SendIcon />}\n//                     loadingIconPosition="start"\n//                     loadingLabel="Loading..."\n//                     size="small"\n//                 >\n//                     Start Send Data\n//                 </Button>\n//                 <Button\n//                     {...actions}\n//                     isLoading\n//                     disableElevation\n//                     endIcon={<SendIcon />}\n//                     loadingIconPosition="end"\n//                     loadingLabel="Loading..."\n//                     size="small"\n//                 >\n//                     End Send Data\n//                 </Button>\n//                 <Button {...actions} isLoading disableElevation loadingLabel="Loading..." size="small">\n//                     Send Data\n//                 </Button>\n//             </Stack>\n//             <Stack direction={\'row\'} spacing={2}>\n//                 <Typography>Size Medium</Typography>\n//                 <Button\n//                     {...actions}\n//                     isLoading\n//                     disableElevation\n//                     startIcon={<SendIcon />}\n//                     loadingIconPosition="start"\n//                     loadingLabel="Loading..."\n//                     size="medium"\n//                 >\n//                     Start Send Data\n//                 </Button>\n//                 <Button\n//                     {...actions}\n//                     isLoading\n//                     disableElevation\n//                     endIcon={<SendIcon />}\n//                     loadingIconPosition="end"\n//                     loadingLabel="Loading..."\n//                     size="medium"\n//                 >\n//                     End Send Data\n//                 </Button>\n//                 <Button {...actions} isLoading disableElevation loadingLabel="Loading..." size="medium">\n//                     Send Data\n//                 </Button>\n//             </Stack>\n//             <Stack direction={\'row\'} spacing={2}>\n//                 <Typography>Size Large</Typography>\n//                 <Button\n//                     {...actions}\n//                     isLoading\n//                     disableElevation\n//                     startIcon={<SendIcon />}\n//                     loadingIconPosition="start"\n//                     loadingLabel="Loading..."\n//                     size="large"\n//                 >\n//                     Start Send Data\n//                 </Button>\n//                 <Button\n//                     {...actions}\n//                     isLoading\n//                     disableElevation\n//                     endIcon={<SendIcon />}\n//                     loadingIconPosition="end"\n//                     loadingLabel="Loading..."\n//                     size="large"\n//                 >\n//                     End Send Data\n//                 </Button>\n//                 <Button {...actions} isLoading disableElevation loadingLabel="Loading..." size="large">\n//                     Send Data\n//                 </Button>\n//             </Stack>\n//         </Stack>\n//     );\n// };\nPrimary.parameters = {\n  ...Primary.parameters,\n  docs: {\n    ...Primary.parameters?.docs,\n    source: {\n      originalSource: "{\\n  args: {\\n    children: \'Primary\'\\n  }\\n}",\n      ...Primary.parameters?.docs?.source\n    },\n    description: {\n      story: "The button with default color as primary from palette theme",\n      ...Primary.parameters?.docs?.description\n    }\n  }\n};\nThemedAndColored.parameters = {\n  ...ThemedAndColored.parameters,\n  docs: {\n    ...ThemedAndColored.parameters?.docs,\n    source: {\n      originalSource: "() => {\\n  return <Stack direction=\\"column\\" spacing={2}>\\n            {[undefined, \'primary\', \'secondary\', \'info\', \'success\', \'error\', \'#df01fd\'].map((color, index) => <Stack key={index} direction=\\"row\\" spacing={2}>\\n                    {[\'contained\', \'outlined\', \'text\'].map(variant => <Button key={variant} variant={variant} color={color} sx={{\\n        minWidth: 200\\n      }}>\\n                            {color ?? \'Default\'}\\n                        </Button>)}\\n                    <Button icon={<SendIcon />} color={color} />\\n                </Stack>)}\\n        </Stack>;\\n}",\n      ...ThemedAndColored.parameters?.docs?.source\n    }\n  }\n};',locationsMap:{primary:{startLoc:{col:30,line:37},endLoc:{col:1,line:41},startBody:{col:30,line:37},endBody:{col:1,line:41}},"themed-and-colored":{startLoc:{col:32,line:153},endLoc:{col:1,line:164},startBody:{col:32,line:153},endBody:{col:1,line:164}}}}},title:"Inputs/Button",component:_Button__WEBPACK_IMPORTED_MODULE_1__.Z,argTypes:{},tags:["autodocs"]};var Primary={args:{children:"Primary"}},ThemedAndColored=function(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__.Z,{direction:"column",spacing:2},[void 0,"primary","secondary","info","success","error","#df01fd"].map((function(color,index){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__.Z,{key:index,direction:"row",spacing:2},["contained","outlined","text"].map((function(variant){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__.Z,{key:variant,variant,color,sx:{minWidth:200}},null!=color?color:"Default")})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__.Z,{icon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_3__.Z,null),color}))})))};ThemedAndColored.displayName="ThemedAndColored",Primary.parameters=_objectSpread(_objectSpread({},Primary.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_a=Primary.parameters)||void 0===_a?void 0:_a.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    children: 'Primary'\n  }\n}"},null===(_c=null===(_b=Primary.parameters)||void 0===_b?void 0:_b.docs)||void 0===_c?void 0:_c.source),description:_objectSpread({story:"The button with default color as primary from palette theme"},null===(_e=null===(_d=Primary.parameters)||void 0===_d?void 0:_d.docs)||void 0===_e?void 0:_e.description)})}),ThemedAndColored.parameters=_objectSpread(_objectSpread({},ThemedAndColored.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_f=ThemedAndColored.parameters)||void 0===_f?void 0:_f.docs),{},{source:_objectSpread({originalSource:"() => {\n  return <Stack direction=\"column\" spacing={2}>\n            {[undefined, 'primary', 'secondary', 'info', 'success', 'error', '#df01fd'].map((color, index) => <Stack key={index} direction=\"row\" spacing={2}>\n                    {['contained', 'outlined', 'text'].map(variant => <Button key={variant} variant={variant} color={color} sx={{\n        minWidth: 200\n      }}>\n                            {color ?? 'Default'}\n                        </Button>)}\n                    <Button icon={<SendIcon />} color={color} />\n                </Stack>)}\n        </Stack>;\n}"},null===(_h=null===(_g=ThemedAndColored.parameters)||void 0===_g?void 0:_g.docs)||void 0===_h?void 0:_h.source)})});var __namedExportsOrder=["Primary","ThemedAndColored"];try{Primary.displayName="Primary",Primary.__docgenInfo={description:"The button with default color as primary from palette theme",displayName:"Primary",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/__stories__/Button.stories.tsx#Primary"]={docgenInfo:Primary.__docgenInfo,name:"Primary",path:"src/components/Button/__stories__/Button.stories.tsx#Primary"})}catch(__react_docgen_typescript_loader_error){}}}]);