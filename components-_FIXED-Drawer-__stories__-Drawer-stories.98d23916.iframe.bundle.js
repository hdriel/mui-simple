"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[3359],{"./src/components/_FIXED/Drawer/__stories__/Drawer.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Backdrop_:()=>Backdrop_,BgColor_:()=>BgColor_,Default_:()=>Default_,Direction_:()=>Direction_,HideHeader_:()=>HideHeader_,KeepMounted:()=>KeepMounted,Swipeable_:()=>Swipeable_,Variant_:()=>Variant_,Width_:()=>Width_,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Drawer_stories});var react=__webpack_require__("./node_modules/react/index.js"),Inbox=__webpack_require__("./node_modules/@mui/icons-material/esm/Inbox.js"),Drafts=__webpack_require__("./node_modules/@mui/icons-material/esm/Drafts.js"),Image=__webpack_require__("./node_modules/@mui/icons-material/esm/Image.js"),Comment=__webpack_require__("./node_modules/@mui/icons-material/esm/Comment.js"),Work=__webpack_require__("./node_modules/@mui/icons-material/esm/Work.js"),Send=__webpack_require__("./node_modules/@mui/icons-material/esm/Send.js"),BeachAccess=__webpack_require__("./node_modules/@mui/icons-material/esm/BeachAccess.js"),Stack=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),useTheme=__webpack_require__("./node_modules/@mui/material/styles/useTheme.js"),ChevronLeft=__webpack_require__("./node_modules/@mui/icons-material/esm/ChevronLeft.js"),ChevronRight=__webpack_require__("./node_modules/@mui/icons-material/esm/ChevronRight.js"),styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),Drawer=__webpack_require__("./node_modules/@mui/material/Drawer/Drawer.js"),SwipeableDrawer=__webpack_require__("./node_modules/@mui/material/SwipeableDrawer/SwipeableDrawer.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js");function drawerStyles(props){const{theme,bgColor}=props;return{flexShrink:0,whiteSpace:"nowrap",boxSizing:"border-box",background:bgColor,overflowX:"hidden",transition:theme.transitions.create("width",{easing:theme.transitions.easing.sharp,duration:theme.transitions.duration.enteringScreen})}}const _excluded=["width","anchor"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const Drawer_styled_Drawer=(0,styled.Ay)(Drawer.Ay,{shouldForwardProp:propName=>!["isMiniPersistent","bgColor"].includes(propName)})((props=>_objectSpread({},drawerStyles(props)))),Drawer_styled_SwipeableDrawer=(0,styled.Ay)(SwipeableDrawer.A,{shouldForwardProp:propName=>!["isMiniPersistent","bgColor"].includes(propName)})((props=>_objectSpread({},drawerStyles(props)))),ContentWrapper=(0,styled.Ay)((_ref=>{var _anchor$toLowerCase;let{width,anchor}=_ref,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.includes(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.includes(o)||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return react.createElement(Box.A,_extends({sx:{width:["top","bottom"].includes(null!==(_anchor$toLowerCase=null==anchor?void 0:anchor.toLowerCase())&&void 0!==_anchor$toLowerCase?_anchor$toLowerCase:"left")?"auto":width},role:"presentation"},props))}))``,DrawerHeader=(0,styled.Ay)(Box.A)((({theme,anchor})=>_objectSpread(_objectSpread({display:"flex",alignItems:"center",padding:theme.spacing(0,1)},theme.mixins.toolbar),{},{justifyContent:"right"===anchor?"flex-start":"flex-end"})));var Button=__webpack_require__("./src/components/_FIXED/Button/Button.tsx"),Divider=__webpack_require__("./src/components/_FIXED/Divider/Divider.tsx");const Drawer_excluded=["backdrop","bgColor","children","direction","hideHeader","keepMounted","onClose","open","PaperProps","swipeable","toggleDrawer","variant","width"];function Drawer_extends(){return Drawer_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},Drawer_extends.apply(null,arguments)}function Drawer_ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function Drawer_objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?Drawer_ownKeys(Object(t),!0).forEach((function(r){Drawer_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Drawer_ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function Drawer_defineProperty(e,r,t){return(r=function Drawer_toPropertyKey(t){var i=function Drawer_toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const Drawer_Drawer=_ref=>{let{backdrop=!1,bgColor,children,direction,hideHeader=!1,keepMounted=!0,onClose,open,PaperProps,swipeable,toggleDrawer:_toggleDrawer,variant:_variant,width=240}=_ref,props=function Drawer_objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function Drawer_objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.includes(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.includes(o)||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,Drawer_excluded);const theme=(0,useTheme.A)(),isMiniPersistent="mini-persistent"===_variant,variant=isMiniPersistent?"persistent":_variant,DrawerCmp=swipeable?Drawer_styled_SwipeableDrawer:Drawer_styled_Drawer,toggleDrawer=open=>event=>{("keydown"!==event.type||"Tab"!==event.key&&"Shift"!==event.key)&&(null==_toggleDrawer||_toggleDrawer(open))};return react.createElement(DrawerCmp,Drawer_extends({variant,anchor:direction,open,onClose:null==toggleDrawer?void 0:toggleDrawer(!1),ModalProps:{keepMounted},isMiniPersistent,bgColor,hideBackdrop:!backdrop,PaperProps:Drawer_objectSpread(Drawer_objectSpread({},PaperProps),{},{sx:Drawer_objectSpread(Drawer_objectSpread(Drawer_objectSpread({width},null==PaperProps?void 0:PaperProps.sx),bgColor&&{backgroundColor:bgColor}),{},{backgroundImage:"unset",overflowX:"hidden",transition:theme.transitions.create("width",{easing:theme.transitions.easing.sharp,duration:theme.transitions.duration.enteringScreen})})})},props),!hideHeader&&react.createElement(react.Fragment,null,react.createElement(DrawerHeader,{anchor:direction},react.createElement(Button.A,{onClick:null==toggleDrawer?void 0:toggleDrawer(!1),icon:"ltr"===theme.direction?react.createElement(ChevronLeft.A,null):react.createElement(ChevronRight.A,null)})),react.createElement(Divider.A,{variant:"fullWidth"})),react.createElement(ContentWrapper,{width,anchor:direction,onClick:null==toggleDrawer?void 0:toggleDrawer(!1),onKeyDown:null==toggleDrawer?void 0:toggleDrawer(!1)},children))};Drawer_Drawer.displayName="Drawer";const _FIXED_Drawer_Drawer=Drawer_Drawer;Drawer_Drawer.__docgenInfo={description:"",methods:[],displayName:"Drawer",props:{backdrop:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},bgColor:{required:!1,tsType:{name:"string"},description:""},width:{required:!1,tsType:{name:"union",raw:"number | string",elements:[{name:"number"},{name:"string"}]},description:"",defaultValue:{value:"240",computed:!1}},keepMounted:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},open:{required:!1,tsType:{name:"boolean"},description:""},hideHeader:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},direction:{required:!1,tsType:{name:"union",raw:"'left' | 'right' | 'top' | 'bottom'",elements:[{name:"literal",value:"'left'"},{name:"literal",value:"'right'"},{name:"literal",value:"'top'"},{name:"literal",value:"'bottom'"}]},description:""},swipeable:{required:!1,tsType:{name:"boolean"},description:""},toggleDrawer:{required:!1,tsType:{name:"signature",type:"function",raw:"(open: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"open"}],return:{name:"void"}}},description:""},variant:{required:!1,tsType:{name:"union",raw:"'permanent' | 'mini-persistent' | 'persistent' | 'temporary'",elements:[{name:"literal",value:"'permanent'"},{name:"literal",value:"'mini-persistent'"},{name:"literal",value:"'persistent'"},{name:"literal",value:"'temporary'"}]},description:""}}};var List=__webpack_require__("./src/components/_FIXED/List/List.tsx");function Drawer_stories_ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function Drawer_stories_objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?Drawer_stories_ownKeys(Object(t),!0).forEach((function(r){Drawer_stories_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Drawer_stories_ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function Drawer_stories_defineProperty(e,r,t){return(r=function Drawer_stories_toPropertyKey(t){var i=function Drawer_stories_toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function Drawer_stories_extends(){return Drawer_stories_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},Drawer_stories_extends.apply(null,arguments)}const Drawer_stories={title:"Navigation/Drawer",component:_FIXED_Drawer_Drawer},list=()=>react.createElement("div",null,react.createElement(List.A,{items:[{id:"inbox",startIcon:react.createElement(Inbox.A,null),title:"Inbox"},{id:"Drafts",startIcon:react.createElement(Drafts.A,null),title:"Drafts"},{id:"divider",divider:!0},{id:"Trash",title:"Trash"},"Spam"]}),react.createElement(Divider.A,{variant:"fullWidth"}),react.createElement(List.A,{items:[{id:"Photos",title:"Photos",subtitle:"Jan 9, 2014",avatar:{icon:react.createElement(Image.A,null)},actions:[react.createElement(Button.A,{icon:react.createElement(Comment.A,null)})]},{id:"Work",title:"Work",subtitle:"Jan 7, 2014",avatar:{icon:react.createElement(Work.A,null)},actions:[react.createElement(Button.A,{icon:react.createElement(Send.A,null)})]},{id:"Vacation",title:"Vacation",subtitle:"July 20, 2014",avatar:{icon:react.createElement(BeachAccess.A,null)},actions:[react.createElement(Button.A,{icon:react.createElement(Send.A,null)})]}]})),DrawerState=({children})=>{const[open,setOpen]=react.useState(!1);return react.createElement(react.Fragment,null,react.createElement(Button.A,{onClick:()=>setOpen(!0),variant:"contained"},"OPEN DRAWER"),null==children?void 0:children({open,onOpen:()=>setOpen(!0),onToggle:()=>setOpen(!open),onClose:()=>setOpen(!1)}))},Default_=args=>react.createElement(DrawerState,null,(({open,onClose,onToggle})=>react.createElement(_FIXED_Drawer_Drawer,Drawer_stories_extends({open,onClose,toggleDrawer:onToggle},args),list()))),Backdrop_=args=>react.createElement(DrawerState,null,(({open,onClose,onToggle})=>react.createElement(_FIXED_Drawer_Drawer,Drawer_stories_extends({backdrop:!0,open,onClose,variant:"temporary",toggleDrawer:onToggle},args),list()))),BgColor_=args=>react.createElement(DrawerState,null,(({open,onClose,onToggle})=>react.createElement(_FIXED_Drawer_Drawer,Drawer_stories_extends({bgColor:"primary",open,onClose,variant:"temporary",toggleDrawer:onToggle},args),list()))),Width_=args=>react.createElement(DrawerState,null,(({open,onClose,onToggle})=>react.createElement(_FIXED_Drawer_Drawer,Drawer_stories_extends({width:600,open,onClose,variant:"temporary",toggleDrawer:onToggle},args),list()))),HideHeader_=args=>react.createElement(DrawerState,null,(({open,onClose,onToggle})=>react.createElement(_FIXED_Drawer_Drawer,Drawer_stories_extends({hideHeader:!0,open,onClose,variant:"temporary",toggleDrawer:onToggle},args),list()))),Swipeable_=args=>react.createElement(DrawerState,null,(({open,onClose,onToggle})=>react.createElement(_FIXED_Drawer_Drawer,Drawer_stories_extends({swipeable:!0,open,onClose,variant:"temporary",toggleDrawer:onToggle},args),list()))),Direction_=args=>{const[state,setState]=react.useState({top:!1,left:!1,bottom:!1,right:!1}),toggleDrawer=(anchor,open)=>event=>{("keydown"!==event.type||"Tab"!==event.key&&"Shift"!==event.key)&&setState(Drawer_stories_objectSpread(Drawer_stories_objectSpread({},state),{},{[anchor]:open}))};return react.createElement("div",null,["left","right","top","bottom"].map((anchor=>react.createElement(react.Fragment,{key:anchor},react.createElement(Button.A,{onClick:toggleDrawer(anchor,!0)},anchor),react.createElement(_FIXED_Drawer_Drawer,Drawer_stories_extends({direction:anchor,variant:"temporary",open:state[anchor],toggleDrawer:toggleDrawer(anchor,!1)},args),list())))))},Variant_=args=>{const[menuOpen,setMenuOpen]=(0,react.useState)(!1),[state,setState]=react.useState({permanent:!1,"mini-persistent":!1,persistent:!1,temporary:!1}),toggleDrawer=(variant,open)=>event=>{("keydown"!==event.type||"Tab"!==event.key&&"Shift"!==event.key)&&(setMenuOpen(open),setState(Drawer_stories_objectSpread(Drawer_stories_objectSpread({},state),{},{[variant]:open})))};return react.createElement("div",null,["permanent","mini-persistent","persistent","temporary"].map((variant=>react.createElement(react.Fragment,{key:variant},react.createElement(Button.A,{onClick:toggleDrawer(variant,!0)},variant),react.createElement(_FIXED_Drawer_Drawer,Drawer_stories_extends({direction:"right",variant,open:menuOpen,toggleDrawer:toggleDrawer(variant,!1)},args),list())))))},ConsoleLog=()=>((0,react.useEffect)((()=>console.log("Mounted")),[]),null),KeepMounted=args=>{const[menuOpen,setMenuOpen]=(0,react.useState)(!1),[keepMountedMenuOpen,setKeepMountedMenuOpen]=(0,react.useState)(!1);return react.createElement("div",null,react.createElement(Stack.A,null,react.createElement("p",null,"check your console log for each Mounted message"),react.createElement(Button.A,{onClick:()=>setKeepMountedMenuOpen(!0)},"Keep Mounted Menu"),react.createElement(Button.A,{onClick:()=>setMenuOpen(!0)},"Menu Open")),react.createElement(react.Fragment,null,react.createElement(_FIXED_Drawer_Drawer,Drawer_stories_extends({direction:"right",variant:"temporary",keepMounted:!0,open:menuOpen,toggleDrawer:()=>setKeepMountedMenuOpen(!1)},args),react.createElement(ConsoleLog,null),list()),react.createElement(_FIXED_Drawer_Drawer,Drawer_stories_extends({direction:"left",variant:"persistent",keepMounted:!1,open:menuOpen,toggleDrawer:()=>setMenuOpen(!1)},args),react.createElement(ConsoleLog,null),list())))},__namedExportsOrder=["Default_","Backdrop_","BgColor_","Width_","HideHeader_","Swipeable_","Direction_","Variant_","KeepMounted"];Default_.parameters={...Default_.parameters,docs:{...Default_.parameters?.docs,source:{originalSource:"args => {\n  return <DrawerState>\n            {({\n      open,\n      onClose,\n      onToggle\n    }) => <Drawer open={open} onClose={onClose} toggleDrawer={onToggle} {...args}>\n                    {list()}\n                </Drawer>}\n        </DrawerState>;\n}",...Default_.parameters?.docs?.source}}},Backdrop_.parameters={...Backdrop_.parameters,docs:{...Backdrop_.parameters?.docs,source:{originalSource:'args => {\n  return <DrawerState>\n            {({\n      open,\n      onClose,\n      onToggle\n    }) => <Drawer backdrop open={open} onClose={onClose} variant="temporary" toggleDrawer={onToggle} {...args}>\n                    {list()}\n                </Drawer>}\n        </DrawerState>;\n}',...Backdrop_.parameters?.docs?.source}}},BgColor_.parameters={...BgColor_.parameters,docs:{...BgColor_.parameters?.docs,source:{originalSource:'args => {\n  return <DrawerState>\n            {({\n      open,\n      onClose,\n      onToggle\n    }) => <Drawer bgColor="primary" open={open} onClose={onClose} variant="temporary" toggleDrawer={onToggle} {...args}>\n                    {list()}\n                </Drawer>}\n        </DrawerState>;\n}',...BgColor_.parameters?.docs?.source}}},Width_.parameters={...Width_.parameters,docs:{...Width_.parameters?.docs,source:{originalSource:'args => {\n  return <DrawerState>\n            {({\n      open,\n      onClose,\n      onToggle\n    }) => <Drawer width={600} open={open} onClose={onClose} variant="temporary" toggleDrawer={onToggle} {...args}>\n                    {list()}\n                </Drawer>}\n        </DrawerState>;\n}',...Width_.parameters?.docs?.source}}},HideHeader_.parameters={...HideHeader_.parameters,docs:{...HideHeader_.parameters?.docs,source:{originalSource:'args => {\n  return <DrawerState>\n            {({\n      open,\n      onClose,\n      onToggle\n    }) => <Drawer hideHeader open={open} onClose={onClose} variant="temporary" toggleDrawer={onToggle} {...args}>\n                    {list()}\n                </Drawer>}\n        </DrawerState>;\n}',...HideHeader_.parameters?.docs?.source}}},Swipeable_.parameters={...Swipeable_.parameters,docs:{...Swipeable_.parameters?.docs,source:{originalSource:'args => {\n  return <DrawerState>\n            {({\n      open,\n      onClose,\n      onToggle\n    }) => <Drawer swipeable open={open} onClose={onClose} variant="temporary" toggleDrawer={onToggle} {...args}>\n                    {list()}\n                </Drawer>}\n        </DrawerState>;\n}',...Swipeable_.parameters?.docs?.source}}},Direction_.parameters={...Direction_.parameters,docs:{...Direction_.parameters?.docs,source:{originalSource:"args => {\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setState({\n      ...state,\n      [anchor]: open\n    });\n  };\n  return <div>\n            {['left', 'right', 'top', 'bottom'].map(anchor => <React.Fragment key={anchor}>\n                    <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n                    <Drawer direction={anchor} variant=\"temporary\" open={state[anchor]} toggleDrawer={toggleDrawer(anchor, false)} {...args}>\n                        {list()}\n                    </Drawer>\n                </React.Fragment>)}\n        </div>;\n}",...Direction_.parameters?.docs?.source}}},Variant_.parameters={...Variant_.parameters,docs:{...Variant_.parameters?.docs,source:{originalSource:"args => {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [state, setState] = React.useState({\n    permanent: false,\n    'mini-persistent': false,\n    persistent: false,\n    temporary: false\n  });\n  const toggleDrawer = (variant, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setMenuOpen(open);\n    setState({\n      ...state,\n      [variant]: open\n    });\n  };\n  return <div>\n            {['permanent', 'mini-persistent', 'persistent', 'temporary'].map(variant => <React.Fragment key={variant}>\n                    <Button onClick={toggleDrawer(variant, true)}>{variant}</Button>\n                    <Drawer direction={'right'} variant={variant} open={menuOpen} toggleDrawer={toggleDrawer(variant, false)} {...args}>\n                        {list()}\n                    </Drawer>\n                </React.Fragment>)}\n        </div>;\n}",...Variant_.parameters?.docs?.source}}},KeepMounted.parameters={...KeepMounted.parameters,docs:{...KeepMounted.parameters?.docs,source:{originalSource:'args => {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [keepMountedMenuOpen, setKeepMountedMenuOpen] = useState(false);\n  return <div>\n            <Stack>\n                <p>check your console log for each Mounted message</p>\n                <Button onClick={() => setKeepMountedMenuOpen(true)}>Keep Mounted Menu</Button>\n                <Button onClick={() => setMenuOpen(true)}>Menu Open</Button>\n            </Stack>\n\n            <React.Fragment>\n                <Drawer direction="right" variant="temporary" keepMounted={true} open={menuOpen} toggleDrawer={() => setKeepMountedMenuOpen(false)} {...args}>\n                    <ConsoleLog />\n                    {list()}\n                </Drawer>\n                <Drawer direction="left" variant="persistent" keepMounted={false} open={menuOpen} toggleDrawer={() => setMenuOpen(false)} {...args}>\n                    <ConsoleLog />\n                    {list()}\n                </Drawer>\n            </React.Fragment>\n        </div>;\n}',...KeepMounted.parameters?.docs?.source}}}}}]);