"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[3437],{"./src/components/_FIXED/Autocomplete/__stories__/InputAutocompleteAsync.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,FilmOptions:()=>FilmOptions,GroupBy:()=>GroupBy,IncludeInputInList:()=>IncludeInputInList,Keys:()=>Keys,OnInputChange:()=>OnInputChange,OptionsConverter:()=>OptionsConverter,OptionsObjectList:()=>OptionsObjectList,OptionsStringList:()=>OptionsStringList,OptionsWithDisabled:()=>OptionsWithDisabled,Placeholder:()=>Placeholder,RenderOption:()=>RenderOption,Sort:()=>Sort,StartCmpExternal:()=>StartCmpExternal,__namedExportsOrder:()=>__namedExportsOrder,default:()=>InputAutocompleteAsync_stories});var react=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),Stack=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/Stack/Stack.js"),Box=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/Box/Box.js"),InputAutocomplete=__webpack_require__("./src/components/_FIXED/Autocomplete/InputAutocomplete.tsx"),useAutoCompleteAsync=__webpack_require__("./src/components/_FIXED/Autocomplete/hooks/useAutoCompleteAsync.tsx");const _excluded=["getOptionsPromise","sleep","getOptionsCallback","fetchOptionsOnFocus","LOADING_LABEL"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const InputAutocompleteAsync=_ref=>{let{getOptionsPromise,sleep=0,getOptionsCallback,fetchOptionsOnFocus,LOADING_LABEL}=_ref,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(-1!==e.indexOf(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],-1===t.indexOf(o)&&{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);const asyncProps=(0,useAutoCompleteAsync.c)({LOADING_LABEL,getOptionsPromise,sleep,getOptionsCallback,fetchOptionsOnFocus,value:props.value,fieldId:props.fieldId});return react.createElement(InputAutocomplete.A,_extends({},props,asyncProps))};InputAutocompleteAsync.displayName="InputAutocompleteAsync";const Autocomplete_InputAutocompleteAsync=InputAutocompleteAsync;InputAutocompleteAsync.__docgenInfo={description:"",methods:[],displayName:"InputAutocompleteAsync",props:{autoComplete:{required:!1,tsType:{name:"boolean"},description:""},autoHighlight:{required:!1,tsType:{name:"boolean"},description:""},blurOnSelect:{required:!1,tsType:{name:"boolean"},description:""},chipProps:{required:!1,tsType:{name:"union",raw:"ChipProps | ((props: any) => ChipProps)",elements:[{name:"ChipProps"},{name:"unknown"}]},description:""},clearOnBlur:{required:!1,tsType:{name:"boolean"},description:""},clearOnPressEscape:{required:!1,tsType:{name:"boolean"},description:""},creationAllowed:{required:!1,tsType:{name:"boolean"},description:""},CREATION_PREFIX_LABEL:{required:!1,tsType:{name:"string"},description:""},NO_OPTIONS_LABEL:{required:!1,tsType:{name:"string"},description:""},disableClearableSolo:{required:!1,tsType:{name:"boolean"},description:""},disableCloseOnSelect:{required:!1,tsType:{name:"boolean"},description:""},disableListWrap:{required:!1,tsType:{name:"boolean"},description:""},disablePortal:{required:!1,tsType:{name:"boolean"},description:""},fieldId:{required:!1,tsType:{name:"string"},description:""},filterOptions:{required:!1,tsType:{name:"union",raw:"| ((...args: any) => ElementType)\n| {\n      ignoreAccents?: boolean;\n      ignoreCase?: boolean;\n      limitResultOptions?: number;\n      matchFrom?: string | 'start';\n      stringify?: string | (() => void);\n      trim?: boolean;\n  }",elements:[{name:"unknown"},{name:"signature",type:"object",raw:"{\n    ignoreAccents?: boolean;\n    ignoreCase?: boolean;\n    limitResultOptions?: number;\n    matchFrom?: string | 'start';\n    stringify?: string | (() => void);\n    trim?: boolean;\n}",signature:{properties:[{key:"ignoreAccents",value:{name:"boolean",required:!1}},{key:"ignoreCase",value:{name:"boolean",required:!1}},{key:"limitResultOptions",value:{name:"number",required:!1}},{key:"matchFrom",value:{name:"union",raw:"string | 'start'",elements:[{name:"string"},{name:"literal",value:"'start'"}],required:!1}},{key:"stringify",value:{name:"union",raw:"string | (() => void)",elements:[{name:"string"},{name:"unknown"}],required:!1}},{key:"trim",value:{name:"boolean",required:!1}}]}}]},description:""},filterSelectedOptions:{required:!1,tsType:{name:"boolean"},description:""},freeSolo:{required:!1,tsType:{name:"boolean"},description:""},getOptionLabel:{required:!1,tsType:{name:"union",raw:"string | ((option: any) => string)",elements:[{name:"string"},{name:"unknown"}]},description:""},groupBy:{required:!1,tsType:{name:"union",raw:"string | ((option: any) => any)",elements:[{name:"string"},{name:"unknown"}]},description:""},handleHomeEndKeys:{required:!1,tsType:{name:"boolean"},description:""},hideStartActionsOnEmpty:{required:!1,tsType:{name:"boolean"},description:""},highlightField:{required:!1,tsType:{name:"string"},description:""},highlightSearchResults:{required:!1,tsType:{name:"boolean"},description:""},includeInputInList:{required:!1,tsType:{name:"boolean"},description:""},inputValue:{required:!1,tsType:{name:"string"},description:""},onInputChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: any, newInputValue: string) => void",signature:{arguments:[{type:{name:"any"},name:"event"},{type:{name:"string"},name:"newInputValue"}],return:{name:"void"}}},description:""},multiple:{required:!1,tsType:{name:"boolean"},description:""},openOnFocus:{required:!1,tsType:{name:"boolean"},description:""},options:{required:!1,tsType:{name:"Array",elements:[{name:"union",raw:"string | number | InputAutoCompleteOptionItem | Record<string, any>",elements:[{name:"string"},{name:"number"},{name:"InputAutoCompleteOptionItem"},{name:"Record",elements:[{name:"string"},{name:"any"}],raw:"Record<string, any>"}]}],raw:"Array<string | number | InputAutoCompleteOptionItem | Record<string, any>>"},description:""},optionConverter:{required:!1,tsType:{name:"signature",type:"function",raw:"(item: any, index: number) => InputAutoCompleteOptionItem",signature:{arguments:[{type:{name:"any"},name:"item"},{type:{name:"number"},name:"index"}],return:{name:"InputAutoCompleteOptionItem"}}},description:""},padding:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:""},raiseSelectedToTop:{required:!1,tsType:{name:"boolean"},description:""},renderOption:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: object, option: any, { selected }: { selected: boolean }) => ElementType",signature:{arguments:[{type:{name:"object"},name:"props"},{type:{name:"any"},name:"option"},{type:{name:"signature",type:"object",raw:"{ selected: boolean }",signature:{properties:[{key:"selected",value:{name:"boolean",required:!0}}]}},name:""}],return:{name:"union",raw:"React.ForwardRefExoticComponent<any> | ReactElement | ReactNode",elements:[{name:"ReactForwardRefExoticComponent",raw:"React.ForwardRefExoticComponent<any>",elements:[{name:"any"}]},{name:"ReactElement"},{name:"ReactNode"}]}}},description:""},value:{required:!1,tsType:{name:"any"},description:""},selectOnFocus:{required:!1,tsType:{name:"boolean"},description:""},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: any, optionId: string | number, action?: string) => void",signature:{arguments:[{type:{name:"any"},name:"event"},{type:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},name:"optionId"},{type:{name:"string"},name:"action"}],return:{name:"void"}}},description:""},sortBy:{required:!1,tsType:{name:"union",raw:"string | (() => void)",elements:[{name:"string"},{name:"unknown"}]},description:""},sortDir:{required:!1,tsType:{name:"union",raw:"boolean | number",elements:[{name:"boolean"},{name:"number"}]},description:""},getOptionsPromise:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},sleep:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"0",computed:!1}},fetchOptionsOnFocus:{required:!1,tsType:{name:"boolean"},description:""},LOADING_LABEL:{required:!1,tsType:{name:"string"},description:""}}};var InputAutocomplete_mocks=__webpack_require__("./src/components/_FIXED/Autocomplete/__stories__/InputAutocomplete.mocks.ts"),__awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const InputAutocompleteAsync_stories_excluded=["title"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function InputAutocompleteAsync_stories_extends(){return InputAutocompleteAsync_stories_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},InputAutocompleteAsync_stories_extends.apply(null,arguments)}const InputAutocompleteAsync_stories={title:"Inputs/Inputs/Autocomplete/InputAutocompleteAsync",component:Autocomplete_InputAutocompleteAsync,tags:["autodocs"]},Default={args:{}},OPTIONS=[{title:"The Shawshank Redemption",year:1994,id:0},{title:"The Godfather",year:1972,id:1},{title:"The Godfather: Part II",year:1974,id:2},{title:"The Dark Knight",year:2008,id:3},{title:"12 Angry Men",year:1957,id:4},{title:"Schindler's List",year:1993,id:5},{title:"Pulp Fiction",year:1994,id:6}],render=args=>{var _args$value;const[selectedOption,setSelectedOption]=(0,react.useState)(null!==(_args$value=args.value)&&void 0!==_args$value?_args$value:null);return react.createElement(Autocomplete_InputAutocompleteAsync,InputAutocompleteAsync_stories_extends({},args,{value:selectedOption,onChange:(e,option)=>setSelectedOption(option)}))},IncludeInputInList={args:{label:"Movie",includeInputInList:!1,sleep:1e3,getOptionsPromise:()=>__awaiter(void 0,void 0,void 0,function*(){return OPTIONS.map(_ref=>{let{title}=_ref;return _objectSpread(_objectSpread({},function InputAutocompleteAsync_stories_objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function InputAutocompleteAsync_stories_objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(-1!==e.indexOf(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],-1===t.indexOf(o)&&{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,InputAutocompleteAsync_stories_excluded)),{},{label:title})})})},render},OptionsStringList={args:{label:"Movie",getOptionsPromise:()=>__awaiter(void 0,void 0,void 0,function*(){return OPTIONS.map(o=>o.title)}),sleep:1e3,value:["The Dark Knight"]},render},OptionsObjectList={args:{label:"Movie",getOptionsPromise:()=>__awaiter(void 0,void 0,void 0,function*(){return OPTIONS}),sleep:1e3,getOptionLabel:"title"},render},OptionsConverter={args:{label:"Movie",getOptionsPromise:()=>__awaiter(void 0,void 0,void 0,function*(){return OPTIONS}),sleep:1e3,optionConverter:(item,index)=>({id:index,label:`${item.title} (${item.year})`,year:item.year})},render},Placeholder={args:{label:"Movie",getOptionsPromise:()=>__awaiter(void 0,void 0,void 0,function*(){return OPTIONS}),placeholder:"choose you movie name",sleep:1e3,optionConverter:(item,index)=>({id:index,label:`${item.title} (${item.year})`,year:item.year})},render},StartCmpExternal={args:{label:"Movie",getOptionsPromise:()=>__awaiter(void 0,void 0,void 0,function*(){return OPTIONS}),startCmpExternal:"Tv",sleep:1e3,optionConverter:(item,index)=>({id:index,label:`${item.title} (${item.year})`,year:item.year})},render},Sort={args:{label:"Movie",getOptionsPromise:()=>__awaiter(void 0,void 0,void 0,function*(){return OPTIONS}),sortBy:"year",sortDir:-1,sleep:1e3,optionConverter:(item,index)=>({id:index,label:`${item.title} (${item.year})`,year:item.year})},render},FilmOptions=()=>{const[selectedOption,setSelectedOption]=(0,react.useState)(null);return react.createElement(Stack.A,{spacing:4},["filled","standard","outlined"].map(variant=>react.createElement(Autocomplete_InputAutocompleteAsync,{key:variant,label:"Movie",optionConverter:(film,index)=>({id:index,label:`${film.title} (${film.year})`}),getOptionsPromise:()=>__awaiter(void 0,void 0,void 0,function*(){return InputAutocomplete_mocks.S1}),value:selectedOption,onChange:(e,option)=>setSelectedOption(option),variant,sleep:1e3})))},RenderOption={args:{id:"grouped-demo",label:"Choose a country",getOptionsPromise:()=>__awaiter(void 0,void 0,void 0,function*(){return InputAutocomplete_mocks.Xr}),autoHighlight:!0,renderOption:(props,option)=>react.createElement(Box.A,InputAutocompleteAsync_stories_extends({component:"li",sx:{"& > img":{mr:2,flexShrink:0}}},props),react.createElement("img",{loading:"lazy",width:"20",src:`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`,srcSet:`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`,alt:""}),option.label," (",option.code,") +",option.phone)},render},GroupBy={args:{id:"grouped categories",label:"Categories",getOptionsPromise:()=>__awaiter(void 0,void 0,void 0,function*(){return InputAutocomplete_mocks.Xx}),groupBy:option=>option.firstLetter,sleep:1e3,sortBy:"title",getOptionLabel:"title",width:400},render},OptionsWithDisabled={args:{id:"grouped-demo",label:"Disabled options",fetchOptionsOnFocus:!0,sleep:1e3,getOptionsPromise:()=>__awaiter(void 0,void 0,void 0,function*(){return InputAutocomplete_mocks.Vw.slice(0).map((option,index)=>({id:index,time:option,disabled:index%4==0}))}),getOptionLabel:option=>option.time,width:200},render},Keys=()=>{const[selectedOption,setSelectedOption]=(0,react.useState)(null);return react.createElement(Autocomplete_InputAutocompleteAsync,{id:"grouped-demo",label:"Keys",value:selectedOption,onChange:(e,option)=>setSelectedOption(option),fetchOptionsOnFocus:!0,getOptionsPromise:()=>__awaiter(void 0,void 0,void 0,function*(){return[{key:"37913a6c-5f35-4299-98dc-c1c31b837b30-1701175439414-156418 (1080p).mp4",Key:"videos/js-full-power/37913a6c-5f35-4299-98dc-c1c31b837b30-1701175439414-156418 (1080p).mp4"},{key:"ab8a3070-e675-43ea-a513-8af858b585d0-1701178267985-download_-_74710 (540p).mp4",Key:"videos/js-full-power/ab8a3070-e675-43ea-a513-8af858b585d0-1701178267985-download_-_74710 (540p).mp4"}]}),getOptionLabel:"key",fieldId:"Key"})},OnInputChange={args:{id:"grouped-demo",label:"on input change",clearOnBlur:!1,getOptionsPromise:()=>__awaiter(void 0,void 0,void 0,function*(){return InputAutocomplete_mocks.Vw.slice(0).map((option,index)=>({id:index,time:option,disabled:index%4==0}))}),getOptionLabel:option=>option.time,width:200},render:args=>{const[search,setSearch]=(0,react.useState)("");return react.createElement(Autocomplete_InputAutocompleteAsync,InputAutocompleteAsync_stories_extends({},args,{inputValue:search,onInputChange:(event,newInputValue)=>{console.log("new input value",newInputValue),setSearch(newInputValue)}}))}},__namedExportsOrder=["Default","IncludeInputInList","OptionsStringList","OptionsObjectList","OptionsConverter","Placeholder","StartCmpExternal","Sort","FilmOptions","RenderOption","GroupBy","OptionsWithDisabled","Keys","OnInputChange"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Default.parameters?.docs?.source}}},IncludeInputInList.parameters={...IncludeInputInList.parameters,docs:{...IncludeInputInList.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Movie',\n    includeInputInList: false,\n    sleep: 1e3,\n    getOptionsPromise: async () => OPTIONS.map(({\n      title,\n      ...item\n    }) => ({\n      ...item,\n      label: title\n    }))\n  },\n  render\n}",...IncludeInputInList.parameters?.docs?.source}}},OptionsStringList.parameters={...OptionsStringList.parameters,docs:{...OptionsStringList.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Movie',\n    getOptionsPromise: async () => OPTIONS.map(o => o.title),\n    sleep: 1e3,\n    value: ['The Dark Knight']\n  },\n  render\n}",...OptionsStringList.parameters?.docs?.source}}},OptionsObjectList.parameters={...OptionsObjectList.parameters,docs:{...OptionsObjectList.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Movie',\n    getOptionsPromise: async () => OPTIONS,\n    sleep: 1e3,\n    getOptionLabel: 'title'\n  },\n  render\n}",...OptionsObjectList.parameters?.docs?.source}}},OptionsConverter.parameters={...OptionsConverter.parameters,docs:{...OptionsConverter.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Movie',\n    getOptionsPromise: async () => OPTIONS,\n    sleep: 1e3,\n    optionConverter: (item, index) => ({\n      id: index,\n      label: `${item.title} (${item.year})`,\n      year: item.year\n    })\n  },\n  render\n}",...OptionsConverter.parameters?.docs?.source}}},Placeholder.parameters={...Placeholder.parameters,docs:{...Placeholder.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Movie',\n    getOptionsPromise: async () => OPTIONS,\n    placeholder: 'choose you movie name',\n    sleep: 1e3,\n    optionConverter: (item, index) => ({\n      id: index,\n      label: `${item.title} (${item.year})`,\n      year: item.year\n    })\n  },\n  render\n}",...Placeholder.parameters?.docs?.source}}},StartCmpExternal.parameters={...StartCmpExternal.parameters,docs:{...StartCmpExternal.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Movie',\n    getOptionsPromise: async () => OPTIONS,\n    startCmpExternal: 'Tv',\n    sleep: 1e3,\n    optionConverter: (item, index) => ({\n      id: index,\n      label: `${item.title} (${item.year})`,\n      year: item.year\n    })\n  },\n  render\n}",...StartCmpExternal.parameters?.docs?.source}}},Sort.parameters={...Sort.parameters,docs:{...Sort.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Movie',\n    getOptionsPromise: async () => OPTIONS,\n    sortBy: 'year',\n    sortDir: -1,\n    sleep: 1e3,\n    optionConverter: (item, index) => ({\n      id: index,\n      label: `${item.title} (${item.year})`,\n      year: item.year\n    })\n  },\n  render\n}",...Sort.parameters?.docs?.source}}},FilmOptions.parameters={...FilmOptions.parameters,docs:{...FilmOptions.parameters?.docs,source:{originalSource:"() => {\n  const [selectedOption, setSelectedOption] = useState(null);\n  return <Stack spacing={4}>\n            {['filled', 'standard', 'outlined'].map(variant => <InputAutocompleteAsync key={variant}\n    // getOptionLabel={(option) => option.title}\n    label=\"Movie\" optionConverter={(film, index) => ({\n      id: index,\n      label: `${film.title} (${film.year})`\n    })} getOptionsPromise={async () => top100Films} value={selectedOption} onChange={(e, option) => setSelectedOption(option)} variant={variant} sleep={1e3} />)}\n        </Stack>;\n}",...FilmOptions.parameters?.docs?.source}}},RenderOption.parameters={...RenderOption.parameters,docs:{...RenderOption.parameters?.docs,source:{originalSource:'{\n  args: {\n    id: \'grouped-demo\',\n    label: \'Choose a country\',\n    getOptionsPromise: async () => countries,\n    autoHighlight: true,\n    renderOption: (props, option) => <Box component="li" sx={{\n      \'& > img\': {\n        mr: 2,\n        flexShrink: 0\n      }\n    }} {...props}>\n                <img loading="lazy" width="20" src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`} srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`} alt="" />\n                {option.label} ({option.code}) +{option.phone}\n            </Box>\n  },\n  render\n}',...RenderOption.parameters?.docs?.source}}},GroupBy.parameters={...GroupBy.parameters,docs:{...GroupBy.parameters?.docs,source:{originalSource:"{\n  args: {\n    id: 'grouped categories',\n    label: 'Categories',\n    getOptionsPromise: async () => top100FilmsWithFirstLetters,\n    groupBy: option => option.firstLetter,\n    sleep: 1e3,\n    sortBy: 'title',\n    getOptionLabel: 'title',\n    width: 400\n  },\n  render\n}",...GroupBy.parameters?.docs?.source}}},OptionsWithDisabled.parameters={...OptionsWithDisabled.parameters,docs:{...OptionsWithDisabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    id: 'grouped-demo',\n    label: 'Disabled options',\n    fetchOptionsOnFocus: true,\n    sleep: 1e3,\n    getOptionsPromise: async () => timeSlots.slice(0).map((option, index) => ({\n      id: index,\n      time: option,\n      disabled: index % 4 === 0\n    })),\n    getOptionLabel: option => option.time,\n    width: 200\n  },\n  render\n}",...OptionsWithDisabled.parameters?.docs?.source}}},Keys.parameters={...Keys.parameters,docs:{...Keys.parameters?.docs,source:{originalSource:"() => {\n  const [selectedOption, setSelectedOption] = useState(null);\n  return <InputAutocompleteAsync id=\"grouped-demo\" label=\"Keys\" value={selectedOption} onChange={(e, option) => setSelectedOption(option)} fetchOptionsOnFocus getOptionsPromise={async () => [{\n    key: '37913a6c-5f35-4299-98dc-c1c31b837b30-1701175439414-156418 (1080p).mp4',\n    Key: 'videos/js-full-power/37913a6c-5f35-4299-98dc-c1c31b837b30-1701175439414-156418 (1080p).mp4'\n  }, {\n    key: 'ab8a3070-e675-43ea-a513-8af858b585d0-1701178267985-download_-_74710 (540p).mp4',\n    Key: 'videos/js-full-power/ab8a3070-e675-43ea-a513-8af858b585d0-1701178267985-download_-_74710 (540p).mp4'\n  }]} getOptionLabel=\"key\" fieldId=\"Key\" />;\n}",...Keys.parameters?.docs?.source}}},OnInputChange.parameters={...OnInputChange.parameters,docs:{...OnInputChange.parameters?.docs,source:{originalSource:"{\n  args: {\n    id: 'grouped-demo',\n    label: 'on input change',\n    clearOnBlur: false,\n    getOptionsPromise: async () => timeSlots.slice(0).map((option, index) => ({\n      id: index,\n      time: option,\n      disabled: index % 4 === 0\n    })),\n    getOptionLabel: option => option.time,\n    width: 200\n  },\n  render: args => {\n    const [search, setSearch] = useState('');\n    return <InputAutocompleteAsync {...args} inputValue={search} onInputChange={(event, newInputValue) => {\n      console.log('new input value', newInputValue);\n      setSearch(newInputValue);\n    }} />;\n  }\n}",...OnInputChange.parameters?.docs?.source}}}},"./src/components/_FIXED/Autocomplete/hooks/useAutoCompleteAsync.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{c:()=>useAutoCompleteAsync});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),_utils_helpers__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/utils/helpers.ts"),_Progress_CircularProgress_CircularProgress__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/_FIXED/Progress/CircularProgress/CircularProgress.tsx"),__awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};function useAutoCompleteAsync({LOADING_LABEL,getOptionsPromise,sleep:_sleep,getOptionsCallback,fetchOptionsOnFocus,value,fieldId}){const[open,setOpen]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[options,setOptions]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),[loading,setLoading]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1);(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{let active=!0;if(null!=value&&value.length||open&&(null==options||!options.length))return getOptionsPromise&&(setLoading(!0),getOptionsPromise().then(options=>__awaiter(this,void 0,void 0,function*(){return _sleep&&(yield(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_1__.yy)(_sleep)),options})).then(options=>__awaiter(this,void 0,void 0,function*(){var _getOptionsCallback;return null!==(_getOptionsCallback=null==getOptionsCallback?void 0:getOptionsCallback())&&void 0!==_getOptionsCallback?_getOptionsCallback:[...options]})).then(options=>active&&setOptions(options)).finally(()=>setLoading(!1))),()=>{active=!1}},[open,null==value?void 0:value.length]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{!open&&fetchOptionsOnFocus&&setOptions(state=>{var _state$filter;return null!==(_state$filter=null==state?void 0:state.filter(item=>{var _value$includes,_item$fieldId;return null==value||null===(_value$includes=value.includes)||void 0===_value$includes?void 0:_value$includes.call(value,null!==(_item$fieldId=null==item?void 0:item[fieldId])&&void 0!==_item$fieldId?_item$fieldId:item)}))&&void 0!==_state$filter?_state$filter:[]})},[open,fetchOptionsOnFocus]);const endCmp=loading?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Progress_CircularProgress_CircularProgress__WEBPACK_IMPORTED_MODULE_2__.A,{color:"inherit",size:20}):null;return{onOpen:()=>setOpen(!0),onClose:()=>setOpen(!1),options,open,loading,endCmp,loadingText:LOADING_LABEL}}}}]);