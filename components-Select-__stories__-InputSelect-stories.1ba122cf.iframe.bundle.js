"use strict";(self.webpackChunk_hdriel_mui_simple=self.webpackChunk_hdriel_mui_simple||[]).push([[1021],{"./src/components/Select/__stories__/InputSelect.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Select:()=>Select,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _a,_b,_c,_d,_e,_f,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_InputSelect__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Select/InputSelect.tsx"),_mui_material__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),_mui_icons_material__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/icons-material/esm/Airplay.js"),_mui_icons_material__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@mui/icons-material/esm/FormatColorFill.js"),_Button_Button__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Button/Button.tsx");const __WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:'var _a, _b, _c, _d, _e, _f;\nimport React, { useState } from "react";\nimport InputSelect from "../InputSelect";\nimport { Stack } from "@mui/material";\nimport { FormatColorFill as FormatColorFillIcon, Airplay as AirplayIcon } from "@mui/icons-material";\nimport Button from "../../Button/Button";\nexport default {\n  title: "Inputs/Inputs/InputSelect",\n  component: InputSelect,\n  decorators: [Story => /*#__PURE__*/React.createElement("div", {\n    style: {\n      width: "450px",\n      padding: "1em",\n      border: "1px dashed black"\n    }\n  }, /*#__PURE__*/React.createElement(Story, null))]\n};\nexport var Default = () => {\n  return /*#__PURE__*/React.createElement(InputSelect, null);\n};\nexport var Select = () => {\n  var options = ["javascript", "python", "C#", "C++"];\n  var [value, setValue] = useState("");\n  return /*#__PURE__*/React.createElement(Stack, {\n    spacing: 4\n  }, ["filled", "standard", "outlined"].map((variant, index) => /*#__PURE__*/React.createElement(InputSelect, {\n    key: variant,\n    label: "Favorite language",\n    value: value,\n    onChange: e => setValue(e.target.value),\n    variant: variant,\n    options: options,\n    nullable: index === 1 ? "None Selection" : !!index,\n    placeholderOption: index !== 0 ? "Choose from list:" : "",\n    startCmp: /*#__PURE__*/React.createElement(Button, {\n      icon: /*#__PURE__*/React.createElement(AirplayIcon, null),\n      onClick: e => e.stopPropagation()\n    }),\n    startCmpExternal: /*#__PURE__*/React.createElement(Button, {\n      icon: /*#__PURE__*/React.createElement(AirplayIcon, null),\n      onClick: e => e.stopPropagation()\n    }),\n    endCmp: /*#__PURE__*/React.createElement(Button, {\n      icon: /*#__PURE__*/React.createElement(FormatColorFillIcon, null),\n      onClick: e => e.stopPropagation()\n    }),\n    endCmpExternal: /*#__PURE__*/React.createElement(Button, {\n      icon: /*#__PURE__*/React.createElement(FormatColorFillIcon, null),\n      onClick: e => e.stopPropagation()\n    })\n  })));\n};\nDefault.parameters = Object.assign(Object.assign({}, Default.parameters), {\n  docs: Object.assign(Object.assign({}, (_a = Default.parameters) === null || _a === void 0 ? void 0 : _a.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  return <InputSelect />;\\n}"\n    }, (_c = (_b = Default.parameters) === null || _b === void 0 ? void 0 : _b.docs) === null || _c === void 0 ? void 0 : _c.source)\n  })\n});\nSelect.parameters = Object.assign(Object.assign({}, Select.parameters), {\n  docs: Object.assign(Object.assign({}, (_d = Select.parameters) === null || _d === void 0 ? void 0 : _d.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  const options = [\\"javascript\\", \\"python\\", \\"C#\\", \\"C++\\"];\\n  const [value, setValue] = useState(\\"\\");\\n  return <Stack spacing={4}>\\n      {[\\"filled\\", \\"standard\\", \\"outlined\\"].map((variant, index) => <InputSelect key={variant} label=\\"Favorite language\\" value={value} onChange={e => setValue(e.target.value)} variant={variant} options={options} nullable={index === 1 ? \\"None Selection\\" : !!index} placeholderOption={index !== 0 ? \\"Choose from list:\\" : \\"\\"} startCmp={<Button icon={<AirplayIcon />} onClick={e => e.stopPropagation()} />} startCmpExternal={<Button icon={<AirplayIcon />} onClick={e => e.stopPropagation()} />} endCmp={<Button icon={<FormatColorFillIcon />} onClick={e => e.stopPropagation()} />} endCmpExternal={<Button icon={<FormatColorFillIcon />} onClick={e => e.stopPropagation()} />} />)}\\n    </Stack>;\\n}"\n    }, (_f = (_e = Select.parameters) === null || _e === void 0 ? void 0 : _e.docs) === null || _f === void 0 ? void 0 : _f.source)\n  })\n});',locationsMap:{default:{startLoc:{col:21,line:18},endLoc:{col:1,line:20},startBody:{col:21,line:18},endBody:{col:1,line:20}},select:{startLoc:{col:20,line:21},endLoc:{col:1,line:52},startBody:{col:20,line:21},endBody:{col:1,line:52}}}}},title:"Inputs/Inputs/InputSelect",component:_InputSelect__WEBPACK_IMPORTED_MODULE_1__.Z,decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"450px",padding:"1em",border:"1px dashed black"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]};var Default=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputSelect__WEBPACK_IMPORTED_MODULE_1__.Z,null),Select=()=>{var options=["javascript","python","C#","C++"],[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("");return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__.Z,{spacing:4},["filled","standard","outlined"].map(((variant,index)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputSelect__WEBPACK_IMPORTED_MODULE_1__.Z,{key:variant,label:"Favorite language",value,onChange:e=>setValue(e.target.value),variant,options,nullable:1===index?"None Selection":!!index,placeholderOption:0!==index?"Choose from list:":"",startCmp:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_2__.Z,{icon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_4__.Z,null),onClick:e=>e.stopPropagation()}),startCmpExternal:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_2__.Z,{icon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_4__.Z,null),onClick:e=>e.stopPropagation()}),endCmp:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_2__.Z,{icon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_5__.Z,null),onClick:e=>e.stopPropagation()}),endCmpExternal:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_2__.Z,{icon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_5__.Z,null),onClick:e=>e.stopPropagation()})}))))};Default.parameters=Object.assign(Object.assign({},Default.parameters),{docs:Object.assign(Object.assign({},null===(_a=Default.parameters)||void 0===_a?void 0:_a.docs),{source:Object.assign({originalSource:"() => {\n  return <InputSelect />;\n}"},null===(_c=null===(_b=Default.parameters)||void 0===_b?void 0:_b.docs)||void 0===_c?void 0:_c.source)})}),Select.parameters=Object.assign(Object.assign({},Select.parameters),{docs:Object.assign(Object.assign({},null===(_d=Select.parameters)||void 0===_d?void 0:_d.docs),{source:Object.assign({originalSource:'() => {\n  const options = ["javascript", "python", "C#", "C++"];\n  const [value, setValue] = useState("");\n  return <Stack spacing={4}>\n      {["filled", "standard", "outlined"].map((variant, index) => <InputSelect key={variant} label="Favorite language" value={value} onChange={e => setValue(e.target.value)} variant={variant} options={options} nullable={index === 1 ? "None Selection" : !!index} placeholderOption={index !== 0 ? "Choose from list:" : ""} startCmp={<Button icon={<AirplayIcon />} onClick={e => e.stopPropagation()} />} startCmpExternal={<Button icon={<AirplayIcon />} onClick={e => e.stopPropagation()} />} endCmp={<Button icon={<FormatColorFillIcon />} onClick={e => e.stopPropagation()} />} endCmpExternal={<Button icon={<FormatColorFillIcon />} onClick={e => e.stopPropagation()} />} />)}\n    </Stack>;\n}'},null===(_f=null===(_e=Select.parameters)||void 0===_e?void 0:_e.docs)||void 0===_f?void 0:_f.source)})});var __namedExportsOrder=["Default","Select"]}}]);