"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[5691],{"./src/components/_FIXED/Autocomplete/__stories__/InputAutocompleteMultiple.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,FilmOptions:()=>FilmOptions,GroupBy:()=>GroupBy,IncludeInputInList:()=>IncludeInputInList,OptionsConverter:()=>OptionsConverter,OptionsObjectList:()=>OptionsObjectList,OptionsStringList:()=>OptionsStringList,OptionsWithDisabled:()=>OptionsWithDisabled,Placeholder:()=>Placeholder,RenderOption:()=>RenderOption,Sort:()=>Sort,StartCmpExternal:()=>StartCmpExternal,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),_mui_material__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),_InputAutocompleteMultiple__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/_FIXED/Autocomplete/InputAutocompleteMultiple.tsx"),_InputAutocomplete_mocks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/_FIXED/Autocomplete/__stories__/InputAutocomplete.mocks.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:"import React, { useState } from 'react';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport { Box, Stack } from '@mui/material';\n\nimport InputAutocompleteMultiple from '../InputAutocompleteMultiple';\nimport { countries, timeSlots, top100Films, top100FilmsWithFirstLetters } from './InputAutocomplete.mocks';\n\nconst meta: Meta<typeof InputAutocompleteMultiple> = {\n    title: 'Inputs/Inputs/Autocomplete/InputAutocompleteMultiple',\n    component: InputAutocompleteMultiple,\n    tags: ['autodocs'],\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof InputAutocompleteMultiple>;\n\nexport const Default: Story = {\n    args: {},\n};\n\nconst OPTIONS = [\n    { title: 'The Shawshank Redemption', year: 1994, id: 0 },\n    { title: 'The Godfather', year: 1972, id: 1 },\n    { title: 'The Godfather: Part II', year: 1974, id: 2 },\n    { title: 'The Dark Knight', year: 2008, id: 3 },\n    { title: '12 Angry Men', year: 1957, id: 4 },\n    { title: \"Schindler's List\", year: 1993, id: 5 },\n    { title: 'Pulp Fiction', year: 1994, id: 6 },\n];\n\nconst render = (args) => {\n    const [selectedOptions, setSelectedOptions] = useState(args.value ?? []);\n\n    return (\n        <InputAutocompleteMultiple\n            {...args}\n            value={selectedOptions}\n            onChange={(e, optionIds) => setSelectedOptions(optionIds)}\n        />\n    );\n};\n\nexport const IncludeInputInList: Story = {\n    args: {\n        label: 'Movie',\n        includeInputInList: true,\n        options: OPTIONS,\n        getOptionLabel: 'title',\n    },\n    render,\n};\n\nexport const OptionsStringList: Story = {\n    args: {\n        label: 'Movie',\n        options: OPTIONS.map((o) => o.title),\n        value: OPTIONS.map((o) => o.title).filter((_, i) => i % 4 === 0),\n    },\n    render,\n};\n\nexport const OptionsObjectList: Story = {\n    args: {\n        label: 'Movie',\n        options: OPTIONS,\n        getOptionLabel: 'title',\n    },\n    render,\n};\n\nexport const OptionsConverter: Story = {\n    args: {\n        label: 'Movie',\n        options: OPTIONS,\n        optionConverter: (item, index) => ({ id: index, label: `${item.title} (${item.year})`, year: item.year }),\n    },\n    render,\n};\n\nexport const Placeholder: Story = {\n    args: {\n        label: 'Movie',\n        options: OPTIONS,\n        placeholder: 'choose you movie name',\n        optionConverter: (item, index) => ({ id: index, label: `${item.title} (${item.year})`, year: item.year }),\n    },\n    render,\n};\n\nexport const StartCmpExternal: Story = {\n    args: {\n        label: 'Movie',\n        options: OPTIONS,\n        startCmpExternal: 'Tv',\n        optionConverter: (item, index) => ({ id: index, label: `${item.title} (${item.year})`, year: item.year }),\n    },\n    render,\n};\n\nexport const Sort: Story = {\n    args: {\n        label: 'Movie',\n        options: OPTIONS,\n        sortBy: 'year',\n        sortDir: -1,\n        optionConverter: (item, index) => ({ id: index, label: `${item.title} (${item.year})`, year: item.year }),\n    },\n    render,\n};\n\nexport const FilmOptions = () => {\n    const [selectedOption, setSelectedOption] = useState(null);\n\n    return (\n        <Stack spacing={4}>\n            {['filled', 'standard', 'outlined'].map((variant) => (\n                <InputAutocompleteMultiple\n                    key={variant}\n                    // getOptionLabel={(option) => option.title}\n                    label=\"Movie\"\n                    optionConverter={(film) => ({\n                        id: film.title,\n                        label: `${film.title} (${film.year})`,\n                        year: film.year,\n                    })}\n                    options={top100Films}\n                    value={selectedOption}\n                    onChange={(e, option) => setSelectedOption(option)}\n                    variant={variant}\n                />\n            ))}\n        </Stack>\n    );\n};\n\nexport const RenderOption: Story = {\n    args: {\n        id: 'grouped-demo',\n        label: 'Choose a country',\n        options: countries,\n        autoHighlight: true,\n        getOptionLabel: (option) => option.label,\n        renderOption: (props, option) => (\n            <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\n                <img\n                    loading=\"lazy\"\n                    width=\"20\"\n                    src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`}\n                    srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`}\n                    alt=\"\"\n                />\n                {option.label} ({option.code}) +{option.phone}\n            </Box>\n        ),\n    },\n    render,\n};\n\nexport const GroupBy: Story = {\n    args: {\n        id: 'grouped categories',\n        label: 'Categories',\n        options: top100FilmsWithFirstLetters,\n        groupBy: (option) => option.firstLetter,\n        sortBy: 'title',\n        getOptionLabel: (option) => option.title,\n        width: 400,\n    },\n    render,\n};\n\nexport const OptionsWithDisabled: Story = {\n    args: {\n        id: 'grouped-demo',\n        label: 'Disabled options',\n        options: timeSlots.slice(0).map((option, index) => ({ time: option, disabled: index % 4 === 0 })),\n        getOptionLabel: (option) => option.time,\n        width: 200,\n    },\n    render,\n};\n\n/*\n    openOnFocus: true,\n    readOnly: undefined,\n    selectOnFocus: false,\n    size: undefined,\n    variant: 'outlined',\n*/\n",locationsMap:{default:{startLoc:{col:30,line:18},endLoc:{col:1,line:20},startBody:{col:30,line:18},endBody:{col:1,line:20}},"include-input-in-list":{startLoc:{col:41,line:44},endLoc:{col:1,line:52},startBody:{col:41,line:44},endBody:{col:1,line:52}},"options-string-list":{startLoc:{col:40,line:54},endLoc:{col:1,line:61},startBody:{col:40,line:54},endBody:{col:1,line:61}},"options-object-list":{startLoc:{col:40,line:63},endLoc:{col:1,line:70},startBody:{col:40,line:63},endBody:{col:1,line:70}},"options-converter":{startLoc:{col:39,line:72},endLoc:{col:1,line:79},startBody:{col:39,line:72},endBody:{col:1,line:79}},placeholder:{startLoc:{col:34,line:81},endLoc:{col:1,line:89},startBody:{col:34,line:81},endBody:{col:1,line:89}},"start-cmp-external":{startLoc:{col:39,line:91},endLoc:{col:1,line:99},startBody:{col:39,line:91},endBody:{col:1,line:99}},sort:{startLoc:{col:27,line:101},endLoc:{col:1,line:110},startBody:{col:27,line:101},endBody:{col:1,line:110}},"film-options":{startLoc:{col:27,line:112},endLoc:{col:1,line:135},startBody:{col:27,line:112},endBody:{col:1,line:135}},"render-option":{startLoc:{col:35,line:137},endLoc:{col:1,line:158},startBody:{col:35,line:137},endBody:{col:1,line:158}},"group-by":{startLoc:{col:30,line:160},endLoc:{col:1,line:171},startBody:{col:30,line:160},endBody:{col:1,line:171}},"options-with-disabled":{startLoc:{col:42,line:173},endLoc:{col:1,line:182},startBody:{col:42,line:173},endBody:{col:1,line:182}}}}},title:"Inputs/Inputs/Autocomplete/InputAutocompleteMultiple",component:_InputAutocompleteMultiple__WEBPACK_IMPORTED_MODULE_1__.A,tags:["autodocs"]},Default={args:{}},OPTIONS=[{title:"The Shawshank Redemption",year:1994,id:0},{title:"The Godfather",year:1972,id:1},{title:"The Godfather: Part II",year:1974,id:2},{title:"The Dark Knight",year:2008,id:3},{title:"12 Angry Men",year:1957,id:4},{title:"Schindler's List",year:1993,id:5},{title:"Pulp Fiction",year:1994,id:6}],render=args=>{var _args$value;const[selectedOptions,setSelectedOptions]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null!==(_args$value=args.value)&&void 0!==_args$value?_args$value:[]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputAutocompleteMultiple__WEBPACK_IMPORTED_MODULE_1__.A,_extends({},args,{value:selectedOptions,onChange:(e,optionIds)=>setSelectedOptions(optionIds)}))};render.displayName="render";const IncludeInputInList={args:{label:"Movie",includeInputInList:!0,options:OPTIONS,getOptionLabel:"title"},render},OptionsStringList={args:{label:"Movie",options:OPTIONS.map((o=>o.title)),value:OPTIONS.map((o=>o.title)).filter(((_,i)=>i%4==0))},render},OptionsObjectList={args:{label:"Movie",options:OPTIONS,getOptionLabel:"title"},render},OptionsConverter={args:{label:"Movie",options:OPTIONS,optionConverter:(item,index)=>({id:index,label:`${item.title} (${item.year})`,year:item.year})},render},Placeholder={args:{label:"Movie",options:OPTIONS,placeholder:"choose you movie name",optionConverter:(item,index)=>({id:index,label:`${item.title} (${item.year})`,year:item.year})},render},StartCmpExternal={args:{label:"Movie",options:OPTIONS,startCmpExternal:"Tv",optionConverter:(item,index)=>({id:index,label:`${item.title} (${item.year})`,year:item.year})},render},Sort={args:{label:"Movie",options:OPTIONS,sortBy:"year",sortDir:-1,optionConverter:(item,index)=>({id:index,label:`${item.title} (${item.year})`,year:item.year})},render},FilmOptions=()=>{const[selectedOption,setSelectedOption]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__.A,{spacing:4},["filled","standard","outlined"].map((variant=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputAutocompleteMultiple__WEBPACK_IMPORTED_MODULE_1__.A,{key:variant,label:"Movie",optionConverter:film=>({id:film.title,label:`${film.title} (${film.year})`,year:film.year}),options:_InputAutocomplete_mocks__WEBPACK_IMPORTED_MODULE_2__.S1,value:selectedOption,onChange:(e,option)=>setSelectedOption(option),variant}))))};FilmOptions.displayName="FilmOptions";const RenderOption={args:{id:"grouped-demo",label:"Choose a country",options:_InputAutocomplete_mocks__WEBPACK_IMPORTED_MODULE_2__.Xr,autoHighlight:!0,getOptionLabel:option=>option.label,renderOption:(props,option)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__.A,_extends({component:"li",sx:{"& > img":{mr:2,flexShrink:0}}},props),react__WEBPACK_IMPORTED_MODULE_0__.createElement("img",{loading:"lazy",width:"20",src:`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`,srcSet:`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`,alt:""}),option.label," (",option.code,") +",option.phone)},render},GroupBy={args:{id:"grouped categories",label:"Categories",options:_InputAutocomplete_mocks__WEBPACK_IMPORTED_MODULE_2__.Xx,groupBy:option=>option.firstLetter,sortBy:"title",getOptionLabel:option=>option.title,width:400},render},OptionsWithDisabled={args:{id:"grouped-demo",label:"Disabled options",options:_InputAutocomplete_mocks__WEBPACK_IMPORTED_MODULE_2__.Vw.slice(0).map(((option,index)=>({time:option,disabled:index%4==0}))),getOptionLabel:option=>option.time,width:200},render};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Default.parameters?.docs?.source}}},IncludeInputInList.parameters={...IncludeInputInList.parameters,docs:{...IncludeInputInList.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Movie',\n    includeInputInList: true,\n    options: OPTIONS,\n    getOptionLabel: 'title'\n  },\n  render\n}",...IncludeInputInList.parameters?.docs?.source}}},OptionsStringList.parameters={...OptionsStringList.parameters,docs:{...OptionsStringList.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Movie',\n    options: OPTIONS.map(o => o.title),\n    value: OPTIONS.map(o => o.title).filter((_, i) => i % 4 === 0)\n  },\n  render\n}",...OptionsStringList.parameters?.docs?.source}}},OptionsObjectList.parameters={...OptionsObjectList.parameters,docs:{...OptionsObjectList.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Movie',\n    options: OPTIONS,\n    getOptionLabel: 'title'\n  },\n  render\n}",...OptionsObjectList.parameters?.docs?.source}}},OptionsConverter.parameters={...OptionsConverter.parameters,docs:{...OptionsConverter.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Movie',\n    options: OPTIONS,\n    optionConverter: (item, index) => ({\n      id: index,\n      label: `${item.title} (${item.year})`,\n      year: item.year\n    })\n  },\n  render\n}",...OptionsConverter.parameters?.docs?.source}}},Placeholder.parameters={...Placeholder.parameters,docs:{...Placeholder.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Movie',\n    options: OPTIONS,\n    placeholder: 'choose you movie name',\n    optionConverter: (item, index) => ({\n      id: index,\n      label: `${item.title} (${item.year})`,\n      year: item.year\n    })\n  },\n  render\n}",...Placeholder.parameters?.docs?.source}}},StartCmpExternal.parameters={...StartCmpExternal.parameters,docs:{...StartCmpExternal.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Movie',\n    options: OPTIONS,\n    startCmpExternal: 'Tv',\n    optionConverter: (item, index) => ({\n      id: index,\n      label: `${item.title} (${item.year})`,\n      year: item.year\n    })\n  },\n  render\n}",...StartCmpExternal.parameters?.docs?.source}}},Sort.parameters={...Sort.parameters,docs:{...Sort.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Movie',\n    options: OPTIONS,\n    sortBy: 'year',\n    sortDir: -1,\n    optionConverter: (item, index) => ({\n      id: index,\n      label: `${item.title} (${item.year})`,\n      year: item.year\n    })\n  },\n  render\n}",...Sort.parameters?.docs?.source}}},FilmOptions.parameters={...FilmOptions.parameters,docs:{...FilmOptions.parameters?.docs,source:{originalSource:"() => {\n  const [selectedOption, setSelectedOption] = useState(null);\n  return <Stack spacing={4}>\n            {['filled', 'standard', 'outlined'].map(variant => <InputAutocompleteMultiple key={variant}\n    // getOptionLabel={(option) => option.title}\n    label=\"Movie\" optionConverter={film => ({\n      id: film.title,\n      label: `${film.title} (${film.year})`,\n      year: film.year\n    })} options={top100Films} value={selectedOption} onChange={(e, option) => setSelectedOption(option)} variant={variant} />)}\n        </Stack>;\n}",...FilmOptions.parameters?.docs?.source}}},RenderOption.parameters={...RenderOption.parameters,docs:{...RenderOption.parameters?.docs,source:{originalSource:'{\n  args: {\n    id: \'grouped-demo\',\n    label: \'Choose a country\',\n    options: countries,\n    autoHighlight: true,\n    getOptionLabel: option => option.label,\n    renderOption: (props, option) => <Box component="li" sx={{\n      \'& > img\': {\n        mr: 2,\n        flexShrink: 0\n      }\n    }} {...props}>\n                <img loading="lazy" width="20" src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`} srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`} alt="" />\n                {option.label} ({option.code}) +{option.phone}\n            </Box>\n  },\n  render\n}',...RenderOption.parameters?.docs?.source}}},GroupBy.parameters={...GroupBy.parameters,docs:{...GroupBy.parameters?.docs,source:{originalSource:"{\n  args: {\n    id: 'grouped categories',\n    label: 'Categories',\n    options: top100FilmsWithFirstLetters,\n    groupBy: option => option.firstLetter,\n    sortBy: 'title',\n    getOptionLabel: option => option.title,\n    width: 400\n  },\n  render\n}",...GroupBy.parameters?.docs?.source}}},OptionsWithDisabled.parameters={...OptionsWithDisabled.parameters,docs:{...OptionsWithDisabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    id: 'grouped-demo',\n    label: 'Disabled options',\n    options: timeSlots.slice(0).map((option, index) => ({\n      time: option,\n      disabled: index % 4 === 0\n    })),\n    getOptionLabel: option => option.time,\n    width: 200\n  },\n  render\n}",...OptionsWithDisabled.parameters?.docs?.source}}};const __namedExportsOrder=["Default","IncludeInputInList","OptionsStringList","OptionsObjectList","OptionsConverter","Placeholder","StartCmpExternal","Sort","FilmOptions","RenderOption","GroupBy","OptionsWithDisabled"]},"./src/components/_FIXED/Autocomplete/InputAutocompleteMultiple.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_icons_material__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@mui/icons-material/esm/Close.js"),_mui_icons_material__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@mui/icons-material/esm/Check.js"),_mui_material__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),_InputAutocomplete__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/_FIXED/Autocomplete/InputAutocomplete.tsx"),_Chip_Chip__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/_FIXED/Chip/Chip.tsx"),_Checkbox_Checkbox__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/_FIXED/Checkbox/Checkbox.tsx"),_utils_helpers__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/utils/helpers.ts");const _excluded=["checkboxStyle","chipProps","fieldId","filterSelectedOptions","getOptionLabel","limitTags","name","onChange","options","raiseSelectedToTop","readOnly","renderOption","value"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const InputAutocompleteMultiple=_ref=>{var _selectedOptions2;let{checkboxStyle=!0,chipProps={rounded:!1,endIcon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_5__.A,null)},fieldId="id",filterSelectedOptions=!1,getOptionLabel:_getOptionLabel="label",limitTags,name,onChange,options,raiseSelectedToTop,readOnly,renderOption:_renderOption,value:selectedOptions=[]}=_ref,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.includes(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.includes(o)||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);selectedOptions=[].concat(selectedOptions);const getOptionLabel="function"==typeof _getOptionLabel?_getOptionLabel:option=>(null==option?void 0:option[_getOptionLabel])||"",autocompleValues=null===(_selectedOptions2=selectedOptions)||void 0===_selectedOptions2?void 0:_selectedOptions2.map((optionId=>{var _options$find2;return null!==(_options$find2=null==options?void 0:options.find((option=>("object"==typeof option?option[fieldId]:option)===optionId)))&&void 0!==_options$find2?_options$find2:optionId}));return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputAutocomplete__WEBPACK_IMPORTED_MODULE_1__.A,_extends({value:autocompleValues,onChange:(event,options,action)=>{var _options$filter$map;const optionIds=null!==(_options$filter$map=null==options?void 0:options.filter((v=>(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_4__.O9)(v))).map((o=>{var _o$fieldId;return null!==(_o$fieldId=o[fieldId])&&void 0!==_o$fieldId?_o$fieldId:o})))&&void 0!==_options$filter$map?_options$filter$map:[];if(event.target.name=name,event.target.value=optionIds,"clear"===action){var _selectedOptions$filt,_selectedOptions;const newOptionsIds=null!==(_selectedOptions$filt=null===(_selectedOptions=selectedOptions)||void 0===_selectedOptions?void 0:_selectedOptions.filter((option=>null==option?void 0:option.disabled)).map((o=>{var _o$fieldId2;return null!==(_o$fieldId2=o[fieldId])&&void 0!==_o$fieldId2?_o$fieldId2:o})))&&void 0!==_selectedOptions$filt?_selectedOptions$filt:[];event.target.value=newOptionsIds,null==onChange||onChange(event,newOptionsIds)}else null==onChange||onChange(event,optionIds)},name,multiple:!0,raiseSelectedToTop,disableCloseOnSelect:!0,blurOnSelect:!1,limitTags,filterSelectedOptions,getOptionLabel,readOnly,options,renderOption:(props,option,{selected})=>{var _ref2,_renderOption2;const label=null!==(_ref2=null!==(_renderOption2=null==_renderOption?void 0:_renderOption(props,option,{selected}))&&void 0!==_renderOption2?_renderOption2:null==getOptionLabel?void 0:getOptionLabel(option))&&void 0!==_ref2?_ref2:option;return react__WEBPACK_IMPORTED_MODULE_0__.createElement("li",props,checkboxStyle?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Checkbox_Checkbox__WEBPACK_IMPORTED_MODULE_3__.A,{style:{marginRight:2},checked:selected,edge:"start"}):null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__.A,{sx:{width:"100%",display:"flex",justifyContent:"space-between"}},label,!checkboxStyle&&selected?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_7__.A,null):null))},renderTags:(value,getTagProps)=>value.filter((v=>(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_4__.O9)(v))).map((optionId=>{var _options$find;return null!==(_options$find=null==options?void 0:options.find((option=>("object"==typeof option?option[fieldId]:option)===optionId)))&&void 0!==_options$find?_options$find:optionId})).map(((option,index)=>{var _getOptionLabel2,_getTagProps;const optionLabel=null!==(_getOptionLabel2=null==getOptionLabel?void 0:getOptionLabel(option))&&void 0!==_getOptionLabel2?_getOptionLabel2:option.label,label="string"==typeof option?option:optionLabel||JSON.stringify(option);optionLabel||console.debug("getOptionLabel error: could not find label on option",option);const disabled=readOnly||null==option?void 0:option.disabled,onDelete=readOnly||null!=option&&option.disabled||null===(_getTagProps=getTagProps({index}))||void 0===_getTagProps?void 0:_getTagProps.onDelete;return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Chip_Chip__WEBPACK_IMPORTED_MODULE_2__.A,_extends({key:label},getTagProps({index}),"function"==typeof chipProps?chipProps(option):chipProps,{label,disabled,onDelete}))})).filter((v=>v))},props))};InputAutocompleteMultiple.displayName="InputAutocompleteMultiple",InputAutocompleteMultiple.displayName="InputAutocompleteMultiple";const __WEBPACK_DEFAULT_EXPORT__=InputAutocompleteMultiple;try{InputAutocompleteMultiple.displayName="InputAutocompleteMultiple",InputAutocompleteMultiple.__docgenInfo={description:"",displayName:"InputAutocompleteMultiple",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"any[]"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"(event: any, optionIds: (string | number)[]) => void"}},limitTags:{defaultValue:null,description:"",name:"limitTags",required:!1,type:{name:"number"}},checkboxStyle:{defaultValue:{value:"true"},description:"",name:"checkboxStyle",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Autocomplete/InputAutocompleteMultiple.tsx#InputAutocompleteMultiple"]={docgenInfo:InputAutocompleteMultiple.__docgenInfo,name:"InputAutocompleteMultiple",path:"src/components/_FIXED/Autocomplete/InputAutocompleteMultiple.tsx#InputAutocompleteMultiple"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/_FIXED/Checkbox/Checkbox.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>_FIXED_Checkbox_Checkbox});var react=__webpack_require__("./node_modules/react/index.js"),styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),Typography=__webpack_require__("./src/components/_FIXED/Typography/Typography.tsx"),FormControlLabel=__webpack_require__("./node_modules/@mui/material/FormControlLabel/FormControlLabel.js"),Checkbox=__webpack_require__("./node_modules/@mui/material/Checkbox/Checkbox.js"),FormHelperText=__webpack_require__("./node_modules/@mui/material/FormHelperText/FormHelperText.js");const _excluded=["ariaLabel","customColor","disabled","fontSize","helperText","inputProps","label","labelProps","wrapperStyle","error","labelPlacement","onChange","muiColor","readOnly","required","sxLabel","sx","textColor"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const Checkbox_styled_Checkbox=(0,styled.Ay)((props=>{const{ariaLabel,customColor,disabled,fontSize,helperText,inputProps,label="",labelProps,wrapperStyle,error,labelPlacement,onChange,muiColor,readOnly,required,sxLabel,sx,textColor}=props,rest=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.includes(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.includes(o)||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(props,_excluded);return react.createElement("span",{style:wrapperStyle},react.createElement(FormControlLabel.A,{required,disabled,labelPlacement,label:(0,react.isValidElement)(label)?label:react.createElement(Typography.A,_extends({sx:_objectSpread({fontSize,color:textColor},sxLabel)},labelProps),label),sx:{m:0,userSelect:"none",color:textColor},control:react.createElement(Checkbox.A,_extends({color:muiColor,onChange:readOnly?void 0:onChange,inputProps:_objectSpread(_objectSpread({},inputProps),{},{"aria-label":ariaLabel}),sx:_objectSpread(_objectSpread(_objectSpread({},sx),fontSize&&{"& .MuiSvgIcon-root":{fontSize}}),customColor&&{color:customColor,"&.Mui-checked":{color:customColor}})},rest))}),helperText&&react.createElement(FormHelperText.A,{error},helperText))}),{shouldForwardProp:prop=>![].includes(prop)})``;var helpers=__webpack_require__("./src/utils/helpers.ts"),SVGIcon=__webpack_require__("./src/components/_FIXED/SVGIcon/SVGIcon.tsx");const Checkbox_excluded=["color","textColor","value","checked","checkedIcon","icon","children","label","wrapperStyle","margin"];function Checkbox_extends(){return Checkbox_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},Checkbox_extends.apply(null,arguments)}function Checkbox_ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function Checkbox_objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?Checkbox_ownKeys(Object(t),!0).forEach((function(r){Checkbox_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Checkbox_ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function Checkbox_defineProperty(e,r,t){return(r=function Checkbox_toPropertyKey(t){var i=function Checkbox_toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const Checkbox_Checkbox=props=>{const{color,textColor:_textColor,value,checked,checkedIcon,icon,children,label,wrapperStyle:_wrapperStyle,margin}=props,rest=function Checkbox_objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function Checkbox_objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.includes(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.includes(o)||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(props,Checkbox_excluded),[customColor,muiColor]=(0,helpers.Es)(color),[textColor]=(0,helpers.Es)(_textColor),wrapperStyle=Checkbox_objectSpread(Checkbox_objectSpread({},_wrapperStyle),(0,helpers.O9)(margin)&&{margin});return react.createElement(Checkbox_styled_Checkbox,Checkbox_extends({checked:null!=value?value:checked,checkedIcon:"string"==typeof checkedIcon?react.createElement(SVGIcon.A,null,checkedIcon):checkedIcon,customColor:muiColor?void 0:customColor,icon:"string"==typeof icon?react.createElement(SVGIcon.A,null,icon):icon,label:null!=label?label:children,muiColor,textColor,wrapperStyle},rest))};Checkbox_Checkbox.displayName="Checkbox",Checkbox_Checkbox.displayName="Checkbox";const _FIXED_Checkbox_Checkbox=Checkbox_Checkbox;try{Checkbox_Checkbox.displayName="Checkbox",Checkbox_Checkbox.__docgenInfo={description:"",displayName:"Checkbox",props:{checked:{defaultValue:null,description:"",name:"checked",required:!1,type:{name:"boolean"}},checkedIcon:{defaultValue:null,description:"",name:"checkedIcon",required:!1,type:{name:"IconType"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},fontSize:{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"string | number"}},helperText:{defaultValue:null,description:"",name:"helperText",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"",name:"icon",required:!1,type:{name:"IconType"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"ElementType"}},labelProps:{defaultValue:null,description:"",name:"labelProps",required:!1,type:{name:"TypographyProps"}},labelPlacement:{defaultValue:null,description:"",name:"labelPlacement",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"top"'},{value:'"start"'},{value:'"end"'}]}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"(event: ChangeEvent<HTMLInputElement>, checked: boolean) => void"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'}]}},wrapperStyle:{defaultValue:null,description:"",name:"wrapperStyle",required:!1,type:{name:"any"}},margin:{defaultValue:null,description:"",name:"margin",required:!1,type:{name:"string | number"}},sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"SxProps"}},sxLabel:{defaultValue:null,description:"",name:"sxLabel",required:!1,type:{name:"SxProps"}},textColor:{defaultValue:null,description:"",name:"textColor",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Checkbox/Checkbox.tsx#Checkbox"]={docgenInfo:Checkbox_Checkbox.__docgenInfo,name:"Checkbox",path:"src/components/_FIXED/Checkbox/Checkbox.tsx#Checkbox"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/_FIXED/Typography/Typography.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_Text__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/_FIXED/Typography/Text.tsx"),_TextEllipsis__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/_FIXED/Typography/TextEllipsis.tsx"),_utils_helpers__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/utils/helpers.ts");const Typography=props=>(props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"autoWidth",!0),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"component","span"),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"dynamicEllipsis",!0),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"isEllipsis",!1),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"showTooltipOnEllipsis",!0),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"size","inherit"),[(props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"tooltip",!1)).showTooltipOnEllipsis,props.onEllipsisChange].some((v=>v))?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_TextEllipsis__WEBPACK_IMPORTED_MODULE_2__.A,props):react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Text__WEBPACK_IMPORTED_MODULE_1__.A,props));Typography.displayName="Typography";const __WEBPACK_DEFAULT_EXPORT__=Typography;try{Typography.displayName="Typography",Typography.__docgenInfo={description:"",displayName:"Typography",props:{alignCenter:{defaultValue:null,description:"",name:"alignCenter",required:!1,type:{name:"boolean"}},alignJustify:{defaultValue:null,description:"",name:"alignJustify",required:!1,type:{name:"boolean"}},alignLeft:{defaultValue:null,description:"",name:"alignLeft",required:!1,type:{name:"boolean"}},alignRight:{defaultValue:null,description:"",name:"alignRight",required:!1,type:{name:"boolean"}},autoWidth:{defaultValue:null,description:"",name:"autoWidth",required:!1,type:{name:"boolean"}},bgColor:{defaultValue:null,description:"",name:"bgColor",required:!1,type:{name:"string"}},bold:{defaultValue:null,description:"",name:"bold",required:!1,type:{name:"string | boolean"}},border:{defaultValue:null,description:"",name:"border",required:!1,type:{name:"string | boolean"}},charsCase:{defaultValue:null,description:"",name:"charsCase",required:!1,type:{name:"enum",value:[{value:'"upper"'},{value:'"lower"'},{value:'"capital"'}]}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"string"}},followCursor:{defaultValue:null,description:"",name:"followCursor",required:!1,type:{name:"boolean"}},fullWidth:{defaultValue:null,description:"",name:"fullWidth",required:!1,type:{name:"boolean"}},gutterBottom:{defaultValue:null,description:"",name:"gutterBottom",required:!1,type:{name:"boolean"}},html:{defaultValue:null,description:"",name:"html",required:!1,type:{name:"boolean"}},italic:{defaultValue:null,description:"",name:"italic",required:!1,type:{name:"boolean"}},multiline:{defaultValue:null,description:"",name:"multiline",required:!1,type:{name:"boolean"}},justifyContent:{defaultValue:null,description:"",name:"justifyContent",required:!1,type:{name:"string"}},lineHeight:{defaultValue:null,description:"",name:"lineHeight",required:!1,type:{name:"string | number"}},link:{defaultValue:null,description:"",name:"link",required:!1,type:{name:"string"}},monospace:{defaultValue:null,description:"",name:"monospace",required:!1,type:{name:"boolean"}},paragraph:{defaultValue:null,description:"",name:"paragraph",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"string | number"}},strike:{defaultValue:null,description:"",name:"strike",required:!1,type:{name:"boolean"}},sub:{defaultValue:null,description:"",name:"sub",required:!1,type:{name:"boolean"}},sup:{defaultValue:null,description:"",name:"sup",required:!1,type:{name:"boolean"}},textDirection:{defaultValue:null,description:"",name:"textDirection",required:!1,type:{name:"enum",value:[{value:'"ltr"'},{value:'"rtl"'}]}},tooltip:{defaultValue:null,description:"",name:"tooltip",required:!1,type:{name:"string | boolean"}},tooltipPlacement:{defaultValue:null,description:"",name:"tooltipPlacement",required:!1,type:{name:"enum",value:[{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"bottom"'},{value:'"left-end"'},{value:'"left-start"'},{value:'"left"'},{value:'"right-end"'},{value:'"right-start"'},{value:'"right"'},{value:'"top-end"'},{value:'"top-start"'},{value:'"top"'}]}},underline:{defaultValue:null,description:"",name:"underline",required:!1,type:{name:"boolean"}},whiteSpace:{defaultValue:null,description:"",name:"whiteSpace",required:!1,type:{name:"string"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"string | number"}},dynamicEllipsis:{defaultValue:null,description:"",name:"dynamicEllipsis",required:!1,type:{name:"true"}},noWrap:{defaultValue:null,description:"",name:"noWrap",required:!1,type:{name:"boolean"}},onEllipsisChange:{defaultValue:null,description:"",name:"onEllipsisChange",required:!1,type:{name:"(isEllipsis: boolean) => void"}},rows:{defaultValue:null,description:"",name:"rows",required:!1,type:{name:"number"}},showTooltipOnEllipsis:{defaultValue:null,description:"",name:"showTooltipOnEllipsis",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Typography/Typography.tsx#Typography"]={docgenInfo:Typography.__docgenInfo,name:"Typography",path:"src/components/_FIXED/Typography/Typography.tsx#Typography"})}catch(__react_docgen_typescript_loader_error){}}}]);