{"version":3,"file":"5850.42c9eeda.iframe.bundle.js","mappings":";;;AAwBA;;;;;;;AAUA;AAGA;;;;;;;;;;;;AAwBA;;;;;AAqCA","sources":["webpack://mui-simple/./src/components/_FIXED/Menu/Menu.styled.tsx"],"sourcesContent":["import React from 'react';\nimport type { ComponentType, PropsWithChildren } from 'react';\nimport {\n    Menu as MuiMenu,\n    MenuList as MuiMenuList,\n    MenuItem as MuiMenuItem,\n    ListItemIcon as MuiListItemIcon,\n    ListItemText as MuiListItemText,\n    Box,\n} from '@mui/material';\nimport type { BoxProps, MenuProps } from '@mui/material';\nimport { styled, css } from '@mui/material/styles';\n\nexport const ContextMenuWrapper: any = styled(Box)`\n    width: 100%;\n    height: 100%;\n`;\n\ninterface ManuWrapperStyledProps {\n    arrow?: boolean;\n    [key: string]: any;\n}\ntype ManuWrapperStyledPropsType = ManuWrapperStyledProps & BoxProps & any;\n\nexport const MenuWrapper = styled(Box, {\n    label: 'arrow-test',\n    shouldForwardProp: (propName: string) => !['arrow'].includes(propName),\n})<ManuWrapperStyledPropsType>`\n    position: relative;\n    overflow: visible;\n    margin-top: 1.5px;\n    width: 0;\n\n    &::before {\n        ${(props: any) =>\n            props.arrow &&\n            css`\n                background-color: ${props.theme.palette.background.paper};\n                content: '';\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 14px;\n                width: 10px;\n                height: 10px;\n                transform: translateY(-50%) rotate(45deg);\n                z-index: 1;\n            `}\n    }\n` as ComponentType<ManuWrapperStyledPropsType>;\n\ninterface ManuStyledProps {\n    height?: string | number;\n    width?: string | number;\n    maxHeight?: string | number;\n    elevation?: number;\n    onClick?: (event: any) => void;\n    [key: string]: any;\n}\ntype MenuStyledPropsType = PropsWithChildren<Omit<MenuProps, 'onClick'> & ManuStyledProps & any>;\n\nexport const Menu = styled(\n    ({\n        height,\n        width,\n        maxHeight,\n        elevation,\n        ...props\n    }: {\n        height?: string | number;\n        width?: string | number;\n        maxHeight?: string | number;\n        elevation?: number;\n        [key: string]: any;\n    }) => (\n        <MuiMenu\n            open\n            PaperProps={{\n                elevation,\n                sx: {\n                    height,\n                    width,\n                    maxHeight,\n                    overflowY: 'auto',\n                    '& > .MuiList-root': { pt: 0, pb: 0 },\n                    '& .MuiAvatar-root': { width: 32, height: 32, ml: -0.5, mr: 1 },\n                },\n            }}\n            {...props}\n        />\n    )\n)<MenuStyledPropsType>`\n    max-width: 100%;\n    & .MuiList-root:focus-visible {\n        outline: none;\n    }\n` as ComponentType<MenuStyledPropsType>;\n\nexport const MenuList = MuiMenuList;\nexport const MenuItem = MuiMenuItem;\nexport const ListItemIcon = MuiListItemIcon;\nexport const ListItemText = MuiListItemText;\n"],"names":[],"sourceRoot":""}