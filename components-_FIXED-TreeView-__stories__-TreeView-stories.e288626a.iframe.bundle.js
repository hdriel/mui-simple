"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[3231],{"./src/components/_FIXED/TreeView/__stories__/TreeView.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicTreeView:()=>BasicTreeView,CustomItem:()=>CustomItem,Default:()=>Default,GmailCloneStyles:()=>GmailCloneStyles,IndentBorderStyles:()=>IndentBorderStyles,MultiSelection:()=>MultiSelection,__namedExportsOrder:()=>__namedExportsOrder,default:()=>TreeView_stories});var react=__webpack_require__("./node_modules/react/index.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),colorManipulator=__webpack_require__("./node_modules/@mui/system/esm/colorManipulator.js"),TreeView=__webpack_require__("./node_modules/@mui/lab/TreeView/TreeView.js"),TreeItem=__webpack_require__("./node_modules/@mui/lab/TreeItem/TreeItem.js"),treeItemClasses=__webpack_require__("./node_modules/@mui/lab/TreeItem/treeItemClasses.js"),emotion_react_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");const TreeView_styled_TreeView=(0,styled.Ay)(TreeView.A,{shouldForwardProp:propName=>!["maxWidth","height"].includes(propName)})`
    height: ${props=>props.height};
    flex-grow: 1;
    max-width: ${props=>props.maxWidth?`${props.maxWidth}px`:void 0};
    overflow-y: auto;
    overflow-x: hidden;
`,TreeView_styled_TreeItem=TreeItem.A,LabelIconTreeItemStyled=(0,styled.Ay)(TreeItem.A)((({theme})=>({color:theme.palette.text.secondary,[`& .${treeItemClasses.A.content}`]:{width:"auto",color:theme.palette.text.secondary,borderTopRightRadius:theme.spacing(2),borderBottomRightRadius:theme.spacing(2),paddingRight:theme.spacing(1),fontWeight:theme.typography.fontWeightMedium,"&.Mui-expanded":{fontWeight:theme.typography.fontWeightRegular},"&:hover":{backgroundColor:theme.palette.action.hover},"&.Mui-focused, &.Mui-selected, &.Mui-selected.Mui-focused":{backgroundColor:`var(--tree-view-bg-color, ${theme.palette.action.selected})`,color:"var(--tree-view-color)"},[`& .${treeItemClasses.A.label}`]:{fontWeight:"inherit",color:"inherit"}},[`& .${treeItemClasses.A.group}`]:{marginLeft:0,[`& .${treeItemClasses.A.content}`]:{paddingLeft:theme.spacing(2)}}}))),IndentBorderTreeItemStyled=(0,styled.Ay)(TreeItem.A)((({theme})=>({[`& .${treeItemClasses.A.iconContainer}`]:{"& .close":{opacity:.3}},[`& .${treeItemClasses.A.group}`]:{marginLeft:15,paddingLeft:18,borderLeft:`1px dashed ${(0,colorManipulator.X4)(theme.palette.text.primary,.4)}`}}))),TreeItemStyled=(0,styled.Ay)(TreeItem.A,{shouldForwardProp:propName=>!["bordered","closeIconFade"].includes(propName)})`
    ${function closeIconFade(props){return props.closeIconFade?emotion_react_browser_esm.AH`
        & .${treeItemClasses.A.iconContainer} {
            & .close {
                opacity: 0.3;
            }
        }
    `:emotion_react_browser_esm.AH``}};
    ${function borderedStyles(props){return props.bordered?emotion_react_browser_esm.AH`
        & .${treeItemClasses.A.group} {
            margin-left: 15px;
            padding-left: 18px;
            border-left: 1px dashed ${(0,colorManipulator.X4)(props.theme.palette.text.primary,.4)};
        }
    `:emotion_react_browser_esm.AH``}};
    ${function selectedColor(props){return emotion_react_browser_esm.AH`
        color: ${props.theme.palette.text.secondary};
        & .${treeItemClasses.A.content} {
            color: ${props.theme.palette.text.secondary};

            &.Mui-focused,
            &.Mui-selected,
            &.Mui-selected.Mui-focused {
                color: var(--tree-view-color);
                background-color: var(--tree-view-bg-color, ${props.theme.palette.action.selected}});
            }

            &:hover {
                background-color: ${props.theme.palette.action.hover};
            }
        }
    `}};
    ${function edgeCorners(props){return props.edgeCorners?emotion_react_browser_esm.AH`
        & .${treeItemClasses.A.content} {
            border-top-right-radius: ${props.theme.spacing(2)};
            border-bottom-right-radius: ${props.theme.spacing(2)};
        }
    `:emotion_react_browser_esm.AH``}};

    & .${treeItemClasses.A.content} {
        width: auto;

        padding-right: ${props=>props.theme.spacing(1)};
        font-weight: ${props=>props.theme.typography.fontWeightMedium};

        &.Mui-expanded {
            font-weight: ${props=>props.theme.typography.fontWeightRegular};
        }

        & .${treeItemClasses.A.label} {
            font-weight: inherit;
            color: inherit;
        }
    }

    & .${treeItemClasses.A.group} {
        margin-left: 0;

        & .${treeItemClasses.A.content} {
            padding-left: ${props=>props.theme.spacing(2)};
        }
    }
`;var Typography=__webpack_require__("./src/components/_FIXED/Typography/Typography.tsx"),SVGIcon=__webpack_require__("./src/components/_FIXED/SVGIcon/SVGIcon.tsx"),ArrowDropDown=__webpack_require__("./node_modules/@mui/icons-material/esm/ArrowDropDown.js"),ArrowRight=__webpack_require__("./node_modules/@mui/icons-material/esm/ArrowRight.js");const LabelIconTreeItem=(0,react.forwardRef)(((props,ref)=>{const{bgColor,color,icon:_labelIcon,info:labelInfo,label:labelText,...other}=props??{},labelIcon="string"==typeof _labelIcon?react.createElement(SVGIcon.A,null,_labelIcon):_labelIcon;return props&&react.createElement(LabelIconTreeItemStyled,{ref,...other,label:react.createElement(Box.A,{sx:{display:"flex",alignItems:"center",p:.5,pr:0}},labelIcon&&react.createElement(Box.A,{color:"inherit",sx:{mr:1,display:"flex",alignItems:"center"}},labelIcon),labelText&&react.createElement(Typography.A,{variant:"body2",sx:{fontWeight:"inherit",flexGrow:1}},labelText),labelInfo&&react.createElement(Typography.A,{variant:"caption",color:"inherit"},labelInfo)),style:{"--tree-view-color":color,"--tree-view-bg-color":bgColor}})})),TreeItemComponents_LabelIconTreeItem=LabelIconTreeItem,LabelIconTreeItemIcons={collapseIcon:react.createElement(ArrowDropDown.A,null),expandIcon:react.createElement(ArrowRight.A,null),endIcon:react.createElement("div",{style:{width:24}})};LabelIconTreeItem.__docgenInfo={description:"",methods:[],displayName:"LabelIconTreeItem"};var SvgIcon=__webpack_require__("./node_modules/@mui/material/SvgIcon/SvgIcon.js");function MinusSquare(props){return react.createElement(SvgIcon.A,{fontSize:"inherit",style:{width:14,height:14},...props},react.createElement("path",{d:"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z"}))}function PlusSquare(props){return react.createElement(SvgIcon.A,{fontSize:"inherit",style:{width:14,height:14},...props},react.createElement("path",{d:"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z"}))}function CloseSquare(props){return react.createElement(SvgIcon.A,{className:"close",fontSize:"inherit",style:{width:14,height:14},...props},react.createElement("path",{d:"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z"}))}MinusSquare.__docgenInfo={description:"",methods:[],displayName:"MinusSquare"},PlusSquare.__docgenInfo={description:"",methods:[],displayName:"PlusSquare"},CloseSquare.__docgenInfo={description:"",methods:[],displayName:"CloseSquare"};const IndentBorderTreeItem=(0,react.forwardRef)(((props,ref)=>{const{bgColor,color,icon,label,...other}=props??{};return props&&react.createElement(IndentBorderTreeItemStyled,{ref,...other,label,style:{"--tree-view-color":color,"--tree-view-bg-color":bgColor}})})),TreeItemComponents_IndentBorderTreeItem=IndentBorderTreeItem,IndentBorderTreeItemIcons={collapseIcon:react.createElement(MinusSquare,null),expandIcon:react.createElement(PlusSquare,null),endIcon:react.createElement(CloseSquare,null)};IndentBorderTreeItem.__docgenInfo={description:"",methods:[],displayName:"IndentBorderTreeItem"};var Button=__webpack_require__("./src/components/_FIXED/Button/Button.tsx"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),Collapse=__webpack_require__("./node_modules/@mui/material/Collapse/Collapse.js"),react_spring_web_modern=__webpack_require__("./node_modules/@react-spring/web/dist/react-spring_web.modern.mjs");function TransitionComponent(props){const style=(0,react_spring_web_modern.zh)({from:{opacity:0,transform:"translate3d(0,-20px,0)"},to:{opacity:props.in?1:0,transform:`translate3d(0,${props.in?0:20}px,0)`}});return react.createElement(react_spring_web_modern.CS.div,{style},react.createElement(Collapse.A,{...props}))}TransitionComponent.propTypes={in:prop_types_default().bool};const TreeView_transition=TransitionComponent;TransitionComponent.__docgenInfo={description:"",methods:[],displayName:"TransitionComponent",props:{in:{description:"Show the component; triggers the enter or exit states",type:{name:"bool"},required:!1}}};var useTreeItem=__webpack_require__("./node_modules/@mui/lab/TreeItem/useTreeItem.js");const TreeView_TreeView=({borderedStyles=!1,closeIconFadeStyles=!1,collapseIcon:_collapseIcon="ExpandMore",CustomComponent,edgeCornersStyles=!1,endIcon:_endIcon,expandedIds,expandIcon:_expandIcon="ChevronRight",externalItemProps={},fieldId,fieldLabel,maxWidth,multiSelect,nodes=[],onExpanded,onSelected,selectedIds,TransitionComponent=TreeView_transition,TreeItemComponent=TreeView_styled_TreeItem,useStyle,...props})=>{const collapseIcon="string"==typeof _collapseIcon?react.createElement(SVGIcon.A,null,_collapseIcon):_collapseIcon,expandIcon="string"==typeof _expandIcon?react.createElement(SVGIcon.A,null,_expandIcon):_expandIcon,endIcon="string"==typeof _endIcon?react.createElement(SVGIcon.A,null,_endIcon):_endIcon,handleToggle=onExpanded?(event,nodeIds)=>onExpanded([].concat(nodeIds)):void 0,handleSelect=onSelected?(event,nodeIds)=>onSelected([].concat(nodeIds)):void 0,CustomTreeItem=CustomComponent?function withTreeViewItem(Component,TreeItemComponent=TreeView_styled_TreeItem,externalItemProps={}){const CustomTreeItemChild=(0,react.forwardRef)(((props,ref)=>{const{nodeId,TransitionComponent,children,closeIconFade,closeIconFadeStyles,borderedStyles,edgeCornersStyles,...restProps}=props??{},{disabled,expanded,selected,focused,handleExpansion,handleSelection,preventSelection}=(0,useTreeItem.A)(nodeId);return props&&react.createElement(TreeItemComponent,{key:nodeId,ref,nodeId,TransitionComponent,closeIconFade,bordered:borderedStyles,closeIconFadeStyles,borderedStyles,edgeCornersStyles,label:react.createElement(Component,{...restProps,...externalItemProps,nodeId,itemDisabled:disabled,itemExpanded:expanded,itemSelected:selected,itemFocused:focused,onExpandedItem:event=>handleExpansion?.(event),onSelectedItem:event=>handleSelection?.(event),preventSelectItem:preventSelection}),style:{...restProps.color&&{"--tree-view-color":restProps.color},...restProps.bgColor&&{"--tree-view-bg-color":restProps.bgColor}}},[].concat(children??[])?.map((({props:treeItemProps},index)=>react.createElement(CustomTreeItemChild,{key:treeItemProps?.nodeId??index,...treeItemProps}))))}));return function renderTree({children,...props}){return react.createElement(CustomTreeItemChild,{...props},[].concat(children??[])?.map((({props:treeItemProps})=>renderTree(treeItemProps))))}}(CustomComponent,TreeItemStyled,externalItemProps):TreeItemComponent,renderTree=nodes=>nodes?.map((({id,label,...node})=>react.createElement(CustomTreeItem,{key:node[fieldId]??id,id:node[fieldId]??id,nodeId:node[fieldId]??id,label:node[fieldLabel]??label,TransitionComponent,...node},renderTree(node.children))));return react.createElement(Box.A,null,react.createElement(TreeView_styled_TreeView,{defaultCollapseIcon:collapseIcon,defaultExpandIcon:expandIcon,defaultEndIcon:endIcon,multiSelect,expanded:expandedIds,selected:selectedIds,onNodeToggle:handleToggle,onNodeSelect:handleSelect,maxWidth,...props},CustomTreeItem&&renderTree(nodes)))},_FIXED_TreeView_TreeView=TreeView_TreeView;TreeView_TreeView.__docgenInfo={description:"",methods:[],displayName:"TreeView",props:{borderedStyles:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},closeIconFadeStyles:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},collapseIcon:{required:!1,tsType:{name:"union",raw:"IconName | ReactNode | ReactElement",elements:[{name:"unknown[number]",raw:"(typeof allIcons)[number]"},{name:"ReactNode"},{name:"ReactElement"}]},description:"",defaultValue:{value:"'ExpandMore'",computed:!1}},CustomComponent:{required:!1,tsType:{name:"union",raw:"ElementType | string",elements:[{name:"union",raw:"ReactElement | ReactNode",elements:[{name:"ReactElement"},{name:"ReactNode"}]},{name:"string"}]},description:""},edgeCornersStyles:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},endIcon:{required:!1,tsType:{name:"union",raw:"IconName | ReactNode | ReactElement",elements:[{name:"unknown[number]",raw:"(typeof allIcons)[number]"},{name:"ReactNode"},{name:"ReactElement"}]},description:""},expandedIds:{required:!1,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:""},expandIcon:{required:!1,tsType:{name:"union",raw:"IconName | ReactNode | ReactElement",elements:[{name:"unknown[number]",raw:"(typeof allIcons)[number]"},{name:"ReactNode"},{name:"ReactElement"}]},description:"",defaultValue:{value:"'ChevronRight'",computed:!1}},externalItemProps:{required:!1,tsType:{name:"Record",elements:[{name:"string"},{name:"any"}],raw:"Record<string, any>"},description:"",defaultValue:{value:"{}",computed:!1}},fieldId:{required:!1,tsType:{name:"string"},description:""},fieldLabel:{required:!1,tsType:{name:"string"},description:""},maxWidth:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:""},multiSelect:{required:!1,tsType:{name:"boolean"},description:""},nodes:{required:!1,tsType:{name:"Array",elements:[{name:"TreeViewNodeProps"}],raw:"TreeViewNodeProps[]"},description:"",defaultValue:{value:"[]",computed:!1}},onExpanded:{required:!1,tsType:{name:"signature",type:"function",raw:"(expandedIds: string[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"string"}],raw:"string[]"},name:"expandedIds"}],return:{name:"void"}}},description:""},onSelected:{required:!1,tsType:{name:"signature",type:"function",raw:"(selectedItemIds: string[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"string"}],raw:"string[]"},name:"selectedItemIds"}],return:{name:"void"}}},description:""},selectedIds:{required:!1,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:""},TransitionComponent:{required:!1,tsType:{name:"union",raw:"ElementType | string",elements:[{name:"union",raw:"ReactElement | ReactNode",elements:[{name:"ReactElement"},{name:"ReactNode"}]},{name:"string"}]},description:"",defaultValue:{value:"function TransitionComponent(props): React.ReactNode | React.ReactElement {\n    const style = useSpring({\n        from: {\n            opacity: 0,\n            transform: 'translate3d(0,-20px,0)',\n        },\n        to: {\n            opacity: props.in ? 1 : 0,\n            transform: `translate3d(0,${props.in ? 0 : 20}px,0)`,\n        },\n    });\n\n    return (\n        <animated.div style={style}>\n            <Collapse {...props} />\n        </animated.div>\n    );\n}",computed:!1}},TreeItemComponent:{required:!1,tsType:{name:"union",raw:"ElementType | string",elements:[{name:"union",raw:"ReactElement | ReactNode",elements:[{name:"ReactElement"},{name:"ReactNode"}]},{name:"string"}]},description:"",defaultValue:{value:"TreeItem",computed:!0}},useStyle:{required:!1,tsType:{name:"union",raw:"'default' | 'LabelIcon' | 'IndentBorder'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'LabelIcon'"},{name:"literal",value:"'IndentBorder'"}]},description:""}}};const TreeView_stories={title:"Lab/TreeView",component:_FIXED_TreeView_TreeView,tags:["autodocs"]},Default={args:{}},BasicTreeView={args:{nodes:[{id:"1",label:"Applications",children:[{id:"2",label:"Calendar"}]},{id:"5",label:"Documents",children:[{id:"10",label:"OSS"},{id:"6",label:"MUI",children:[{id:"8",label:"index.js"}]}]}]}},MultiSelection={args:{expandedIds:["3"],selectedIds:[],multiSelect:!0,nodes:[{id:"1",label:"Applications",children:[{id:"2",label:"Calendar"},{id:"3",label:"Chrome"},{id:"4",label:"Webstorm"}]},{id:"5",label:"Documents",children:[{id:"6",label:"MUI",children:[{id:"7",label:"src",children:[{id:"8",label:"index.js"},{id:"9",label:"tree-view.js"}]}]}]}]},render:args=>{const[expanded,setExpanded]=(0,react.useState)(args.expandedIds),[selected,setSelected]=(0,react.useState)(args.selectedIds);return react.createElement(Box.A,{sx:{height:270,flexGrow:1,maxWidth:400,overflowY:"auto"}},react.createElement(Box.A,{sx:{mb:1}},react.createElement(Button.A,{onClick:()=>{setExpanded((oldExpanded=>0===oldExpanded.length?["1","5","6","7"]:[]))}},0===expanded.length?"Expand all":"Collapse all"),react.createElement(Button.A,{onClick:()=>{setSelected((oldSelected=>0===oldSelected.length?["1","2","3","4","5","6","7","8","9"]:[]))}},0===selected.length?"Select all":"Unselect all")),react.createElement(_FIXED_TreeView_TreeView,{...args,expandedIds:expanded,selectedIds:selected,onExpanded:setExpanded,onSelected:setSelected,multiSelect:!0}))}},GmailCloneStyles={args:{expandedIds:["3"],selectedIds:[],nodes:[{id:"1",label:"All Mail",icon:"Mail"},{id:"2",label:"Trash",icon:"Delete"},{id:"3",label:"Categories",icon:"Label",children:[{id:"5",label:"Social",icon:"SupervisorAccount",info:"90",color:"#1a73e8",bgColor:"#e8f0fe"},{id:"6",label:"Updates",icon:"Info",info:"2,294",color:"#e3742f",bgColor:"#fcefe3"},{id:"7",label:"Forums",icon:"Forum",info:"3,566",color:"#a250f5",bgColor:"#f3e8fd"},{id:"8",label:"Promotions",icon:"LocalOffer",info:"733",color:"#3c8039",bgColor:"#e6f4ea"}]},{id:"4",label:"History",icon:"Label"}]},render:args=>{const[expanded,setExpanded]=(0,react.useState)(args.expandedIds),[selected,setSelected]=(0,react.useState)(args.selectedIds);return react.createElement(_FIXED_TreeView_TreeView,{...args,expandedIds:expanded,selectedIds:selected,onExpanded:setExpanded,onSelected:setSelected,TreeItemComponent:TreeItemComponents_LabelIconTreeItem,...LabelIconTreeItemIcons})}},IndentBorderStyles={args:{expandedIds:["1"],selectedIds:[],nodes:[{id:"1",label:"Main",children:[{id:"2",label:"Hello"},{id:"3",label:"Subtree with children",children:[{id:"6",label:"Hello"},{id:"7",label:"Sub-subtree with children",children:[{id:"9",label:"Child 1"},{id:"10",label:"Child 2"},{id:"11",label:"Child 3"}]},{id:"8",label:"Hello"}]},{id:"4",label:"World"},{id:"5",label:"Something something"}]}]},render:args=>{const[expanded,setExpanded]=(0,react.useState)(args.expandedIds),[selected,setSelected]=(0,react.useState)(args.selectedIds);return react.createElement(_FIXED_TreeView_TreeView,{...args,expandedIds:expanded,selectedIds:selected,onExpanded:setExpanded,onSelected:setSelected,TreeItemComponent:TreeItemComponents_IndentBorderTreeItem,...IndentBorderTreeItemIcons})}},StyledTreeItemContent=props=>{const{nodeId,icon:labelIcon,info:labelInfo,label:labelText,selected}=props??{};return props&&react.createElement(Box.A,{sx:{display:"flex",alignItems:"center",p:.5,pr:0}},labelIcon&&react.createElement(Box.A,{color:"inherit",sx:{mr:1,display:"flex",alignItems:"center"}},react.createElement(SVGIcon.A,{muiIconName:labelIcon},labelIcon)),labelText&&react.createElement(Typography.A,{variant:"body2",sx:{fontWeight:"inherit",flexGrow:1,bgColor:selected?"red":void 0}},labelText," (",nodeId,")"),labelInfo&&react.createElement(Typography.A,{variant:"caption",color:"inherit"},labelInfo))},CustomItem={args:{expandedIds:["1"],selectedIds:[],nodes:[{id:"1",label:"Main",icon:"Home",info:"test",children:[{id:"2",label:"Hello"},{id:"3",label:"Subtree with children",children:[{id:"6",label:"Hello"},{id:"7",label:"Sub-subtree with children",children:[{id:"9",label:"Child 1"},{id:"10",label:"Child 2"},{id:"11",label:"Child 3"}]},{id:"8",label:"Hello"}]},{id:"4",label:"World"},{id:"5",label:"Something something"}]}]},render:args=>{const[expanded,setExpanded]=(0,react.useState)(args.expandedIds),[selected,setSelected]=(0,react.useState)(args.selectedIds);return react.createElement(_FIXED_TreeView_TreeView,{...args,expandedIds:expanded,selectedIds:selected,onExpanded:setExpanded,onSelected:setSelected,TransitionComponent:null,ItemComponent:StyledTreeItemContent})}},__namedExportsOrder=["Default","BasicTreeView","MultiSelection","GmailCloneStyles","IndentBorderStyles","CustomItem"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Default.parameters?.docs?.source}}},BasicTreeView.parameters={...BasicTreeView.parameters,docs:{...BasicTreeView.parameters?.docs,source:{originalSource:"{\n  args: {\n    nodes: [{\n      id: '1',\n      label: 'Applications',\n      children: [{\n        id: '2',\n        label: 'Calendar'\n      }]\n    }, {\n      id: '5',\n      label: 'Documents',\n      children: [{\n        id: '10',\n        label: 'OSS'\n      }, {\n        id: '6',\n        label: 'MUI',\n        children: [{\n          id: '8',\n          label: 'index.js'\n        }]\n      }]\n    }]\n  }\n}",...BasicTreeView.parameters?.docs?.source}}},MultiSelection.parameters={...MultiSelection.parameters,docs:{...MultiSelection.parameters?.docs,source:{originalSource:"{\n  args: {\n    expandedIds: ['3'],\n    selectedIds: [],\n    multiSelect: true,\n    nodes: [{\n      id: '1',\n      label: 'Applications',\n      children: [{\n        id: '2',\n        label: 'Calendar'\n      }, {\n        id: '3',\n        label: 'Chrome'\n      }, {\n        id: '4',\n        label: 'Webstorm'\n      }]\n    }, {\n      id: '5',\n      label: 'Documents',\n      children: [{\n        id: '6',\n        label: 'MUI',\n        children: [{\n          id: '7',\n          label: 'src',\n          children: [{\n            id: '8',\n            label: 'index.js'\n          }, {\n            id: '9',\n            label: 'tree-view.js'\n          }]\n        }]\n      }]\n    }]\n  },\n  render: args => {\n    const [expanded, setExpanded] = useState(args.expandedIds);\n    const [selected, setSelected] = useState(args.selectedIds);\n    const handleExpandClick = () => {\n      setExpanded(oldExpanded => oldExpanded.length === 0 ? ['1', '5', '6', '7'] : []);\n    };\n    const handleSelectClick = () => {\n      setSelected(oldSelected => oldSelected.length === 0 ? ['1', '2', '3', '4', '5', '6', '7', '8', '9'] : []);\n    };\n    return <Box sx={{\n      height: 270,\n      flexGrow: 1,\n      maxWidth: 400,\n      overflowY: 'auto'\n    }}>\n                <Box sx={{\n        mb: 1\n      }}>\n                    <Button onClick={handleExpandClick}>{expanded.length === 0 ? 'Expand all' : 'Collapse all'}</Button>\n                    <Button onClick={handleSelectClick}>{selected.length === 0 ? 'Select all' : 'Unselect all'}</Button>\n                </Box>\n\n                <TreeView {...args} expandedIds={expanded} selectedIds={selected} onExpanded={setExpanded} onSelected={setSelected} multiSelect />\n            </Box>;\n  }\n}",...MultiSelection.parameters?.docs?.source}}},GmailCloneStyles.parameters={...GmailCloneStyles.parameters,docs:{...GmailCloneStyles.parameters?.docs,source:{originalSource:"{\n  args: {\n    expandedIds: ['3'],\n    selectedIds: [],\n    nodes: [{\n      id: '1',\n      label: 'All Mail',\n      icon: 'Mail'\n    }, {\n      id: '2',\n      label: 'Trash',\n      icon: 'Delete'\n    }, {\n      id: '3',\n      label: 'Categories',\n      icon: 'Label',\n      children: [{\n        id: '5',\n        label: 'Social',\n        icon: 'SupervisorAccount',\n        info: '90',\n        color: '#1a73e8',\n        bgColor: '#e8f0fe'\n      }, {\n        id: '6',\n        label: 'Updates',\n        icon: 'Info',\n        info: '2,294',\n        color: '#e3742f',\n        bgColor: '#fcefe3'\n      }, {\n        id: '7',\n        label: 'Forums',\n        icon: 'Forum',\n        info: '3,566',\n        color: '#a250f5',\n        bgColor: '#f3e8fd'\n      }, {\n        id: '8',\n        label: 'Promotions',\n        icon: 'LocalOffer',\n        info: '733',\n        color: '#3c8039',\n        bgColor: '#e6f4ea'\n      }]\n    }, {\n      id: '4',\n      label: 'History',\n      icon: 'Label'\n    }]\n  },\n  render: args => {\n    const [expanded, setExpanded] = useState(args.expandedIds);\n    const [selected, setSelected] = useState(args.selectedIds);\n    return <TreeView {...args} expandedIds={expanded} selectedIds={selected} onExpanded={setExpanded} onSelected={setSelected} TreeItemComponent={LabelIconTreeItem} {...LabelIconTreeItemIcons} />;\n  }\n}",...GmailCloneStyles.parameters?.docs?.source}}},IndentBorderStyles.parameters={...IndentBorderStyles.parameters,docs:{...IndentBorderStyles.parameters?.docs,source:{originalSource:"{\n  args: {\n    expandedIds: ['1'],\n    selectedIds: [],\n    nodes: [{\n      id: '1',\n      label: 'Main',\n      children: [{\n        id: '2',\n        label: 'Hello'\n      }, {\n        id: '3',\n        label: 'Subtree with children',\n        children: [{\n          id: '6',\n          label: 'Hello'\n        }, {\n          id: '7',\n          label: 'Sub-subtree with children',\n          children: [{\n            id: '9',\n            label: 'Child 1'\n          }, {\n            id: '10',\n            label: 'Child 2'\n          }, {\n            id: '11',\n            label: 'Child 3'\n          }]\n        }, {\n          id: '8',\n          label: 'Hello'\n        }]\n      }, {\n        id: '4',\n        label: 'World'\n      }, {\n        id: '5',\n        label: 'Something something'\n      }]\n    }]\n  },\n  render: args => {\n    const [expanded, setExpanded] = useState(args.expandedIds);\n    const [selected, setSelected] = useState(args.selectedIds);\n    return <TreeView {...args} expandedIds={expanded} selectedIds={selected} onExpanded={setExpanded} onSelected={setSelected} TreeItemComponent={IndentBorderTreeItem} {...IndentBorderTreeItemIcons} />;\n  }\n}",...IndentBorderStyles.parameters?.docs?.source}}},CustomItem.parameters={...CustomItem.parameters,docs:{...CustomItem.parameters?.docs,source:{originalSource:"{\n  args: {\n    expandedIds: ['1'],\n    selectedIds: [],\n    nodes: [{\n      id: '1',\n      label: 'Main',\n      icon: 'Home',\n      info: 'test',\n      // color: \"red\",\n      // bgColor: \"yellow\",\n      children: [{\n        id: '2',\n        label: 'Hello'\n      }, {\n        id: '3',\n        label: 'Subtree with children',\n        children: [{\n          id: '6',\n          label: 'Hello'\n        }, {\n          id: '7',\n          label: 'Sub-subtree with children',\n          children: [{\n            id: '9',\n            label: 'Child 1'\n          }, {\n            id: '10',\n            label: 'Child 2'\n          }, {\n            id: '11',\n            label: 'Child 3'\n          }]\n        }, {\n          id: '8',\n          label: 'Hello'\n        }]\n      }, {\n        id: '4',\n        label: 'World'\n      }, {\n        id: '5',\n        label: 'Something something'\n      }]\n    }]\n  },\n  render: args => {\n    const [expanded, setExpanded] = useState(args.expandedIds);\n    const [selected, setSelected] = useState(args.selectedIds);\n    return <TreeView {...args} expandedIds={expanded} selectedIds={selected} onExpanded={setExpanded} onSelected={setSelected} TransitionComponent={null} ItemComponent={StyledTreeItemContent} />;\n  }\n}",...CustomItem.parameters?.docs?.source}}}},"./src/components/_FIXED/Typography/Typography.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_Text__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/_FIXED/Typography/Text.tsx"),_TextEllipsis__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/_FIXED/Typography/TextEllipsis.tsx"),_utils_helpers__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/utils/helpers.ts");const Typography=props=>(props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"autoWidth",!0),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"component","span"),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"dynamicEllipsis",!0),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"isEllipsis",!1),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"showTooltipOnEllipsis",!0),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"size","inherit"),[(props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"tooltip",!1)).showTooltipOnEllipsis,props.onEllipsisChange].some((v=>v))?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_TextEllipsis__WEBPACK_IMPORTED_MODULE_2__.A,{...props}):react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Text__WEBPACK_IMPORTED_MODULE_1__.A,{...props}));Typography.displayName="Typography";const __WEBPACK_DEFAULT_EXPORT__=Typography;Typography.__docgenInfo={description:"",methods:[],displayName:"Typography",props:{alignCenter:{required:!1,tsType:{name:"boolean"},description:""},alignJustify:{required:!1,tsType:{name:"boolean"},description:""},alignLeft:{required:!1,tsType:{name:"boolean"},description:""},alignRight:{required:!1,tsType:{name:"boolean"},description:""},autoWidth:{required:!1,tsType:{name:"boolean"},description:""},bgColor:{required:!1,tsType:{name:"string"},description:""},bold:{required:!1,tsType:{name:"union",raw:"boolean | string",elements:[{name:"boolean"},{name:"string"}]},description:""},border:{required:!1,tsType:{name:"union",raw:"boolean | string",elements:[{name:"boolean"},{name:"string"}]},description:""},charsCase:{required:!1,tsType:{name:"union",raw:"'upper' | 'lower' | 'capital'",elements:[{name:"literal",value:"'upper'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'capital'"}]},description:""},color:{required:!1,tsType:{name:"string"},description:""},component:{required:!1,tsType:{name:"string"},description:""},followCursor:{required:!1,tsType:{name:"boolean"},description:""},fullWidth:{required:!1,tsType:{name:"boolean"},description:""},gutterBottom:{required:!1,tsType:{name:"boolean"},description:""},html:{required:!1,tsType:{name:"boolean"},description:""},italic:{required:!1,tsType:{name:"boolean"},description:""},justifyContent:{required:!1,tsType:{name:"string"},description:""},lineHeight:{required:!1,tsType:{name:"number"},description:""},link:{required:!1,tsType:{name:"string"},description:""},monospace:{required:!1,tsType:{name:"boolean"},description:""},paragraph:{required:!1,tsType:{name:"boolean"},description:""},size:{required:!1,tsType:{name:"union",raw:"number | string",elements:[{name:"number"},{name:"string"}]},description:""},strike:{required:!1,tsType:{name:"boolean"},description:""},sub:{required:!1,tsType:{name:"boolean"},description:""},sup:{required:!1,tsType:{name:"boolean"},description:""},textDirection:{required:!1,tsType:{name:"union",raw:"'ltr' | 'rtl'",elements:[{name:"literal",value:"'ltr'"},{name:"literal",value:"'rtl'"}]},description:""},tooltip:{required:!1,tsType:{name:"union",raw:"boolean | string",elements:[{name:"boolean"},{name:"string"}]},description:""},tooltipPlacement:{required:!1,tsType:{name:"union",raw:"| 'bottom-end'\n| 'bottom-start'\n| 'bottom'\n| 'left-end'\n| 'left-start'\n| 'left'\n| 'right-end'\n| 'right-start'\n| 'right'\n| 'top-end'\n| 'top-start'\n| 'top'",elements:[{name:"literal",value:"'bottom-end'"},{name:"literal",value:"'bottom-start'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'left-end'"},{name:"literal",value:"'left-start'"},{name:"literal",value:"'left'"},{name:"literal",value:"'right-end'"},{name:"literal",value:"'right-start'"},{name:"literal",value:"'right'"},{name:"literal",value:"'top-end'"},{name:"literal",value:"'top-start'"},{name:"literal",value:"'top'"}]},description:""},underline:{required:!1,tsType:{name:"boolean"},description:""},width:{required:!1,tsType:{name:"union",raw:"number | string",elements:[{name:"number"},{name:"string"}]},description:""},dynamicEllipsis:{required:!1,tsType:{name:"literal",value:"true"},description:""},noWrap:{required:!1,tsType:{name:"boolean"},description:""},onEllipsisChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(isEllipsis: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"isEllipsis"}],return:{name:"void"}}},description:""},rows:{required:!1,tsType:{name:"number"},description:""},showTooltipOnEllipsis:{required:!1,tsType:{name:"boolean"},description:""}}}}}]);
//# sourceMappingURL=components-_FIXED-TreeView-__stories__-TreeView-stories.e288626a.iframe.bundle.js.map