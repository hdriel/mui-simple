{"version":3,"file":"components-Progress-LinearProgress-__stories__-LinearProgress-stories.1b88dc73.iframe.bundle.js","mappings":";;;AAiBA;;AAEA;AACA;AAGA;;AAIA;;AAsBA;;;;AAQA;;;AAGA;;;AAGA;AACA;;;AAGA;;AAEA;;;;AAIA","sources":["webpack://@hdriel/mui-simple/./src/components/Progress/LinearProgress/LinearProgress.styled.tsx"],"sourcesContent":["import React from 'react';\nimport { get } from 'lodash-es';\nimport { styled } from '@mui/material/styles';\nimport {\n    LinearProgress as MuiLinearProgress,\n    Box as MuiBox,\n    Typography as MuiTypography,\n    linearProgressClasses,\n    alpha,\n} from '@mui/material';\nimport { numberToPx } from '../../../utils/helpers';\n\nconst ContentWrapper = styled(MuiBox)`\n    display: flex;\n    align-items: center;\n`;\n\nconst ProgressWrapper = styled(MuiBox)`\n    width: 100%;\n    margin-right: ${(props) => props.theme.spacing(1)};\n    margin-left: ${(props) => props.theme.spacing(1)};\n`;\n\nconst IndicatorWrapper = styled(MuiBox)`\n    min-width: 35px;\n`;\n\nexport const LinearProgress = styled(\n    ({ value, variant, showProgress, ...props }) => (\n        <ContentWrapper>\n            <ProgressWrapper>\n                <MuiLinearProgress\n                    value={value}\n                    variant={value && variant === undefined ? 'determinate' : variant}\n                    {...props}\n                />\n            </ProgressWrapper>\n            <IndicatorWrapper>\n                <MuiTypography variant=\"body2\" color=\"text.secondary\">\n                    {showProgress && value !== undefined ? `${Math.round(value)}%` : ''}\n                </MuiTypography>\n            </IndicatorWrapper>\n        </ContentWrapper>\n    ),\n    {\n        shouldForwardProp: (propName) => !['customColor'].includes(propName),\n    }\n)`\n    &.MuiLinearProgress-root {\n        background-color: ${(props) =>\n            alpha(\n                get(props, `theme.palette.${props.color}.main`, props.customColor ?? 'rgba(0,0,0,0.3)'),\n                0.2\n            )} !important;\n    }\n\n    &.MuiLinearProgress-bar {\n        background-color: ${(props) => props.customColor};\n    }\n\n    height: ${(props) => `${numberToPx(props.thickness)}` || '5px'};\n    border-radius: 5px;\n\n    &.${linearProgressClasses.colorPrimary} {\n        background-color: ${({ theme }) => theme.palette.grey[theme.palette.mode === 'light' ? 200 : 800]};\n    }\n\n    & .${linearProgressClasses.bar} {\n        border-radius: 5px;\n        background-color: ${({ theme, color, customColor }) => get(theme, `palette.${color}.main`, customColor)};\n    }\n\n    .MuiLinearProgress-dashed {\n        background-image: ${(props) => {\n            const color = alpha(\n                get(props, `theme.palette.${props.color}.main`, props.customColor ?? 'rgba(0,0,0,0.3)'),\n                0.2\n            );\n\n            return `radial-gradient(${color} 0%, ${color} 16%, transparent 42%)`;\n        }};\n    }\n`;\n"],"names":[],"sourceRoot":""}