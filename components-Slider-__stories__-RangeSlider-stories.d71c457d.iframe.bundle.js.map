{"version":3,"file":"components-Slider-__stories__-RangeSlider-stories.d71c457d.iframe.bundle.js","mappings":";;AAmSA;;;ACnRA;;;AAGA;;;;;AAKA;;;;AAIA;;AAGA;AAYA;;;;;;;AAOA;;;;;;;AAOA;;;;;;;;;AASA;;;;;;AAMA;;;;;;;;;;;;;;;;;;;;AAqBA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;;;;;;;;;;;;;;;AAgBA;AAUA;;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;;;AAIA;AC7IA;AACA;AACA;AACA;AAGA","sources":["webpack://@hdriel/mui-simple/./src/components/Slider/__stories__/RangeSlider.stories.tsx","webpack://@hdriel/mui-simple/./src/components/Slider/Slider.styles.tsx","webpack://@hdriel/mui-simple/./src/components/Slider/Slider.styled.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"import React, { useState } from \\\"react\\\";\\r\\nimport { action } from \\\"@storybook/addon-actions\\\";\\r\\nimport {\\r\\n  VolumeDown as VolumeDownIcon,\\r\\n  VolumeUp as VolumeUpIcon,\\r\\n} from \\\"@mui/icons-material\\\";\\r\\nimport { Stack } from \\\"@mui/material\\\";\\r\\nimport MuiInput from \\\"@mui/material/Input\\\";\\r\\nimport { styled } from \\\"@mui/material/styles\\\";\\r\\nimport RangeSlider from \\\"../RangeSlider\\\";\\r\\nimport Slider from \\\"../Slider\\\";\\r\\nimport { SLIDER_STYLES } from \\\"../Slider.consts\\\";\\r\\n\\r\\nconst Input = styled(MuiInput)`\\r\\n  width: 42px;\\r\\n`;\\r\\n\\r\\nexport default {\\r\\n  title: \\\"Inputs/RangeSlider\\\",\\r\\n  component: RangeSlider,\\r\\n  decorators: [\\r\\n    (Story) => (\\r\\n      <div\\r\\n        style={{\\r\\n          width: \\\"500px\\\",\\r\\n          height: \\\"450px\\\",\\r\\n          border: \\\"1px dashed black\\\",\\r\\n          padding: \\\"1em\\\",\\r\\n        }}\\r\\n      >\\r\\n        <Story />\\r\\n      </div>\\r\\n    ),\\r\\n  ],\\r\\n};\\r\\n\\r\\nconst actions = {\\r\\n  onClick: action(\\\"onClick\\\"),\\r\\n};\\r\\n\\r\\nexport const Default = () => {\\r\\n  return <RangeSlider {...actions} />;\\r\\n};\\r\\n\\r\\nfunction useValue(v1 = 0, v2 = 0) {\\r\\n  const [fromValue, setFromValue] = React.useState(v1);\\r\\n  const [toValue, setToValue] = React.useState(v2);\\r\\n  const onChangeFromValue = (event, newValue) => setFromValue(newValue);\\r\\n  const onChangeToValue = (event, newValue) => setToValue(newValue);\\r\\n\\r\\n  return {\\r\\n    fromValue,\\r\\n    toValue,\\r\\n    onChangeFromValue,\\r\\n    onChangeToValue,\\r\\n  };\\r\\n}\\r\\n\\r\\nexport const DisableSwap = () => {\\r\\n  return (\\r\\n    <Stack spacing={3}>\\r\\n      <RangeSlider label=\\\"swap\\\" {...useValue(30, 50)} minDistance={10} />\\r\\n      <RangeSlider\\r\\n        label=\\\"DisableSwap - locking\\\"\\r\\n        disableSwap=\\\"locking\\\"\\r\\n        {...useValue(30, 50)}\\r\\n        minDistance={10}\\r\\n      />\\r\\n      <RangeSlider\\r\\n        label=\\\"DisableSwap - trailing\\\"\\r\\n        disableSwap=\\\"trailing\\\"\\r\\n        {...useValue(30, 50)}\\r\\n        minDistance={10}\\r\\n      />\\r\\n    </Stack>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const ThemedAndColored = () => {\\r\\n  return (\\r\\n    <Stack>\\r\\n      <RangeSlider color=\\\"primary\\\" label=\\\"primary\\\" defaultValue={[10, 50]} />\\r\\n      <RangeSlider\\r\\n        color=\\\"secondary\\\"\\r\\n        label=\\\"secondary\\\"\\r\\n        defaultValue={[10, 50]}\\r\\n      />\\r\\n      <RangeSlider color=\\\"info\\\" label=\\\"info\\\" defaultValue={[10, 50]} />\\r\\n      <RangeSlider color=\\\"error\\\" label=\\\"error\\\" defaultValue={[10, 50]} />\\r\\n      <RangeSlider label=\\\"Default\\\" defaultValue={[10, 50]} />\\r\\n      <RangeSlider label=\\\"#D050CC\\\" color=\\\"#D050CC\\\" defaultValue={[10, 50]} />\\r\\n    </Stack>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const SliderStyle = () => {\\r\\n  return (\\r\\n    <Stack>\\r\\n      <Slider\\r\\n        label={SLIDER_STYLES.IOS}\\r\\n        defaultValue={[25, 75]}\\r\\n        sliderStyle={SLIDER_STYLES.IOS}\\r\\n      />\\r\\n      <Slider\\r\\n        label={SLIDER_STYLES.PRETTO}\\r\\n        defaultValue={[25, 75]}\\r\\n        sliderStyle={SLIDER_STYLES.PRETTO}\\r\\n      />\\r\\n      <Slider\\r\\n        label={SLIDER_STYLES.AIRBNB}\\r\\n        defaultValue={[25, 75]}\\r\\n        sliderStyle={SLIDER_STYLES.AIRBNB}\\r\\n      />\\r\\n      <Slider\\r\\n        label={SLIDER_STYLES.TOOLTIP_VALUE}\\r\\n        defaultValue={[25, 75]}\\r\\n        sliderStyle={SLIDER_STYLES.TOOLTIP_VALUE}\\r\\n      />\\r\\n      <Slider label=\\\"custom style\\\" defaultValue={[25, 75]} color={\\\"#D050CC\\\"} />\\r\\n      <Slider label=\\\"default\\\" defaultValue={[25, 75]} />\\r\\n    </Stack>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const Sized = () => {\\r\\n  return (\\r\\n    <Stack spacing={3}>\\r\\n      <RangeSlider label=\\\"small\\\" defaultValue={[45, 80]} size=\\\"small\\\" />\\r\\n      <RangeSlider label=\\\"medium\\\" defaultValue={[80, 100]} size=\\\"medium\\\" />\\r\\n      <RangeSlider label=\\\"default\\\" />\\r\\n    </Stack>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const ValueLabel = () => {\\r\\n  return (\\r\\n    <Stack spacing={3}>\\r\\n      <RangeSlider label=\\\"auto\\\" displayValue=\\\"auto\\\" defaultValue={[45, 50]} />\\r\\n      <RangeSlider label=\\\"on\\\" displayValue=\\\"on\\\" defaultValue={[80, 90]} />\\r\\n      <RangeSlider label=\\\"off\\\" displayValue=\\\"off\\\" defaultValue={[45, 60]} />\\r\\n      <RangeSlider label=\\\"default\\\" defaultValue={[20, 50]} />\\r\\n      <RangeSlider\\r\\n        label=\\\"disabled-auto\\\"\\r\\n        displayValue=\\\"auto\\\"\\r\\n        defaultValue={[45, 80]}\\r\\n        disabled\\r\\n      />\\r\\n      <RangeSlider\\r\\n        label=\\\"disabled-on\\\"\\r\\n        displayValue=\\\"on\\\"\\r\\n        defaultValue={[50, 80]}\\r\\n        disabled\\r\\n      />\\r\\n      <RangeSlider\\r\\n        label=\\\"disabled-off\\\"\\r\\n        displayValue=\\\"off\\\"\\r\\n        defaultValue={[45, 49]}\\r\\n        disabled\\r\\n      />\\r\\n      <RangeSlider label=\\\"disabled-default\\\" defaultValue={[5, 45]} disabled />\\r\\n    </Stack>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const RangesObject = () => {\\r\\n  return (\\r\\n    <Stack spacing={3}>\\r\\n      <RangeSlider\\r\\n        label=\\\"min: 150, max: 200, step: 2.5\\\"\\r\\n        range={{ min: 150, max: 200, step: 2.5, marks: true }}\\r\\n        defaultValue={[160, 180]}\\r\\n        displayValue=\\\"on\\\"\\r\\n      />\\r\\n      <RangeSlider\\r\\n        label=\\\"min: 50, step: 15\\\"\\r\\n        range={{ min: 50, step: 15, marks: true }}\\r\\n        defaultValue={[65, 90]}\\r\\n        displayValue=\\\"on\\\"\\r\\n      />\\r\\n      <RangeSlider\\r\\n        label=\\\"max: 50, step: 10\\\"\\r\\n        range={{ max: 50, step: 10, marks: true }}\\r\\n        defaultValue={[10, 100]}\\r\\n        displayValue=\\\"on\\\"\\r\\n      />\\r\\n      <RangeSlider\\r\\n        label=\\\"min: 10, max: 50, step: 2\\\"\\r\\n        range={{\\r\\n          min: 10,\\r\\n          max: 50,\\r\\n          step: 2,\\r\\n          marks: [\\r\\n            { label: \\\"12L\\\", value: 12 },\\r\\n            { label: \\\"16L\\\", value: 16 },\\r\\n            { label: \\\"18M\\\", value: 18 },\\r\\n          ],\\r\\n        }}\\r\\n        defaultValue={[40, 90]}\\r\\n        displayValue=\\\"on\\\"\\r\\n      />\\r\\n    </Stack>\\r\\n  );\\r\\n};\\r\\nexport const RangesArray = () => {\\r\\n  return (\\r\\n    <Stack spacing={3}>\\r\\n      <RangeSlider\\r\\n        label=\\\"[min: 150, max: 200, step: 2.5, marks: true]\\\"\\r\\n        range={[150, 200, 2.5, true]}\\r\\n        defaultValue={[170, 180]}\\r\\n        displayValue=\\\"on\\\"\\r\\n      />\\r\\n      <RangeSlider\\r\\n        label=\\\"[50, undefined, 15, true]\\\"\\r\\n        range={[50, undefined, 15, true]}\\r\\n        defaultValue={[60, 75]}\\r\\n        displayValue=\\\"on\\\"\\r\\n      />\\r\\n      <RangeSlider\\r\\n        label=\\\"[undefined, 50, 10, true]\\\"\\r\\n        range={[undefined, 50, 10, true]}\\r\\n        defaultValue={[30, 40]}\\r\\n        displayValue=\\\"on\\\"\\r\\n      />\\r\\n      <RangeSlider\\r\\n        label=\\\"[-50, 50, 10, true]\\\"\\r\\n        range={[-50, 50, 10, true]}\\r\\n        defaultValue={[-15, -5]}\\r\\n        displayValue=\\\"on\\\"\\r\\n      />\\r\\n      <RangeSlider\\r\\n        label=\\\"[undefined, undefined, 10, true]\\\"\\r\\n        range={[undefined, undefined, 10, true]}\\r\\n        defaultValue={[12, 18]}\\r\\n        displayValue=\\\"on\\\"\\r\\n      />\\r\\n    </Stack>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const Marks = () => {\\r\\n  return (\\r\\n    <Stack spacing={3}>\\r\\n      <RangeSlider marks defaultValue={[25, 40]} displayValue=\\\"on\\\" />\\r\\n      <RangeSlider\\r\\n        marks={[\\r\\n          { label: \\\"0\\\", value: 0 },\\r\\n          { label: \\\"100\\\", value: 100 },\\r\\n          { label: \\\"25-hi\\\", value: 25 },\\r\\n          { label: \\\"60C\\\", value: 60 },\\r\\n        ]}\\r\\n        defaultValue={[25, 40]}\\r\\n        displayValue=\\\"on\\\"\\r\\n      />\\r\\n      <RangeSlider\\r\\n        label={\\\"chooseFromMarksList\\\"}\\r\\n        marks={[\\r\\n          { label: \\\"0\\\", value: 0 },\\r\\n          { label: \\\"100\\\", value: 100 },\\r\\n          { label: \\\"25-hi\\\", value: 25 },\\r\\n          { label: \\\"60C\\\", value: 60 },\\r\\n        ]}\\r\\n        chooseFromMarksList\\r\\n        defaultValue={[25, 40]}\\r\\n        displayValue=\\\"on\\\"\\r\\n      />\\r\\n    </Stack>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const Disabled = () => {\\r\\n  return (\\r\\n    <Stack spacing={3}>\\r\\n      <RangeSlider defaultValue={[25, 40]} />\\r\\n      <RangeSlider defaultValue={[25, 40]} disabled />\\r\\n    </Stack>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const ValueLabelFormat = () => {\\r\\n  return (\\r\\n    <Stack spacing={3}>\\r\\n      <RangeSlider defaultValue={[25, 30]} valueLabelFormat={(n) => `${n}MB`} />\\r\\n      <RangeSlider\\r\\n        defaultValue={[25, 30]}\\r\\n        valueLabelFormat={(n) => (n >= 50 ? `${n} UP` : `${n} DOWN`)}\\r\\n      />\\r\\n    </Stack>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const TrackBarPosition = () => {\\r\\n  return (\\r\\n    <Stack spacing={3}>\\r\\n      <RangeSlider\\r\\n        label={\\\"normal\\\"}\\r\\n        defaultValue={[30, 60]}\\r\\n        valueLabelFormat={(n) => `${n} Normal`}\\r\\n        trackBarLinePosition=\\\"normal\\\"\\r\\n      />\\r\\n      <RangeSlider\\r\\n        label={\\\"inverted\\\"}\\r\\n        defaultValue={[30, 60]}\\r\\n        valueLabelFormat={(n) => `${n} opposite`}\\r\\n        trackBarLinePosition=\\\"inverted\\\"\\r\\n      />\\r\\n      <RangeSlider\\r\\n        label={\\\"none\\\"}\\r\\n        defaultValue={[30, 60]}\\r\\n        valueLabelFormat={(n) => `${n} none`}\\r\\n        trackBarLinePosition={\\\"none\\\"}\\r\\n      />\\r\\n      <RangeSlider\\r\\n        label={\\\"false\\\"}\\r\\n        defaultValue={[30, 60]}\\r\\n        valueLabelFormat={(n) => `${n} false`}\\r\\n        trackBarLinePosition={false}\\r\\n      />\\r\\n    </Stack>\\r\\n  );\\r\\n};\\r\\n\\r\\nconst marks = [\\r\\n  { value: 0, label: \\\"0°C\\\" },\\r\\n  { value: 20, label: \\\"20°C\\\" },\\r\\n  { value: 37, label: \\\"37°C\\\" },\\r\\n  { value: 100, label: \\\"100°C\\\" },\\r\\n];\\r\\nexport const Orientation = () => {\\r\\n  return (\\r\\n    <div style={{ display: \\\"flex\\\", flexDirection: \\\"column\\\", gap: \\\"1em\\\" }}>\\r\\n      <RangeSlider\\r\\n        startIcon={<VolumeDownIcon />}\\r\\n        endIcon={<VolumeUpIcon />}\\r\\n        label=\\\"horizontal\\\"\\r\\n        defaultValue={[30, 60]}\\r\\n        orientation=\\\"horizontal\\\"\\r\\n        marks={marks}\\r\\n      />\\r\\n      <div style={{ height: 300 }}>\\r\\n        <RangeSlider\\r\\n          startIcon={<VolumeDownIcon />}\\r\\n          endIcon={<VolumeUpIcon />}\\r\\n          label=\\\"vertical\\\"\\r\\n          defaultValue={[30, 60]}\\r\\n          orientation=\\\"vertical\\\"\\r\\n          marks={marks}\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nfunction useHandlerInputChange(handler, event) {\\r\\n  const v = event.target.value;\\r\\n  const value = v === \\\"\\\" ? \\\"\\\" : Number(v);\\r\\n  handler(event, value);\\r\\n}\\r\\nexport const InputField = () => {\\r\\n  const { fromValue, onChangeFromValue, onChangeToValue, toValue } = useValue(\\r\\n    30,\\r\\n    50\\r\\n  );\\r\\n\\r\\n  const handleInputChangeFrom = useHandlerInputChange.bind(\\r\\n    null,\\r\\n    onChangeFromValue\\r\\n  );\\r\\n  const handleInputChangeTo = useHandlerInputChange.bind(null, onChangeToValue);\\r\\n\\r\\n  const handleBlur = () => {\\r\\n    if (fromValue < 0) {\\r\\n      onChangeFromValue(0);\\r\\n      action(\\\"onChangeFromValue\\\")(0);\\r\\n    } else if (toValue > 100) {\\r\\n      onChangeToValue(100);\\r\\n      action(\\\"onChangeToValue\\\")(100);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n      <RangeSlider\\r\\n        defaultValue={[40, 60]}\\r\\n        startIcon={<VolumeUpIcon />}\\r\\n        endIcon={<VolumeDownIcon />}\\r\\n      />\\r\\n      <RangeSlider\\r\\n        defaultValue={[40, 60]}\\r\\n        startIcon={<VolumeUpIcon />}\\r\\n        fromValue={fromValue}\\r\\n        onChangeFromValue={onChangeFromValue}\\r\\n        onChangeToValue={onChangeToValue}\\r\\n        toValue={toValue}\\r\\n        inputCmp={\\r\\n          <>\\r\\n            <Input\\r\\n              value={fromValue}\\r\\n              size=\\\"small\\\"\\r\\n              onChange={handleInputChangeFrom}\\r\\n              onBlur={handleBlur}\\r\\n              inputProps={{\\r\\n                step: 10,\\r\\n                min: 0,\\r\\n                max: 100,\\r\\n                type: \\\"number\\\",\\r\\n              }}\\r\\n            />\\r\\n            <Input\\r\\n              value={toValue}\\r\\n              size=\\\"small\\\"\\r\\n              onChange={handleInputChangeTo}\\r\\n              onBlur={handleBlur}\\r\\n              inputProps={{\\r\\n                step: 10,\\r\\n                min: 0,\\r\\n                max: 100,\\r\\n                type: \\\"number\\\",\\r\\n              }}\\r\\n            />\\r\\n          </>\\r\\n        }\\r\\n      />\\r\\n      <RangeSlider\\r\\n        defaultValue={[40, 60]}\\r\\n        startIcon={<VolumeUpIcon />}\\r\\n        endIcon={<VolumeDownIcon />}\\r\\n        fromValue={fromValue}\\r\\n        onChangeFromValue={onChangeFromValue}\\r\\n        onChangeToValue={onChangeToValue}\\r\\n        toValue={toValue}\\r\\n        inputCmp={\\r\\n          <>\\r\\n            <Input\\r\\n              value={fromValue}\\r\\n              size=\\\"small\\\"\\r\\n              onChange={handleInputChangeFrom}\\r\\n              onBlur={handleBlur}\\r\\n              inputProps={{\\r\\n                step: 10,\\r\\n                min: 0,\\r\\n                max: 100,\\r\\n                type: \\\"number\\\",\\r\\n              }}\\r\\n            />\\r\\n            <Input\\r\\n              value={toValue}\\r\\n              size=\\\"small\\\"\\r\\n              onChange={handleInputChangeTo}\\r\\n              onBlur={handleBlur}\\r\\n              inputProps={{\\r\\n                step: 10,\\r\\n                min: 0,\\r\\n                max: 100,\\r\\n                type: \\\"number\\\",\\r\\n              }}\\r\\n            />\\r\\n          </>\\r\\n        }\\r\\n      />\\r\\n    </>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const MultiValue = () => {\\r\\n  const [value, setValue] = useState([30, 60, 90, 100]);\\r\\n  const onChange = (event, newValue) => setValue(newValue);\\r\\n\\r\\n  return <RangeSlider label=\\\"MultiValue\\\" value={value} onChange={onChange} />;\\r\\n};\\r\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"Default\": {\n    \"startLoc\": {\n      \"col\": 23,\n      \"line\": 28\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 30\n    },\n    \"startBody\": {\n      \"col\": 23,\n      \"line\": 28\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 30\n    }\n  },\n  \"DisableSwap\": {\n    \"startLoc\": {\n      \"col\": 27,\n      \"line\": 43\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 49\n    },\n    \"startBody\": {\n      \"col\": 27,\n      \"line\": 43\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 49\n    }\n  },\n  \"ThemedAndColored\": {\n    \"startLoc\": {\n      \"col\": 32,\n      \"line\": 50\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 59\n    },\n    \"startBody\": {\n      \"col\": 32,\n      \"line\": 50\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 59\n    }\n  },\n  \"SliderStyle\": {\n    \"startLoc\": {\n      \"col\": 27,\n      \"line\": 60\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 69\n    },\n    \"startBody\": {\n      \"col\": 27,\n      \"line\": 60\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 69\n    }\n  },\n  \"Sized\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 70\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 76\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 70\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 76\n    }\n  },\n  \"ValueLabel\": {\n    \"startLoc\": {\n      \"col\": 26,\n      \"line\": 77\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 88\n    },\n    \"startBody\": {\n      \"col\": 26,\n      \"line\": 77\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 88\n    }\n  },\n  \"RangesObject\": {\n    \"startLoc\": {\n      \"col\": 28,\n      \"line\": 89\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 123\n    },\n    \"startBody\": {\n      \"col\": 28,\n      \"line\": 89\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 123\n    }\n  },\n  \"RangesArray\": {\n    \"startLoc\": {\n      \"col\": 27,\n      \"line\": 124\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 132\n    },\n    \"startBody\": {\n      \"col\": 27,\n      \"line\": 124\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 132\n    }\n  },\n  \"Marks\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 133\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 163\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 133\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 163\n    }\n  },\n  \"Disabled\": {\n    \"startLoc\": {\n      \"col\": 24,\n      \"line\": 164\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 169\n    },\n    \"startBody\": {\n      \"col\": 24,\n      \"line\": 164\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 169\n    }\n  },\n  \"ValueLabelFormat\": {\n    \"startLoc\": {\n      \"col\": 32,\n      \"line\": 170\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 175\n    },\n    \"startBody\": {\n      \"col\": 32,\n      \"line\": 170\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 175\n    }\n  },\n  \"TrackBarPosition\": {\n    \"startLoc\": {\n      \"col\": 32,\n      \"line\": 176\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 183\n    },\n    \"startBody\": {\n      \"col\": 32,\n      \"line\": 176\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 183\n    }\n  },\n  \"Orientation\": {\n    \"startLoc\": {\n      \"col\": 27,\n      \"line\": 197\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 210\n    },\n    \"startBody\": {\n      \"col\": 27,\n      \"line\": 197\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 210\n    }\n  },\n  \"InputField\": {\n    \"startLoc\": {\n      \"col\": 26,\n      \"line\": 216\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 265\n    },\n    \"startBody\": {\n      \"col\": 26,\n      \"line\": 216\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 265\n    }\n  },\n  \"MultiValue\": {\n    \"startLoc\": {\n      \"col\": 26,\n      \"line\": 266\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 270\n    },\n    \"startBody\": {\n      \"col\": 26,\n      \"line\": 266\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 270\n    }\n  }\n};\n    \nimport React, { useState } from \"react\";\nimport { action } from \"@storybook/addon-actions\";\nimport { VolumeDown as VolumeDownIcon, VolumeUp as VolumeUpIcon } from \"@mui/icons-material\";\nimport { Stack } from \"@mui/material\";\nimport MuiInput from \"@mui/material/Input\";\nimport { styled } from \"@mui/material/styles\";\nimport RangeSlider from \"../RangeSlider\";\nimport Slider from \"../Slider\";\nimport { SLIDER_STYLES } from \"../Slider.consts\";\nconst Input = styled(MuiInput)`\n  width: 42px;\n`;\nexport default {parameters: {\n  \"storySource\": {\n    \"source\": \"import React, { useState } from \\\"react\\\";\\nimport { action } from \\\"@storybook/addon-actions\\\";\\nimport { VolumeDown as VolumeDownIcon, VolumeUp as VolumeUpIcon } from \\\"@mui/icons-material\\\";\\nimport { Stack } from \\\"@mui/material\\\";\\nimport MuiInput from \\\"@mui/material/Input\\\";\\nimport { styled } from \\\"@mui/material/styles\\\";\\nimport RangeSlider from \\\"../RangeSlider\\\";\\nimport Slider from \\\"../Slider\\\";\\nimport { SLIDER_STYLES } from \\\"../Slider.consts\\\";\\nconst Input = styled(MuiInput)`\\n  width: 42px;\\n`;\\nexport default {\\n  title: \\\"Inputs/RangeSlider\\\",\\n  component: RangeSlider,\\n  decorators: [Story => <div style={{\\n    width: \\\"500px\\\",\\n    height: \\\"450px\\\",\\n    border: \\\"1px dashed black\\\",\\n    padding: \\\"1em\\\"\\n  }}>\\r\\n        <Story />\\r\\n      </div>]\\n};\\nconst actions = {\\n  onClick: action(\\\"onClick\\\")\\n};\\nexport const Default = () => {\\n  return <RangeSlider {...actions} />;\\n};\\nfunction useValue(v1 = 0, v2 = 0) {\\n  const [fromValue, setFromValue] = React.useState(v1);\\n  const [toValue, setToValue] = React.useState(v2);\\n  const onChangeFromValue = (event, newValue) => setFromValue(newValue);\\n  const onChangeToValue = (event, newValue) => setToValue(newValue);\\n  return {\\n    fromValue,\\n    toValue,\\n    onChangeFromValue,\\n    onChangeToValue\\n  };\\n}\\nexport const DisableSwap = () => {\\n  return <Stack spacing={3}>\\r\\n      <RangeSlider label=\\\"swap\\\" {...useValue(30, 50)} minDistance={10} />\\r\\n      <RangeSlider label=\\\"DisableSwap - locking\\\" disableSwap=\\\"locking\\\" {...useValue(30, 50)} minDistance={10} />\\r\\n      <RangeSlider label=\\\"DisableSwap - trailing\\\" disableSwap=\\\"trailing\\\" {...useValue(30, 50)} minDistance={10} />\\r\\n    </Stack>;\\n};\\nexport const ThemedAndColored = () => {\\n  return <Stack>\\r\\n      <RangeSlider color=\\\"primary\\\" label=\\\"primary\\\" defaultValue={[10, 50]} />\\r\\n      <RangeSlider color=\\\"secondary\\\" label=\\\"secondary\\\" defaultValue={[10, 50]} />\\r\\n      <RangeSlider color=\\\"info\\\" label=\\\"info\\\" defaultValue={[10, 50]} />\\r\\n      <RangeSlider color=\\\"error\\\" label=\\\"error\\\" defaultValue={[10, 50]} />\\r\\n      <RangeSlider label=\\\"Default\\\" defaultValue={[10, 50]} />\\r\\n      <RangeSlider label=\\\"#D050CC\\\" color=\\\"#D050CC\\\" defaultValue={[10, 50]} />\\r\\n    </Stack>;\\n};\\nexport const SliderStyle = () => {\\n  return <Stack>\\r\\n      <Slider label={SLIDER_STYLES.IOS} defaultValue={[25, 75]} sliderStyle={SLIDER_STYLES.IOS} />\\r\\n      <Slider label={SLIDER_STYLES.PRETTO} defaultValue={[25, 75]} sliderStyle={SLIDER_STYLES.PRETTO} />\\r\\n      <Slider label={SLIDER_STYLES.AIRBNB} defaultValue={[25, 75]} sliderStyle={SLIDER_STYLES.AIRBNB} />\\r\\n      <Slider label={SLIDER_STYLES.TOOLTIP_VALUE} defaultValue={[25, 75]} sliderStyle={SLIDER_STYLES.TOOLTIP_VALUE} />\\r\\n      <Slider label=\\\"custom style\\\" defaultValue={[25, 75]} color={\\\"#D050CC\\\"} />\\r\\n      <Slider label=\\\"default\\\" defaultValue={[25, 75]} />\\r\\n    </Stack>;\\n};\\nexport const Sized = () => {\\n  return <Stack spacing={3}>\\r\\n      <RangeSlider label=\\\"small\\\" defaultValue={[45, 80]} size=\\\"small\\\" />\\r\\n      <RangeSlider label=\\\"medium\\\" defaultValue={[80, 100]} size=\\\"medium\\\" />\\r\\n      <RangeSlider label=\\\"default\\\" />\\r\\n    </Stack>;\\n};\\nexport const ValueLabel = () => {\\n  return <Stack spacing={3}>\\r\\n      <RangeSlider label=\\\"auto\\\" displayValue=\\\"auto\\\" defaultValue={[45, 50]} />\\r\\n      <RangeSlider label=\\\"on\\\" displayValue=\\\"on\\\" defaultValue={[80, 90]} />\\r\\n      <RangeSlider label=\\\"off\\\" displayValue=\\\"off\\\" defaultValue={[45, 60]} />\\r\\n      <RangeSlider label=\\\"default\\\" defaultValue={[20, 50]} />\\r\\n      <RangeSlider label=\\\"disabled-auto\\\" displayValue=\\\"auto\\\" defaultValue={[45, 80]} disabled />\\r\\n      <RangeSlider label=\\\"disabled-on\\\" displayValue=\\\"on\\\" defaultValue={[50, 80]} disabled />\\r\\n      <RangeSlider label=\\\"disabled-off\\\" displayValue=\\\"off\\\" defaultValue={[45, 49]} disabled />\\r\\n      <RangeSlider label=\\\"disabled-default\\\" defaultValue={[5, 45]} disabled />\\r\\n    </Stack>;\\n};\\nexport const RangesObject = () => {\\n  return <Stack spacing={3}>\\r\\n      <RangeSlider label=\\\"min: 150, max: 200, step: 2.5\\\" range={{\\n      min: 150,\\n      max: 200,\\n      step: 2.5,\\n      marks: true\\n    }} defaultValue={[160, 180]} displayValue=\\\"on\\\" />\\r\\n      <RangeSlider label=\\\"min: 50, step: 15\\\" range={{\\n      min: 50,\\n      step: 15,\\n      marks: true\\n    }} defaultValue={[65, 90]} displayValue=\\\"on\\\" />\\r\\n      <RangeSlider label=\\\"max: 50, step: 10\\\" range={{\\n      max: 50,\\n      step: 10,\\n      marks: true\\n    }} defaultValue={[10, 100]} displayValue=\\\"on\\\" />\\r\\n      <RangeSlider label=\\\"min: 10, max: 50, step: 2\\\" range={{\\n      min: 10,\\n      max: 50,\\n      step: 2,\\n      marks: [{\\n        label: \\\"12L\\\",\\n        value: 12\\n      }, {\\n        label: \\\"16L\\\",\\n        value: 16\\n      }, {\\n        label: \\\"18M\\\",\\n        value: 18\\n      }]\\n    }} defaultValue={[40, 90]} displayValue=\\\"on\\\" />\\r\\n    </Stack>;\\n};\\nexport const RangesArray = () => {\\n  return <Stack spacing={3}>\\r\\n      <RangeSlider label=\\\"[min: 150, max: 200, step: 2.5, marks: true]\\\" range={[150, 200, 2.5, true]} defaultValue={[170, 180]} displayValue=\\\"on\\\" />\\r\\n      <RangeSlider label=\\\"[50, undefined, 15, true]\\\" range={[50, undefined, 15, true]} defaultValue={[60, 75]} displayValue=\\\"on\\\" />\\r\\n      <RangeSlider label=\\\"[undefined, 50, 10, true]\\\" range={[undefined, 50, 10, true]} defaultValue={[30, 40]} displayValue=\\\"on\\\" />\\r\\n      <RangeSlider label=\\\"[-50, 50, 10, true]\\\" range={[-50, 50, 10, true]} defaultValue={[-15, -5]} displayValue=\\\"on\\\" />\\r\\n      <RangeSlider label=\\\"[undefined, undefined, 10, true]\\\" range={[undefined, undefined, 10, true]} defaultValue={[12, 18]} displayValue=\\\"on\\\" />\\r\\n    </Stack>;\\n};\\nexport const Marks = () => {\\n  return <Stack spacing={3}>\\r\\n      <RangeSlider marks defaultValue={[25, 40]} displayValue=\\\"on\\\" />\\r\\n      <RangeSlider marks={[{\\n      label: \\\"0\\\",\\n      value: 0\\n    }, {\\n      label: \\\"100\\\",\\n      value: 100\\n    }, {\\n      label: \\\"25-hi\\\",\\n      value: 25\\n    }, {\\n      label: \\\"60C\\\",\\n      value: 60\\n    }]} defaultValue={[25, 40]} displayValue=\\\"on\\\" />\\r\\n      <RangeSlider label={\\\"chooseFromMarksList\\\"} marks={[{\\n      label: \\\"0\\\",\\n      value: 0\\n    }, {\\n      label: \\\"100\\\",\\n      value: 100\\n    }, {\\n      label: \\\"25-hi\\\",\\n      value: 25\\n    }, {\\n      label: \\\"60C\\\",\\n      value: 60\\n    }]} chooseFromMarksList defaultValue={[25, 40]} displayValue=\\\"on\\\" />\\r\\n    </Stack>;\\n};\\nexport const Disabled = () => {\\n  return <Stack spacing={3}>\\r\\n      <RangeSlider defaultValue={[25, 40]} />\\r\\n      <RangeSlider defaultValue={[25, 40]} disabled />\\r\\n    </Stack>;\\n};\\nexport const ValueLabelFormat = () => {\\n  return <Stack spacing={3}>\\r\\n      <RangeSlider defaultValue={[25, 30]} valueLabelFormat={n => `${n}MB`} />\\r\\n      <RangeSlider defaultValue={[25, 30]} valueLabelFormat={n => n >= 50 ? `${n} UP` : `${n} DOWN`} />\\r\\n    </Stack>;\\n};\\nexport const TrackBarPosition = () => {\\n  return <Stack spacing={3}>\\r\\n      <RangeSlider label={\\\"normal\\\"} defaultValue={[30, 60]} valueLabelFormat={n => `${n} Normal`} trackBarLinePosition=\\\"normal\\\" />\\r\\n      <RangeSlider label={\\\"inverted\\\"} defaultValue={[30, 60]} valueLabelFormat={n => `${n} opposite`} trackBarLinePosition=\\\"inverted\\\" />\\r\\n      <RangeSlider label={\\\"none\\\"} defaultValue={[30, 60]} valueLabelFormat={n => `${n} none`} trackBarLinePosition={\\\"none\\\"} />\\r\\n      <RangeSlider label={\\\"false\\\"} defaultValue={[30, 60]} valueLabelFormat={n => `${n} false`} trackBarLinePosition={false} />\\r\\n    </Stack>;\\n};\\nconst marks = [{\\n  value: 0,\\n  label: \\\"0°C\\\"\\n}, {\\n  value: 20,\\n  label: \\\"20°C\\\"\\n}, {\\n  value: 37,\\n  label: \\\"37°C\\\"\\n}, {\\n  value: 100,\\n  label: \\\"100°C\\\"\\n}];\\nexport const Orientation = () => {\\n  return <div style={{\\n    display: \\\"flex\\\",\\n    flexDirection: \\\"column\\\",\\n    gap: \\\"1em\\\"\\n  }}>\\r\\n      <RangeSlider startIcon={<VolumeDownIcon />} endIcon={<VolumeUpIcon />} label=\\\"horizontal\\\" defaultValue={[30, 60]} orientation=\\\"horizontal\\\" marks={marks} />\\r\\n      <div style={{\\n      height: 300\\n    }}>\\r\\n        <RangeSlider startIcon={<VolumeDownIcon />} endIcon={<VolumeUpIcon />} label=\\\"vertical\\\" defaultValue={[30, 60]} orientation=\\\"vertical\\\" marks={marks} />\\r\\n      </div>\\r\\n    </div>;\\n};\\nfunction useHandlerInputChange(handler, event) {\\n  const v = event.target.value;\\n  const value = v === \\\"\\\" ? \\\"\\\" : Number(v);\\n  handler(event, value);\\n}\\nexport const InputField = () => {\\n  const {\\n    fromValue,\\n    onChangeFromValue,\\n    onChangeToValue,\\n    toValue\\n  } = useValue(30, 50);\\n  const handleInputChangeFrom = useHandlerInputChange.bind(null, onChangeFromValue);\\n  const handleInputChangeTo = useHandlerInputChange.bind(null, onChangeToValue);\\n  const handleBlur = () => {\\n    if (fromValue < 0) {\\n      onChangeFromValue(0);\\n      action(\\\"onChangeFromValue\\\")(0);\\n    } else if (toValue > 100) {\\n      onChangeToValue(100);\\n      action(\\\"onChangeToValue\\\")(100);\\n    }\\n  };\\n  return <>\\r\\n      <RangeSlider defaultValue={[40, 60]} startIcon={<VolumeUpIcon />} endIcon={<VolumeDownIcon />} />\\r\\n      <RangeSlider defaultValue={[40, 60]} startIcon={<VolumeUpIcon />} fromValue={fromValue} onChangeFromValue={onChangeFromValue} onChangeToValue={onChangeToValue} toValue={toValue} inputCmp={<>\\r\\n            <Input value={fromValue} size=\\\"small\\\" onChange={handleInputChangeFrom} onBlur={handleBlur} inputProps={{\\n        step: 10,\\n        min: 0,\\n        max: 100,\\n        type: \\\"number\\\"\\n      }} />\\r\\n            <Input value={toValue} size=\\\"small\\\" onChange={handleInputChangeTo} onBlur={handleBlur} inputProps={{\\n        step: 10,\\n        min: 0,\\n        max: 100,\\n        type: \\\"number\\\"\\n      }} />\\r\\n          </>} />\\r\\n      <RangeSlider defaultValue={[40, 60]} startIcon={<VolumeUpIcon />} endIcon={<VolumeDownIcon />} fromValue={fromValue} onChangeFromValue={onChangeFromValue} onChangeToValue={onChangeToValue} toValue={toValue} inputCmp={<>\\r\\n            <Input value={fromValue} size=\\\"small\\\" onChange={handleInputChangeFrom} onBlur={handleBlur} inputProps={{\\n        step: 10,\\n        min: 0,\\n        max: 100,\\n        type: \\\"number\\\"\\n      }} />\\r\\n            <Input value={toValue} size=\\\"small\\\" onChange={handleInputChangeTo} onBlur={handleBlur} inputProps={{\\n        step: 10,\\n        min: 0,\\n        max: 100,\\n        type: \\\"number\\\"\\n      }} />\\r\\n          </>} />\\r\\n    </>;\\n};\\nexport const MultiValue = () => {\\n  const [value, setValue] = useState([30, 60, 90, 100]);\\n  const onChange = (event, newValue) => setValue(newValue);\\n  return <RangeSlider label=\\\"MultiValue\\\" value={value} onChange={onChange} />;\\n};\\nDefault.parameters = {\\n  ...Default.parameters,\\n  docs: {\\n    ...Default.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => {\\\\n  return <RangeSlider {...actions} />;\\\\n}\\\",\\n      ...Default.parameters?.docs?.source\\n    }\\n  }\\n};\\nDisableSwap.parameters = {\\n  ...DisableSwap.parameters,\\n  docs: {\\n    ...DisableSwap.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => {\\\\n  return <Stack spacing={3}>\\\\r\\\\n      <RangeSlider label=\\\\\\\"swap\\\\\\\" {...useValue(30, 50)} minDistance={10} />\\\\r\\\\n      <RangeSlider label=\\\\\\\"DisableSwap - locking\\\\\\\" disableSwap=\\\\\\\"locking\\\\\\\" {...useValue(30, 50)} minDistance={10} />\\\\r\\\\n      <RangeSlider label=\\\\\\\"DisableSwap - trailing\\\\\\\" disableSwap=\\\\\\\"trailing\\\\\\\" {...useValue(30, 50)} minDistance={10} />\\\\r\\\\n    </Stack>;\\\\n}\\\",\\n      ...DisableSwap.parameters?.docs?.source\\n    }\\n  }\\n};\\nThemedAndColored.parameters = {\\n  ...ThemedAndColored.parameters,\\n  docs: {\\n    ...ThemedAndColored.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => {\\\\n  return <Stack>\\\\r\\\\n      <RangeSlider color=\\\\\\\"primary\\\\\\\" label=\\\\\\\"primary\\\\\\\" defaultValue={[10, 50]} />\\\\r\\\\n      <RangeSlider color=\\\\\\\"secondary\\\\\\\" label=\\\\\\\"secondary\\\\\\\" defaultValue={[10, 50]} />\\\\r\\\\n      <RangeSlider color=\\\\\\\"info\\\\\\\" label=\\\\\\\"info\\\\\\\" defaultValue={[10, 50]} />\\\\r\\\\n      <RangeSlider color=\\\\\\\"error\\\\\\\" label=\\\\\\\"error\\\\\\\" defaultValue={[10, 50]} />\\\\r\\\\n      <RangeSlider label=\\\\\\\"Default\\\\\\\" defaultValue={[10, 50]} />\\\\r\\\\n      <RangeSlider label=\\\\\\\"#D050CC\\\\\\\" color=\\\\\\\"#D050CC\\\\\\\" defaultValue={[10, 50]} />\\\\r\\\\n    </Stack>;\\\\n}\\\",\\n      ...ThemedAndColored.parameters?.docs?.source\\n    }\\n  }\\n};\\nSliderStyle.parameters = {\\n  ...SliderStyle.parameters,\\n  docs: {\\n    ...SliderStyle.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => {\\\\n  return <Stack>\\\\r\\\\n      <Slider label={SLIDER_STYLES.IOS} defaultValue={[25, 75]} sliderStyle={SLIDER_STYLES.IOS} />\\\\r\\\\n      <Slider label={SLIDER_STYLES.PRETTO} defaultValue={[25, 75]} sliderStyle={SLIDER_STYLES.PRETTO} />\\\\r\\\\n      <Slider label={SLIDER_STYLES.AIRBNB} defaultValue={[25, 75]} sliderStyle={SLIDER_STYLES.AIRBNB} />\\\\r\\\\n      <Slider label={SLIDER_STYLES.TOOLTIP_VALUE} defaultValue={[25, 75]} sliderStyle={SLIDER_STYLES.TOOLTIP_VALUE} />\\\\r\\\\n      <Slider label=\\\\\\\"custom style\\\\\\\" defaultValue={[25, 75]} color={\\\\\\\"#D050CC\\\\\\\"} />\\\\r\\\\n      <Slider label=\\\\\\\"default\\\\\\\" defaultValue={[25, 75]} />\\\\r\\\\n    </Stack>;\\\\n}\\\",\\n      ...SliderStyle.parameters?.docs?.source\\n    }\\n  }\\n};\\nSized.parameters = {\\n  ...Sized.parameters,\\n  docs: {\\n    ...Sized.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => {\\\\n  return <Stack spacing={3}>\\\\r\\\\n      <RangeSlider label=\\\\\\\"small\\\\\\\" defaultValue={[45, 80]} size=\\\\\\\"small\\\\\\\" />\\\\r\\\\n      <RangeSlider label=\\\\\\\"medium\\\\\\\" defaultValue={[80, 100]} size=\\\\\\\"medium\\\\\\\" />\\\\r\\\\n      <RangeSlider label=\\\\\\\"default\\\\\\\" />\\\\r\\\\n    </Stack>;\\\\n}\\\",\\n      ...Sized.parameters?.docs?.source\\n    }\\n  }\\n};\\nValueLabel.parameters = {\\n  ...ValueLabel.parameters,\\n  docs: {\\n    ...ValueLabel.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => {\\\\n  return <Stack spacing={3}>\\\\r\\\\n      <RangeSlider label=\\\\\\\"auto\\\\\\\" displayValue=\\\\\\\"auto\\\\\\\" defaultValue={[45, 50]} />\\\\r\\\\n      <RangeSlider label=\\\\\\\"on\\\\\\\" displayValue=\\\\\\\"on\\\\\\\" defaultValue={[80, 90]} />\\\\r\\\\n      <RangeSlider label=\\\\\\\"off\\\\\\\" displayValue=\\\\\\\"off\\\\\\\" defaultValue={[45, 60]} />\\\\r\\\\n      <RangeSlider label=\\\\\\\"default\\\\\\\" defaultValue={[20, 50]} />\\\\r\\\\n      <RangeSlider label=\\\\\\\"disabled-auto\\\\\\\" displayValue=\\\\\\\"auto\\\\\\\" defaultValue={[45, 80]} disabled />\\\\r\\\\n      <RangeSlider label=\\\\\\\"disabled-on\\\\\\\" displayValue=\\\\\\\"on\\\\\\\" defaultValue={[50, 80]} disabled />\\\\r\\\\n      <RangeSlider label=\\\\\\\"disabled-off\\\\\\\" displayValue=\\\\\\\"off\\\\\\\" defaultValue={[45, 49]} disabled />\\\\r\\\\n      <RangeSlider label=\\\\\\\"disabled-default\\\\\\\" defaultValue={[5, 45]} disabled />\\\\r\\\\n    </Stack>;\\\\n}\\\",\\n      ...ValueLabel.parameters?.docs?.source\\n    }\\n  }\\n};\\nRangesObject.parameters = {\\n  ...RangesObject.parameters,\\n  docs: {\\n    ...RangesObject.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => {\\\\n  return <Stack spacing={3}>\\\\r\\\\n      <RangeSlider label=\\\\\\\"min: 150, max: 200, step: 2.5\\\\\\\" range={{\\\\n      min: 150,\\\\n      max: 200,\\\\n      step: 2.5,\\\\n      marks: true\\\\n    }} defaultValue={[160, 180]} displayValue=\\\\\\\"on\\\\\\\" />\\\\r\\\\n      <RangeSlider label=\\\\\\\"min: 50, step: 15\\\\\\\" range={{\\\\n      min: 50,\\\\n      step: 15,\\\\n      marks: true\\\\n    }} defaultValue={[65, 90]} displayValue=\\\\\\\"on\\\\\\\" />\\\\r\\\\n      <RangeSlider label=\\\\\\\"max: 50, step: 10\\\\\\\" range={{\\\\n      max: 50,\\\\n      step: 10,\\\\n      marks: true\\\\n    }} defaultValue={[10, 100]} displayValue=\\\\\\\"on\\\\\\\" />\\\\r\\\\n      <RangeSlider label=\\\\\\\"min: 10, max: 50, step: 2\\\\\\\" range={{\\\\n      min: 10,\\\\n      max: 50,\\\\n      step: 2,\\\\n      marks: [{\\\\n        label: \\\\\\\"12L\\\\\\\",\\\\n        value: 12\\\\n      }, {\\\\n        label: \\\\\\\"16L\\\\\\\",\\\\n        value: 16\\\\n      }, {\\\\n        label: \\\\\\\"18M\\\\\\\",\\\\n        value: 18\\\\n      }]\\\\n    }} defaultValue={[40, 90]} displayValue=\\\\\\\"on\\\\\\\" />\\\\r\\\\n    </Stack>;\\\\n}\\\",\\n      ...RangesObject.parameters?.docs?.source\\n    }\\n  }\\n};\\nRangesArray.parameters = {\\n  ...RangesArray.parameters,\\n  docs: {\\n    ...RangesArray.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => {\\\\n  return <Stack spacing={3}>\\\\r\\\\n      <RangeSlider label=\\\\\\\"[min: 150, max: 200, step: 2.5, marks: true]\\\\\\\" range={[150, 200, 2.5, true]} defaultValue={[170, 180]} displayValue=\\\\\\\"on\\\\\\\" />\\\\r\\\\n      <RangeSlider label=\\\\\\\"[50, undefined, 15, true]\\\\\\\" range={[50, undefined, 15, true]} defaultValue={[60, 75]} displayValue=\\\\\\\"on\\\\\\\" />\\\\r\\\\n      <RangeSlider label=\\\\\\\"[undefined, 50, 10, true]\\\\\\\" range={[undefined, 50, 10, true]} defaultValue={[30, 40]} displayValue=\\\\\\\"on\\\\\\\" />\\\\r\\\\n      <RangeSlider label=\\\\\\\"[-50, 50, 10, true]\\\\\\\" range={[-50, 50, 10, true]} defaultValue={[-15, -5]} displayValue=\\\\\\\"on\\\\\\\" />\\\\r\\\\n      <RangeSlider label=\\\\\\\"[undefined, undefined, 10, true]\\\\\\\" range={[undefined, undefined, 10, true]} defaultValue={[12, 18]} displayValue=\\\\\\\"on\\\\\\\" />\\\\r\\\\n    </Stack>;\\\\n}\\\",\\n      ...RangesArray.parameters?.docs?.source\\n    }\\n  }\\n};\\nMarks.parameters = {\\n  ...Marks.parameters,\\n  docs: {\\n    ...Marks.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => {\\\\n  return <Stack spacing={3}>\\\\r\\\\n      <RangeSlider marks defaultValue={[25, 40]} displayValue=\\\\\\\"on\\\\\\\" />\\\\r\\\\n      <RangeSlider marks={[{\\\\n      label: \\\\\\\"0\\\\\\\",\\\\n      value: 0\\\\n    }, {\\\\n      label: \\\\\\\"100\\\\\\\",\\\\n      value: 100\\\\n    }, {\\\\n      label: \\\\\\\"25-hi\\\\\\\",\\\\n      value: 25\\\\n    }, {\\\\n      label: \\\\\\\"60C\\\\\\\",\\\\n      value: 60\\\\n    }]} defaultValue={[25, 40]} displayValue=\\\\\\\"on\\\\\\\" />\\\\r\\\\n      <RangeSlider label={\\\\\\\"chooseFromMarksList\\\\\\\"} marks={[{\\\\n      label: \\\\\\\"0\\\\\\\",\\\\n      value: 0\\\\n    }, {\\\\n      label: \\\\\\\"100\\\\\\\",\\\\n      value: 100\\\\n    }, {\\\\n      label: \\\\\\\"25-hi\\\\\\\",\\\\n      value: 25\\\\n    }, {\\\\n      label: \\\\\\\"60C\\\\\\\",\\\\n      value: 60\\\\n    }]} chooseFromMarksList defaultValue={[25, 40]} displayValue=\\\\\\\"on\\\\\\\" />\\\\r\\\\n    </Stack>;\\\\n}\\\",\\n      ...Marks.parameters?.docs?.source\\n    }\\n  }\\n};\\nDisabled.parameters = {\\n  ...Disabled.parameters,\\n  docs: {\\n    ...Disabled.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => {\\\\n  return <Stack spacing={3}>\\\\r\\\\n      <RangeSlider defaultValue={[25, 40]} />\\\\r\\\\n      <RangeSlider defaultValue={[25, 40]} disabled />\\\\r\\\\n    </Stack>;\\\\n}\\\",\\n      ...Disabled.parameters?.docs?.source\\n    }\\n  }\\n};\\nValueLabelFormat.parameters = {\\n  ...ValueLabelFormat.parameters,\\n  docs: {\\n    ...ValueLabelFormat.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => {\\\\n  return <Stack spacing={3}>\\\\r\\\\n      <RangeSlider defaultValue={[25, 30]} valueLabelFormat={n => `${n}MB`} />\\\\r\\\\n      <RangeSlider defaultValue={[25, 30]} valueLabelFormat={n => n >= 50 ? `${n} UP` : `${n} DOWN`} />\\\\r\\\\n    </Stack>;\\\\n}\\\",\\n      ...ValueLabelFormat.parameters?.docs?.source\\n    }\\n  }\\n};\\nTrackBarPosition.parameters = {\\n  ...TrackBarPosition.parameters,\\n  docs: {\\n    ...TrackBarPosition.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => {\\\\n  return <Stack spacing={3}>\\\\r\\\\n      <RangeSlider label={\\\\\\\"normal\\\\\\\"} defaultValue={[30, 60]} valueLabelFormat={n => `${n} Normal`} trackBarLinePosition=\\\\\\\"normal\\\\\\\" />\\\\r\\\\n      <RangeSlider label={\\\\\\\"inverted\\\\\\\"} defaultValue={[30, 60]} valueLabelFormat={n => `${n} opposite`} trackBarLinePosition=\\\\\\\"inverted\\\\\\\" />\\\\r\\\\n      <RangeSlider label={\\\\\\\"none\\\\\\\"} defaultValue={[30, 60]} valueLabelFormat={n => `${n} none`} trackBarLinePosition={\\\\\\\"none\\\\\\\"} />\\\\r\\\\n      <RangeSlider label={\\\\\\\"false\\\\\\\"} defaultValue={[30, 60]} valueLabelFormat={n => `${n} false`} trackBarLinePosition={false} />\\\\r\\\\n    </Stack>;\\\\n}\\\",\\n      ...TrackBarPosition.parameters?.docs?.source\\n    }\\n  }\\n};\\nOrientation.parameters = {\\n  ...Orientation.parameters,\\n  docs: {\\n    ...Orientation.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => {\\\\n  return <div style={{\\\\n    display: \\\\\\\"flex\\\\\\\",\\\\n    flexDirection: \\\\\\\"column\\\\\\\",\\\\n    gap: \\\\\\\"1em\\\\\\\"\\\\n  }}>\\\\r\\\\n      <RangeSlider startIcon={<VolumeDownIcon />} endIcon={<VolumeUpIcon />} label=\\\\\\\"horizontal\\\\\\\" defaultValue={[30, 60]} orientation=\\\\\\\"horizontal\\\\\\\" marks={marks} />\\\\r\\\\n      <div style={{\\\\n      height: 300\\\\n    }}>\\\\r\\\\n        <RangeSlider startIcon={<VolumeDownIcon />} endIcon={<VolumeUpIcon />} label=\\\\\\\"vertical\\\\\\\" defaultValue={[30, 60]} orientation=\\\\\\\"vertical\\\\\\\" marks={marks} />\\\\r\\\\n      </div>\\\\r\\\\n    </div>;\\\\n}\\\",\\n      ...Orientation.parameters?.docs?.source\\n    }\\n  }\\n};\\nInputField.parameters = {\\n  ...InputField.parameters,\\n  docs: {\\n    ...InputField.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => {\\\\n  const {\\\\n    fromValue,\\\\n    onChangeFromValue,\\\\n    onChangeToValue,\\\\n    toValue\\\\n  } = useValue(30, 50);\\\\n  const handleInputChangeFrom = useHandlerInputChange.bind(null, onChangeFromValue);\\\\n  const handleInputChangeTo = useHandlerInputChange.bind(null, onChangeToValue);\\\\n  const handleBlur = () => {\\\\n    if (fromValue < 0) {\\\\n      onChangeFromValue(0);\\\\n      action(\\\\\\\"onChangeFromValue\\\\\\\")(0);\\\\n    } else if (toValue > 100) {\\\\n      onChangeToValue(100);\\\\n      action(\\\\\\\"onChangeToValue\\\\\\\")(100);\\\\n    }\\\\n  };\\\\n  return <>\\\\r\\\\n      <RangeSlider defaultValue={[40, 60]} startIcon={<VolumeUpIcon />} endIcon={<VolumeDownIcon />} />\\\\r\\\\n      <RangeSlider defaultValue={[40, 60]} startIcon={<VolumeUpIcon />} fromValue={fromValue} onChangeFromValue={onChangeFromValue} onChangeToValue={onChangeToValue} toValue={toValue} inputCmp={<>\\\\r\\\\n            <Input value={fromValue} size=\\\\\\\"small\\\\\\\" onChange={handleInputChangeFrom} onBlur={handleBlur} inputProps={{\\\\n        step: 10,\\\\n        min: 0,\\\\n        max: 100,\\\\n        type: \\\\\\\"number\\\\\\\"\\\\n      }} />\\\\r\\\\n            <Input value={toValue} size=\\\\\\\"small\\\\\\\" onChange={handleInputChangeTo} onBlur={handleBlur} inputProps={{\\\\n        step: 10,\\\\n        min: 0,\\\\n        max: 100,\\\\n        type: \\\\\\\"number\\\\\\\"\\\\n      }} />\\\\r\\\\n          </>} />\\\\r\\\\n      <RangeSlider defaultValue={[40, 60]} startIcon={<VolumeUpIcon />} endIcon={<VolumeDownIcon />} fromValue={fromValue} onChangeFromValue={onChangeFromValue} onChangeToValue={onChangeToValue} toValue={toValue} inputCmp={<>\\\\r\\\\n            <Input value={fromValue} size=\\\\\\\"small\\\\\\\" onChange={handleInputChangeFrom} onBlur={handleBlur} inputProps={{\\\\n        step: 10,\\\\n        min: 0,\\\\n        max: 100,\\\\n        type: \\\\\\\"number\\\\\\\"\\\\n      }} />\\\\r\\\\n            <Input value={toValue} size=\\\\\\\"small\\\\\\\" onChange={handleInputChangeTo} onBlur={handleBlur} inputProps={{\\\\n        step: 10,\\\\n        min: 0,\\\\n        max: 100,\\\\n        type: \\\\\\\"number\\\\\\\"\\\\n      }} />\\\\r\\\\n          </>} />\\\\r\\\\n    </>;\\\\n}\\\",\\n      ...InputField.parameters?.docs?.source\\n    }\\n  }\\n};\\nMultiValue.parameters = {\\n  ...MultiValue.parameters,\\n  docs: {\\n    ...MultiValue.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => {\\\\n  const [value, setValue] = useState([30, 60, 90, 100]);\\\\n  const onChange = (event, newValue) => setValue(newValue);\\\\n  return <RangeSlider label=\\\\\\\"MultiValue\\\\\\\" value={value} onChange={onChange} />;\\\\n}\\\",\\n      ...MultiValue.parameters?.docs?.source\\n    }\\n  }\\n};\",\n    \"locationsMap\": {\n      \"default\": {\n        \"startLoc\": {\n          \"col\": 23,\n          \"line\": 28\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 30\n        },\n        \"startBody\": {\n          \"col\": 23,\n          \"line\": 28\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 30\n        }\n      },\n      \"disable-swap\": {\n        \"startLoc\": {\n          \"col\": 27,\n          \"line\": 43\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 49\n        },\n        \"startBody\": {\n          \"col\": 27,\n          \"line\": 43\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 49\n        }\n      },\n      \"themed-and-colored\": {\n        \"startLoc\": {\n          \"col\": 32,\n          \"line\": 50\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 59\n        },\n        \"startBody\": {\n          \"col\": 32,\n          \"line\": 50\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 59\n        }\n      },\n      \"slider-style\": {\n        \"startLoc\": {\n          \"col\": 27,\n          \"line\": 60\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 69\n        },\n        \"startBody\": {\n          \"col\": 27,\n          \"line\": 60\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 69\n        }\n      },\n      \"sized\": {\n        \"startLoc\": {\n          \"col\": 21,\n          \"line\": 70\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 76\n        },\n        \"startBody\": {\n          \"col\": 21,\n          \"line\": 70\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 76\n        }\n      },\n      \"value-label\": {\n        \"startLoc\": {\n          \"col\": 26,\n          \"line\": 77\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 88\n        },\n        \"startBody\": {\n          \"col\": 26,\n          \"line\": 77\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 88\n        }\n      },\n      \"ranges-object\": {\n        \"startLoc\": {\n          \"col\": 28,\n          \"line\": 89\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 123\n        },\n        \"startBody\": {\n          \"col\": 28,\n          \"line\": 89\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 123\n        }\n      },\n      \"ranges-array\": {\n        \"startLoc\": {\n          \"col\": 27,\n          \"line\": 124\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 132\n        },\n        \"startBody\": {\n          \"col\": 27,\n          \"line\": 124\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 132\n        }\n      },\n      \"marks\": {\n        \"startLoc\": {\n          \"col\": 21,\n          \"line\": 133\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 163\n        },\n        \"startBody\": {\n          \"col\": 21,\n          \"line\": 133\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 163\n        }\n      },\n      \"disabled\": {\n        \"startLoc\": {\n          \"col\": 24,\n          \"line\": 164\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 169\n        },\n        \"startBody\": {\n          \"col\": 24,\n          \"line\": 164\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 169\n        }\n      },\n      \"value-label-format\": {\n        \"startLoc\": {\n          \"col\": 32,\n          \"line\": 170\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 175\n        },\n        \"startBody\": {\n          \"col\": 32,\n          \"line\": 170\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 175\n        }\n      },\n      \"track-bar-position\": {\n        \"startLoc\": {\n          \"col\": 32,\n          \"line\": 176\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 183\n        },\n        \"startBody\": {\n          \"col\": 32,\n          \"line\": 176\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 183\n        }\n      },\n      \"orientation\": {\n        \"startLoc\": {\n          \"col\": 27,\n          \"line\": 197\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 210\n        },\n        \"startBody\": {\n          \"col\": 27,\n          \"line\": 197\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 210\n        }\n      },\n      \"input-field\": {\n        \"startLoc\": {\n          \"col\": 26,\n          \"line\": 216\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 265\n        },\n        \"startBody\": {\n          \"col\": 26,\n          \"line\": 216\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 265\n        }\n      },\n      \"multi-value\": {\n        \"startLoc\": {\n          \"col\": 26,\n          \"line\": 266\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 270\n        },\n        \"startBody\": {\n          \"col\": 26,\n          \"line\": 266\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 270\n        }\n      }\n    }\n  }\n,},\n  title: \"Inputs/RangeSlider\",\n  component: RangeSlider,\n  decorators: [Story => <div style={{\n    width: \"500px\",\n    height: \"450px\",\n    border: \"1px dashed black\",\n    padding: \"1em\"\n  }}>\r\n        <Story />\r\n      </div>]\n};\nconst actions = {\n  onClick: action(\"onClick\")\n};\nexport const Default = () => {\n  return <RangeSlider {...actions} />;\n};;\nfunction useValue(v1 = 0, v2 = 0) {\n  const [fromValue, setFromValue] = React.useState(v1);\n  const [toValue, setToValue] = React.useState(v2);\n  const onChangeFromValue = (event, newValue) => setFromValue(newValue);\n  const onChangeToValue = (event, newValue) => setToValue(newValue);\n  return {\n    fromValue,\n    toValue,\n    onChangeFromValue,\n    onChangeToValue\n  };\n}\nexport const DisableSwap = () => {\n  return <Stack spacing={3}>\r\n      <RangeSlider label=\"swap\" {...useValue(30, 50)} minDistance={10} />\r\n      <RangeSlider label=\"DisableSwap - locking\" disableSwap=\"locking\" {...useValue(30, 50)} minDistance={10} />\r\n      <RangeSlider label=\"DisableSwap - trailing\" disableSwap=\"trailing\" {...useValue(30, 50)} minDistance={10} />\r\n    </Stack>;\n};;\nexport const ThemedAndColored = () => {\n  return <Stack>\r\n      <RangeSlider color=\"primary\" label=\"primary\" defaultValue={[10, 50]} />\r\n      <RangeSlider color=\"secondary\" label=\"secondary\" defaultValue={[10, 50]} />\r\n      <RangeSlider color=\"info\" label=\"info\" defaultValue={[10, 50]} />\r\n      <RangeSlider color=\"error\" label=\"error\" defaultValue={[10, 50]} />\r\n      <RangeSlider label=\"Default\" defaultValue={[10, 50]} />\r\n      <RangeSlider label=\"#D050CC\" color=\"#D050CC\" defaultValue={[10, 50]} />\r\n    </Stack>;\n};;\nexport const SliderStyle = () => {\n  return <Stack>\r\n      <Slider label={SLIDER_STYLES.IOS} defaultValue={[25, 75]} sliderStyle={SLIDER_STYLES.IOS} />\r\n      <Slider label={SLIDER_STYLES.PRETTO} defaultValue={[25, 75]} sliderStyle={SLIDER_STYLES.PRETTO} />\r\n      <Slider label={SLIDER_STYLES.AIRBNB} defaultValue={[25, 75]} sliderStyle={SLIDER_STYLES.AIRBNB} />\r\n      <Slider label={SLIDER_STYLES.TOOLTIP_VALUE} defaultValue={[25, 75]} sliderStyle={SLIDER_STYLES.TOOLTIP_VALUE} />\r\n      <Slider label=\"custom style\" defaultValue={[25, 75]} color={\"#D050CC\"} />\r\n      <Slider label=\"default\" defaultValue={[25, 75]} />\r\n    </Stack>;\n};;\nexport const Sized = () => {\n  return <Stack spacing={3}>\r\n      <RangeSlider label=\"small\" defaultValue={[45, 80]} size=\"small\" />\r\n      <RangeSlider label=\"medium\" defaultValue={[80, 100]} size=\"medium\" />\r\n      <RangeSlider label=\"default\" />\r\n    </Stack>;\n};;\nexport const ValueLabel = () => {\n  return <Stack spacing={3}>\r\n      <RangeSlider label=\"auto\" displayValue=\"auto\" defaultValue={[45, 50]} />\r\n      <RangeSlider label=\"on\" displayValue=\"on\" defaultValue={[80, 90]} />\r\n      <RangeSlider label=\"off\" displayValue=\"off\" defaultValue={[45, 60]} />\r\n      <RangeSlider label=\"default\" defaultValue={[20, 50]} />\r\n      <RangeSlider label=\"disabled-auto\" displayValue=\"auto\" defaultValue={[45, 80]} disabled />\r\n      <RangeSlider label=\"disabled-on\" displayValue=\"on\" defaultValue={[50, 80]} disabled />\r\n      <RangeSlider label=\"disabled-off\" displayValue=\"off\" defaultValue={[45, 49]} disabled />\r\n      <RangeSlider label=\"disabled-default\" defaultValue={[5, 45]} disabled />\r\n    </Stack>;\n};;\nexport const RangesObject = () => {\n  return <Stack spacing={3}>\r\n      <RangeSlider label=\"min: 150, max: 200, step: 2.5\" range={{\n      min: 150,\n      max: 200,\n      step: 2.5,\n      marks: true\n    }} defaultValue={[160, 180]} displayValue=\"on\" />\r\n      <RangeSlider label=\"min: 50, step: 15\" range={{\n      min: 50,\n      step: 15,\n      marks: true\n    }} defaultValue={[65, 90]} displayValue=\"on\" />\r\n      <RangeSlider label=\"max: 50, step: 10\" range={{\n      max: 50,\n      step: 10,\n      marks: true\n    }} defaultValue={[10, 100]} displayValue=\"on\" />\r\n      <RangeSlider label=\"min: 10, max: 50, step: 2\" range={{\n      min: 10,\n      max: 50,\n      step: 2,\n      marks: [{\n        label: \"12L\",\n        value: 12\n      }, {\n        label: \"16L\",\n        value: 16\n      }, {\n        label: \"18M\",\n        value: 18\n      }]\n    }} defaultValue={[40, 90]} displayValue=\"on\" />\r\n    </Stack>;\n};;\nexport const RangesArray = () => {\n  return <Stack spacing={3}>\r\n      <RangeSlider label=\"[min: 150, max: 200, step: 2.5, marks: true]\" range={[150, 200, 2.5, true]} defaultValue={[170, 180]} displayValue=\"on\" />\r\n      <RangeSlider label=\"[50, undefined, 15, true]\" range={[50, undefined, 15, true]} defaultValue={[60, 75]} displayValue=\"on\" />\r\n      <RangeSlider label=\"[undefined, 50, 10, true]\" range={[undefined, 50, 10, true]} defaultValue={[30, 40]} displayValue=\"on\" />\r\n      <RangeSlider label=\"[-50, 50, 10, true]\" range={[-50, 50, 10, true]} defaultValue={[-15, -5]} displayValue=\"on\" />\r\n      <RangeSlider label=\"[undefined, undefined, 10, true]\" range={[undefined, undefined, 10, true]} defaultValue={[12, 18]} displayValue=\"on\" />\r\n    </Stack>;\n};;\nexport const Marks = () => {\n  return <Stack spacing={3}>\r\n      <RangeSlider marks defaultValue={[25, 40]} displayValue=\"on\" />\r\n      <RangeSlider marks={[{\n      label: \"0\",\n      value: 0\n    }, {\n      label: \"100\",\n      value: 100\n    }, {\n      label: \"25-hi\",\n      value: 25\n    }, {\n      label: \"60C\",\n      value: 60\n    }]} defaultValue={[25, 40]} displayValue=\"on\" />\r\n      <RangeSlider label={\"chooseFromMarksList\"} marks={[{\n      label: \"0\",\n      value: 0\n    }, {\n      label: \"100\",\n      value: 100\n    }, {\n      label: \"25-hi\",\n      value: 25\n    }, {\n      label: \"60C\",\n      value: 60\n    }]} chooseFromMarksList defaultValue={[25, 40]} displayValue=\"on\" />\r\n    </Stack>;\n};;\nexport const Disabled = () => {\n  return <Stack spacing={3}>\r\n      <RangeSlider defaultValue={[25, 40]} />\r\n      <RangeSlider defaultValue={[25, 40]} disabled />\r\n    </Stack>;\n};;\nexport const ValueLabelFormat = () => {\n  return <Stack spacing={3}>\r\n      <RangeSlider defaultValue={[25, 30]} valueLabelFormat={n => `${n}MB`} />\r\n      <RangeSlider defaultValue={[25, 30]} valueLabelFormat={n => n >= 50 ? `${n} UP` : `${n} DOWN`} />\r\n    </Stack>;\n};;\nexport const TrackBarPosition = () => {\n  return <Stack spacing={3}>\r\n      <RangeSlider label={\"normal\"} defaultValue={[30, 60]} valueLabelFormat={n => `${n} Normal`} trackBarLinePosition=\"normal\" />\r\n      <RangeSlider label={\"inverted\"} defaultValue={[30, 60]} valueLabelFormat={n => `${n} opposite`} trackBarLinePosition=\"inverted\" />\r\n      <RangeSlider label={\"none\"} defaultValue={[30, 60]} valueLabelFormat={n => `${n} none`} trackBarLinePosition={\"none\"} />\r\n      <RangeSlider label={\"false\"} defaultValue={[30, 60]} valueLabelFormat={n => `${n} false`} trackBarLinePosition={false} />\r\n    </Stack>;\n};;\nconst marks = [{\n  value: 0,\n  label: \"0°C\"\n}, {\n  value: 20,\n  label: \"20°C\"\n}, {\n  value: 37,\n  label: \"37°C\"\n}, {\n  value: 100,\n  label: \"100°C\"\n}];\nexport const Orientation = () => {\n  return <div style={{\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"1em\"\n  }}>\r\n      <RangeSlider startIcon={<VolumeDownIcon />} endIcon={<VolumeUpIcon />} label=\"horizontal\" defaultValue={[30, 60]} orientation=\"horizontal\" marks={marks} />\r\n      <div style={{\n      height: 300\n    }}>\r\n        <RangeSlider startIcon={<VolumeDownIcon />} endIcon={<VolumeUpIcon />} label=\"vertical\" defaultValue={[30, 60]} orientation=\"vertical\" marks={marks} />\r\n      </div>\r\n    </div>;\n};;\nfunction useHandlerInputChange(handler, event) {\n  const v = event.target.value;\n  const value = v === \"\" ? \"\" : Number(v);\n  handler(event, value);\n}\nexport const InputField = () => {\n  const {\n    fromValue,\n    onChangeFromValue,\n    onChangeToValue,\n    toValue\n  } = useValue(30, 50);\n  const handleInputChangeFrom = useHandlerInputChange.bind(null, onChangeFromValue);\n  const handleInputChangeTo = useHandlerInputChange.bind(null, onChangeToValue);\n  const handleBlur = () => {\n    if (fromValue < 0) {\n      onChangeFromValue(0);\n      action(\"onChangeFromValue\")(0);\n    } else if (toValue > 100) {\n      onChangeToValue(100);\n      action(\"onChangeToValue\")(100);\n    }\n  };\n  return <>\r\n      <RangeSlider defaultValue={[40, 60]} startIcon={<VolumeUpIcon />} endIcon={<VolumeDownIcon />} />\r\n      <RangeSlider defaultValue={[40, 60]} startIcon={<VolumeUpIcon />} fromValue={fromValue} onChangeFromValue={onChangeFromValue} onChangeToValue={onChangeToValue} toValue={toValue} inputCmp={<>\r\n            <Input value={fromValue} size=\"small\" onChange={handleInputChangeFrom} onBlur={handleBlur} inputProps={{\n        step: 10,\n        min: 0,\n        max: 100,\n        type: \"number\"\n      }} />\r\n            <Input value={toValue} size=\"small\" onChange={handleInputChangeTo} onBlur={handleBlur} inputProps={{\n        step: 10,\n        min: 0,\n        max: 100,\n        type: \"number\"\n      }} />\r\n          </>} />\r\n      <RangeSlider defaultValue={[40, 60]} startIcon={<VolumeUpIcon />} endIcon={<VolumeDownIcon />} fromValue={fromValue} onChangeFromValue={onChangeFromValue} onChangeToValue={onChangeToValue} toValue={toValue} inputCmp={<>\r\n            <Input value={fromValue} size=\"small\" onChange={handleInputChangeFrom} onBlur={handleBlur} inputProps={{\n        step: 10,\n        min: 0,\n        max: 100,\n        type: \"number\"\n      }} />\r\n            <Input value={toValue} size=\"small\" onChange={handleInputChangeTo} onBlur={handleBlur} inputProps={{\n        step: 10,\n        min: 0,\n        max: 100,\n        type: \"number\"\n      }} />\r\n          </>} />\r\n    </>;\n};;\nexport const MultiValue = () => {\n  const [value, setValue] = useState([30, 60, 90, 100]);\n  const onChange = (event, newValue) => setValue(newValue);\n  return <RangeSlider label=\"MultiValue\" value={value} onChange={onChange} />;\n};\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...Default.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <RangeSlider {...actions} />;\\n}\",\n      ...Default.parameters?.docs?.source\n    }\n  }\n};\nDisableSwap.parameters = {\n  ...DisableSwap.parameters,\n  docs: {\n    ...DisableSwap.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <Stack spacing={3}>\\r\\n      <RangeSlider label=\\\"swap\\\" {...useValue(30, 50)} minDistance={10} />\\r\\n      <RangeSlider label=\\\"DisableSwap - locking\\\" disableSwap=\\\"locking\\\" {...useValue(30, 50)} minDistance={10} />\\r\\n      <RangeSlider label=\\\"DisableSwap - trailing\\\" disableSwap=\\\"trailing\\\" {...useValue(30, 50)} minDistance={10} />\\r\\n    </Stack>;\\n}\",\n      ...DisableSwap.parameters?.docs?.source\n    }\n  }\n};\nThemedAndColored.parameters = {\n  ...ThemedAndColored.parameters,\n  docs: {\n    ...ThemedAndColored.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <Stack>\\r\\n      <RangeSlider color=\\\"primary\\\" label=\\\"primary\\\" defaultValue={[10, 50]} />\\r\\n      <RangeSlider color=\\\"secondary\\\" label=\\\"secondary\\\" defaultValue={[10, 50]} />\\r\\n      <RangeSlider color=\\\"info\\\" label=\\\"info\\\" defaultValue={[10, 50]} />\\r\\n      <RangeSlider color=\\\"error\\\" label=\\\"error\\\" defaultValue={[10, 50]} />\\r\\n      <RangeSlider label=\\\"Default\\\" defaultValue={[10, 50]} />\\r\\n      <RangeSlider label=\\\"#D050CC\\\" color=\\\"#D050CC\\\" defaultValue={[10, 50]} />\\r\\n    </Stack>;\\n}\",\n      ...ThemedAndColored.parameters?.docs?.source\n    }\n  }\n};\nSliderStyle.parameters = {\n  ...SliderStyle.parameters,\n  docs: {\n    ...SliderStyle.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <Stack>\\r\\n      <Slider label={SLIDER_STYLES.IOS} defaultValue={[25, 75]} sliderStyle={SLIDER_STYLES.IOS} />\\r\\n      <Slider label={SLIDER_STYLES.PRETTO} defaultValue={[25, 75]} sliderStyle={SLIDER_STYLES.PRETTO} />\\r\\n      <Slider label={SLIDER_STYLES.AIRBNB} defaultValue={[25, 75]} sliderStyle={SLIDER_STYLES.AIRBNB} />\\r\\n      <Slider label={SLIDER_STYLES.TOOLTIP_VALUE} defaultValue={[25, 75]} sliderStyle={SLIDER_STYLES.TOOLTIP_VALUE} />\\r\\n      <Slider label=\\\"custom style\\\" defaultValue={[25, 75]} color={\\\"#D050CC\\\"} />\\r\\n      <Slider label=\\\"default\\\" defaultValue={[25, 75]} />\\r\\n    </Stack>;\\n}\",\n      ...SliderStyle.parameters?.docs?.source\n    }\n  }\n};\nSized.parameters = {\n  ...Sized.parameters,\n  docs: {\n    ...Sized.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <Stack spacing={3}>\\r\\n      <RangeSlider label=\\\"small\\\" defaultValue={[45, 80]} size=\\\"small\\\" />\\r\\n      <RangeSlider label=\\\"medium\\\" defaultValue={[80, 100]} size=\\\"medium\\\" />\\r\\n      <RangeSlider label=\\\"default\\\" />\\r\\n    </Stack>;\\n}\",\n      ...Sized.parameters?.docs?.source\n    }\n  }\n};\nValueLabel.parameters = {\n  ...ValueLabel.parameters,\n  docs: {\n    ...ValueLabel.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <Stack spacing={3}>\\r\\n      <RangeSlider label=\\\"auto\\\" displayValue=\\\"auto\\\" defaultValue={[45, 50]} />\\r\\n      <RangeSlider label=\\\"on\\\" displayValue=\\\"on\\\" defaultValue={[80, 90]} />\\r\\n      <RangeSlider label=\\\"off\\\" displayValue=\\\"off\\\" defaultValue={[45, 60]} />\\r\\n      <RangeSlider label=\\\"default\\\" defaultValue={[20, 50]} />\\r\\n      <RangeSlider label=\\\"disabled-auto\\\" displayValue=\\\"auto\\\" defaultValue={[45, 80]} disabled />\\r\\n      <RangeSlider label=\\\"disabled-on\\\" displayValue=\\\"on\\\" defaultValue={[50, 80]} disabled />\\r\\n      <RangeSlider label=\\\"disabled-off\\\" displayValue=\\\"off\\\" defaultValue={[45, 49]} disabled />\\r\\n      <RangeSlider label=\\\"disabled-default\\\" defaultValue={[5, 45]} disabled />\\r\\n    </Stack>;\\n}\",\n      ...ValueLabel.parameters?.docs?.source\n    }\n  }\n};\nRangesObject.parameters = {\n  ...RangesObject.parameters,\n  docs: {\n    ...RangesObject.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <Stack spacing={3}>\\r\\n      <RangeSlider label=\\\"min: 150, max: 200, step: 2.5\\\" range={{\\n      min: 150,\\n      max: 200,\\n      step: 2.5,\\n      marks: true\\n    }} defaultValue={[160, 180]} displayValue=\\\"on\\\" />\\r\\n      <RangeSlider label=\\\"min: 50, step: 15\\\" range={{\\n      min: 50,\\n      step: 15,\\n      marks: true\\n    }} defaultValue={[65, 90]} displayValue=\\\"on\\\" />\\r\\n      <RangeSlider label=\\\"max: 50, step: 10\\\" range={{\\n      max: 50,\\n      step: 10,\\n      marks: true\\n    }} defaultValue={[10, 100]} displayValue=\\\"on\\\" />\\r\\n      <RangeSlider label=\\\"min: 10, max: 50, step: 2\\\" range={{\\n      min: 10,\\n      max: 50,\\n      step: 2,\\n      marks: [{\\n        label: \\\"12L\\\",\\n        value: 12\\n      }, {\\n        label: \\\"16L\\\",\\n        value: 16\\n      }, {\\n        label: \\\"18M\\\",\\n        value: 18\\n      }]\\n    }} defaultValue={[40, 90]} displayValue=\\\"on\\\" />\\r\\n    </Stack>;\\n}\",\n      ...RangesObject.parameters?.docs?.source\n    }\n  }\n};\nRangesArray.parameters = {\n  ...RangesArray.parameters,\n  docs: {\n    ...RangesArray.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <Stack spacing={3}>\\r\\n      <RangeSlider label=\\\"[min: 150, max: 200, step: 2.5, marks: true]\\\" range={[150, 200, 2.5, true]} defaultValue={[170, 180]} displayValue=\\\"on\\\" />\\r\\n      <RangeSlider label=\\\"[50, undefined, 15, true]\\\" range={[50, undefined, 15, true]} defaultValue={[60, 75]} displayValue=\\\"on\\\" />\\r\\n      <RangeSlider label=\\\"[undefined, 50, 10, true]\\\" range={[undefined, 50, 10, true]} defaultValue={[30, 40]} displayValue=\\\"on\\\" />\\r\\n      <RangeSlider label=\\\"[-50, 50, 10, true]\\\" range={[-50, 50, 10, true]} defaultValue={[-15, -5]} displayValue=\\\"on\\\" />\\r\\n      <RangeSlider label=\\\"[undefined, undefined, 10, true]\\\" range={[undefined, undefined, 10, true]} defaultValue={[12, 18]} displayValue=\\\"on\\\" />\\r\\n    </Stack>;\\n}\",\n      ...RangesArray.parameters?.docs?.source\n    }\n  }\n};\nMarks.parameters = {\n  ...Marks.parameters,\n  docs: {\n    ...Marks.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <Stack spacing={3}>\\r\\n      <RangeSlider marks defaultValue={[25, 40]} displayValue=\\\"on\\\" />\\r\\n      <RangeSlider marks={[{\\n      label: \\\"0\\\",\\n      value: 0\\n    }, {\\n      label: \\\"100\\\",\\n      value: 100\\n    }, {\\n      label: \\\"25-hi\\\",\\n      value: 25\\n    }, {\\n      label: \\\"60C\\\",\\n      value: 60\\n    }]} defaultValue={[25, 40]} displayValue=\\\"on\\\" />\\r\\n      <RangeSlider label={\\\"chooseFromMarksList\\\"} marks={[{\\n      label: \\\"0\\\",\\n      value: 0\\n    }, {\\n      label: \\\"100\\\",\\n      value: 100\\n    }, {\\n      label: \\\"25-hi\\\",\\n      value: 25\\n    }, {\\n      label: \\\"60C\\\",\\n      value: 60\\n    }]} chooseFromMarksList defaultValue={[25, 40]} displayValue=\\\"on\\\" />\\r\\n    </Stack>;\\n}\",\n      ...Marks.parameters?.docs?.source\n    }\n  }\n};\nDisabled.parameters = {\n  ...Disabled.parameters,\n  docs: {\n    ...Disabled.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <Stack spacing={3}>\\r\\n      <RangeSlider defaultValue={[25, 40]} />\\r\\n      <RangeSlider defaultValue={[25, 40]} disabled />\\r\\n    </Stack>;\\n}\",\n      ...Disabled.parameters?.docs?.source\n    }\n  }\n};\nValueLabelFormat.parameters = {\n  ...ValueLabelFormat.parameters,\n  docs: {\n    ...ValueLabelFormat.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <Stack spacing={3}>\\r\\n      <RangeSlider defaultValue={[25, 30]} valueLabelFormat={n => `${n}MB`} />\\r\\n      <RangeSlider defaultValue={[25, 30]} valueLabelFormat={n => n >= 50 ? `${n} UP` : `${n} DOWN`} />\\r\\n    </Stack>;\\n}\",\n      ...ValueLabelFormat.parameters?.docs?.source\n    }\n  }\n};\nTrackBarPosition.parameters = {\n  ...TrackBarPosition.parameters,\n  docs: {\n    ...TrackBarPosition.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <Stack spacing={3}>\\r\\n      <RangeSlider label={\\\"normal\\\"} defaultValue={[30, 60]} valueLabelFormat={n => `${n} Normal`} trackBarLinePosition=\\\"normal\\\" />\\r\\n      <RangeSlider label={\\\"inverted\\\"} defaultValue={[30, 60]} valueLabelFormat={n => `${n} opposite`} trackBarLinePosition=\\\"inverted\\\" />\\r\\n      <RangeSlider label={\\\"none\\\"} defaultValue={[30, 60]} valueLabelFormat={n => `${n} none`} trackBarLinePosition={\\\"none\\\"} />\\r\\n      <RangeSlider label={\\\"false\\\"} defaultValue={[30, 60]} valueLabelFormat={n => `${n} false`} trackBarLinePosition={false} />\\r\\n    </Stack>;\\n}\",\n      ...TrackBarPosition.parameters?.docs?.source\n    }\n  }\n};\nOrientation.parameters = {\n  ...Orientation.parameters,\n  docs: {\n    ...Orientation.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <div style={{\\n    display: \\\"flex\\\",\\n    flexDirection: \\\"column\\\",\\n    gap: \\\"1em\\\"\\n  }}>\\r\\n      <RangeSlider startIcon={<VolumeDownIcon />} endIcon={<VolumeUpIcon />} label=\\\"horizontal\\\" defaultValue={[30, 60]} orientation=\\\"horizontal\\\" marks={marks} />\\r\\n      <div style={{\\n      height: 300\\n    }}>\\r\\n        <RangeSlider startIcon={<VolumeDownIcon />} endIcon={<VolumeUpIcon />} label=\\\"vertical\\\" defaultValue={[30, 60]} orientation=\\\"vertical\\\" marks={marks} />\\r\\n      </div>\\r\\n    </div>;\\n}\",\n      ...Orientation.parameters?.docs?.source\n    }\n  }\n};\nInputField.parameters = {\n  ...InputField.parameters,\n  docs: {\n    ...InputField.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  const {\\n    fromValue,\\n    onChangeFromValue,\\n    onChangeToValue,\\n    toValue\\n  } = useValue(30, 50);\\n  const handleInputChangeFrom = useHandlerInputChange.bind(null, onChangeFromValue);\\n  const handleInputChangeTo = useHandlerInputChange.bind(null, onChangeToValue);\\n  const handleBlur = () => {\\n    if (fromValue < 0) {\\n      onChangeFromValue(0);\\n      action(\\\"onChangeFromValue\\\")(0);\\n    } else if (toValue > 100) {\\n      onChangeToValue(100);\\n      action(\\\"onChangeToValue\\\")(100);\\n    }\\n  };\\n  return <>\\r\\n      <RangeSlider defaultValue={[40, 60]} startIcon={<VolumeUpIcon />} endIcon={<VolumeDownIcon />} />\\r\\n      <RangeSlider defaultValue={[40, 60]} startIcon={<VolumeUpIcon />} fromValue={fromValue} onChangeFromValue={onChangeFromValue} onChangeToValue={onChangeToValue} toValue={toValue} inputCmp={<>\\r\\n            <Input value={fromValue} size=\\\"small\\\" onChange={handleInputChangeFrom} onBlur={handleBlur} inputProps={{\\n        step: 10,\\n        min: 0,\\n        max: 100,\\n        type: \\\"number\\\"\\n      }} />\\r\\n            <Input value={toValue} size=\\\"small\\\" onChange={handleInputChangeTo} onBlur={handleBlur} inputProps={{\\n        step: 10,\\n        min: 0,\\n        max: 100,\\n        type: \\\"number\\\"\\n      }} />\\r\\n          </>} />\\r\\n      <RangeSlider defaultValue={[40, 60]} startIcon={<VolumeUpIcon />} endIcon={<VolumeDownIcon />} fromValue={fromValue} onChangeFromValue={onChangeFromValue} onChangeToValue={onChangeToValue} toValue={toValue} inputCmp={<>\\r\\n            <Input value={fromValue} size=\\\"small\\\" onChange={handleInputChangeFrom} onBlur={handleBlur} inputProps={{\\n        step: 10,\\n        min: 0,\\n        max: 100,\\n        type: \\\"number\\\"\\n      }} />\\r\\n            <Input value={toValue} size=\\\"small\\\" onChange={handleInputChangeTo} onBlur={handleBlur} inputProps={{\\n        step: 10,\\n        min: 0,\\n        max: 100,\\n        type: \\\"number\\\"\\n      }} />\\r\\n          </>} />\\r\\n    </>;\\n}\",\n      ...InputField.parameters?.docs?.source\n    }\n  }\n};\nMultiValue.parameters = {\n  ...MultiValue.parameters,\n  docs: {\n    ...MultiValue.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  const [value, setValue] = useState([30, 60, 90, 100]);\\n  const onChange = (event, newValue) => setValue(newValue);\\n  return <RangeSlider label=\\\"MultiValue\\\" value={value} onChange={onChange} />;\\n}\",\n      ...MultiValue.parameters?.docs?.source\n    }\n  }\n};","import { get } from 'lodash-es';\r\nimport { css } from '@mui/material/styles';\r\nimport { alpha } from '@mui/material';\r\nimport { SLIDER_STYLES } from './Slider.consts';\r\n\r\nexport function sliderStyleCustomColor(props) {\r\n    if (props.sliderStyle || !props.customColor) return css``;\r\n\r\n    const { track: trackColor, thumb: thumbColor } =\r\n        typeof props.customColor === 'string'\r\n            ? { thumb: props.customColor, track: props.customColor }\r\n            : props.customColor ?? {};\r\n\r\n    return css`\r\n        & .MuiSlider-track,\r\n        & .MuiSlider-rail {\r\n            color: ${trackColor} !important;\r\n        }\r\n        & .MuiSlider-thumb {\r\n            color: ${thumbColor} !important;\r\n        }\r\n\r\n        & .MuiSlider-thumb:hover,\r\n        & .Mui-focusVisible {\r\n            box-shadow: ${thumbColor && `0px 0px 0px 8px ${alpha(thumbColor, 0.16)}`} !important;\r\n        }\r\n\r\n        & .MuiSlider-thumb.Mui-active {\r\n            box-shadow: ${thumbColor && `0px 0px 0px 14px ${alpha(thumbColor, 0.16)}`} !important;\r\n        }\r\n    `;\r\n}\r\n\r\nconst iOSBoxShadow = '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\r\n\r\nexport function sliderStyleIOS(props) {\r\n    if (props.sliderStyle !== SLIDER_STYLES.IOS) return css``;\r\n\r\n    const { theme, customColor, muiColor } = props;\r\n    const primary = get(theme, `palette.primary.main`);\r\n    const color = get(theme, `palette.${muiColor}.main`, customColor ?? primary);\r\n\r\n    return css`\r\n        color: ${color};\r\n        height: 2px;\r\n        padding: 15px 0;\r\n        & .MuiSlider-thumb {\r\n            height: 28px;\r\n            width: 28px;\r\n            background-color: #fff;\r\n            box-shadow: ${iOSBoxShadow};\r\n            &:focus,\r\n            &:hover,\r\n            &.Mui-active {\r\n                box-shadow: 0 3px 1px rgba(0, 0, 0, 0.1), 0 4px 8px rgba(0, 0, 0, 0.3), 0 0 0 1px rgba(0, 0, 0, 0.02);\r\n                // Reset on touch devices, it doesn't add specificity\r\n                @media (hover: none) {\r\n                    box-shadow: ${iOSBoxShadow};\r\n                }\r\n            }\r\n        }\r\n        & .MuiSlider-valueLabel {\r\n            font-size: 12px;\r\n            font-weight: normal;\r\n            top: -6px;\r\n            background-color: unset;\r\n            color: ${theme.palette.text.primary};\r\n            &:before {\r\n                display: none;\r\n            }\r\n            & * {\r\n                background: transparent;\r\n                color: ${color};\r\n            }\r\n        }\r\n        & .MuiSlider-track {\r\n            border: none;\r\n        }\r\n        & .MuiSlider-rail {\r\n            opacity: 0.5;\r\n            background-color: #bfbfbf;\r\n        }\r\n        ,\r\n        & .MuiSlider-mark {\r\n            background-color: #bfbfbf;\r\n            height: 8px;\r\n            width: 1px;\r\n            &.MuiSlider-markActive {\r\n                opacity: 1;\r\n                background-color: currentColor;\r\n            }\r\n        }\r\n    `;\r\n}\r\n\r\nexport function sliderStylePretto(props) {\r\n    if (props.sliderStyle !== SLIDER_STYLES.PRETTO) return css``;\r\n\r\n    const { theme, customColor, muiColor } = props;\r\n    const primary = get(theme, `palette.primary.main`);\r\n    const color = get(theme, `palette.${muiColor}.main`, customColor ?? primary);\r\n\r\n    return css`\r\n        color: ${color};\r\n        height: 8px;\r\n        & .MuiSlider-track {\r\n            border: none;\r\n        }\r\n        & .MuiSlider-thumb {\r\n            height: 24px;\r\n            width: 24px;\r\n            background-color: #fff;\r\n            border: 2px solid currentColor;\r\n            &:focus,\r\n            &:hover,\r\n            &.Mui-active,\r\n            &.Mui-focusVisible {\r\n                box-shadow: inherit;\r\n            }\r\n            ,\r\n            &:before {\r\n                display: none;\r\n            }\r\n        }\r\n        & .MuiSlider-valueLabel {\r\n            line-height: 1.2;\r\n            font-size: 12px;\r\n            background: unset;\r\n            padding: 0;\r\n            width: 32px;\r\n            height: 32px;\r\n            border-radius: 50% 50% 50% 0;\r\n            background-color: ${color};\r\n            transform-origin: bottom left;\r\n            transform: translate(50%, -100%) rotate(-45deg) scale(0);\r\n            &:before {\r\n                display: none;\r\n            }\r\n            ,\r\n            &.MuiSlider-valueLabelOpen {\r\n                transform: translate(50%, -100%) rotate(-45deg) scale(1);\r\n            }\r\n            ,\r\n            & > * {\r\n                transform: rotate(45deg);\r\n            }\r\n        }\r\n    `;\r\n}\r\n\r\nexport function sliderStyleAirBNB(props) {\r\n    if (props.sliderStyle !== SLIDER_STYLES.AIRBNB) return css``;\r\n\r\n    const { theme, customColor, muiColor } = props;\r\n    const primary = get(theme, `palette.primary.main`);\r\n    const color = get(theme, `palette.${muiColor}.main`, customColor ?? primary);\r\n\r\n    return css`\r\n        color: ${color};\r\n        height: 3px;\r\n        padding: 13px 0;\r\n        & .MuiSlider-thumb {\r\n            height: 27px;\r\n            width: 27px;\r\n            background-color: #fff;\r\n            border: 1px solid currentColor;\r\n            &:hover {\r\n                box-shadow: 0 0 0 8px rgba(58, 133, 137, 0.16);\r\n            }\r\n            & .airbnb-bar {\r\n                height: 9px;\r\n                width: 1px;\r\n                background-color: currentColor;\r\n                margin-left: 1px;\r\n                margin-right: 1px;\r\n            }\r\n        }\r\n        & .MuiSlider-track {\r\n            height: 3px;\r\n        }\r\n        & .MuiSlider-rail {\r\n            color: ${theme.palette.mode === 'dark' ? '#bfbfbf' : '#d8d8d8'};\r\n            opacity: ${theme.palette.mode === 'dark' ? undefined : 1};\r\n            height: 3px;\r\n        }\r\n    `;\r\n}\r\n","import { Typography as MuiTypography } from \"@mui/material\";\r\nimport MuiSlider, { SliderThumb } from \"@mui/material/Slider\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\nimport {\r\n  sliderStyleIOS,\r\n  sliderStylePretto,\r\n  sliderStyleAirBNB,\r\n  sliderStyleCustomColor,\r\n} from \"./Slider.styles\";\r\nimport React from \"react\";\r\nimport Tooltip from \"../Tooltip/Tooltip\";\r\nexport { Grid, Box } from \"@mui/material\";\r\n\r\nexport function ValueLabelComponent(props) {\r\n  const { children, value } = props;\r\n\r\n  return (\r\n    <Tooltip\r\n      enterTouchDelay={0}\r\n      placement=\"top\"\r\n      title={`${value}`}\r\n      arrow={false}\r\n    >\r\n      {children}\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nexport function AirbnbThumbComponent(props) {\r\n  const { children, ...other } = props;\r\n  return (\r\n    <SliderThumb {...other}>\r\n      {children}\r\n      <span className=\"airbnb-bar\" />\r\n      <span className=\"airbnb-bar\" />\r\n      <span className=\"airbnb-bar\" />\r\n    </SliderThumb>\r\n  );\r\n}\r\n\r\nexport const Slider = styled(MuiSlider, {\r\n  shouldForwardProp: (propName) =>\r\n    ![\"startIcon\", \"endIcon\", \"customColor\", \"sliderStyle\"].includes(propName),\r\n})`\r\n  ${sliderStyleIOS}\r\n  ${sliderStylePretto}\r\n  ${sliderStyleAirBNB}\r\n  ${sliderStyleCustomColor}\r\n`;\r\n\r\nexport const SliderLabel = styled(({ ...props }) => (\r\n  <MuiTypography gutterBottom {...props} />\r\n))``;\r\n"],"names":[],"sourceRoot":""}