"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[3231],{"./src/components/_FIXED/TreeView/__stories__/TreeView.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicTreeView:()=>BasicTreeView,CustomItem:()=>CustomItem,Default:()=>Default,GmailCloneStyles:()=>GmailCloneStyles,IndentBorderStyles:()=>IndentBorderStyles,MultiSelection:()=>MultiSelection,__namedExportsOrder:()=>__namedExportsOrder,default:()=>TreeView_stories});var react=__webpack_require__("./node_modules/react/index.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),colorManipulator=__webpack_require__("./node_modules/@mui/system/esm/colorManipulator.js"),TreeView=__webpack_require__("./node_modules/@mui/lab/TreeView/TreeView.js"),TreeItem=__webpack_require__("./node_modules/@mui/lab/TreeItem/TreeItem.js"),treeItemClasses=__webpack_require__("./node_modules/@mui/lab/TreeItem/treeItemClasses.js"),emotion_react_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");function borderedStyles(props){return props.bordered?emotion_react_browser_esm.AH`
        & .${treeItemClasses.A.group} {
            margin-left: 15px;
            padding-left: 18px;
            border-left: 1px dashed ${(0,colorManipulator.X4)(props.theme.palette.text.primary,.4)};
        }
    `:emotion_react_browser_esm.AH``}function closeIconFade(props){return props.closeIconFade?emotion_react_browser_esm.AH`
        & .${treeItemClasses.A.iconContainer} {
            & .close {
                opacity: 0.3;
            }
        }
    `:emotion_react_browser_esm.AH``}function selectedColor(props){return emotion_react_browser_esm.AH`
        color: ${props.theme.palette.text.secondary};
        & .${treeItemClasses.A.content} {
            color: ${props.theme.palette.text.secondary};

            &.Mui-focused,
            &.Mui-selected,
            &.Mui-selected.Mui-focused {
                color: var(--tree-view-color);
                background-color: var(--tree-view-bg-color, ${props.theme.palette.action.selected}});
            }

            &:hover {
                background-color: ${props.theme.palette.action.hover};
            }
        }
    `}function edgeCorners(props){return props.edgeCorners?emotion_react_browser_esm.AH`
        & .${treeItemClasses.A.content} {
            border-top-right-radius: ${props.theme.spacing(2)};
            border-bottom-right-radius: ${props.theme.spacing(2)};
        }
    `:emotion_react_browser_esm.AH``}try{borderedStyles.displayName="borderedStyles",borderedStyles.__docgenInfo={description:"",displayName:"borderedStyles",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TreeView/TreeView.styles.tsx#borderedStyles"]={docgenInfo:borderedStyles.__docgenInfo,name:"borderedStyles",path:"src/components/_FIXED/TreeView/TreeView.styles.tsx#borderedStyles"})}catch(__react_docgen_typescript_loader_error){}try{closeIconFade.displayName="closeIconFade",closeIconFade.__docgenInfo={description:"",displayName:"closeIconFade",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TreeView/TreeView.styles.tsx#closeIconFade"]={docgenInfo:closeIconFade.__docgenInfo,name:"closeIconFade",path:"src/components/_FIXED/TreeView/TreeView.styles.tsx#closeIconFade"})}catch(__react_docgen_typescript_loader_error){}try{selectedColor.displayName="selectedColor",selectedColor.__docgenInfo={description:"",displayName:"selectedColor",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TreeView/TreeView.styles.tsx#selectedColor"]={docgenInfo:selectedColor.__docgenInfo,name:"selectedColor",path:"src/components/_FIXED/TreeView/TreeView.styles.tsx#selectedColor"})}catch(__react_docgen_typescript_loader_error){}try{edgeCorners.displayName="edgeCorners",edgeCorners.__docgenInfo={description:"",displayName:"edgeCorners",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TreeView/TreeView.styles.tsx#edgeCorners"]={docgenInfo:edgeCorners.__docgenInfo,name:"edgeCorners",path:"src/components/_FIXED/TreeView/TreeView.styles.tsx#edgeCorners"})}catch(__react_docgen_typescript_loader_error){}var helpers=__webpack_require__("./src/utils/helpers.ts");const TreeView_styled_TreeView=(0,styled.Ay)(TreeView.A,{shouldForwardProp:propName=>!["maxWidth","height"].includes(propName)})`
    height: ${props=>(0,helpers.vb)(props.height)};
    flex-grow: 1;
    max-width: ${props=>props.maxWidth?(0,helpers.vb)(props.maxWidth):void 0};
    overflow-y: auto;
    overflow-x: hidden;
`,TreeView_styled_TreeItem=TreeItem.A,LabelIconTreeItemStyled=(0,styled.Ay)(TreeItem.A)((({theme})=>({color:theme.palette.text.secondary,[`& .${treeItemClasses.A.content}`]:{width:"auto",color:theme.palette.text.secondary,borderTopRightRadius:theme.spacing(2),borderBottomRightRadius:theme.spacing(2),paddingRight:theme.spacing(1),fontWeight:theme.typography.fontWeightMedium,"&.Mui-expanded":{fontWeight:theme.typography.fontWeightRegular},"&:hover":{backgroundColor:theme.palette.action.hover},"&.Mui-focused, &.Mui-selected, &.Mui-selected.Mui-focused":{backgroundColor:`var(--tree-view-bg-color, ${theme.palette.action.selected})`,color:"var(--tree-view-color)"},[`& .${treeItemClasses.A.label}`]:{fontWeight:"inherit",color:"inherit"}},[`& .${treeItemClasses.A.group}`]:{marginLeft:0,[`& .${treeItemClasses.A.content}`]:{paddingLeft:theme.spacing(2)}}}))),IndentBorderTreeItemStyled=(0,styled.Ay)(TreeItem.A)((({theme})=>({[`& .${treeItemClasses.A.iconContainer}`]:{"& .close":{opacity:.3}},[`& .${treeItemClasses.A.group}`]:{marginLeft:15,paddingLeft:18,borderLeft:`1px dashed ${(0,colorManipulator.X4)(theme.palette.text.primary,.4)}`}}))),TreeItemStyled=(0,styled.Ay)(TreeItem.A,{shouldForwardProp:propName=>!["bordered","closeIconFade"].includes(propName)})`
    ${closeIconFade};
    ${borderedStyles};
    ${selectedColor};
    ${edgeCorners};

    & .${treeItemClasses.A.content} {
        width: auto;

        padding-right: ${props=>props.theme.spacing(1)};
        font-weight: ${props=>props.theme.typography.fontWeightMedium};

        &.Mui-expanded {
            font-weight: ${props=>props.theme.typography.fontWeightRegular};
        }

        & .${treeItemClasses.A.label} {
            font-weight: inherit;
            color: inherit;
        }
    }

    & .${treeItemClasses.A.group} {
        margin-left: 0;

        & .${treeItemClasses.A.content} {
            padding-left: ${props=>props.theme.spacing(2)};
        }
    }
`;try{TreeView_styled_TreeView.displayName="TreeView",TreeView_styled_TreeView.__docgenInfo={description:"",displayName:"TreeView",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}},maxWidth:{defaultValue:null,description:"",name:"maxWidth",required:!1,type:{name:"string | number"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"string | number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TreeView/TreeView.styled.tsx#TreeView"]={docgenInfo:TreeView_styled_TreeView.__docgenInfo,name:"TreeView",path:"src/components/_FIXED/TreeView/TreeView.styled.tsx#TreeView"})}catch(__react_docgen_typescript_loader_error){}try{TreeView_styled_TreeItem.displayName="TreeItem",TreeView_styled_TreeItem.__docgenInfo={description:"",displayName:"TreeItem",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TreeView/TreeView.styled.tsx#TreeItem"]={docgenInfo:TreeView_styled_TreeItem.__docgenInfo,name:"TreeItem",path:"src/components/_FIXED/TreeView/TreeView.styled.tsx#TreeItem"})}catch(__react_docgen_typescript_loader_error){}try{LabelIconTreeItemStyled.displayName="LabelIconTreeItemStyled",LabelIconTreeItemStyled.__docgenInfo={description:"",displayName:"LabelIconTreeItemStyled",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TreeView/TreeView.styled.tsx#LabelIconTreeItemStyled"]={docgenInfo:LabelIconTreeItemStyled.__docgenInfo,name:"LabelIconTreeItemStyled",path:"src/components/_FIXED/TreeView/TreeView.styled.tsx#LabelIconTreeItemStyled"})}catch(__react_docgen_typescript_loader_error){}try{IndentBorderTreeItemStyled.displayName="IndentBorderTreeItemStyled",IndentBorderTreeItemStyled.__docgenInfo={description:"",displayName:"IndentBorderTreeItemStyled",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TreeView/TreeView.styled.tsx#IndentBorderTreeItemStyled"]={docgenInfo:IndentBorderTreeItemStyled.__docgenInfo,name:"IndentBorderTreeItemStyled",path:"src/components/_FIXED/TreeView/TreeView.styled.tsx#IndentBorderTreeItemStyled"})}catch(__react_docgen_typescript_loader_error){}try{TreeItemStyled.displayName="TreeItemStyled",TreeItemStyled.__docgenInfo={description:"",displayName:"TreeItemStyled",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TreeView/TreeView.styled.tsx#TreeItemStyled"]={docgenInfo:TreeItemStyled.__docgenInfo,name:"TreeItemStyled",path:"src/components/_FIXED/TreeView/TreeView.styled.tsx#TreeItemStyled"})}catch(__react_docgen_typescript_loader_error){}var Typography=__webpack_require__("./src/components/_FIXED/Typography/Typography.tsx"),SVGIcon=__webpack_require__("./src/components/_FIXED/SVGIcon/SVGIcon.tsx"),ArrowDropDown=__webpack_require__("./node_modules/@mui/icons-material/esm/ArrowDropDown.js"),ArrowRight=__webpack_require__("./node_modules/@mui/icons-material/esm/ArrowRight.js");const _excluded=["nodeId","id","fieldId","bgColor","color","icon","info","label"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const LabelIconTreeItem=(0,react.forwardRef)(((props,ref)=>{const _ref=props??{},{nodeId,id,fieldId,bgColor,color,icon:_labelIcon,info:labelInfo,label:labelText}=_ref,other=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.includes(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.includes(o)||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded),labelIcon="string"==typeof _labelIcon?react.createElement(SVGIcon.A,null,_labelIcon):_labelIcon;return props&&react.createElement(LabelIconTreeItemStyled,_extends({ref},other,{nodeId:props[fieldId]||nodeId||id,label:react.createElement(Box.A,{sx:{display:"flex",alignItems:"center",p:.5,pr:0}},labelIcon&&react.createElement(Box.A,{color:"inherit",sx:{mr:1,display:"flex",alignItems:"center"}},labelIcon),labelText&&react.createElement(Typography.A,{variant:"body2",sx:{fontWeight:"inherit",flexGrow:1}},labelText),labelInfo&&react.createElement(Typography.A,{variant:"caption",color:"inherit"},labelInfo)),style:{"--tree-view-color":color,"--tree-view-bg-color":bgColor}}))})),TreeItemComponents_LabelIconTreeItem=LabelIconTreeItem,LabelIconTreeItemIcons={collapseIcon:react.createElement(ArrowDropDown.A,null),expandIcon:react.createElement(ArrowRight.A,null),endIcon:react.createElement("div",{style:{width:24}})};try{LabelIconTreeItem.displayName="LabelIconTreeItem",LabelIconTreeItem.__docgenInfo={description:"",displayName:"LabelIconTreeItem",props:{bgColor:{defaultValue:null,description:"",name:"bgColor",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"",name:"icon",required:!1,type:{name:"ReactNode | ReactElement<any, string | JSXElementConstructor<any>>"}},info:{defaultValue:null,description:"",name:"info",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TreeView/TreeItemComponents/LabelIconTreeItem.tsx#LabelIconTreeItem"]={docgenInfo:LabelIconTreeItem.__docgenInfo,name:"LabelIconTreeItem",path:"src/components/_FIXED/TreeView/TreeItemComponents/LabelIconTreeItem.tsx#LabelIconTreeItem"})}catch(__react_docgen_typescript_loader_error){}var SvgIcon=__webpack_require__("./node_modules/@mui/material/SvgIcon/SvgIcon.js");function TreeView_icons_extends(){return TreeView_icons_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},TreeView_icons_extends.apply(null,arguments)}function MinusSquare(props){return react.createElement(SvgIcon.A,TreeView_icons_extends({fontSize:"inherit",style:{width:14,height:14}},props),react.createElement("path",{d:"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z"}))}function PlusSquare(props){return react.createElement(SvgIcon.A,TreeView_icons_extends({fontSize:"inherit",style:{width:14,height:14}},props),react.createElement("path",{d:"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z"}))}function CloseSquare(props){return react.createElement(SvgIcon.A,TreeView_icons_extends({className:"close",fontSize:"inherit",style:{width:14,height:14}},props),react.createElement("path",{d:"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z"}))}MinusSquare.displayName="MinusSquare",PlusSquare.displayName="PlusSquare",CloseSquare.displayName="CloseSquare";try{MinusSquare.displayName="MinusSquare",MinusSquare.__docgenInfo={description:"",displayName:"MinusSquare",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TreeView/TreeView.icons.tsx#MinusSquare"]={docgenInfo:MinusSquare.__docgenInfo,name:"MinusSquare",path:"src/components/_FIXED/TreeView/TreeView.icons.tsx#MinusSquare"})}catch(__react_docgen_typescript_loader_error){}try{PlusSquare.displayName="PlusSquare",PlusSquare.__docgenInfo={description:"",displayName:"PlusSquare",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TreeView/TreeView.icons.tsx#PlusSquare"]={docgenInfo:PlusSquare.__docgenInfo,name:"PlusSquare",path:"src/components/_FIXED/TreeView/TreeView.icons.tsx#PlusSquare"})}catch(__react_docgen_typescript_loader_error){}try{CloseSquare.displayName="CloseSquare",CloseSquare.__docgenInfo={description:"",displayName:"CloseSquare",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TreeView/TreeView.icons.tsx#CloseSquare"]={docgenInfo:CloseSquare.__docgenInfo,name:"CloseSquare",path:"src/components/_FIXED/TreeView/TreeView.icons.tsx#CloseSquare"})}catch(__react_docgen_typescript_loader_error){}const IndentBorderTreeItem_excluded=["bgColor","color","icon","label"];function IndentBorderTreeItem_extends(){return IndentBorderTreeItem_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},IndentBorderTreeItem_extends.apply(null,arguments)}const IndentBorderTreeItem=(0,react.forwardRef)(((props,ref)=>{const _ref=props??{},{bgColor,color,icon,label}=_ref,other=function IndentBorderTreeItem_objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function IndentBorderTreeItem_objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.includes(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.includes(o)||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,IndentBorderTreeItem_excluded);return props&&react.createElement(IndentBorderTreeItemStyled,IndentBorderTreeItem_extends({ref},other,{label,style:{"--tree-view-color":color,"--tree-view-bg-color":bgColor}}))})),TreeItemComponents_IndentBorderTreeItem=IndentBorderTreeItem,IndentBorderTreeItemIcons={collapseIcon:react.createElement(MinusSquare,null),expandIcon:react.createElement(PlusSquare,null),endIcon:react.createElement(CloseSquare,null)};try{IndentBorderTreeItem.displayName="IndentBorderTreeItem",IndentBorderTreeItem.__docgenInfo={description:"",displayName:"IndentBorderTreeItem",props:{bgColor:{defaultValue:null,description:"",name:"bgColor",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TreeView/TreeItemComponents/IndentBorderTreeItem.tsx#IndentBorderTreeItem"]={docgenInfo:IndentBorderTreeItem.__docgenInfo,name:"IndentBorderTreeItem",path:"src/components/_FIXED/TreeView/TreeItemComponents/IndentBorderTreeItem.tsx#IndentBorderTreeItem"})}catch(__react_docgen_typescript_loader_error){}var Button=__webpack_require__("./src/components/_FIXED/Button/Button.tsx"),Collapse=__webpack_require__("./node_modules/@mui/material/Collapse/Collapse.js"),react_spring_web_modern=__webpack_require__("./node_modules/@react-spring/web/dist/react-spring_web.modern.mjs");function TransitionComponent(props){const style=(0,react_spring_web_modern.zh)({from:{opacity:0,transform:"translate3d(0,-20px,0)"},to:{opacity:props.in?1:0,transform:`translate3d(0,${props.in?0:20}px,0)`}});return react.createElement(react_spring_web_modern.CS.div,{style},react.createElement(Collapse.A,props))}TransitionComponent.displayName="TransitionComponent";const TreeView_transition=TransitionComponent;try{TransitionComponent.displayName="TransitionComponent",TransitionComponent.__docgenInfo={description:"",displayName:"TransitionComponent",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TreeView/TreeView.transition.tsx#TransitionComponent"]={docgenInfo:TransitionComponent.__docgenInfo,name:"TransitionComponent",path:"src/components/_FIXED/TreeView/TreeView.transition.tsx#TransitionComponent"})}catch(__react_docgen_typescript_loader_error){}var useTreeItem=__webpack_require__("./node_modules/@mui/lab/TreeItem/useTreeItem.js");const withTreeViewItem_excluded=["nodeId","TransitionComponent","children","closeIconFade","closeIconFadeStyles","borderedStyles","edgeCornersStyles"],_excluded2=["children"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function withTreeViewItem_extends(){return withTreeViewItem_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},withTreeViewItem_extends.apply(null,arguments)}function withTreeViewItem_objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function withTreeViewItem_objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.includes(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.includes(o)||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}const TreeView_excluded=["borderedStyles","closeIconFadeStyles","collapseIcon","CustomComponent","edgeCornersStyles","endIcon","expandedIds","expandIcon","externalItemProps","fieldId","fieldLabel","maxWidth","multiSelect","nodes","onExpanded","onSelected","selectedIds","TransitionComponent","TreeItemComponent","useStyle"],TreeView_excluded2=["id","label"];function TreeView_extends(){return TreeView_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},TreeView_extends.apply(null,arguments)}function TreeView_objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function TreeView_objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.includes(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.includes(o)||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}const TreeView_TreeView=_ref=>{let{borderedStyles=!1,closeIconFadeStyles=!1,collapseIcon:_collapseIcon="ExpandMore",CustomComponent,edgeCornersStyles=!1,endIcon:_endIcon,expandedIds,expandIcon:_expandIcon="ChevronRight",externalItemProps={},fieldId,fieldLabel,maxWidth,multiSelect,nodes=[],onExpanded,onSelected,selectedIds,TransitionComponent=TreeView_transition,TreeItemComponent=TreeView_styled_TreeItem,useStyle}=_ref,props=TreeView_objectWithoutProperties(_ref,TreeView_excluded);const collapseIcon="string"==typeof _collapseIcon?react.createElement(SVGIcon.A,null,_collapseIcon):_collapseIcon,expandIcon="string"==typeof _expandIcon?react.createElement(SVGIcon.A,null,_expandIcon):_expandIcon,endIcon="string"==typeof _endIcon?react.createElement(SVGIcon.A,null,_endIcon):_endIcon,handleToggle=onExpanded?(event,nodeIds)=>onExpanded([].concat(nodeIds)):void 0,handleSelect=onSelected?(event,nodeIds)=>onSelected([].concat(nodeIds)):void 0,CustomTreeItem=CustomComponent?function withTreeViewItem(Component,TreeItemComponent=TreeView_styled_TreeItem,externalItemProps={}){const CustomTreeItemChild=(0,react.forwardRef)(((props,ref)=>{const _ref=props??{},{nodeId,TransitionComponent,children,closeIconFade,closeIconFadeStyles,borderedStyles,edgeCornersStyles}=_ref,restProps=withTreeViewItem_objectWithoutProperties(_ref,withTreeViewItem_excluded),{disabled,expanded,selected,focused,handleExpansion,handleSelection,preventSelection}=(0,useTreeItem.A)(nodeId);return props&&react.createElement(TreeItemComponent,{key:nodeId,ref,nodeId,TransitionComponent,closeIconFade,bordered:borderedStyles,closeIconFadeStyles,borderedStyles,edgeCornersStyles,label:react.createElement(Component,withTreeViewItem_extends({},restProps,externalItemProps,{nodeId,itemDisabled:disabled,itemExpanded:expanded,itemSelected:selected,itemFocused:focused,onExpandedItem:event=>handleExpansion?.(event),onSelectedItem:event=>handleSelection?.(event),preventSelectItem:preventSelection})),style:_objectSpread(_objectSpread({},restProps.color&&{"--tree-view-color":restProps.color}),restProps.bgColor&&{"--tree-view-bg-color":restProps.bgColor})},[].concat(children??[])?.map((({props:treeItemProps},index)=>react.createElement(CustomTreeItemChild,withTreeViewItem_extends({key:treeItemProps?.nodeId??index},treeItemProps)))))}));return function renderTree(_ref2){let{children}=_ref2,props=withTreeViewItem_objectWithoutProperties(_ref2,_excluded2);return react.createElement(CustomTreeItemChild,props,[].concat(children??[])?.map((({props:treeItemProps})=>renderTree(treeItemProps))))}}(CustomComponent,TreeItemStyled,externalItemProps):TreeItemComponent,renderTree=nodes=>nodes?.map((_ref2=>{let{id,label}=_ref2,node=TreeView_objectWithoutProperties(_ref2,TreeView_excluded2);return react.createElement(CustomTreeItem,TreeView_extends({key:node[fieldId]??id,id:node[fieldId]??id,nodeId:node[fieldId]??id,label:node[fieldLabel]??label,TransitionComponent},node),renderTree(node.children))}));return react.createElement(Box.A,null,react.createElement(TreeView_styled_TreeView,TreeView_extends({defaultCollapseIcon:collapseIcon,defaultExpandIcon:expandIcon,defaultEndIcon:endIcon,expanded:expandedIds,selected:selectedIds,onNodeToggle:handleToggle,onNodeSelect:handleSelect,maxWidth},multiSelect&&{multiSelect},props),CustomTreeItem&&renderTree(nodes)))};TreeView_TreeView.displayName="TreeView";const _FIXED_TreeView_TreeView=TreeView_TreeView;try{TreeView_TreeView.displayName="TreeView",TreeView_TreeView.__docgenInfo={description:"",displayName:"TreeView",props:{borderedStyles:{defaultValue:{value:"false"},description:"",name:"borderedStyles",required:!1,type:{name:"boolean"}},closeIconFadeStyles:{defaultValue:{value:"false"},description:"",name:"closeIconFadeStyles",required:!1,type:{name:"boolean"}},collapseIcon:{defaultValue:null,description:"",name:"collapseIcon",required:!1,type:{name:"IconType"}},CustomComponent:{defaultValue:null,description:"",name:"CustomComponent",required:!1,type:{name:"ElementType"}},edgeCornersStyles:{defaultValue:{value:"false"},description:"",name:"edgeCornersStyles",required:!1,type:{name:"boolean"}},endIcon:{defaultValue:null,description:"",name:"endIcon",required:!1,type:{name:"IconType"}},expandedIds:{defaultValue:null,description:"",name:"expandedIds",required:!1,type:{name:"string[]"}},expandIcon:{defaultValue:null,description:"",name:"expandIcon",required:!1,type:{name:"IconType"}},externalItemProps:{defaultValue:{value:"{}"},description:"",name:"externalItemProps",required:!1,type:{name:"Record<string, any>"}},fieldId:{defaultValue:null,description:"",name:"fieldId",required:!1,type:{name:"string"}},fieldLabel:{defaultValue:null,description:"",name:"fieldLabel",required:!1,type:{name:"string"}},maxWidth:{defaultValue:null,description:"",name:"maxWidth",required:!1,type:{name:"string | number"}},multiSelect:{defaultValue:null,description:"",name:"multiSelect",required:!1,type:{name:"boolean"}},nodes:{defaultValue:{value:"[]"},description:"",name:"nodes",required:!1,type:{name:"TreeViewNodeProps[]"}},onExpanded:{defaultValue:null,description:"",name:"onExpanded",required:!1,type:{name:"(expandedIds: string[]) => void"}},onSelected:{defaultValue:null,description:"",name:"onSelected",required:!1,type:{name:"(selectedItemIds: string[]) => void"}},selectedIds:{defaultValue:null,description:"",name:"selectedIds",required:!1,type:{name:"string[]"}},TransitionComponent:{defaultValue:null,description:"",name:"TransitionComponent",required:!1,type:{name:"ElementType"}},TreeItemComponent:{defaultValue:null,description:"",name:"TreeItemComponent",required:!1,type:{name:"ElementType"}},useStyle:{defaultValue:null,description:"",name:"useStyle",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"LabelIcon"'},{value:'"IndentBorder"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TreeView/TreeView.tsx#TreeView"]={docgenInfo:TreeView_TreeView.__docgenInfo,name:"TreeView",path:"src/components/_FIXED/TreeView/TreeView.tsx#TreeView"})}catch(__react_docgen_typescript_loader_error){}function TreeView_stories_extends(){return TreeView_stories_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},TreeView_stories_extends.apply(null,arguments)}const TreeView_stories={parameters:{storySource:{source:"import React, { useState } from 'react';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport LabelIconTreeItem, { LabelIconTreeItemIcons } from '../TreeItemComponents/LabelIconTreeItem';\nimport IndentBorderTreeItem, { IndentBorderTreeItemIcons } from '../TreeItemComponents/IndentBorderTreeItem';\nimport { Box } from '@mui/material';\nimport Button from '../../Button/Button';\nimport SVGIcon from '../../SVGIcon/SVGIcon';\nimport Typography from '../../Typography/Typography';\n\nimport TreeView from '../TreeView';\n\nconst meta: Meta<typeof TreeView> = {\n    title: 'Lab/TreeView',\n    component: TreeView,\n    tags: ['autodocs'],\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof TreeView>;\n\nexport const Default: Story = {\n    args: {},\n};\n\nexport const BasicTreeView: Story = {\n    args: {\n        nodes: [\n            {\n                id: '1',\n                label: 'Applications',\n                children: [{ id: '2', label: 'Calendar' }],\n            },\n            {\n                id: '5',\n                label: 'Documents',\n                children: [\n                    { id: '10', label: 'OSS' },\n                    { id: '6', label: 'MUI', children: [{ id: '8', label: 'index.js' }] },\n                ],\n            },\n        ],\n    },\n};\n\nexport const MultiSelection: Story = {\n    args: {\n        expandedIds: ['3'],\n        selectedIds: [],\n        multiSelect: true,\n        nodes: [\n            {\n                id: '1',\n                label: 'Applications',\n                children: [\n                    { id: '2', label: 'Calendar' },\n                    { id: '3', label: 'Chrome' },\n                    { id: '4', label: 'Webstorm' },\n                ],\n            },\n            {\n                id: '5',\n                label: 'Documents',\n                children: [\n                    {\n                        id: '6',\n                        label: 'MUI',\n                        children: [\n                            {\n                                id: '7',\n                                label: 'src',\n                                children: [\n                                    { id: '8', label: 'index.js' },\n                                    { id: '9', label: 'tree-view.js' },\n                                ],\n                            },\n                        ],\n                    },\n                ],\n            },\n        ],\n    },\n    render: (args) => {\n        const [expanded, setExpanded] = useState(args.expandedIds);\n        const [selected, setSelected] = useState(args.selectedIds);\n\n        const handleExpandClick = () => {\n            setExpanded((oldExpanded) => (oldExpanded.length === 0 ? ['1', '5', '6', '7'] : []));\n        };\n        const handleSelectClick = () => {\n            setSelected((oldSelected) =>\n                oldSelected.length === 0 ? ['1', '2', '3', '4', '5', '6', '7', '8', '9'] : []\n            );\n        };\n\n        return (\n            <Box sx={{ height: 270, flexGrow: 1, maxWidth: 400, overflowY: 'auto' }}>\n                <Box sx={{ mb: 1 }}>\n                    <Button onClick={handleExpandClick}>{expanded.length === 0 ? 'Expand all' : 'Collapse all'}</Button>\n                    <Button onClick={handleSelectClick}>{selected.length === 0 ? 'Select all' : 'Unselect all'}</Button>\n                </Box>\n\n                <TreeView\n                    {...args}\n                    expandedIds={expanded}\n                    selectedIds={selected}\n                    onExpanded={setExpanded}\n                    onSelected={setSelected}\n                    multiSelect\n                />\n            </Box>\n        );\n    },\n};\n\nexport const GmailCloneStyles: Story = {\n    args: {\n        expandedIds: ['3'],\n        selectedIds: [],\n        nodes: [\n            {\n                id: '1',\n                label: 'All Mail',\n                icon: 'Mail',\n            },\n            {\n                id: '2',\n                label: 'Trash',\n                icon: 'Delete',\n            },\n            {\n                id: '3',\n                label: 'Categories',\n                icon: 'Label',\n                children: [\n                    {\n                        id: '5',\n                        label: 'Social',\n                        icon: 'SupervisorAccount',\n                        info: '90',\n                        color: '#1a73e8',\n                        bgColor: '#e8f0fe',\n                    },\n                    {\n                        id: '6',\n                        label: 'Updates',\n                        icon: 'Info',\n                        info: '2,294',\n                        color: '#e3742f',\n                        bgColor: '#fcefe3',\n                    },\n                    {\n                        id: '7',\n                        label: 'Forums',\n                        icon: 'Forum',\n                        info: '3,566',\n                        color: '#a250f5',\n                        bgColor: '#f3e8fd',\n                    },\n                    {\n                        id: '8',\n                        label: 'Promotions',\n                        icon: 'LocalOffer',\n                        info: '733',\n                        color: '#3c8039',\n                        bgColor: '#e6f4ea',\n                    },\n                ],\n            },\n            {\n                id: '4',\n                label: 'History',\n                icon: 'Label',\n            },\n        ],\n    },\n    render: (args) => {\n        const [expanded, setExpanded] = useState(args.expandedIds);\n        const [selected, setSelected] = useState(args.selectedIds);\n\n        return (\n            <TreeView\n                {...args}\n                expandedIds={expanded}\n                selectedIds={selected}\n                onExpanded={setExpanded}\n                onSelected={setSelected}\n                TreeItemComponent={LabelIconTreeItem}\n                {...LabelIconTreeItemIcons}\n            />\n        );\n    },\n};\n\nexport const IndentBorderStyles: Story = {\n    args: {\n        expandedIds: ['1'],\n        selectedIds: [],\n        nodes: [\n            {\n                id: '1',\n                label: 'Main',\n                children: [\n                    {\n                        id: '2',\n                        label: 'Hello',\n                    },\n                    {\n                        id: '3',\n                        label: 'Subtree with children',\n                        children: [\n                            {\n                                id: '6',\n                                label: 'Hello',\n                            },\n                            {\n                                id: '7',\n                                label: 'Sub-subtree with children',\n                                children: [\n                                    {\n                                        id: '9',\n                                        label: 'Child 1',\n                                    },\n                                    {\n                                        id: '10',\n                                        label: 'Child 2',\n                                    },\n                                    {\n                                        id: '11',\n                                        label: 'Child 3',\n                                    },\n                                ],\n                            },\n                            {\n                                id: '8',\n                                label: 'Hello',\n                            },\n                        ],\n                    },\n                    {\n                        id: '4',\n                        label: 'World',\n                    },\n                    {\n                        id: '5',\n                        label: 'Something something',\n                    },\n                ],\n            },\n        ],\n    },\n    render: (args) => {\n        const [expanded, setExpanded] = useState(args.expandedIds);\n        const [selected, setSelected] = useState(args.selectedIds);\n\n        return (\n            <TreeView\n                {...args}\n                expandedIds={expanded}\n                selectedIds={selected}\n                onExpanded={setExpanded}\n                onSelected={setSelected}\n                TreeItemComponent={IndentBorderTreeItem}\n                {...IndentBorderTreeItemIcons}\n            />\n        );\n    },\n};\n\nconst StyledTreeItemContent = (props) => {\n    const { nodeId, icon: labelIcon, info: labelInfo, label: labelText, selected } = props ?? {};\n\n    return (\n        props && (\n            <Box sx={{ display: 'flex', alignItems: 'center', p: 0.5, pr: 0 }}>\n                {labelIcon && (\n                    <Box color=\"inherit\" sx={{ mr: 1, display: 'flex', alignItems: 'center' }}>\n                        <SVGIcon muiIconName={labelIcon}>{labelIcon}</SVGIcon>\n                    </Box>\n                )}\n                {labelText && (\n                    <Typography\n                        variant=\"body2\"\n                        sx={{\n                            fontWeight: 'inherit',\n                            flexGrow: 1,\n                            bgColor: selected ? 'red' : undefined,\n                        }}\n                    >\n                        {labelText} ({nodeId})\n                    </Typography>\n                )}\n                {labelInfo && (\n                    <Typography variant=\"caption\" color=\"inherit\">\n                        {labelInfo}\n                    </Typography>\n                )}\n            </Box>\n        )\n    );\n};\n\nexport const CustomItem: Story = {\n    args: {\n        expandedIds: ['1'],\n        selectedIds: [],\n        nodes: [\n            {\n                id: '1',\n                label: 'Main',\n                icon: 'Home',\n                info: 'test',\n                // color: \"red\",\n                // bgColor: \"yellow\",\n                children: [\n                    {\n                        id: '2',\n                        label: 'Hello',\n                    },\n                    {\n                        id: '3',\n                        label: 'Subtree with children',\n                        children: [\n                            {\n                                id: '6',\n                                label: 'Hello',\n                            },\n                            {\n                                id: '7',\n                                label: 'Sub-subtree with children',\n                                children: [\n                                    {\n                                        id: '9',\n                                        label: 'Child 1',\n                                    },\n                                    {\n                                        id: '10',\n                                        label: 'Child 2',\n                                    },\n                                    {\n                                        id: '11',\n                                        label: 'Child 3',\n                                    },\n                                ],\n                            },\n                            {\n                                id: '8',\n                                label: 'Hello',\n                            },\n                        ],\n                    },\n                    {\n                        id: '4',\n                        label: 'World',\n                    },\n                    {\n                        id: '5',\n                        label: 'Something something',\n                    },\n                ],\n            },\n        ],\n    },\n    render: (args) => {\n        const [expanded, setExpanded] = useState(args.expandedIds);\n        const [selected, setSelected] = useState(args.selectedIds);\n\n        return (\n            <TreeView\n                {...args}\n                expandedIds={expanded}\n                selectedIds={selected}\n                onExpanded={setExpanded}\n                onSelected={setSelected}\n                TransitionComponent={null}\n                ItemComponent={StyledTreeItemContent}\n            />\n        );\n    },\n};\n",locationsMap:{default:{startLoc:{col:30,line:22},endLoc:{col:1,line:24},startBody:{col:30,line:22},endBody:{col:1,line:24}},"basic-tree-view":{startLoc:{col:36,line:26},endLoc:{col:1,line:44},startBody:{col:36,line:26},endBody:{col:1,line:44}},"multi-selection":{startLoc:{col:37,line:46},endLoc:{col:1,line:114},startBody:{col:37,line:46},endBody:{col:1,line:114}},"gmail-clone-styles":{startLoc:{col:39,line:116},endLoc:{col:1,line:193},startBody:{col:39,line:116},endBody:{col:1,line:193}},"indent-border-styles":{startLoc:{col:41,line:195},endLoc:{col:1,line:268},startBody:{col:41,line:195},endBody:{col:1,line:268}},"custom-item":{startLoc:{col:33,line:303},endLoc:{col:1,line:380},startBody:{col:33,line:303},endBody:{col:1,line:380}}}}},title:"Lab/TreeView",component:_FIXED_TreeView_TreeView,tags:["autodocs"]},Default={args:{}},BasicTreeView={args:{nodes:[{id:"1",label:"Applications",children:[{id:"2",label:"Calendar"}]},{id:"5",label:"Documents",children:[{id:"10",label:"OSS"},{id:"6",label:"MUI",children:[{id:"8",label:"index.js"}]}]}]}},MultiSelection={args:{expandedIds:["3"],selectedIds:[],multiSelect:!0,nodes:[{id:"1",label:"Applications",children:[{id:"2",label:"Calendar"},{id:"3",label:"Chrome"},{id:"4",label:"Webstorm"}]},{id:"5",label:"Documents",children:[{id:"6",label:"MUI",children:[{id:"7",label:"src",children:[{id:"8",label:"index.js"},{id:"9",label:"tree-view.js"}]}]}]}]},render:args=>{const[expanded,setExpanded]=(0,react.useState)(args.expandedIds),[selected,setSelected]=(0,react.useState)(args.selectedIds);return react.createElement(Box.A,{sx:{height:270,flexGrow:1,maxWidth:400,overflowY:"auto"}},react.createElement(Box.A,{sx:{mb:1}},react.createElement(Button.A,{onClick:()=>{setExpanded((oldExpanded=>0===oldExpanded.length?["1","5","6","7"]:[]))}},0===expanded.length?"Expand all":"Collapse all"),react.createElement(Button.A,{onClick:()=>{setSelected((oldSelected=>0===oldSelected.length?["1","2","3","4","5","6","7","8","9"]:[]))}},0===selected.length?"Select all":"Unselect all")),react.createElement(_FIXED_TreeView_TreeView,TreeView_stories_extends({},args,{expandedIds:expanded,selectedIds:selected,onExpanded:setExpanded,onSelected:setSelected,multiSelect:!0})))}},GmailCloneStyles={args:{expandedIds:["3"],selectedIds:[],nodes:[{id:"1",label:"All Mail",icon:"Mail"},{id:"2",label:"Trash",icon:"Delete"},{id:"3",label:"Categories",icon:"Label",children:[{id:"5",label:"Social",icon:"SupervisorAccount",info:"90",color:"#1a73e8",bgColor:"#e8f0fe"},{id:"6",label:"Updates",icon:"Info",info:"2,294",color:"#e3742f",bgColor:"#fcefe3"},{id:"7",label:"Forums",icon:"Forum",info:"3,566",color:"#a250f5",bgColor:"#f3e8fd"},{id:"8",label:"Promotions",icon:"LocalOffer",info:"733",color:"#3c8039",bgColor:"#e6f4ea"}]},{id:"4",label:"History",icon:"Label"}]},render:args=>{const[expanded,setExpanded]=(0,react.useState)(args.expandedIds),[selected,setSelected]=(0,react.useState)(args.selectedIds);return react.createElement(_FIXED_TreeView_TreeView,TreeView_stories_extends({},args,{expandedIds:expanded,selectedIds:selected,onExpanded:setExpanded,onSelected:setSelected,TreeItemComponent:TreeItemComponents_LabelIconTreeItem},LabelIconTreeItemIcons))}},IndentBorderStyles={args:{expandedIds:["1"],selectedIds:[],nodes:[{id:"1",label:"Main",children:[{id:"2",label:"Hello"},{id:"3",label:"Subtree with children",children:[{id:"6",label:"Hello"},{id:"7",label:"Sub-subtree with children",children:[{id:"9",label:"Child 1"},{id:"10",label:"Child 2"},{id:"11",label:"Child 3"}]},{id:"8",label:"Hello"}]},{id:"4",label:"World"},{id:"5",label:"Something something"}]}]},render:args=>{const[expanded,setExpanded]=(0,react.useState)(args.expandedIds),[selected,setSelected]=(0,react.useState)(args.selectedIds);return react.createElement(_FIXED_TreeView_TreeView,TreeView_stories_extends({},args,{expandedIds:expanded,selectedIds:selected,onExpanded:setExpanded,onSelected:setSelected,TreeItemComponent:TreeItemComponents_IndentBorderTreeItem},IndentBorderTreeItemIcons))}},StyledTreeItemContent=props=>{const{nodeId,icon:labelIcon,info:labelInfo,label:labelText,selected}=props??{};return props&&react.createElement(Box.A,{sx:{display:"flex",alignItems:"center",p:.5,pr:0}},labelIcon&&react.createElement(Box.A,{color:"inherit",sx:{mr:1,display:"flex",alignItems:"center"}},react.createElement(SVGIcon.A,{muiIconName:labelIcon},labelIcon)),labelText&&react.createElement(Typography.A,{variant:"body2",sx:{fontWeight:"inherit",flexGrow:1,bgColor:selected?"red":void 0}},labelText," (",nodeId,")"),labelInfo&&react.createElement(Typography.A,{variant:"caption",color:"inherit"},labelInfo))},CustomItem={args:{expandedIds:["1"],selectedIds:[],nodes:[{id:"1",label:"Main",icon:"Home",info:"test",children:[{id:"2",label:"Hello"},{id:"3",label:"Subtree with children",children:[{id:"6",label:"Hello"},{id:"7",label:"Sub-subtree with children",children:[{id:"9",label:"Child 1"},{id:"10",label:"Child 2"},{id:"11",label:"Child 3"}]},{id:"8",label:"Hello"}]},{id:"4",label:"World"},{id:"5",label:"Something something"}]}]},render:args=>{const[expanded,setExpanded]=(0,react.useState)(args.expandedIds),[selected,setSelected]=(0,react.useState)(args.selectedIds);return react.createElement(_FIXED_TreeView_TreeView,TreeView_stories_extends({},args,{expandedIds:expanded,selectedIds:selected,onExpanded:setExpanded,onSelected:setSelected,TransitionComponent:null,ItemComponent:StyledTreeItemContent}))}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Default.parameters?.docs?.source}}},BasicTreeView.parameters={...BasicTreeView.parameters,docs:{...BasicTreeView.parameters?.docs,source:{originalSource:"{\n  args: {\n    nodes: [{\n      id: '1',\n      label: 'Applications',\n      children: [{\n        id: '2',\n        label: 'Calendar'\n      }]\n    }, {\n      id: '5',\n      label: 'Documents',\n      children: [{\n        id: '10',\n        label: 'OSS'\n      }, {\n        id: '6',\n        label: 'MUI',\n        children: [{\n          id: '8',\n          label: 'index.js'\n        }]\n      }]\n    }]\n  }\n}",...BasicTreeView.parameters?.docs?.source}}},MultiSelection.parameters={...MultiSelection.parameters,docs:{...MultiSelection.parameters?.docs,source:{originalSource:"{\n  args: {\n    expandedIds: ['3'],\n    selectedIds: [],\n    multiSelect: true,\n    nodes: [{\n      id: '1',\n      label: 'Applications',\n      children: [{\n        id: '2',\n        label: 'Calendar'\n      }, {\n        id: '3',\n        label: 'Chrome'\n      }, {\n        id: '4',\n        label: 'Webstorm'\n      }]\n    }, {\n      id: '5',\n      label: 'Documents',\n      children: [{\n        id: '6',\n        label: 'MUI',\n        children: [{\n          id: '7',\n          label: 'src',\n          children: [{\n            id: '8',\n            label: 'index.js'\n          }, {\n            id: '9',\n            label: 'tree-view.js'\n          }]\n        }]\n      }]\n    }]\n  },\n  render: args => {\n    const [expanded, setExpanded] = useState(args.expandedIds);\n    const [selected, setSelected] = useState(args.selectedIds);\n    const handleExpandClick = () => {\n      setExpanded(oldExpanded => oldExpanded.length === 0 ? ['1', '5', '6', '7'] : []);\n    };\n    const handleSelectClick = () => {\n      setSelected(oldSelected => oldSelected.length === 0 ? ['1', '2', '3', '4', '5', '6', '7', '8', '9'] : []);\n    };\n    return <Box sx={{\n      height: 270,\n      flexGrow: 1,\n      maxWidth: 400,\n      overflowY: 'auto'\n    }}>\n                <Box sx={{\n        mb: 1\n      }}>\n                    <Button onClick={handleExpandClick}>{expanded.length === 0 ? 'Expand all' : 'Collapse all'}</Button>\n                    <Button onClick={handleSelectClick}>{selected.length === 0 ? 'Select all' : 'Unselect all'}</Button>\n                </Box>\n\n                <TreeView {...args} expandedIds={expanded} selectedIds={selected} onExpanded={setExpanded} onSelected={setSelected} multiSelect />\n            </Box>;\n  }\n}",...MultiSelection.parameters?.docs?.source}}},GmailCloneStyles.parameters={...GmailCloneStyles.parameters,docs:{...GmailCloneStyles.parameters?.docs,source:{originalSource:"{\n  args: {\n    expandedIds: ['3'],\n    selectedIds: [],\n    nodes: [{\n      id: '1',\n      label: 'All Mail',\n      icon: 'Mail'\n    }, {\n      id: '2',\n      label: 'Trash',\n      icon: 'Delete'\n    }, {\n      id: '3',\n      label: 'Categories',\n      icon: 'Label',\n      children: [{\n        id: '5',\n        label: 'Social',\n        icon: 'SupervisorAccount',\n        info: '90',\n        color: '#1a73e8',\n        bgColor: '#e8f0fe'\n      }, {\n        id: '6',\n        label: 'Updates',\n        icon: 'Info',\n        info: '2,294',\n        color: '#e3742f',\n        bgColor: '#fcefe3'\n      }, {\n        id: '7',\n        label: 'Forums',\n        icon: 'Forum',\n        info: '3,566',\n        color: '#a250f5',\n        bgColor: '#f3e8fd'\n      }, {\n        id: '8',\n        label: 'Promotions',\n        icon: 'LocalOffer',\n        info: '733',\n        color: '#3c8039',\n        bgColor: '#e6f4ea'\n      }]\n    }, {\n      id: '4',\n      label: 'History',\n      icon: 'Label'\n    }]\n  },\n  render: args => {\n    const [expanded, setExpanded] = useState(args.expandedIds);\n    const [selected, setSelected] = useState(args.selectedIds);\n    return <TreeView {...args} expandedIds={expanded} selectedIds={selected} onExpanded={setExpanded} onSelected={setSelected} TreeItemComponent={LabelIconTreeItem} {...LabelIconTreeItemIcons} />;\n  }\n}",...GmailCloneStyles.parameters?.docs?.source}}},IndentBorderStyles.parameters={...IndentBorderStyles.parameters,docs:{...IndentBorderStyles.parameters?.docs,source:{originalSource:"{\n  args: {\n    expandedIds: ['1'],\n    selectedIds: [],\n    nodes: [{\n      id: '1',\n      label: 'Main',\n      children: [{\n        id: '2',\n        label: 'Hello'\n      }, {\n        id: '3',\n        label: 'Subtree with children',\n        children: [{\n          id: '6',\n          label: 'Hello'\n        }, {\n          id: '7',\n          label: 'Sub-subtree with children',\n          children: [{\n            id: '9',\n            label: 'Child 1'\n          }, {\n            id: '10',\n            label: 'Child 2'\n          }, {\n            id: '11',\n            label: 'Child 3'\n          }]\n        }, {\n          id: '8',\n          label: 'Hello'\n        }]\n      }, {\n        id: '4',\n        label: 'World'\n      }, {\n        id: '5',\n        label: 'Something something'\n      }]\n    }]\n  },\n  render: args => {\n    const [expanded, setExpanded] = useState(args.expandedIds);\n    const [selected, setSelected] = useState(args.selectedIds);\n    return <TreeView {...args} expandedIds={expanded} selectedIds={selected} onExpanded={setExpanded} onSelected={setSelected} TreeItemComponent={IndentBorderTreeItem} {...IndentBorderTreeItemIcons} />;\n  }\n}",...IndentBorderStyles.parameters?.docs?.source}}},CustomItem.parameters={...CustomItem.parameters,docs:{...CustomItem.parameters?.docs,source:{originalSource:"{\n  args: {\n    expandedIds: ['1'],\n    selectedIds: [],\n    nodes: [{\n      id: '1',\n      label: 'Main',\n      icon: 'Home',\n      info: 'test',\n      // color: \"red\",\n      // bgColor: \"yellow\",\n      children: [{\n        id: '2',\n        label: 'Hello'\n      }, {\n        id: '3',\n        label: 'Subtree with children',\n        children: [{\n          id: '6',\n          label: 'Hello'\n        }, {\n          id: '7',\n          label: 'Sub-subtree with children',\n          children: [{\n            id: '9',\n            label: 'Child 1'\n          }, {\n            id: '10',\n            label: 'Child 2'\n          }, {\n            id: '11',\n            label: 'Child 3'\n          }]\n        }, {\n          id: '8',\n          label: 'Hello'\n        }]\n      }, {\n        id: '4',\n        label: 'World'\n      }, {\n        id: '5',\n        label: 'Something something'\n      }]\n    }]\n  },\n  render: args => {\n    const [expanded, setExpanded] = useState(args.expandedIds);\n    const [selected, setSelected] = useState(args.selectedIds);\n    return <TreeView {...args} expandedIds={expanded} selectedIds={selected} onExpanded={setExpanded} onSelected={setSelected} TransitionComponent={null} ItemComponent={StyledTreeItemContent} />;\n  }\n}",...CustomItem.parameters?.docs?.source}}};const __namedExportsOrder=["Default","BasicTreeView","MultiSelection","GmailCloneStyles","IndentBorderStyles","CustomItem"]},"./src/components/_FIXED/Typography/Text.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),html_react_parser__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/html-react-parser/index.mjs"),_Typography_styled__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/_FIXED/Typography/Typography.styled.tsx"),_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/_FIXED/Tooltip/Tooltip.tsx"),_utils_helpers__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/utils/helpers.ts"),_Typography_hooks__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/_FIXED/Typography/Typography.hooks.tsx");const _excluded=["align","alignCenter","alignJustify","alignLeft","alignRight","autoWidth","bgColor","children","className","color","component","followCursor","fullWidth","html","innerRef","isEllipsis","justifyContent","link","noWrap","rows","showTooltipOnEllipsis","size","sx","textDirection","tooltip","tooltipPlacement","useEllipsisStyle","width"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const Text=_ref=>{let{align,alignCenter,alignJustify,alignLeft,alignRight,autoWidth=!0,bgColor,children,className,color,component="span",followCursor,fullWidth,html,innerRef,isEllipsis=!1,justifyContent,link,noWrap,rows,showTooltipOnEllipsis=!1,size,sx,textDirection,tooltip,tooltipPlacement,useEllipsisStyle,width}=_ref,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.includes(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.includes(o)||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);const[customColor]=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_4__.Es)(color),[customBGColor]=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_4__.Es)(bgColor),alignItems=(0,_Typography_hooks__WEBPACK_IMPORTED_MODULE_5__.Y)({alignCenter,alignRight,alignLeft,alignJustify,align}),tooltipMessage=(0,_Typography_hooks__WEBPACK_IMPORTED_MODULE_5__.s)({children,tooltip,isEllipsis,showTooltipOnEllipsis});width=fullWidth?"100%":width;const typographyProps=_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({},props),{},{component,align:alignItems,color:customColor,bgColor:customBGColor,fontSize:size,myClassName:className,noWrap:noWrap||0===rows,rows:"boolean"==typeof rows?+rows:rows,textDirection,justifyContent,textWidth:width||(autoWidth?"fit-content":void 0)},props.paragraph&&{component:"p"}),!isEllipsis&&!rows&&(width||alignItems)&&{display:"flex"}),(isEllipsis||rows)&&{display:"contents"}),link&&{href:link,component:"a",target:"_blank"});return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Typography_styled__WEBPACK_IMPORTED_MODULE_2__.o,typographyProps,react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{ref:innerRef,style:_objectSpread({display:"contents",color:customColor,backgroundColor:customBGColor},useEllipsisStyle&&{width:"inherit",textOverflow:"ellipsis",overflow:"hidden"})},html?(0,html_react_parser__WEBPACK_IMPORTED_MODULE_1__.Ay)(children):children)," ",tooltipMessage&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_3__.A,{title:tooltipMessage,placement:tooltipPlacement,followCursor},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{style:{width:"100%",height:"100%",position:"absolute",top:0,left:0}}," ")))};Text.displayName="Text",Text.displayName="Text";const __WEBPACK_DEFAULT_EXPORT__=Text;try{Text.displayName="Text",Text.__docgenInfo={description:"",displayName:"Text",props:{alignCenter:{defaultValue:null,description:"",name:"alignCenter",required:!1,type:{name:"boolean"}},alignJustify:{defaultValue:null,description:"",name:"alignJustify",required:!1,type:{name:"boolean"}},alignLeft:{defaultValue:null,description:"",name:"alignLeft",required:!1,type:{name:"boolean"}},alignRight:{defaultValue:null,description:"",name:"alignRight",required:!1,type:{name:"boolean"}},autoWidth:{defaultValue:{value:"true"},description:"",name:"autoWidth",required:!1,type:{name:"boolean"}},bgColor:{defaultValue:null,description:"",name:"bgColor",required:!1,type:{name:"string"}},bold:{defaultValue:null,description:"",name:"bold",required:!1,type:{name:"string | boolean"}},border:{defaultValue:null,description:"",name:"border",required:!1,type:{name:"string | boolean"}},charsCase:{defaultValue:null,description:"",name:"charsCase",required:!1,type:{name:"enum",value:[{value:'"upper"'},{value:'"lower"'},{value:'"capital"'}]}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}},component:{defaultValue:{value:"span"},description:"",name:"component",required:!1,type:{name:"string"}},followCursor:{defaultValue:null,description:"",name:"followCursor",required:!1,type:{name:"boolean"}},fullWidth:{defaultValue:null,description:"",name:"fullWidth",required:!1,type:{name:"boolean"}},gutterBottom:{defaultValue:null,description:"",name:"gutterBottom",required:!1,type:{name:"boolean"}},html:{defaultValue:null,description:"",name:"html",required:!1,type:{name:"boolean"}},italic:{defaultValue:null,description:"",name:"italic",required:!1,type:{name:"boolean"}},justifyContent:{defaultValue:null,description:"",name:"justifyContent",required:!1,type:{name:"string"}},lineHeight:{defaultValue:null,description:"",name:"lineHeight",required:!1,type:{name:"string | number"}},link:{defaultValue:null,description:"",name:"link",required:!1,type:{name:"string"}},monospace:{defaultValue:null,description:"",name:"monospace",required:!1,type:{name:"boolean"}},paragraph:{defaultValue:null,description:"",name:"paragraph",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"string | number"}},strike:{defaultValue:null,description:"",name:"strike",required:!1,type:{name:"boolean"}},sub:{defaultValue:null,description:"",name:"sub",required:!1,type:{name:"boolean"}},sup:{defaultValue:null,description:"",name:"sup",required:!1,type:{name:"boolean"}},textDirection:{defaultValue:null,description:"",name:"textDirection",required:!1,type:{name:"enum",value:[{value:'"ltr"'},{value:'"rtl"'}]}},tooltip:{defaultValue:null,description:"",name:"tooltip",required:!1,type:{name:"string | boolean"}},tooltipPlacement:{defaultValue:null,description:"",name:"tooltipPlacement",required:!1,type:{name:"enum",value:[{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"bottom"'},{value:'"left-end"'},{value:'"left-start"'},{value:'"left"'},{value:'"right-end"'},{value:'"right-start"'},{value:'"right"'},{value:'"top-end"'},{value:'"top-start"'},{value:'"top"'}]}},underline:{defaultValue:null,description:"",name:"underline",required:!1,type:{name:"boolean"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"string | number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Typography/Text.tsx#Text"]={docgenInfo:Text.__docgenInfo,name:"Text",path:"src/components/_FIXED/Typography/Text.tsx#Text"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/_FIXED/Typography/TextEllipsis.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>Typography_TextEllipsis});var react=__webpack_require__("./node_modules/react/index.js"),Typography_styled=__webpack_require__("./src/components/_FIXED/Typography/Typography.styled.tsx"),useElementSize=__webpack_require__("./src/hooks/useElementSize.ts");function useEllipsisActive({active,maxRows}){const[ref,{width:widthText}]=(0,useElementSize.C)(active),[isEllipsis,setIsEllipsis]=(0,react.useState)(!1);return(0,react.useEffect)((()=>{if(active){const lastRowWidth=function getElementLastRowWidth(element){if(!element)return 0;const cursorElement=window?.document.createElement("span");element.appendChild(cursorElement);const offset=cursorElement.offsetLeft;return element.removeChild(cursorElement),offset}(ref.current),rows=function getElementRowCount(element){if(!element)return 1;const style=window?.getComputedStyle(element),lineHeight=parseFloat(`${style?.lineHeight}`),display=element.style.display;element.style.display="block";const{height}=element.getBoundingClientRect();element.style.display=display;return Math.round(height/lineHeight)||1}(ref.current);setIsEllipsis(!!(maxRows?rows>maxRows:rows<=1&&lastRowWidth<=65))}}),[ref.current,widthText]),[ref,isEllipsis]}var Typography_hooks=__webpack_require__("./src/components/_FIXED/Typography/Typography.hooks.tsx"),Text=__webpack_require__("./src/components/_FIXED/Typography/Text.tsx");const _excluded=["autoWidth","border","borderStyle","children","onEllipsisChange","showTooltipOnEllipsis","rows","width","noWrap","dynamicEllipsis","alignCenter","alignRight","alignLeft","alignJustify","align","component","tooltip"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const TextEllipsis=_ref=>{let{autoWidth=!0,border,borderStyle,children,onEllipsisChange,showTooltipOnEllipsis=!0,rows=1,width,noWrap,dynamicEllipsis=!0,alignCenter,alignRight,alignLeft,alignJustify,align,component="span",tooltip=!0}=_ref,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.includes(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.includes(o)||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);const[ref,isEllipsis]=useEllipsisActive({active:!!dynamicEllipsis,maxRows:+rows||0}),alignItems=(0,Typography_hooks.Y)({alignCenter,alignRight,alignLeft,alignJustify,align});return(0,react.useEffect)((()=>{onEllipsisChange?.(isEllipsis)}),[isEllipsis]),react.createElement(Typography_styled.V,{width,rows,border,noWrap,autoWidth,sx:borderStyle,textAlign:alignItems},react.createElement(Text.A,_extends({},props,{tooltip,component,innerRef:ref,isEllipsis,useEllipsisStyle:!0,showTooltipOnEllipsis}),children," "))};TextEllipsis.displayName="TextEllipsis",TextEllipsis.displayName="TextEllipsis";const Typography_TextEllipsis=TextEllipsis;try{TextEllipsis.displayName="TextEllipsis",TextEllipsis.__docgenInfo={description:"",displayName:"TextEllipsis",props:{alignCenter:{defaultValue:null,description:"",name:"alignCenter",required:!1,type:{name:"boolean"}},alignJustify:{defaultValue:null,description:"",name:"alignJustify",required:!1,type:{name:"boolean"}},alignLeft:{defaultValue:null,description:"",name:"alignLeft",required:!1,type:{name:"boolean"}},alignRight:{defaultValue:null,description:"",name:"alignRight",required:!1,type:{name:"boolean"}},autoWidth:{defaultValue:{value:"true"},description:"",name:"autoWidth",required:!1,type:{name:"boolean"}},bgColor:{defaultValue:null,description:"",name:"bgColor",required:!1,type:{name:"string"}},bold:{defaultValue:null,description:"",name:"bold",required:!1,type:{name:"string | boolean"}},border:{defaultValue:null,description:"",name:"border",required:!1,type:{name:"string | boolean"}},charsCase:{defaultValue:null,description:"",name:"charsCase",required:!1,type:{name:"enum",value:[{value:'"upper"'},{value:'"lower"'},{value:'"capital"'}]}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}},component:{defaultValue:{value:"span"},description:"",name:"component",required:!1,type:{name:"string"}},followCursor:{defaultValue:null,description:"",name:"followCursor",required:!1,type:{name:"boolean"}},fullWidth:{defaultValue:null,description:"",name:"fullWidth",required:!1,type:{name:"boolean"}},gutterBottom:{defaultValue:null,description:"",name:"gutterBottom",required:!1,type:{name:"boolean"}},html:{defaultValue:null,description:"",name:"html",required:!1,type:{name:"boolean"}},italic:{defaultValue:null,description:"",name:"italic",required:!1,type:{name:"boolean"}},justifyContent:{defaultValue:null,description:"",name:"justifyContent",required:!1,type:{name:"string"}},lineHeight:{defaultValue:null,description:"",name:"lineHeight",required:!1,type:{name:"string | number"}},link:{defaultValue:null,description:"",name:"link",required:!1,type:{name:"string"}},monospace:{defaultValue:null,description:"",name:"monospace",required:!1,type:{name:"boolean"}},paragraph:{defaultValue:null,description:"",name:"paragraph",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"string | number"}},strike:{defaultValue:null,description:"",name:"strike",required:!1,type:{name:"boolean"}},sub:{defaultValue:null,description:"",name:"sub",required:!1,type:{name:"boolean"}},sup:{defaultValue:null,description:"",name:"sup",required:!1,type:{name:"boolean"}},textDirection:{defaultValue:null,description:"",name:"textDirection",required:!1,type:{name:"enum",value:[{value:'"ltr"'},{value:'"rtl"'}]}},tooltip:{defaultValue:{value:"true"},description:"",name:"tooltip",required:!1,type:{name:"string | boolean"}},tooltipPlacement:{defaultValue:null,description:"",name:"tooltipPlacement",required:!1,type:{name:"enum",value:[{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"bottom"'},{value:'"left-end"'},{value:'"left-start"'},{value:'"left"'},{value:'"right-end"'},{value:'"right-start"'},{value:'"right"'},{value:'"top-end"'},{value:'"top-start"'},{value:'"top"'}]}},underline:{defaultValue:null,description:"",name:"underline",required:!1,type:{name:"boolean"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"string | number"}},dynamicEllipsis:{defaultValue:{value:"true"},description:"",name:"dynamicEllipsis",required:!1,type:{name:"true"}},noWrap:{defaultValue:null,description:"",name:"noWrap",required:!1,type:{name:"boolean"}},onEllipsisChange:{defaultValue:null,description:"",name:"onEllipsisChange",required:!1,type:{name:"(isEllipsis: boolean) => void"}},rows:{defaultValue:{value:"1"},description:"",name:"rows",required:!1,type:{name:"number"}},showTooltipOnEllipsis:{defaultValue:{value:"true"},description:"",name:"showTooltipOnEllipsis",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Typography/TextEllipsis.tsx#TextEllipsis"]={docgenInfo:TextEllipsis.__docgenInfo,name:"TextEllipsis",path:"src/components/_FIXED/Typography/TextEllipsis.tsx#TextEllipsis"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/_FIXED/Typography/Typography.hooks.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Y:()=>getAlign,s:()=>useTooltipMessage});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const getAlign=({alignCenter,alignJustify,alignLeft,alignRight,align})=>{switch(!0){case alignCenter:return"center";case alignJustify:return"justify";case alignLeft:return"left";case alignRight:return"right";default:return align||"inherit"}};function useTooltipMessage({children,tooltip,showTooltipOnEllipsis,isEllipsis}){return(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>{const[defaultTooltip,childrenTooltip,customTooltip]=[children,void 0===tooltip||"boolean"==typeof tooltip&&tooltip?children:void 0,"string"==typeof tooltip?tooltip:void 0];if(!1===tooltip||showTooltipOnEllipsis&&!isEllipsis)return;if(showTooltipOnEllipsis&&isEllipsis&&(!0===tooltip||void 0===tooltip))return customTooltip??childrenTooltip;if(!1===showTooltipOnEllipsis&&!1===isEllipsis&&!tooltip)return;const result=customTooltip??childrenTooltip??defaultTooltip;return Array.isArray(result)?result.join(""):result}),[showTooltipOnEllipsis,isEllipsis,tooltip,children])}try{useTooltipMessage.displayName="useTooltipMessage",useTooltipMessage.__docgenInfo={description:"",displayName:"useTooltipMessage",props:{tooltip:{defaultValue:null,description:"",name:"tooltip",required:!0,type:{name:"any"}},showTooltipOnEllipsis:{defaultValue:null,description:"",name:"showTooltipOnEllipsis",required:!0,type:{name:"any"}},isEllipsis:{defaultValue:null,description:"",name:"isEllipsis",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Typography/Typography.hooks.tsx#useTooltipMessage"]={docgenInfo:useTooltipMessage.__docgenInfo,name:"useTooltipMessage",path:"src/components/_FIXED/Typography/Typography.hooks.tsx#useTooltipMessage"})}catch(__react_docgen_typescript_loader_error){}try{getAlign.displayName="getAlign",getAlign.__docgenInfo={description:"",displayName:"getAlign",props:{alignCenter:{defaultValue:null,description:"",name:"alignCenter",required:!0,type:{name:"any"}},alignJustify:{defaultValue:null,description:"",name:"alignJustify",required:!0,type:{name:"any"}},alignLeft:{defaultValue:null,description:"",name:"alignLeft",required:!0,type:{name:"any"}},alignRight:{defaultValue:null,description:"",name:"alignRight",required:!0,type:{name:"any"}},align:{defaultValue:null,description:"",name:"align",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Typography/Typography.hooks.tsx#getAlign"]={docgenInfo:getAlign.__docgenInfo,name:"getAlign",path:"src/components/_FIXED/Typography/Typography.hooks.tsx#getAlign"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/_FIXED/Typography/Typography.styled.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{V:()=>Border,o:()=>Typography_styled_Typography});var react=__webpack_require__("./node_modules/react/index.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),Typography=__webpack_require__("./node_modules/@mui/material/Typography/Typography.js"),styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),emotion_react_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");function ellipsisRow1(props){return props.noWrap||1!==props.rows?emotion_react_browser_esm.AH``:emotion_react_browser_esm.AH`
        text-overflow: ellipsis;
        white-space: normal;
        overflow: hidden;
        display: -webkit-box !important;
        -webkit-line-clamp: ${props.rows};
        -webkit-box-orient: vertical;
        & > * {
            white-space: unset !important;
        }
    `}function ellipsisRows(props){return props.noWrap||!props.rows||props.rows&&props.rows<=1?emotion_react_browser_esm.AH``:emotion_react_browser_esm.AH`
        text-overflow: ellipsis;
        overflow: hidden;
        white-space: normal;
        display: -webkit-box !important;
        -webkit-line-clamp: ${props.rows};
        -webkit-box-orient: vertical;
        & > * {
            white-space: unset !important;
        }
    `}try{ellipsisRow1.displayName="ellipsisRow1",ellipsisRow1.__docgenInfo={description:"",displayName:"ellipsisRow1",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Typography/Typography.styles.tsx#ellipsisRow1"]={docgenInfo:ellipsisRow1.__docgenInfo,name:"ellipsisRow1",path:"src/components/_FIXED/Typography/Typography.styles.tsx#ellipsisRow1"})}catch(__react_docgen_typescript_loader_error){}try{ellipsisRows.displayName="ellipsisRows",ellipsisRows.__docgenInfo={description:"",displayName:"ellipsisRows",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Typography/Typography.styles.tsx#ellipsisRows"]={docgenInfo:ellipsisRows.__docgenInfo,name:"ellipsisRows",path:"src/components/_FIXED/Typography/Typography.styles.tsx#ellipsisRows"})}catch(__react_docgen_typescript_loader_error){}var helpers=__webpack_require__("./src/utils/helpers.ts");const _excluded=["className","myClassName","children"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const Border=(0,styled.Ay)(Box.A,{shouldForwardProp:propName=>!["autoWidth","noWrap","border","rows"].includes(propName)})`
    width: ${props=>(0,helpers.vb)(props.width)??(props.autoWidth?"auto":"100%")};
    display: flex;
    align-items: center;
    border: ${props=>props.border&&"boolean"==typeof props.border?"1px solid black":props.border};
    ${ellipsisRows}
    ${ellipsisRow1}
`,Typography_styled_Typography=(0,styled.Ay)((_ref=>{let{className,myClassName,children}=_ref,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.includes(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.includes(o)||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return react.createElement(Typography.A,_extends({className:classnames_default()([className,myClassName]),component:"span"},props),children)}),{shouldForwardProp:propName=>!["bgColor","bold","charsCase","customColor","font","fontSize","italic","lineHeight","monospace","strike","sub","sup","textDirection","textWidth","underline"].includes(propName)})((props=>_objectSpread(_objectSpread({position:"relative",display:props.display??"unset",color:props.customColor,backgroundColor:props.bgColor,fontWeight:props.bold&&"boolean"==typeof props.bold?"bold":props.bold,fontSize:(0,helpers.vb)(props.fontSize),fontStyle:props.italic?"italic":void 0,fontFamily:props.font??void 0,textDecoration:props.strike?"line-through":props.underline?"underline":void 0,textTransform:{upper:"uppercase",lower:"lowercase",capital:"capitalize"}[props.charsCase],verticalAlign:props.sup?"super":props.sub?"sub":void 0,lineHeight:props.lineHeight,direction:props.textDirection?`${props.textDirection} /* @noflip */`:void 0,whiteSpace:props.noWrap?"nowrap":"normal",width:props.textWidth??"inherit"},props.justifyContent&&{justifyContent:props.justifyContent}),props.monospace&&{fontFamily:"monospace"})))},"./src/components/_FIXED/Typography/Typography.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_Text__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/_FIXED/Typography/Text.tsx"),_TextEllipsis__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/_FIXED/Typography/TextEllipsis.tsx"),_utils_helpers__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/utils/helpers.ts");const Typography=props=>(props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"autoWidth",!0),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"component","span"),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"dynamicEllipsis",!0),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"isEllipsis",!1),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"showTooltipOnEllipsis",!0),props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"size","inherit"),[(props=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__.$B)(props,"tooltip",!1)).showTooltipOnEllipsis,props.onEllipsisChange].some((v=>v))?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_TextEllipsis__WEBPACK_IMPORTED_MODULE_2__.A,props):react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Text__WEBPACK_IMPORTED_MODULE_1__.A,props));Typography.displayName="Typography";const __WEBPACK_DEFAULT_EXPORT__=Typography;try{Typography.displayName="Typography",Typography.__docgenInfo={description:"",displayName:"Typography",props:{alignCenter:{defaultValue:null,description:"",name:"alignCenter",required:!1,type:{name:"boolean"}},alignJustify:{defaultValue:null,description:"",name:"alignJustify",required:!1,type:{name:"boolean"}},alignLeft:{defaultValue:null,description:"",name:"alignLeft",required:!1,type:{name:"boolean"}},alignRight:{defaultValue:null,description:"",name:"alignRight",required:!1,type:{name:"boolean"}},autoWidth:{defaultValue:null,description:"",name:"autoWidth",required:!1,type:{name:"boolean"}},bgColor:{defaultValue:null,description:"",name:"bgColor",required:!1,type:{name:"string"}},bold:{defaultValue:null,description:"",name:"bold",required:!1,type:{name:"string | boolean"}},border:{defaultValue:null,description:"",name:"border",required:!1,type:{name:"string | boolean"}},charsCase:{defaultValue:null,description:"",name:"charsCase",required:!1,type:{name:"enum",value:[{value:'"upper"'},{value:'"lower"'},{value:'"capital"'}]}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"string"}},followCursor:{defaultValue:null,description:"",name:"followCursor",required:!1,type:{name:"boolean"}},fullWidth:{defaultValue:null,description:"",name:"fullWidth",required:!1,type:{name:"boolean"}},gutterBottom:{defaultValue:null,description:"",name:"gutterBottom",required:!1,type:{name:"boolean"}},html:{defaultValue:null,description:"",name:"html",required:!1,type:{name:"boolean"}},italic:{defaultValue:null,description:"",name:"italic",required:!1,type:{name:"boolean"}},justifyContent:{defaultValue:null,description:"",name:"justifyContent",required:!1,type:{name:"string"}},lineHeight:{defaultValue:null,description:"",name:"lineHeight",required:!1,type:{name:"string | number"}},link:{defaultValue:null,description:"",name:"link",required:!1,type:{name:"string"}},monospace:{defaultValue:null,description:"",name:"monospace",required:!1,type:{name:"boolean"}},paragraph:{defaultValue:null,description:"",name:"paragraph",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"string | number"}},strike:{defaultValue:null,description:"",name:"strike",required:!1,type:{name:"boolean"}},sub:{defaultValue:null,description:"",name:"sub",required:!1,type:{name:"boolean"}},sup:{defaultValue:null,description:"",name:"sup",required:!1,type:{name:"boolean"}},textDirection:{defaultValue:null,description:"",name:"textDirection",required:!1,type:{name:"enum",value:[{value:'"ltr"'},{value:'"rtl"'}]}},tooltip:{defaultValue:null,description:"",name:"tooltip",required:!1,type:{name:"string | boolean"}},tooltipPlacement:{defaultValue:null,description:"",name:"tooltipPlacement",required:!1,type:{name:"enum",value:[{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"bottom"'},{value:'"left-end"'},{value:'"left-start"'},{value:'"left"'},{value:'"right-end"'},{value:'"right-start"'},{value:'"right"'},{value:'"top-end"'},{value:'"top-start"'},{value:'"top"'}]}},underline:{defaultValue:null,description:"",name:"underline",required:!1,type:{name:"boolean"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"string | number"}},dynamicEllipsis:{defaultValue:null,description:"",name:"dynamicEllipsis",required:!1,type:{name:"true"}},noWrap:{defaultValue:null,description:"",name:"noWrap",required:!1,type:{name:"boolean"}},onEllipsisChange:{defaultValue:null,description:"",name:"onEllipsisChange",required:!1,type:{name:"(isEllipsis: boolean) => void"}},rows:{defaultValue:null,description:"",name:"rows",required:!1,type:{name:"number"}},showTooltipOnEllipsis:{defaultValue:null,description:"",name:"showTooltipOnEllipsis",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Typography/Typography.tsx#Typography"]={docgenInfo:Typography.__docgenInfo,name:"Typography",path:"src/components/_FIXED/Typography/Typography.tsx#Typography"})}catch(__react_docgen_typescript_loader_error){}},"./src/hooks/useElementSize.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{C:()=>useTextElementSize,L:()=>useElementSize});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function useTextElementSize(resize=!1){const ref=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),[windowSize,setWindowSize]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({width:window.innerWidth,height:window.innerHeight});return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{function handleResize(){if(ref.current){const spanElement=("string"==typeof ref.current.children?ref.current.children:ref.current.children?.[0])??ref.current,display=spanElement.style.display;spanElement.style.display="block";const{width,height}=spanElement?.getBoundingClientRect()??{};spanElement.style.display=display,setWindowSize({width,height})}}return resize&&(window.addEventListener("resize",handleResize),handleResize()),()=>{resize&&window.removeEventListener("resize",handleResize)}}),[ref.current,resize]),[ref,{width:windowSize.width,height:windowSize.height}]}function useElementSize(resize=!1){const ref=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),[width,setWidth]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0),[height,setHeight]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0),handleResize=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>{if(ref.current){const{width,height}=ref.current?.getBoundingClientRect()??{};setWidth(width),setHeight(height)}}),[]);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{handleResize()}),[handleResize]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>(resize&&window.addEventListener("resize",handleResize),()=>{resize&&window.removeEventListener("resize",handleResize)})),[handleResize,resize]),[ref,{width,height}]}}}]);
//# sourceMappingURL=components-_FIXED-TreeView-__stories__-TreeView-stories.03297309.iframe.bundle.js.map