"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[4797],{"./src/components/_FIXED/Drawer/__stories__/Drawer.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Backdrop_:()=>Backdrop_,BgColor_:()=>BgColor_,Default_:()=>Default_,Direction_:()=>Direction_,HideHeader_:()=>HideHeader_,KeepMounted:()=>KeepMounted,Swipeable_:()=>Swipeable_,Variant_:()=>Variant_,Width_:()=>Width_,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Drawer_stories});var react=__webpack_require__("./node_modules/react/index.js"),Inbox=__webpack_require__("./node_modules/@mui/icons-material/esm/Inbox.js"),Drafts=__webpack_require__("./node_modules/@mui/icons-material/esm/Drafts.js"),Image=__webpack_require__("./node_modules/@mui/icons-material/esm/Image.js"),Comment=__webpack_require__("./node_modules/@mui/icons-material/esm/Comment.js"),Work=__webpack_require__("./node_modules/@mui/icons-material/esm/Work.js"),Send=__webpack_require__("./node_modules/@mui/icons-material/esm/Send.js"),BeachAccess=__webpack_require__("./node_modules/@mui/icons-material/esm/BeachAccess.js"),Stack=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),useTheme=__webpack_require__("./node_modules/@mui/material/styles/useTheme.js"),ChevronLeft=__webpack_require__("./node_modules/@mui/icons-material/esm/ChevronLeft.js"),ChevronRight=__webpack_require__("./node_modules/@mui/icons-material/esm/ChevronRight.js"),styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),Drawer=__webpack_require__("./node_modules/@mui/material/Drawer/Drawer.js"),SwipeableDrawer=__webpack_require__("./node_modules/@mui/material/SwipeableDrawer/SwipeableDrawer.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js");function drawerStyles(props){var theme=props.theme;return{flexShrink:0,whiteSpace:"nowrap",boxSizing:"border-box",background:props.bgColor,overflowX:"hidden",transition:theme.transitions.create("width",{easing:theme.transitions.easing.sharp,duration:theme.transitions.duration.enteringScreen})}}try{drawerStyles.displayName="drawerStyles",drawerStyles.__docgenInfo={description:"",displayName:"drawerStyles",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},open:{defaultValue:null,description:"",name:"open",required:!1,type:{name:"boolean"}},isMiniPersistent:{defaultValue:null,description:"",name:"isMiniPersistent",required:!1,type:{name:"boolean"}},drawerWidth:{defaultValue:null,description:"",name:"drawerWidth",required:!1,type:{name:"string | number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Drawer/Drawer.styles.tsx#drawerStyles"]={docgenInfo:drawerStyles.__docgenInfo,name:"drawerStyles",path:"src/components/_FIXED/Drawer/Drawer.styles.tsx#drawerStyles"})}catch(__react_docgen_typescript_loader_error){}var __makeTemplateObject=function(cooked,raw){return Object.defineProperty?Object.defineProperty(cooked,"raw",{value:raw}):cooked.raw=raw,cooked},_excluded=["width","anchor"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:String(i)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var templateObject_1,Drawer_styled_Drawer=(0,styled.ZP)(Drawer.ZP,{shouldForwardProp:function(propName){return!["isMiniPersistent","bgColor"].includes(propName)}})(drawerStyles),Drawer_styled_SwipeableDrawer=(0,styled.ZP)(SwipeableDrawer.Z,{shouldForwardProp:function(propName){return!["isMiniPersistent","bgColor"].includes(propName)}})(drawerStyles),ContentWrapper=(0,styled.ZP)((function(_ref){var _a,width=_ref.width,anchor=_ref.anchor,props=_objectWithoutProperties(_ref,_excluded);return react.createElement(Box.Z,_extends({sx:{width:["top","bottom"].includes(null!==(_a=null==anchor?void 0:anchor.toLowerCase())&&void 0!==_a?_a:"left")?"auto":width},role:"presentation"},props))}))(templateObject_1||(templateObject_1=__makeTemplateObject([""],[""]))),DrawerHeader=(0,styled.ZP)("div")((function(_a){var theme=_a.theme,anchor=_a.anchor;return _objectSpread(_objectSpread({display:"flex",alignItems:"center",padding:theme.spacing(0,1)},theme.mixins.toolbar),{},{justifyContent:"right"===anchor?"flex-start":"flex-end"})}));try{Drawer_styled_Drawer.displayName="Drawer",Drawer_styled_Drawer.__docgenInfo={description:"",displayName:"Drawer",props:{className:{defaultValue:null,description:"@ignore",name:"className",required:!1,type:{name:"string"}},components:{defaultValue:{value:"{}"},description:"The components used for each slot inside.\n\nThis prop is an alias for the `slots` prop.\nIt's recommended to use the `slots` prop instead.",name:"components",required:!1,type:{name:"{ Root?: ElementType<any>; Backdrop?: ElementType<any>; }"}},componentsProps:{defaultValue:{value:"{}"},description:"The extra props for the slot components.\nYou can override the existing props or add new ones.\n\nThis prop is an alias for the `slotProps` prop.\nIt's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.",name:"componentsProps",required:!1,type:{name:'{ root?: SlotComponentProps<"div", ModalComponentsPropsOverrides, ModalOwnerState>; backdrop?: SlotComponentProps<OverridableComponent<BackdropTypeMap<{}, "div">>, ModalComponentsPropsOverrides, ModalOwnerState>; }'}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside the Modal.",name:"slotProps",required:!1,type:{name:'{ root?: SlotComponentProps<"div", ModalComponentsPropsOverrides, ModalOwnerState>; backdrop?: SlotComponentProps<OverridableComponent<BackdropTypeMap<{}, "div">>, ModalComponentsPropsOverrides, ModalOwnerState>; }'}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}},BackdropComponent:{defaultValue:{value:"styled(Backdrop, {\nname: 'MuiModal',\nslot: 'Backdrop',\noverridesResolver: (props, styles) => {\nreturn styles.backdrop;\n},\n})({\nzIndex: -1,\n})"},description:"A backdrop component. This prop enables custom backdrop rendering.\n@deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.\nUse the `slots.backdrop` prop to make your application ready for the next version of Material UI.",name:"BackdropComponent",required:!1,type:{name:"ElementType<BackdropProps>"}},BackdropProps:{defaultValue:null,description:"Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.\n@deprecated Use `slotProps.backdrop` instead.",name:"BackdropProps",required:!1,type:{name:"Partial<BackdropProps>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Drawer/Drawer.styled.tsx#Drawer"]={docgenInfo:Drawer_styled_Drawer.__docgenInfo,name:"Drawer",path:"src/components/_FIXED/Drawer/Drawer.styled.tsx#Drawer"})}catch(__react_docgen_typescript_loader_error){}try{Drawer_styled_SwipeableDrawer.displayName="SwipeableDrawer",Drawer_styled_SwipeableDrawer.__docgenInfo={description:"",displayName:"SwipeableDrawer",props:{className:{defaultValue:null,description:"@ignore",name:"className",required:!1,type:{name:"string"}},components:{defaultValue:{value:"{}"},description:"The components used for each slot inside.\n\nThis prop is an alias for the `slots` prop.\nIt's recommended to use the `slots` prop instead.",name:"components",required:!1,type:{name:"{ Root?: ElementType<any>; Backdrop?: ElementType<any>; }"}},componentsProps:{defaultValue:{value:"{}"},description:"The extra props for the slot components.\nYou can override the existing props or add new ones.\n\nThis prop is an alias for the `slotProps` prop.\nIt's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.",name:"componentsProps",required:!1,type:{name:'{ root?: SlotComponentProps<"div", ModalComponentsPropsOverrides, ModalOwnerState>; backdrop?: SlotComponentProps<OverridableComponent<BackdropTypeMap<{}, "div">>, ModalComponentsPropsOverrides, ModalOwnerState>; }'}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside the Modal.",name:"slotProps",required:!1,type:{name:'{ root?: SlotComponentProps<"div", ModalComponentsPropsOverrides, ModalOwnerState>; backdrop?: SlotComponentProps<OverridableComponent<BackdropTypeMap<{}, "div">>, ModalComponentsPropsOverrides, ModalOwnerState>; }'}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}},BackdropComponent:{defaultValue:{value:"styled(Backdrop, {\nname: 'MuiModal',\nslot: 'Backdrop',\noverridesResolver: (props, styles) => {\nreturn styles.backdrop;\n},\n})({\nzIndex: -1,\n})"},description:"A backdrop component. This prop enables custom backdrop rendering.\n@deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.\nUse the `slots.backdrop` prop to make your application ready for the next version of Material UI.",name:"BackdropComponent",required:!1,type:{name:"ElementType<BackdropProps>"}},BackdropProps:{defaultValue:null,description:"Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.\n@deprecated Use `slotProps.backdrop` instead.",name:"BackdropProps",required:!1,type:{name:"Partial<BackdropProps>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Drawer/Drawer.styled.tsx#SwipeableDrawer"]={docgenInfo:Drawer_styled_SwipeableDrawer.__docgenInfo,name:"SwipeableDrawer",path:"src/components/_FIXED/Drawer/Drawer.styled.tsx#SwipeableDrawer"})}catch(__react_docgen_typescript_loader_error){}try{ContentWrapper.displayName="ContentWrapper",ContentWrapper.__docgenInfo={description:"",displayName:"ContentWrapper",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Drawer/Drawer.styled.tsx#ContentWrapper"]={docgenInfo:ContentWrapper.__docgenInfo,name:"ContentWrapper",path:"src/components/_FIXED/Drawer/Drawer.styled.tsx#ContentWrapper"})}catch(__react_docgen_typescript_loader_error){}try{DrawerHeader.displayName="DrawerHeader",DrawerHeader.__docgenInfo={description:"",displayName:"DrawerHeader",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Drawer/Drawer.styled.tsx#DrawerHeader"]={docgenInfo:DrawerHeader.__docgenInfo,name:"DrawerHeader",path:"src/components/_FIXED/Drawer/Drawer.styled.tsx#DrawerHeader"})}catch(__react_docgen_typescript_loader_error){}var Button=__webpack_require__("./src/components/_FIXED/Button/Button.tsx"),Divider=__webpack_require__("./src/components/_FIXED/Divider/Divider.tsx"),Drawer_excluded=["backdrop","bgColor","width","keepMounted","onClose","open","direction","hideHeader","swipeable","variant","toggleDrawer","PaperProps","children"];function Drawer_extends(){return Drawer_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},Drawer_extends.apply(this,arguments)}function Drawer_ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function Drawer_objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?Drawer_ownKeys(Object(t),!0).forEach((function(r){Drawer_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Drawer_ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function Drawer_defineProperty(obj,key,value){return(key=function Drawer_toPropertyKey(t){var i=function Drawer_toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:String(i)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function Drawer_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function Drawer_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Drawer_Drawer=function(_ref){var backdrop=_ref.backdrop,bgColor=_ref.bgColor,width=_ref.width,keepMounted=_ref.keepMounted,open=(_ref.onClose,_ref.open),direction=_ref.direction,hideHeader=_ref.hideHeader,swipeable=_ref.swipeable,_variant=_ref.variant,_toggleDrawer=_ref.toggleDrawer,PaperProps=_ref.PaperProps,children=_ref.children,props=Drawer_objectWithoutProperties(_ref,Drawer_excluded),theme=(0,useTheme.Z)(),isMiniPersistent="mini-persistent"===_variant,variant=isMiniPersistent?"persistent":_variant,DrawerCmp=swipeable?Drawer_styled_SwipeableDrawer:Drawer_styled_Drawer,toggleDrawer=function(open){return function(event){("keydown"!==event.type||"Tab"!==event.key&&"Shift"!==event.key)&&(null==_toggleDrawer||_toggleDrawer(open))}};return react.createElement(DrawerCmp,Drawer_extends({variant,anchor:direction,open,onClose:null==toggleDrawer?void 0:toggleDrawer(!1),ModalProps:{keepMounted},isMiniPersistent,bgColor,hideBackdrop:!backdrop,PaperProps:Drawer_objectSpread(Drawer_objectSpread({},PaperProps),{},{sx:Drawer_objectSpread(Drawer_objectSpread(Drawer_objectSpread({width},null==PaperProps?void 0:PaperProps.sx),bgColor&&{backgroundColor:bgColor}),{},{backgroundImage:"unset",overflowX:"hidden",transition:theme.transitions.create("width",{easing:theme.transitions.easing.sharp,duration:theme.transitions.duration.enteringScreen})})})},props),!hideHeader&&react.createElement(react.Fragment,null,react.createElement(DrawerHeader,{anchor:direction},react.createElement(Button.Z,{onClick:null==toggleDrawer?void 0:toggleDrawer(!1),icon:"ltr"===theme.direction?react.createElement(ChevronLeft.Z,null):react.createElement(ChevronRight.Z,null)})),react.createElement(Divider.Z,{variant:"fullWidth"})),react.createElement(ContentWrapper,{width,anchor:direction,onClick:null==toggleDrawer?void 0:toggleDrawer(!1),onKeyDown:null==toggleDrawer?void 0:toggleDrawer(!1)},children))};Drawer_Drawer.displayName="Drawer",Drawer_Drawer.defaultProps={backdrop:!1,bgColor:void 0,direction:void 0,hideHeader:!1,keepMounted:!0,onClose:void 0,open:void 0,swipeable:void 0,toggleDrawer:void 0,variant:void 0,width:240};const _FIXED_Drawer_Drawer=Drawer_Drawer;try{Drawer_Drawer.displayName="Drawer",Drawer_Drawer.__docgenInfo={description:"",displayName:"Drawer",props:{backdrop:{defaultValue:{value:"false"},description:"",name:"backdrop",required:!1,type:{name:"boolean"}},bgColor:{defaultValue:{value:"undefined"},description:"",name:"bgColor",required:!1,type:{name:"string"}},width:{defaultValue:{value:"240"},description:"",name:"width",required:!1,type:{name:"string | number"}},keepMounted:{defaultValue:{value:"true"},description:"",name:"keepMounted",required:!1,type:{name:"boolean"}},onClose:{defaultValue:{value:"undefined"},description:"",name:"onClose",required:!1,type:{name:"() => void"}},open:{defaultValue:{value:"undefined"},description:"",name:"open",required:!1,type:{name:"boolean"}},hideHeader:{defaultValue:{value:"false"},description:"",name:"hideHeader",required:!1,type:{name:"boolean"}},direction:{defaultValue:{value:"undefined"},description:"",name:"direction",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"top"'}]}},swipeable:{defaultValue:{value:"undefined"},description:"",name:"swipeable",required:!1,type:{name:"boolean"}},toggleDrawer:{defaultValue:{value:"undefined"},description:"",name:"toggleDrawer",required:!1,type:{name:"(open: boolean) => void"}},variant:{defaultValue:{value:"undefined"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"permanent"'},{value:'"mini-persistent"'},{value:'"persistent"'},{value:'"temporary"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Drawer/Drawer.tsx#Drawer"]={docgenInfo:Drawer_Drawer.__docgenInfo,name:"Drawer",path:"src/components/_FIXED/Drawer/Drawer.tsx#Drawer"})}catch(__react_docgen_typescript_loader_error){}var List=__webpack_require__("./src/components/_FIXED/List/List.tsx");function Drawer_stories_ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function Drawer_stories_objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?Drawer_stories_ownKeys(Object(t),!0).forEach((function(r){Drawer_stories_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Drawer_stories_ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function Drawer_stories_defineProperty(obj,key,value){return(key=function Drawer_stories_toPropertyKey(t){var i=function Drawer_stories_toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:String(i)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function Drawer_stories_extends(){return Drawer_stories_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},Drawer_stories_extends.apply(this,arguments)}const Drawer_stories={parameters:{storySource:{source:"import React, { useEffect, useState } from 'react';\nimport {\n    Send as SendIcon,\n    Inbox as InboxIcon,\n    Drafts as DraftsIcon,\n    Image as ImageIcon,\n    Comment as CommentIcon,\n    Work as WorkIcon,\n    BeachAccess as BeachAccessIcon,\n} from '@mui/icons-material';\nimport { Stack } from '@mui/material';\nimport Drawer from '../Drawer';\nimport Button from '../../Button/Button';\nimport List from '../../List/List';\nimport Divider from '../../Divider/Divider';\nimport { Meta, StoryObj } from '@storybook/react';\n\nconst meta: Meta<typeof Drawer> = {\n    title: 'Navigation/Drawer',\n    component: Drawer,\n    tags: ['autodocs'],\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof Drawer>;\n\nconst list = () => (\n    <div>\n        <List\n            items={[\n                {\n                    id: 'inbox',\n                    startIcon: <InboxIcon />,\n                    title: 'Inbox',\n                },\n                {\n                    id: 'Drafts',\n                    startIcon: <DraftsIcon />,\n                    title: 'Drafts',\n                },\n                {\n                    id: 'divider',\n                    divider: true,\n                },\n                { id: 'Trash', title: 'Trash' },\n                'Spam',\n            ]}\n        />\n        <Divider variant=\"fullWidth\" />\n        <List\n            items={[\n                {\n                    id: 'Photos',\n                    title: 'Photos',\n                    subtitle: 'Jan 9, 2014',\n                    avatar: { icon: <ImageIcon /> },\n                    actions: [<Button icon={<CommentIcon />} />],\n                },\n                {\n                    id: 'Work',\n                    title: 'Work',\n                    subtitle: 'Jan 7, 2014',\n                    avatar: { icon: <WorkIcon /> },\n                    actions: [<Button icon={<SendIcon />} />],\n                },\n                {\n                    id: 'Vacation',\n                    title: 'Vacation',\n                    subtitle: 'July 20, 2014',\n                    avatar: { icon: <BeachAccessIcon /> },\n                    actions: [<Button icon={<SendIcon />} />],\n                },\n            ]}\n        />\n    </div>\n);\n\nconst DrawerState = ({ children }) => {\n    const [open, setOpen] = React.useState<boolean>(false);\n    return (\n        <>\n            <Button onClick={() => setOpen(true)} variant=\"contained\">\n                OPEN DRAWER\n            </Button>\n            {children?.({\n                open,\n                onOpen: () => setOpen(true),\n                onToggle: () => setOpen(!open),\n                onClose: () => setOpen(false),\n            })}\n        </>\n    );\n};\n\nexport const Default_ = (args) => {\n    return (\n        <DrawerState>\n            {({ open, onClose, onToggle }) => (\n                <Drawer open={open} onClose={onClose} toggleDrawer={onToggle} {...args}>\n                    {list()}\n                </Drawer>\n            )}\n        </DrawerState>\n    );\n};\n\nexport const Backdrop_ = (args) => {\n    return (\n        <DrawerState>\n            {({ open, onClose, onToggle }) => (\n                <Drawer backdrop open={open} onClose={onClose} variant=\"temporary\" toggleDrawer={onToggle} {...args}>\n                    {list()}\n                </Drawer>\n            )}\n        </DrawerState>\n    );\n};\n\nexport const BgColor_ = (args) => {\n    return (\n        <DrawerState>\n            {({ open, onClose, onToggle }) => (\n                <Drawer\n                    bgColor=\"primary\"\n                    open={open}\n                    onClose={onClose}\n                    variant=\"temporary\"\n                    toggleDrawer={onToggle}\n                    {...args}\n                >\n                    {list()}\n                </Drawer>\n            )}\n        </DrawerState>\n    );\n};\n\nexport const Width_ = (args) => {\n    return (\n        <DrawerState>\n            {({ open, onClose, onToggle }) => (\n                <Drawer width={600} open={open} onClose={onClose} variant=\"temporary\" toggleDrawer={onToggle} {...args}>\n                    {list()}\n                </Drawer>\n            )}\n        </DrawerState>\n    );\n};\n\nexport const HideHeader_ = (args) => {\n    return (\n        <DrawerState>\n            {({ open, onClose, onToggle }) => (\n                <Drawer hideHeader open={open} onClose={onClose} variant=\"temporary\" toggleDrawer={onToggle} {...args}>\n                    {list()}\n                </Drawer>\n            )}\n        </DrawerState>\n    );\n};\n\nexport const Swipeable_ = (args) => {\n    return (\n        <DrawerState>\n            {({ open, onClose, onToggle }) => (\n                <Drawer swipeable open={open} onClose={onClose} variant=\"temporary\" toggleDrawer={onToggle} {...args}>\n                    {list()}\n                </Drawer>\n            )}\n        </DrawerState>\n    );\n};\n\nexport const Direction_ = (args) => {\n    const [state, setState] = React.useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n    });\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n\n    return (\n        <div>\n            {['left', 'right', 'top', 'bottom'].map((anchor) => (\n                <React.Fragment key={anchor}>\n                    <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n                    <Drawer\n                        direction={anchor}\n                        variant=\"temporary\"\n                        open={state[anchor]}\n                        toggleDrawer={toggleDrawer(anchor, false)}\n                        {...args}\n                    >\n                        {list()}\n                    </Drawer>\n                </React.Fragment>\n            ))}\n        </div>\n    );\n};\n\nexport const Variant_ = (args) => {\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [state, setState] = React.useState({\n        permanent: false,\n        'mini-persistent': false,\n        persistent: false,\n        temporary: false,\n    });\n\n    const toggleDrawer = (variant, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setMenuOpen(open);\n        setState({ ...state, [variant]: open });\n    };\n\n    return (\n        <div>\n            {['permanent', 'mini-persistent', 'persistent', 'temporary'].map((variant) => (\n                <React.Fragment key={variant}>\n                    <Button onClick={toggleDrawer(variant, true)}>{variant}</Button>\n                    <Drawer\n                        direction={'right'}\n                        variant={variant}\n                        open={menuOpen}\n                        toggleDrawer={toggleDrawer(variant, false)}\n                        {...args}\n                    >\n                        {list()}\n                    </Drawer>\n                </React.Fragment>\n            ))}\n        </div>\n    );\n};\n\nconst ConsoleLog = () => {\n    useEffect(() => console.log('Mounted'), []);\n    return null;\n};\nexport const KeepMounted = (args) => {\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [keepMountedMenuOpen, setKeepMountedMenuOpen] = useState(false);\n\n    return (\n        <div>\n            <Stack>\n                <p>check your console log for each Mounted message</p>\n                <Button onClick={() => setKeepMountedMenuOpen(true)}>Keep Mounted Menu</Button>\n                <Button onClick={() => setMenuOpen(true)}>Menu Open</Button>\n            </Stack>\n\n            <React.Fragment>\n                <Drawer\n                    direction=\"right\"\n                    variant=\"temporary\"\n                    keepMounted={true}\n                    open={menuOpen}\n                    toggleDrawer={() => setKeepMountedMenuOpen(false)}\n                    {...args}\n                >\n                    <ConsoleLog />\n                    {list()}\n                </Drawer>\n                <Drawer\n                    direction=\"left\"\n                    variant=\"persistent\"\n                    keepMounted={false}\n                    open={menuOpen}\n                    toggleDrawer={() => setMenuOpen(false)}\n                    {...args}\n                >\n                    <ConsoleLog />\n                    {list()}\n                </Drawer>\n            </React.Fragment>\n        </div>\n    );\n};\n",locationsMap:{default:{startLoc:{col:24,line:96},endLoc:{col:1,line:106},startBody:{col:24,line:96},endBody:{col:1,line:106}},backdrop:{startLoc:{col:25,line:108},endLoc:{col:1,line:118},startBody:{col:25,line:108},endBody:{col:1,line:118}},"bg-color":{startLoc:{col:24,line:120},endLoc:{col:1,line:137},startBody:{col:24,line:120},endBody:{col:1,line:137}},width:{startLoc:{col:22,line:139},endLoc:{col:1,line:149},startBody:{col:22,line:139},endBody:{col:1,line:149}},"hide-header":{startLoc:{col:27,line:151},endLoc:{col:1,line:161},startBody:{col:27,line:151},endBody:{col:1,line:161}},swipeable:{startLoc:{col:26,line:163},endLoc:{col:1,line:173},startBody:{col:26,line:163},endBody:{col:1,line:173}},direction:{startLoc:{col:26,line:175},endLoc:{col:1,line:209},startBody:{col:26,line:175},endBody:{col:1,line:209}},variant:{startLoc:{col:24,line:211},endLoc:{col:1,line:247},startBody:{col:24,line:211},endBody:{col:1,line:247}},"keep-mounted":{startLoc:{col:27,line:253},endLoc:{col:1,line:291},startBody:{col:27,line:253},endBody:{col:1,line:291}}}}},title:"Navigation/Drawer",component:_FIXED_Drawer_Drawer,tags:["autodocs"]};var list=function(){return react.createElement("div",null,react.createElement(List.Z,{items:[{id:"inbox",startIcon:react.createElement(Inbox.Z,null),title:"Inbox"},{id:"Drafts",startIcon:react.createElement(Drafts.Z,null),title:"Drafts"},{id:"divider",divider:!0},{id:"Trash",title:"Trash"},"Spam"]}),react.createElement(Divider.Z,{variant:"fullWidth"}),react.createElement(List.Z,{items:[{id:"Photos",title:"Photos",subtitle:"Jan 9, 2014",avatar:{icon:react.createElement(Image.Z,null)},actions:[react.createElement(Button.Z,{icon:react.createElement(Comment.Z,null)})]},{id:"Work",title:"Work",subtitle:"Jan 7, 2014",avatar:{icon:react.createElement(Work.Z,null)},actions:[react.createElement(Button.Z,{icon:react.createElement(Send.Z,null)})]},{id:"Vacation",title:"Vacation",subtitle:"July 20, 2014",avatar:{icon:react.createElement(BeachAccess.Z,null)},actions:[react.createElement(Button.Z,{icon:react.createElement(Send.Z,null)})]}]}))};list.displayName="list";var DrawerState=function(_a){var children=_a.children,_b=react.useState(!1),open=_b[0],setOpen=_b[1];return react.createElement(react.Fragment,null,react.createElement(Button.Z,{onClick:function(){return setOpen(!0)},variant:"contained"},"OPEN DRAWER"),null==children?void 0:children({open,onOpen:function(){return setOpen(!0)},onToggle:function(){return setOpen(!open)},onClose:function(){return setOpen(!1)}}))},Default_=function(args){return react.createElement(DrawerState,null,(function(_a){var open=_a.open,onClose=_a.onClose,onToggle=_a.onToggle;return react.createElement(_FIXED_Drawer_Drawer,Drawer_stories_extends({open,onClose,toggleDrawer:onToggle},args),list())}))};Default_.displayName="Default_";var Backdrop_=function(args){return react.createElement(DrawerState,null,(function(_a){var open=_a.open,onClose=_a.onClose,onToggle=_a.onToggle;return react.createElement(_FIXED_Drawer_Drawer,Drawer_stories_extends({backdrop:!0,open,onClose,variant:"temporary",toggleDrawer:onToggle},args),list())}))};Backdrop_.displayName="Backdrop_";var BgColor_=function(args){return react.createElement(DrawerState,null,(function(_a){var open=_a.open,onClose=_a.onClose,onToggle=_a.onToggle;return react.createElement(_FIXED_Drawer_Drawer,Drawer_stories_extends({bgColor:"primary",open,onClose,variant:"temporary",toggleDrawer:onToggle},args),list())}))};BgColor_.displayName="BgColor_";var Width_=function(args){return react.createElement(DrawerState,null,(function(_a){var open=_a.open,onClose=_a.onClose,onToggle=_a.onToggle;return react.createElement(_FIXED_Drawer_Drawer,Drawer_stories_extends({width:600,open,onClose,variant:"temporary",toggleDrawer:onToggle},args),list())}))};Width_.displayName="Width_";var HideHeader_=function(args){return react.createElement(DrawerState,null,(function(_a){var open=_a.open,onClose=_a.onClose,onToggle=_a.onToggle;return react.createElement(_FIXED_Drawer_Drawer,Drawer_stories_extends({hideHeader:!0,open,onClose,variant:"temporary",toggleDrawer:onToggle},args),list())}))};HideHeader_.displayName="HideHeader_";var Swipeable_=function(args){return react.createElement(DrawerState,null,(function(_a){var open=_a.open,onClose=_a.onClose,onToggle=_a.onToggle;return react.createElement(_FIXED_Drawer_Drawer,Drawer_stories_extends({swipeable:!0,open,onClose,variant:"temporary",toggleDrawer:onToggle},args),list())}))};Swipeable_.displayName="Swipeable_";var Direction_=function(args){var _a=react.useState({top:!1,left:!1,bottom:!1,right:!1}),state=_a[0],setState=_a[1],toggleDrawer=function(anchor,open){return function(event){var _a;("keydown"!==event.type||"Tab"!==event.key&&"Shift"!==event.key)&&setState(Drawer_stories_objectSpread(Drawer_stories_objectSpread({},state),{},((_a={})[anchor]=open,_a)))}};return react.createElement("div",null,["left","right","top","bottom"].map((function(anchor){return react.createElement(react.Fragment,{key:anchor},react.createElement(Button.Z,{onClick:toggleDrawer(anchor,!0)},anchor),react.createElement(_FIXED_Drawer_Drawer,Drawer_stories_extends({direction:anchor,variant:"temporary",open:state[anchor],toggleDrawer:toggleDrawer(anchor,!1)},args),list()))})))};Direction_.displayName="Direction_";var Variant_=function(args){var _a=(0,react.useState)(!1),menuOpen=_a[0],setMenuOpen=_a[1],_b=react.useState({permanent:!1,"mini-persistent":!1,persistent:!1,temporary:!1}),state=_b[0],setState=_b[1],toggleDrawer=function(variant,open){return function(event){var _a;("keydown"!==event.type||"Tab"!==event.key&&"Shift"!==event.key)&&(setMenuOpen(open),setState(Drawer_stories_objectSpread(Drawer_stories_objectSpread({},state),{},((_a={})[variant]=open,_a))))}};return react.createElement("div",null,["permanent","mini-persistent","persistent","temporary"].map((function(variant){return react.createElement(react.Fragment,{key:variant},react.createElement(Button.Z,{onClick:toggleDrawer(variant,!0)},variant),react.createElement(_FIXED_Drawer_Drawer,Drawer_stories_extends({direction:"right",variant,open:menuOpen,toggleDrawer:toggleDrawer(variant,!1)},args),list()))})))};Variant_.displayName="Variant_";var ConsoleLog=function(){return(0,react.useEffect)((function(){return console.log("Mounted")}),[]),null},KeepMounted=function(args){var _a=(0,react.useState)(!1),menuOpen=_a[0],setMenuOpen=_a[1],_b=(0,react.useState)(!1),setKeepMountedMenuOpen=(_b[0],_b[1]);return react.createElement("div",null,react.createElement(Stack.Z,null,react.createElement("p",null,"check your console log for each Mounted message"),react.createElement(Button.Z,{onClick:function(){return setKeepMountedMenuOpen(!0)}},"Keep Mounted Menu"),react.createElement(Button.Z,{onClick:function(){return setMenuOpen(!0)}},"Menu Open")),react.createElement(react.Fragment,null,react.createElement(_FIXED_Drawer_Drawer,Drawer_stories_extends({direction:"right",variant:"temporary",keepMounted:!0,open:menuOpen,toggleDrawer:function(){return setKeepMountedMenuOpen(!1)}},args),react.createElement(ConsoleLog,null),list()),react.createElement(_FIXED_Drawer_Drawer,Drawer_stories_extends({direction:"left",variant:"persistent",keepMounted:!1,open:menuOpen,toggleDrawer:function(){return setMenuOpen(!1)}},args),react.createElement(ConsoleLog,null),list())))};KeepMounted.displayName="KeepMounted",Default_.parameters={...Default_.parameters,docs:{...Default_.parameters?.docs,source:{originalSource:"args => {\n  return <DrawerState>\n            {({\n      open,\n      onClose,\n      onToggle\n    }) => <Drawer open={open} onClose={onClose} toggleDrawer={onToggle} {...args}>\n                    {list()}\n                </Drawer>}\n        </DrawerState>;\n}",...Default_.parameters?.docs?.source}}},Backdrop_.parameters={...Backdrop_.parameters,docs:{...Backdrop_.parameters?.docs,source:{originalSource:'args => {\n  return <DrawerState>\n            {({\n      open,\n      onClose,\n      onToggle\n    }) => <Drawer backdrop open={open} onClose={onClose} variant="temporary" toggleDrawer={onToggle} {...args}>\n                    {list()}\n                </Drawer>}\n        </DrawerState>;\n}',...Backdrop_.parameters?.docs?.source}}},BgColor_.parameters={...BgColor_.parameters,docs:{...BgColor_.parameters?.docs,source:{originalSource:'args => {\n  return <DrawerState>\n            {({\n      open,\n      onClose,\n      onToggle\n    }) => <Drawer bgColor="primary" open={open} onClose={onClose} variant="temporary" toggleDrawer={onToggle} {...args}>\n                    {list()}\n                </Drawer>}\n        </DrawerState>;\n}',...BgColor_.parameters?.docs?.source}}},Width_.parameters={...Width_.parameters,docs:{...Width_.parameters?.docs,source:{originalSource:'args => {\n  return <DrawerState>\n            {({\n      open,\n      onClose,\n      onToggle\n    }) => <Drawer width={600} open={open} onClose={onClose} variant="temporary" toggleDrawer={onToggle} {...args}>\n                    {list()}\n                </Drawer>}\n        </DrawerState>;\n}',...Width_.parameters?.docs?.source}}},HideHeader_.parameters={...HideHeader_.parameters,docs:{...HideHeader_.parameters?.docs,source:{originalSource:'args => {\n  return <DrawerState>\n            {({\n      open,\n      onClose,\n      onToggle\n    }) => <Drawer hideHeader open={open} onClose={onClose} variant="temporary" toggleDrawer={onToggle} {...args}>\n                    {list()}\n                </Drawer>}\n        </DrawerState>;\n}',...HideHeader_.parameters?.docs?.source}}},Swipeable_.parameters={...Swipeable_.parameters,docs:{...Swipeable_.parameters?.docs,source:{originalSource:'args => {\n  return <DrawerState>\n            {({\n      open,\n      onClose,\n      onToggle\n    }) => <Drawer swipeable open={open} onClose={onClose} variant="temporary" toggleDrawer={onToggle} {...args}>\n                    {list()}\n                </Drawer>}\n        </DrawerState>;\n}',...Swipeable_.parameters?.docs?.source}}},Direction_.parameters={...Direction_.parameters,docs:{...Direction_.parameters?.docs,source:{originalSource:"args => {\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setState({\n      ...state,\n      [anchor]: open\n    });\n  };\n  return <div>\n            {['left', 'right', 'top', 'bottom'].map(anchor => <React.Fragment key={anchor}>\n                    <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n                    <Drawer direction={anchor} variant=\"temporary\" open={state[anchor]} toggleDrawer={toggleDrawer(anchor, false)} {...args}>\n                        {list()}\n                    </Drawer>\n                </React.Fragment>)}\n        </div>;\n}",...Direction_.parameters?.docs?.source}}},Variant_.parameters={...Variant_.parameters,docs:{...Variant_.parameters?.docs,source:{originalSource:"args => {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [state, setState] = React.useState({\n    permanent: false,\n    'mini-persistent': false,\n    persistent: false,\n    temporary: false\n  });\n  const toggleDrawer = (variant, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setMenuOpen(open);\n    setState({\n      ...state,\n      [variant]: open\n    });\n  };\n  return <div>\n            {['permanent', 'mini-persistent', 'persistent', 'temporary'].map(variant => <React.Fragment key={variant}>\n                    <Button onClick={toggleDrawer(variant, true)}>{variant}</Button>\n                    <Drawer direction={'right'} variant={variant} open={menuOpen} toggleDrawer={toggleDrawer(variant, false)} {...args}>\n                        {list()}\n                    </Drawer>\n                </React.Fragment>)}\n        </div>;\n}",...Variant_.parameters?.docs?.source}}},KeepMounted.parameters={...KeepMounted.parameters,docs:{...KeepMounted.parameters?.docs,source:{originalSource:'args => {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [keepMountedMenuOpen, setKeepMountedMenuOpen] = useState(false);\n  return <div>\n            <Stack>\n                <p>check your console log for each Mounted message</p>\n                <Button onClick={() => setKeepMountedMenuOpen(true)}>Keep Mounted Menu</Button>\n                <Button onClick={() => setMenuOpen(true)}>Menu Open</Button>\n            </Stack>\n\n            <React.Fragment>\n                <Drawer direction="right" variant="temporary" keepMounted={true} open={menuOpen} toggleDrawer={() => setKeepMountedMenuOpen(false)} {...args}>\n                    <ConsoleLog />\n                    {list()}\n                </Drawer>\n                <Drawer direction="left" variant="persistent" keepMounted={false} open={menuOpen} toggleDrawer={() => setMenuOpen(false)} {...args}>\n                    <ConsoleLog />\n                    {list()}\n                </Drawer>\n            </React.Fragment>\n        </div>;\n}',...KeepMounted.parameters?.docs?.source}}};const __namedExportsOrder=["Default_","Backdrop_","BgColor_","Width_","HideHeader_","Swipeable_","Direction_","Variant_","KeepMounted"];try{Default_.displayName="Default_",Default_.__docgenInfo={description:"",displayName:"Default_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Drawer/__stories__/Drawer.stories.tsx#Default_"]={docgenInfo:Default_.__docgenInfo,name:"Default_",path:"src/components/_FIXED/Drawer/__stories__/Drawer.stories.tsx#Default_"})}catch(__react_docgen_typescript_loader_error){}try{Backdrop_.displayName="Backdrop_",Backdrop_.__docgenInfo={description:"",displayName:"Backdrop_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Drawer/__stories__/Drawer.stories.tsx#Backdrop_"]={docgenInfo:Backdrop_.__docgenInfo,name:"Backdrop_",path:"src/components/_FIXED/Drawer/__stories__/Drawer.stories.tsx#Backdrop_"})}catch(__react_docgen_typescript_loader_error){}try{BgColor_.displayName="BgColor_",BgColor_.__docgenInfo={description:"",displayName:"BgColor_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Drawer/__stories__/Drawer.stories.tsx#BgColor_"]={docgenInfo:BgColor_.__docgenInfo,name:"BgColor_",path:"src/components/_FIXED/Drawer/__stories__/Drawer.stories.tsx#BgColor_"})}catch(__react_docgen_typescript_loader_error){}try{Width_.displayName="Width_",Width_.__docgenInfo={description:"",displayName:"Width_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Drawer/__stories__/Drawer.stories.tsx#Width_"]={docgenInfo:Width_.__docgenInfo,name:"Width_",path:"src/components/_FIXED/Drawer/__stories__/Drawer.stories.tsx#Width_"})}catch(__react_docgen_typescript_loader_error){}try{HideHeader_.displayName="HideHeader_",HideHeader_.__docgenInfo={description:"",displayName:"HideHeader_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Drawer/__stories__/Drawer.stories.tsx#HideHeader_"]={docgenInfo:HideHeader_.__docgenInfo,name:"HideHeader_",path:"src/components/_FIXED/Drawer/__stories__/Drawer.stories.tsx#HideHeader_"})}catch(__react_docgen_typescript_loader_error){}try{Swipeable_.displayName="Swipeable_",Swipeable_.__docgenInfo={description:"",displayName:"Swipeable_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Drawer/__stories__/Drawer.stories.tsx#Swipeable_"]={docgenInfo:Swipeable_.__docgenInfo,name:"Swipeable_",path:"src/components/_FIXED/Drawer/__stories__/Drawer.stories.tsx#Swipeable_"})}catch(__react_docgen_typescript_loader_error){}try{Direction_.displayName="Direction_",Direction_.__docgenInfo={description:"",displayName:"Direction_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Drawer/__stories__/Drawer.stories.tsx#Direction_"]={docgenInfo:Direction_.__docgenInfo,name:"Direction_",path:"src/components/_FIXED/Drawer/__stories__/Drawer.stories.tsx#Direction_"})}catch(__react_docgen_typescript_loader_error){}try{Variant_.displayName="Variant_",Variant_.__docgenInfo={description:"",displayName:"Variant_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Drawer/__stories__/Drawer.stories.tsx#Variant_"]={docgenInfo:Variant_.__docgenInfo,name:"Variant_",path:"src/components/_FIXED/Drawer/__stories__/Drawer.stories.tsx#Variant_"})}catch(__react_docgen_typescript_loader_error){}try{KeepMounted.displayName="KeepMounted",KeepMounted.__docgenInfo={description:"",displayName:"KeepMounted",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Drawer/__stories__/Drawer.stories.tsx#KeepMounted"]={docgenInfo:KeepMounted.__docgenInfo,name:"KeepMounted",path:"src/components/_FIXED/Drawer/__stories__/Drawer.stories.tsx#KeepMounted"})}catch(__react_docgen_typescript_loader_error){}}}]);