"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[4975],{"./src/components/_FIXED/Select/__stories__/InputMultipleSelect.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AutoWidth:()=>AutoWidth,CheckboxMarker:()=>CheckboxMarker,Chips:()=>Chips,Colors:()=>Colors,Components:()=>Components,Default:()=>Default,Disabled:()=>Disabled,DisabledItems:()=>DisabledItems,Error:()=>Error,ExternalComponents:()=>ExternalComponents,GroupBy:()=>GroupBy,HelperText:()=>HelperText,Label:()=>Label,Margin:()=>Margin,MultiCheckbox:()=>MultiCheckbox,MultiMax:()=>MultiMax,Nullable:()=>Nullable,OnEvents:()=>OnEvents,Options:()=>Options,PlaceholderOption:()=>PlaceholderOption,ReadOnly:()=>ReadOnly,RenderValue:()=>RenderValue,Required:()=>Required,SelectAll:()=>SelectAll,SelectedIndicator:()=>SelectedIndicator,Size_:()=>Size_,SquaredChips:()=>SquaredChips,Variant_:()=>Variant_,__namedExportsOrder:()=>__namedExportsOrder,default:()=>InputMultipleSelect_stories,fullWidth:()=>fullWidth});var react=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),Stack=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/Stack/Stack.js"),Box=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/Box/Box.js"),Check=__webpack_require__("./node_modules/.pnpm/@mui+icons-material@7.2.0_@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3._aadb1c40e883fdc91a9cc6aa8769f6fd/node_modules/@mui/icons-material/esm/Check.js"),IndeterminateCheckBox=__webpack_require__("./node_modules/.pnpm/@mui+icons-material@7.2.0_@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3._aadb1c40e883fdc91a9cc6aa8769f6fd/node_modules/@mui/icons-material/esm/IndeterminateCheckBox.js"),InputSelect=__webpack_require__("./src/components/_FIXED/Select/InputSelect.tsx"),Chip=__webpack_require__("./src/components/_FIXED/Chip/Chip.tsx"),helpers=__webpack_require__("./src/utils/helpers.ts"),Checkbox=__webpack_require__("./src/components/_FIXED/Checkbox/Checkbox.tsx"),InputSelect_styled=__webpack_require__("./src/components/_FIXED/Select/InputSelect.styled.tsx"),InputSelect_hooks=__webpack_require__("./src/components/_FIXED/Select/InputSelect.hooks.tsx"),ListItem=__webpack_require__("./src/components/_FIXED/List/ListItem.tsx"),SVGIcon=__webpack_require__("./src/components/_FIXED/SVGIcon/SVGIcon.tsx");const _excluded=["value","chips","renderValue","onChange","max","name","label","squaredChips","selectedIndicator","selectAll","options","groupBy","SELECT_ALL_LABEL","HIDE_ALL_LABEL","SELECTED_ITEMS_LABEL","checkboxMarker"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const RenderValuesAsChips=({value,option:options})=>react.createElement(Box.A,{sx:{display:"flex",flexWrap:"wrap",gap:.5}},null==options?void 0:options.map(({value,label})=>react.createElement(Chip.A,{key:value,label,rounded:!0}))),RenderValuesAsSquaredChips=({value,option:options})=>react.createElement(Box.A,{sx:{display:"flex",flexWrap:"wrap",gap:.5}},null==options?void 0:options.map(({value,label})=>react.createElement(Chip.A,{key:value,label,rounded:!1}))),InputMultipleSelect=_ref=>{var _ref2;let{value,chips=!0,renderValue,onChange,max,name,label:_label,squaredChips=!0,selectedIndicator=!0,selectAll=!0,options:_options,groupBy,SELECT_ALL_LABEL="Select All",HIDE_ALL_LABEL="Hide All",SELECTED_ITEMS_LABEL="({n} selected)",checkboxMarker:_checkboxMarker=react.createElement(Check.A,null)}=_ref,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(-1!==e.indexOf(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],-1===t.indexOf(o)&&{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);const options=(0,InputSelect_hooks.$E)({options:_options}),convertedOptions=(0,InputSelect_hooks.Ov)({options,groupBy}),availableValuesLen=options.filter(option=>!option.disabled||value.includes(option.value)).length,[,setClickAllState]=(0,react.useState)(!1),[isClickedAll,setClickAll]=(0,react.useState)(!1),checkboxMarker=_checkboxMarker&&"string"==typeof _checkboxMarker?react.createElement(SVGIcon.A,null,_checkboxMarker):_checkboxMarker,n=null==value?void 0:value.length,label=selectedIndicator&&n?`${null!==(_ref2=_label)&&void 0!==_ref2?_ref2:""} ${null==SELECTED_ITEMS_LABEL?void 0:SELECTED_ITEMS_LABEL.replace("{n}",String(n))}`:_label,handleSelectAllChange=(0,react.useCallback)(()=>{setClickAll(isClickedAll=>{const values=Object.values(null!=convertedOptions?convertedOptions:{}),allValues=isClickedAll?values.flat().map(option=>option.value):values.flat().filter(item=>item.value&&item.disabled).map(option=>option.value);return null==onChange||onChange({target:{name,value:allValues}}),isClickedAll})},[]),onClickMenuItemHandler=(0,react.useCallback)(event=>{setClickAllState(isClickAllState=>{if(isClickAllState)handleSelectAllChange();else{const values=event.target.value;(!(0,helpers.O9)(max)||(null==values?void 0:values.length)<=max)&&(null==onChange||onChange(event))}return!1})},[max,handleSelectAllChange]);return(0,react.useEffect)(()=>{null!=value&&value.length||!isClickedAll||setClickAll(!1),null!=value&&value.length&&(null==value?void 0:value.length)>=availableValuesLen&&!isClickedAll&&setClickAll(!0)},[null==value?void 0:value.length]),react.createElement(InputSelect.A,_extends({value:[].concat(value).filter(Boolean),multiple:!0,max,label,name,renderValue:squaredChips?react.createElement(RenderValuesAsSquaredChips,null):chips?react.createElement(RenderValuesAsChips,null):renderValue,onChange:onClickMenuItemHandler,checkbox:checkboxMarker,selectAll,options,convertedOptions,selectAllOption:!(0,helpers.O9)(max)&&selectAll?react.createElement(InputSelect_styled.Dr,{onClick:()=>{setClickAllState(!0),setClickAll(v=>!v)}},"boolean"==typeof checkboxMarker&&checkboxMarker&&react.createElement(Checkbox.A,{checked:!!(null!=value&&value.length||isClickedAll),checkedIcon:null==value||!value.length||(null==value?void 0:value.length)>=availableValuesLen?void 0:react.createElement(IndeterminateCheckBox.A,null)}),react.createElement(ListItem.A,{disableGutters:!0,itemProps:{title:isClickedAll&&(!(0,helpers.O9)(checkboxMarker)||"boolean"==typeof checkboxMarker&&checkboxMarker)?HIDE_ALL_LABEL:SELECT_ALL_LABEL,actions:isClickedAll?[checkboxMarker]:void 0,bold:!0},buttonItems:!0,alignItems:"flex-start",isControl:!0,enableSubtitle:!0})):void 0},props))};InputMultipleSelect.displayName="InputMultipleSelect";const Select_InputMultipleSelect=InputMultipleSelect;function InputMultipleSelect_stories_extends(){return InputMultipleSelect_stories_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},InputMultipleSelect_stories_extends.apply(null,arguments)}InputMultipleSelect.__docgenInfo={description:"",methods:[],displayName:"InputMultipleSelect",props:{value:{required:!1,tsType:{name:"Array",elements:[{name:"union",raw:"string | number | boolean",elements:[{name:"string"},{name:"number"},{name:"boolean"}]}],raw:"Array<string | number | boolean>"},description:""},chips:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},squaredChips:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},checkboxMarker:{required:!1,tsType:{name:"union",raw:"IconType | boolean",elements:[{name:"union",raw:"IconName | ReactNode | ReactElement | SvgIconComponent",elements:[{name:"IconName"},{name:"ReactNode"},{name:"ReactElement"},{name:"SvgIcon"}]},{name:"boolean"}]},description:"",defaultValue:{value:"<CheckIcon />",computed:!1}},max:{required:!1,tsType:{name:"number"},description:""},selectedIndicator:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},selectAll:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},SELECT_ALL_LABEL:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'Select All'",computed:!1}},HIDE_ALL_LABEL:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'Hide All'",computed:!1}},SELECTED_ITEMS_LABEL:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'({n} selected)'",computed:!1}}}};const InputMultipleSelect_stories={title:"Inputs/Inputs/InputMultipleSelect",component:Select_InputMultipleSelect,tags:["autodocs"]},render=args=>{const[value,setValue]=(0,react.useState)(args.value);return react.createElement(Select_InputMultipleSelect,InputMultipleSelect_stories_extends({},args,{value,onChange:e=>setValue(e.target.value)}))},Default={args:{}},options=["javascript","python","C#","C++"],AutoWidth={args:{},render},Components={args:{alignActions:"flex-start",startCmp:"Email",endCmp:"Fingerprint",options,label:"Align Actions",value:[options[0]],cmpSpacing:3,nullable:!0,hideStartActionsOnEmpty:!0},render},ExternalComponents={args:{alignActionsExternal:"flex-start",startCmpExternal:"Email",endCmpExternal:"Fingerprint",options,label:"Align Actions",value:[options[0]],cmpSpacing:3},render},Colors={args:{options,label:"colors",value:[options[0]],colorActive:"#D001D0",colorLabel:"secondary",colorText:"warning.dark"},render},HelperText={args:{options,label:"colors",value:[options[0]],helperText:"choose you best language"},render},Error={args:{options,label:"Error",value:[options[0]],helperText:"choose you best language",error:!0},render},Disabled={args:{options,label:"Disabled",value:[options[0]],disabled:!0},render},DisabledItems={args:{options:options.map((item,i)=>({value:item,label:item,disabled:!i})),label:"Disabled Items",value:[options[0]]},render},ReadOnly={args:{options,label:"ReadOnly",value:[options[0]],readOnly:!0},render},Label={args:{options,value:[options[0]],label:"Languages"},render},fullWidth={args:{options,value:[options[0]],label:"Full Width",fullWidth:!0},render},Nullable={args:{options,value:[options[0]],label:"Nullable",nullable:!0},render},PlaceholderOption={args:{options,value:[void 0],label:"Placeholder Option",placeholderOption:"placeholder option here",nullable:!0},render},Required={args:{options,value:[options[0]],label:"Required",required:!0},render},OnEvents={args:{options,value:[options[0]],label:"Focused",focused:!0,onBlur:event=>console.log("onBlur",event),onChange:event=>console.log("onChange",event),onFocus:event=>console.log("onFocus",event)},render},Margin={args:{options,value:[options[0]],label:"Margin",margin:"dense"},render},Size_=args=>{var _args$value;const[value,setValue]=(0,react.useState)(null!==(_args$value=args.value)&&void 0!==_args$value?_args$value:[]);return react.createElement(Stack.A,{spacing:3},react.createElement(Select_InputMultipleSelect,{options,label:"Small",size:"small",value,onChange:e=>setValue(e.target.value)}),react.createElement(Select_InputMultipleSelect,{options,label:"Medium",size:"medium",value,onChange:e=>setValue(e.target.value)}))},Variant_=args=>{var _args$value2;const[value,setValue]=(0,react.useState)(null!==(_args$value2=args.value)&&void 0!==_args$value2?_args$value2:[]);return react.createElement(Stack.A,{spacing:3},react.createElement(Select_InputMultipleSelect,{options,label:"Filled",variant:"filled",value,onChange:e=>setValue(e.target.value),nullable:!0}),react.createElement(Select_InputMultipleSelect,{options,label:"Outlined",variant:"outlined",value,onChange:e=>setValue(e.target.value),nullable:!0}),react.createElement(Select_InputMultipleSelect,{options,label:"Standard",variant:"standard",value,onChange:e=>setValue(e.target.value),nullable:!0}))},Options={args:{options:[{label:"Test",category:"coding",value:"t1"},{label:"Figma",category:"UI/UX",value:"f1"},{label:"Adobe",category:"UI/UX",value:"a1"},{label:"React",category:"coding",value:"r1"},{label:"Jira",category:"management",value:"j1"}],value:["t1"],label:"Options"},render},GroupBy={args:{options:[{label:"Test",category:"coding",value:"t1"},{label:"Figma",category:"UI/UX",value:"f1"},{label:"Adobe",category:"UI/UX",value:"a1"},{label:"React",category:"coding",value:"r1"},{label:"Jira",category:"management",value:"j1"}],value:["t1"],label:"Group By",groupBy:"category"},render},RenderValue={args:{options:[{label:"Test",category:"coding",value:"t1"},{label:"Figma",category:"UI/UX",value:"f1"},{label:"Adobe",category:"UI/UX",value:"a1"},{label:"React",category:"coding",value:"r1"},{label:"Jira",category:"management",value:"j1"}],value:["t1"],label:"Render Value",renderValue:value=>value},render},MultiMax={args:{options:[{label:"Test",category:"coding",value:"t1"},{label:"Figma",category:"UI/UX",value:"f1"},{label:"Adobe",category:"UI/UX",value:"a1"},{label:"React",category:"coding",value:"r1"},{label:"Jira",category:"management",value:"j1"}],value:["t1"],label:"MultiMax Label",max:3,renderValue:value=>value},render},SelectAll={args:{options:[{label:"Test",category:"coding",value:"t1"},{label:"Figma",category:"UI/UX",value:"f1"},{label:"Adobe",category:"UI/UX",value:"a1"},{label:"React",category:"coding",value:"r1"},{label:"Jira",category:"management",value:"j1"}],value:["t1"],label:"Select All Label",selectAll:!0,selectAllOption:!0,nullable:"None Selection",placeholderOption:"Choose from list:",renderValue:value=>value},render},MultiCheckbox={args:{options:[{label:"Test",category:"coding",value:"t1"},{label:"Figma",category:"UI/UX",value:"f1"},{label:"Adobe",category:"UI/UX",value:"a1"},{label:"React",category:"coding",value:"r1"},{label:"Jira",category:"management",value:"j1"}],value:["t1"],label:"MultiCheckbox Label",checkbox:!0,selectAll:!0,selectAllOption:!0,renderValue:value=>value},render},SelectedIndicator={args:{options:[{label:"Test",category:"coding",value:"t1"},{label:"Figma",category:"UI/UX",value:"f1"},{label:"Adobe",category:"UI/UX",value:"a1"},{label:"React",category:"coding",value:"r1"},{label:"Jira",category:"management",value:"j1"}],value:["t1"],label:"Not SelectedIndicator Label",selectAll:!0,selectedIndicator:!1,renderValue:value=>value},render},Chips={args:{options:[{label:"Test",category:"coding",value:"t1"},{label:"Figma",category:"UI/UX",value:"f1"},{label:"Adobe",category:"UI/UX",value:"a1"},{label:"React",category:"coding",value:"r1"},{label:"Jira",category:"management",value:"j1"}],value:["t1"],label:"Non Display as Chips Label",selectAll:!0,chips:!1,renderValue:value=>value},render},CheckboxMarker={args:{options:[{label:"Test",category:"coding",value:"t1"},{label:"Figma",category:"UI/UX",value:"f1"},{label:"Adobe",category:"UI/UX",value:"a1"},{label:"React",category:"coding",value:"r1"},{label:"Jira",category:"management",value:"j1"}],value:["t1"],label:"CheckboxMarker Label",checkbox:!0,checkboxMarker:"Send",selectAll:!0,chips:!1,renderValue:value=>value},render},SquaredChips={args:{options:[{label:"Test",category:"coding",value:"t1"},{label:"Figma",category:"UI/UX",value:"f1"},{label:"Adobe",category:"UI/UX",value:"a1"},{label:"React",category:"coding",value:"r1"},{label:"Jira",category:"management",value:"j1"}],value:["t1"],label:"CheckboxMarker Label",checkbox:!0,checkboxMarker:!0,selectAll:!0,chips:!0,squaredChips:!1,renderValue:value=>value},render},__namedExportsOrder=["Default","AutoWidth","Components","ExternalComponents","Colors","HelperText","Error","Disabled","DisabledItems","ReadOnly","Label","fullWidth","Nullable","PlaceholderOption","Required","OnEvents","Margin","Size_","Variant_","Options","GroupBy","RenderValue","MultiMax","SelectAll","MultiCheckbox","SelectedIndicator","Chips","CheckboxMarker","SquaredChips"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Default.parameters?.docs?.source}}},AutoWidth.parameters={...AutoWidth.parameters,docs:{...AutoWidth.parameters?.docs,source:{originalSource:"{\n  args: {},\n  render\n}",...AutoWidth.parameters?.docs?.source}}},Components.parameters={...Components.parameters,docs:{...Components.parameters?.docs,source:{originalSource:"{\n  args: {\n    alignActions: 'flex-start',\n    startCmp: 'Email',\n    endCmp: 'Fingerprint',\n    options,\n    label: 'Align Actions',\n    value: [options[0]],\n    cmpSpacing: 3,\n    nullable: true,\n    hideStartActionsOnEmpty: true\n  },\n  render\n}",...Components.parameters?.docs?.source}}},ExternalComponents.parameters={...ExternalComponents.parameters,docs:{...ExternalComponents.parameters?.docs,source:{originalSource:"{\n  args: {\n    alignActionsExternal: 'flex-start',\n    startCmpExternal: 'Email',\n    endCmpExternal: 'Fingerprint',\n    options,\n    label: 'Align Actions',\n    value: [options[0]],\n    cmpSpacing: 3\n  },\n  render\n}",...ExternalComponents.parameters?.docs?.source}}},Colors.parameters={...Colors.parameters,docs:{...Colors.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    label: 'colors',\n    value: [options[0]],\n    colorActive: '#D001D0',\n    colorLabel: 'secondary',\n    colorText: 'warning.dark'\n  },\n  render\n}",...Colors.parameters?.docs?.source}}},HelperText.parameters={...HelperText.parameters,docs:{...HelperText.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    label: 'colors',\n    value: [options[0]],\n    helperText: 'choose you best language'\n  },\n  render\n}",...HelperText.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    label: 'Error',\n    value: [options[0]],\n    helperText: 'choose you best language',\n    error: true\n  },\n  render\n}",...Error.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    label: 'Disabled',\n    value: [options[0]],\n    disabled: true\n  },\n  render\n}",...Disabled.parameters?.docs?.source}}},DisabledItems.parameters={...DisabledItems.parameters,docs:{...DisabledItems.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: options.map((item, i) => ({\n      value: item,\n      label: item,\n      disabled: !i\n    })),\n    label: 'Disabled Items',\n    value: [options[0]]\n  },\n  render\n}",...DisabledItems.parameters?.docs?.source}}},ReadOnly.parameters={...ReadOnly.parameters,docs:{...ReadOnly.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    label: 'ReadOnly',\n    value: [options[0]],\n    readOnly: true\n  },\n  render\n}",...ReadOnly.parameters?.docs?.source}}},Label.parameters={...Label.parameters,docs:{...Label.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    value: [options[0]],\n    label: 'Languages'\n  },\n  render\n}",...Label.parameters?.docs?.source}}},fullWidth.parameters={...fullWidth.parameters,docs:{...fullWidth.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    value: [options[0]],\n    label: 'Full Width',\n    fullWidth: true\n  },\n  render\n}",...fullWidth.parameters?.docs?.source}}},Nullable.parameters={...Nullable.parameters,docs:{...Nullable.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    value: [options[0]],\n    label: 'Nullable',\n    nullable: true\n  },\n  render\n}",...Nullable.parameters?.docs?.source}}},PlaceholderOption.parameters={...PlaceholderOption.parameters,docs:{...PlaceholderOption.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    value: [undefined],\n    label: 'Placeholder Option',\n    placeholderOption: 'placeholder option here',\n    nullable: true\n  },\n  render\n}",...PlaceholderOption.parameters?.docs?.source}}},Required.parameters={...Required.parameters,docs:{...Required.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    value: [options[0]],\n    label: 'Required',\n    required: true\n  },\n  render\n}",...Required.parameters?.docs?.source}}},OnEvents.parameters={...OnEvents.parameters,docs:{...OnEvents.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    value: [options[0]],\n    label: 'Focused',\n    focused: true,\n    onBlur: event => console.log('onBlur', event),\n    onChange: event => console.log('onChange', event),\n    onFocus: event => console.log('onFocus', event)\n  },\n  render\n}",...OnEvents.parameters?.docs?.source}}},Margin.parameters={...Margin.parameters,docs:{...Margin.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    value: [options[0]],\n    label: 'Margin',\n    margin: 'dense'\n  },\n  render\n}",...Margin.parameters?.docs?.source}}},Size_.parameters={...Size_.parameters,docs:{...Size_.parameters?.docs,source:{originalSource:'args => {\n  const [value, setValue] = useState(args.value ?? []);\n  return <Stack spacing={3}>\n            <InputMultipleSelect options={options} label="Small" size="small" value={value} onChange={e => setValue(e.target.value)} />\n            <InputMultipleSelect options={options} label="Medium" size="medium" value={value} onChange={e => setValue(e.target.value)} />\n        </Stack>;\n}',...Size_.parameters?.docs?.source}}},Variant_.parameters={...Variant_.parameters,docs:{...Variant_.parameters?.docs,source:{originalSource:'args => {\n  const [value, setValue] = useState(args.value ?? []);\n  return <Stack spacing={3}>\n            <InputMultipleSelect options={options} label="Filled" variant="filled" value={value} onChange={e => setValue(e.target.value)} nullable />\n            <InputMultipleSelect options={options} label="Outlined" variant="outlined" value={value} onChange={e => setValue(e.target.value)} nullable />\n            <InputMultipleSelect options={options} label="Standard" variant="standard" value={value} onChange={e => setValue(e.target.value)} nullable />\n        </Stack>;\n}',...Variant_.parameters?.docs?.source}}},Options.parameters={...Options.parameters,docs:{...Options.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: [{\n      label: 'Test',\n      category: 'coding',\n      value: 't1'\n    }, {\n      label: 'Figma',\n      category: 'UI/UX',\n      value: 'f1'\n    }, {\n      label: 'Adobe',\n      category: 'UI/UX',\n      value: 'a1'\n    }, {\n      label: 'React',\n      category: 'coding',\n      value: 'r1'\n    }, {\n      label: 'Jira',\n      category: 'management',\n      value: 'j1'\n    }],\n    value: ['t1'],\n    label: 'Options'\n  },\n  render\n}",...Options.parameters?.docs?.source}}},GroupBy.parameters={...GroupBy.parameters,docs:{...GroupBy.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: [{\n      label: 'Test',\n      category: 'coding',\n      value: 't1'\n    }, {\n      label: 'Figma',\n      category: 'UI/UX',\n      value: 'f1'\n    }, {\n      label: 'Adobe',\n      category: 'UI/UX',\n      value: 'a1'\n    }, {\n      label: 'React',\n      category: 'coding',\n      value: 'r1'\n    }, {\n      label: 'Jira',\n      category: 'management',\n      value: 'j1'\n    }],\n    value: ['t1'],\n    label: 'Group By',\n    groupBy: 'category'\n  },\n  render\n}",...GroupBy.parameters?.docs?.source}}},RenderValue.parameters={...RenderValue.parameters,docs:{...RenderValue.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: [{\n      label: 'Test',\n      category: 'coding',\n      value: 't1'\n    }, {\n      label: 'Figma',\n      category: 'UI/UX',\n      value: 'f1'\n    }, {\n      label: 'Adobe',\n      category: 'UI/UX',\n      value: 'a1'\n    }, {\n      label: 'React',\n      category: 'coding',\n      value: 'r1'\n    }, {\n      label: 'Jira',\n      category: 'management',\n      value: 'j1'\n    }],\n    value: ['t1'],\n    label: 'Render Value',\n    renderValue: value => value\n  },\n  render\n}",...RenderValue.parameters?.docs?.source}}},MultiMax.parameters={...MultiMax.parameters,docs:{...MultiMax.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: [{\n      label: 'Test',\n      category: 'coding',\n      value: 't1'\n    }, {\n      label: 'Figma',\n      category: 'UI/UX',\n      value: 'f1'\n    }, {\n      label: 'Adobe',\n      category: 'UI/UX',\n      value: 'a1'\n    }, {\n      label: 'React',\n      category: 'coding',\n      value: 'r1'\n    }, {\n      label: 'Jira',\n      category: 'management',\n      value: 'j1'\n    }],\n    value: ['t1'],\n    label: 'MultiMax Label',\n    max: 3,\n    renderValue: value => value\n  },\n  render\n}",...MultiMax.parameters?.docs?.source}}},SelectAll.parameters={...SelectAll.parameters,docs:{...SelectAll.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: [{\n      label: 'Test',\n      category: 'coding',\n      value: 't1'\n    }, {\n      label: 'Figma',\n      category: 'UI/UX',\n      value: 'f1'\n    }, {\n      label: 'Adobe',\n      category: 'UI/UX',\n      value: 'a1'\n    }, {\n      label: 'React',\n      category: 'coding',\n      value: 'r1'\n    }, {\n      label: 'Jira',\n      category: 'management',\n      value: 'j1'\n    }],\n    value: ['t1'],\n    label: 'Select All Label',\n    selectAll: true,\n    selectAllOption: true,\n    nullable: 'None Selection',\n    placeholderOption: 'Choose from list:',\n    renderValue: value => value\n  },\n  render\n}",...SelectAll.parameters?.docs?.source}}},MultiCheckbox.parameters={...MultiCheckbox.parameters,docs:{...MultiCheckbox.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: [{\n      label: 'Test',\n      category: 'coding',\n      value: 't1'\n    }, {\n      label: 'Figma',\n      category: 'UI/UX',\n      value: 'f1'\n    }, {\n      label: 'Adobe',\n      category: 'UI/UX',\n      value: 'a1'\n    }, {\n      label: 'React',\n      category: 'coding',\n      value: 'r1'\n    }, {\n      label: 'Jira',\n      category: 'management',\n      value: 'j1'\n    }],\n    value: ['t1'],\n    label: 'MultiCheckbox Label',\n    checkbox: true,\n    selectAll: true,\n    selectAllOption: true,\n    renderValue: value => value\n  },\n  render\n}",...MultiCheckbox.parameters?.docs?.source}}},SelectedIndicator.parameters={...SelectedIndicator.parameters,docs:{...SelectedIndicator.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: [{\n      label: 'Test',\n      category: 'coding',\n      value: 't1'\n    }, {\n      label: 'Figma',\n      category: 'UI/UX',\n      value: 'f1'\n    }, {\n      label: 'Adobe',\n      category: 'UI/UX',\n      value: 'a1'\n    }, {\n      label: 'React',\n      category: 'coding',\n      value: 'r1'\n    }, {\n      label: 'Jira',\n      category: 'management',\n      value: 'j1'\n    }],\n    value: ['t1'],\n    label: 'Not SelectedIndicator Label',\n    selectAll: true,\n    selectedIndicator: false,\n    renderValue: value => value\n  },\n  render\n}",...SelectedIndicator.parameters?.docs?.source}}},Chips.parameters={...Chips.parameters,docs:{...Chips.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: [{\n      label: 'Test',\n      category: 'coding',\n      value: 't1'\n    }, {\n      label: 'Figma',\n      category: 'UI/UX',\n      value: 'f1'\n    }, {\n      label: 'Adobe',\n      category: 'UI/UX',\n      value: 'a1'\n    }, {\n      label: 'React',\n      category: 'coding',\n      value: 'r1'\n    }, {\n      label: 'Jira',\n      category: 'management',\n      value: 'j1'\n    }],\n    value: ['t1'],\n    label: 'Non Display as Chips Label',\n    selectAll: true,\n    chips: false,\n    renderValue: value => value\n  },\n  render\n}",...Chips.parameters?.docs?.source}}},CheckboxMarker.parameters={...CheckboxMarker.parameters,docs:{...CheckboxMarker.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: [{\n      label: 'Test',\n      category: 'coding',\n      value: 't1'\n    }, {\n      label: 'Figma',\n      category: 'UI/UX',\n      value: 'f1'\n    }, {\n      label: 'Adobe',\n      category: 'UI/UX',\n      value: 'a1'\n    }, {\n      label: 'React',\n      category: 'coding',\n      value: 'r1'\n    }, {\n      label: 'Jira',\n      category: 'management',\n      value: 'j1'\n    }],\n    value: ['t1'],\n    label: 'CheckboxMarker Label',\n    checkbox: true,\n    checkboxMarker: 'Send',\n    selectAll: true,\n    chips: false,\n    renderValue: value => value\n  },\n  render\n}",...CheckboxMarker.parameters?.docs?.source}}},SquaredChips.parameters={...SquaredChips.parameters,docs:{...SquaredChips.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: [{\n      label: 'Test',\n      category: 'coding',\n      value: 't1'\n    }, {\n      label: 'Figma',\n      category: 'UI/UX',\n      value: 'f1'\n    }, {\n      label: 'Adobe',\n      category: 'UI/UX',\n      value: 'a1'\n    }, {\n      label: 'React',\n      category: 'coding',\n      value: 'r1'\n    }, {\n      label: 'Jira',\n      category: 'management',\n      value: 'j1'\n    }],\n    value: ['t1'],\n    label: 'CheckboxMarker Label',\n    checkbox: true,\n    checkboxMarker: true,\n    selectAll: true,\n    chips: true,\n    squaredChips: false,\n    renderValue: value => value\n  },\n  render\n}",...SquaredChips.parameters?.docs?.source}}}}}]);