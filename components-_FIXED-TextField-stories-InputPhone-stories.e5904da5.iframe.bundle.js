(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[9432],{"./node_modules/@storybook/test/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/test/dist sync recursive",module.exports=webpackEmptyContext},"./src/components/_FIXED/TextField/stories/InputPhone.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AlignActions:()=>AlignActions,AlignActionsExternal:()=>AlignActionsExternal,AutoComplete:()=>AutoComplete,CmpSpacing:()=>CmpSpacing,ColorActive:()=>ColorActive,ColorLabel:()=>ColorLabel,ColorText:()=>ColorText,CopyAction:()=>CopyAction,Default:()=>Default,Direction:()=>Direction,Disabled:()=>Disabled,EndCmpExternal_:()=>EndCmpExternal_,EndCmp_:()=>EndCmp_,Error:()=>Error,Focused:()=>Focused,Formik_:()=>Formik_,FullWidth:()=>FullWidth,HelperText:()=>HelperText,HideStartActionsOnEmpty_:()=>HideStartActionsOnEmpty_,Label:()=>Label,LetterSpacing:()=>LetterSpacing,Margin_:()=>Margin_,OnChangeText:()=>OnChangeText,ReadOnly:()=>ReadOnly,Required:()=>Required,ShowMaskAsPlaceholder:()=>ShowMaskAsPlaceholder,StartCmpExternal_:()=>StartCmpExternal_,StartCmp_:()=>StartCmp_,TextAlign:()=>TextAlign,Value:()=>Value,Variant_:()=>Variant_,__namedExportsOrder:()=>__namedExportsOrder,default:()=>InputPhone_stories});var react=__webpack_require__("./node_modules/react/index.js"),Send=__webpack_require__("./node_modules/@mui/icons-material/esm/Send.js"),Stack=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),external_STORYBOOK_MODULE_ACTIONS_=__webpack_require__("storybook/actions"),dist=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),formik_esm=__webpack_require__("./node_modules/formik/dist/formik.esm.js"),InputPattern=__webpack_require__("./src/components/_FIXED/TextField/InputPattern.tsx"),helpers=__webpack_require__("./src/utils/helpers.ts");const _excluded=["innerRef"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const InputPhone=_ref=>{let{innerRef}=_ref,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.includes(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.includes(o)||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);props=(0,helpers.$B)(props,"definitions",{"#":/[1-9]/}),props=(0,helpers.$B)(props,"direction","ltr"),props=(0,helpers.$B)(props,"value",""),props=(0,helpers.$B)(props,"mask","000-000-0000");(0,react.useRef)(null);return react.createElement(InputPattern.A,_extends({inputRef:innerRef,type:"tel"},props))};InputPhone.displayName="InputPhone";const TextField_InputPhone=InputPhone;InputPhone.__docgenInfo={description:"",methods:[],displayName:"InputPhone",props:{alignActions:{required:!1,tsType:{name:"union",raw:"| 'center'\n| 'start'\n| 'end'\n| 'flex-start'\n| 'flex-end'\n| 'normal'\n| 'baseline'\n| 'first baseline'\n| 'last baseline'\n| 'space-between'\n| 'space-around'\n| 'space-evenly'\n| 'stretch'\n| 'safe center'\n| 'unsafe center'\n| 'inherit'\n| 'initial'\n| 'revert'\n| 'revert-layer'\n| 'unset'",elements:[{name:"literal",value:"'center'"},{name:"literal",value:"'start'"},{name:"literal",value:"'end'"},{name:"literal",value:"'flex-start'"},{name:"literal",value:"'flex-end'"},{name:"literal",value:"'normal'"},{name:"literal",value:"'baseline'"},{name:"literal",value:"'first baseline'"},{name:"literal",value:"'last baseline'"},{name:"literal",value:"'space-between'"},{name:"literal",value:"'space-around'"},{name:"literal",value:"'space-evenly'"},{name:"literal",value:"'stretch'"},{name:"literal",value:"'safe center'"},{name:"literal",value:"'unsafe center'"},{name:"literal",value:"'inherit'"},{name:"literal",value:"'initial'"},{name:"literal",value:"'revert'"},{name:"literal",value:"'revert-layer'"},{name:"literal",value:"'unset'"}]},description:""},alignActionsExternal:{required:!1,tsType:{name:"union",raw:"| 'center'\n| 'start'\n| 'end'\n| 'flex-start'\n| 'flex-end'\n| 'normal'\n| 'baseline'\n| 'first baseline'\n| 'last baseline'\n| 'space-between'\n| 'space-around'\n| 'space-evenly'\n| 'stretch'\n| 'safe center'\n| 'unsafe center'\n| 'inherit'\n| 'initial'\n| 'revert'\n| 'revert-layer'\n| 'unset'",elements:[{name:"literal",value:"'center'"},{name:"literal",value:"'start'"},{name:"literal",value:"'end'"},{name:"literal",value:"'flex-start'"},{name:"literal",value:"'flex-end'"},{name:"literal",value:"'normal'"},{name:"literal",value:"'baseline'"},{name:"literal",value:"'first baseline'"},{name:"literal",value:"'last baseline'"},{name:"literal",value:"'space-between'"},{name:"literal",value:"'space-around'"},{name:"literal",value:"'space-evenly'"},{name:"literal",value:"'stretch'"},{name:"literal",value:"'safe center'"},{name:"literal",value:"'unsafe center'"},{name:"literal",value:"'inherit'"},{name:"literal",value:"'initial'"},{name:"literal",value:"'revert'"},{name:"literal",value:"'revert-layer'"},{name:"literal",value:"'unset'"}]},description:""},autoComplete:{required:!1,tsType:{name:"string"},description:""},cmpSpacing:{required:!1,tsType:{name:"number"},description:""},colorActive:{required:!1,tsType:{name:"string"},description:""},colorLabel:{required:!1,tsType:{name:"string"},description:""},colorText:{required:!1,tsType:{name:"string"},description:""},copyAction:{required:!1,tsType:{name:"boolean"},description:""},copyMessage:{required:!1,tsType:{name:"string"},description:""},copyTooltipProps:{required:!1,tsType:{name:"TooltipProps"},description:""},copyValueHandler:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string, unmaskvalue: string) => string",signature:{arguments:[{type:{name:"string"},name:"value"},{type:{name:"string"},name:"unmaskvalue"}],return:{name:"string"}}},description:""},debounceDelay:{required:!1,tsType:{name:"number"},description:""},direction:{required:!1,tsType:{name:"union",raw:"'ltr' | 'rtl'",elements:[{name:"literal",value:"'ltr'"},{name:"literal",value:"'rtl'"}]},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:""},endCmp:{required:!1,tsType:{name:"union",raw:"IconName | ReactNode | ReactElement | SvgIconComponent",elements:[{name:"IconName"},{name:"ReactNode"},{name:"ReactElement"},{name:"SvgIcon"}]},description:""},endCmpExternal:{required:!1,tsType:{name:"union",raw:"IconName | ReactNode | ReactElement | SvgIconComponent",elements:[{name:"IconName"},{name:"ReactNode"},{name:"ReactElement"},{name:"SvgIcon"}]},description:""},error:{required:!1,tsType:{name:"boolean"},description:""},focused:{required:!1,tsType:{name:"boolean"},description:""},fullWidth:{required:!1,tsType:{name:"boolean"},description:""},helperText:{required:!1,tsType:{name:"string"},description:""},hideStartActionsOnEmpty:{required:!1,tsType:{name:"boolean"},description:""},id:{required:!1,tsType:{name:"string"},description:""},label:{required:!1,tsType:{name:"string"},description:""},letterSpacing:{required:!1,tsType:{name:"union",raw:"number | string",elements:[{name:"number"},{name:"string"}]},description:""},margin:{required:!1,tsType:{name:"union",raw:"'normal' | 'dense'",elements:[{name:"literal",value:"'normal'"},{name:"literal",value:"'dense'"}]},description:""},minRows:{required:!1,tsType:{name:"number"},description:""},maxRows:{required:!1,tsType:{name:"number"},description:""},multiline:{required:!1,tsType:{name:"boolean"},description:""},name:{required:!1,tsType:{name:"string"},description:""},onBlur:{required:!1,tsType:{name:"signature",type:"function",raw:"(Event) => void",signature:{arguments:[{name:"Event"}],return:{name:"void"}}},description:""},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(Event) => void",signature:{arguments:[{name:"Event"}],return:{name:"void"}}},description:""},onEnterKeyPress:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},onFocus:{required:!1,tsType:{name:"signature",type:"function",raw:"(Event) => void",signature:{arguments:[{name:"Event"}],return:{name:"void"}}},description:""},onKeyPress:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: any) => void",signature:{arguments:[{type:{name:"any"},name:"event"}],return:{name:"void"}}},description:""},padding:{required:!1,tsType:{name:"union",raw:"number | string",elements:[{name:"number"},{name:"string"}]},description:""},readOnly:{required:!1,tsType:{name:"boolean"},description:""},required:{required:!1,tsType:{name:"boolean"},description:""},rows:{required:!1,tsType:{name:"number"},description:""},startCmp:{required:!1,tsType:{name:"union",raw:"IconName | ReactNode | ReactElement | SvgIconComponent",elements:[{name:"IconName"},{name:"ReactNode"},{name:"ReactElement"},{name:"SvgIcon"}]},description:""},startCmpExternal:{required:!1,tsType:{name:"union",raw:"IconName | ReactNode | ReactElement | SvgIconComponent",elements:[{name:"IconName"},{name:"ReactNode"},{name:"ReactElement"},{name:"SvgIcon"}]},description:""},textAlign:{required:!1,tsType:{name:"union",raw:"| 'center'\n| 'start'\n| 'end'\n| 'flex-start'\n| 'flex-end'\n| 'normal'\n| 'baseline'\n| 'first baseline'\n| 'last baseline'\n| 'space-between'\n| 'space-around'\n| 'space-evenly'\n| 'stretch'\n| 'safe center'\n| 'unsafe center'\n| 'inherit'\n| 'initial'\n| 'revert'\n| 'revert-layer'\n| 'unset'",elements:[{name:"literal",value:"'center'"},{name:"literal",value:"'start'"},{name:"literal",value:"'end'"},{name:"literal",value:"'flex-start'"},{name:"literal",value:"'flex-end'"},{name:"literal",value:"'normal'"},{name:"literal",value:"'baseline'"},{name:"literal",value:"'first baseline'"},{name:"literal",value:"'last baseline'"},{name:"literal",value:"'space-between'"},{name:"literal",value:"'space-around'"},{name:"literal",value:"'space-evenly'"},{name:"literal",value:"'stretch'"},{name:"literal",value:"'safe center'"},{name:"literal",value:"'unsafe center'"},{name:"literal",value:"'inherit'"},{name:"literal",value:"'initial'"},{name:"literal",value:"'revert'"},{name:"literal",value:"'revert-layer'"},{name:"literal",value:"'unset'"}]},description:""},type:{required:!1,tsType:{name:"string"},description:""},value:{required:!1,tsType:{name:"union",raw:"string | any",elements:[{name:"string"},{name:"any"}]},description:""},variant:{required:!1,tsType:{name:"union",raw:"'filled' | 'standard' | 'outlined'",elements:[{name:"literal",value:"'filled'"},{name:"literal",value:"'standard'"},{name:"literal",value:"'outlined'"}]},description:""},autofix:{required:!1,tsType:{name:"boolean"},description:""},blocks:{required:!1,tsType:{name:"object"},description:""},definitions:{required:!1,tsType:{name:"object"},description:""},lazy:{required:!1,tsType:{name:"boolean"},description:""},mask:{required:!1,tsType:{name:"union",raw:"((event: any) => void) | string | any[]",elements:[{name:"unknown"},{name:"string"},{name:"Array",elements:[{name:"any"}],raw:"any[]"}]},description:""},onAccept:{required:!1,tsType:{name:"signature",type:"function",raw:"(value, mask: { _value: string; _unmaskedValue: string; [key: string]: any }) => void",signature:{arguments:[{name:"value"},{type:{name:"signature",type:"object",raw:"{ _value: string; _unmaskedValue: string; [key: string]: any }",signature:{properties:[{key:"_value",value:{name:"string",required:!0}},{key:"_unmaskedValue",value:{name:"string",required:!0}},{key:{name:"string"},value:{name:"any",required:!0}}]}},name:"mask"}],return:{name:"void"}}},description:""},overwrite:{required:!1,tsType:{name:"boolean"},description:""},placeholder:{required:!1,tsType:{name:"string"},description:""},showMaskAsPlaceholder:{required:!1,tsType:{name:"boolean"},description:""},unmask:{required:!1,tsType:{name:"boolean"},description:""},copyTooltip:{required:!1,tsType:{name:"string"},description:""}}};var Checkbox=__webpack_require__("./src/components/_FIXED/Checkbox/Checkbox.tsx"),Typography=__webpack_require__("./src/components/_FIXED/Typography/Typography.tsx");function InputPhone_stories_extends(){return InputPhone_stories_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},InputPhone_stories_extends.apply(null,arguments)}const InputPhone_stories={title:"Inputs/Inputs/InputPhone",component:TextField_InputPhone,tags:["autodocs"]},render=args=>{const[value,setValue]=(0,react.useState)(args.value);return react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{value,copyAction:!0,onChange:(0,dist.fn)(),onAccept:(0,dist.fn)()}))},value="0512345678",Default={args:{},render},TextAlign={args:{label:"Text Align",textAlign:"center",value},render},Direction={args:{label:"RTL Direction",direction:"rtl",value},render},LetterSpacing={args:{label:"Letter Spacing",letterSpacing:"5px",value},render},ShowMaskAsPlaceholder={args:{label:"Show Mask As Placeholder",letterSpacing:"5px",value,showMaskAsPlaceholder:!0},render},AlignActions={args:{alignActions:"flex-start",startCmp:"Phone",endCmp:"Fingerprint",multiline:!0,label:"Align Actions",value},render},AlignActionsExternal={args:{alignActions:"flex-start",startCmpExternal:"Phone",endCmpExternal:"Fingerprint",multiline:!0,label:"Align Actions External",value},render},AutoComplete={args:{autoComplete:"phone",name:"phone",label:"Auto Complete"},render},CmpSpacing={args:{alignActions:"flex-start",startCmp:"Phone",endCmp:"Fingerprint",cmpSpacing:6,label:"Cmp Spacing",value},render},ColorActive={args:{colorActive:"warning",label:"Color Active",value},render},ColorLabel={args:{colorLabel:"success",label:"Color Label",value},render},ColorText={args:{colorText:"#D10DAA",label:"Color Text",value},render},Disabled={args:{colorText:"#D10DAA",label:"Disabled",disabled:!0,value},render},EndCmp_=args=>react.createElement(Stack.A,{spacing:3},react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{endCmp:"Send",label:"End Cmp",value:"endCmp with mui icon name or mui icon element",onAccept:(0,dist.fn)(),onChange:(0,dist.fn)()})),react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{endCmp:react.createElement(Send.A,null),label:"End Cmp",value:"endCmp with mui icon name or mui icon element",onAccept:(0,dist.fn)(),onChange:(0,dist.fn)()}))),EndCmpExternal_=args=>react.createElement(Stack.A,{spacing:3},react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{endCmpExternal:"Send",label:"End Cmp External",value:"endCmpExternal with mui icon name or mui icon element",onAccept:(0,dist.fn)(),onChange:(0,dist.fn)()})),react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{endCmpExternal:react.createElement(Send.A,null),label:"End Cmp External",value:"endCmpExternal with mui icon name or mui icon element",onAccept:(0,dist.fn)(),onChange:(0,dist.fn)()}))),Error={args:{error:!0,label:"With Error",value},render},Focused={args:{focused:!0,label:"Focused",value},render},FullWidth={args:{fullWidth:!1,label:"Not FullWidth",value},render},HelperText={args:{helperText:"some helperText",label:"HelperText",value},render},HideStartActionsOnEmpty_=args=>react.createElement(Stack.A,{spacing:3},react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{hideStartActionsOnEmpty:!0,startCmp:"Send",endCmp:"Fingerprint",label:"Hide Start Actions OnEmpty",onAccept:(0,dist.fn)(),onChange:(0,dist.fn)()})),react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{hideStartActionsOnEmpty:!1,startCmp:"Send",endCmp:"Fingerprint",label:"Not Hide Start Actions OnEmpty",onAccept:(0,dist.fn)(),onChange:(0,dist.fn)()}))),Label={args:{label:"Some Label Input"},render},Margin_=args=>react.createElement(Stack.A,null,react.createElement("div",{style:{backgroundColor:"#8d8773",textAlign:"center"}},"some text for see the margin"),react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{label:"None Margin",onAccept:(0,dist.fn)(),onChange:(0,dist.fn)()})),react.createElement("div",{style:{backgroundColor:"#8d8773",textAlign:"center"}},"some text for see the margin"),react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{margin:"dense",label:"Dense Margin",onAccept:(0,dist.fn)(),onChange:(0,dist.fn)()})),react.createElement("div",{style:{backgroundColor:"#8d8773",textAlign:"center"}},"some text for see the margin"),react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{margin:"normal",label:"Normal Margin",onAccept:(0,dist.fn)(),onChange:(0,dist.fn)()})),react.createElement("div",{style:{backgroundColor:"#8d8773",textAlign:"center"}},"some text for see the margin")),OnChangeText={args:{label:"text field state"},render},ReadOnly={args:{readOnly:!0,label:"Read Only",value:"some text for show only"},render},Required={args:{required:!0,label:"Required field"},render},StartCmp_=args=>react.createElement(Stack.A,{spacing:3},react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{startCmp:"Send",label:"Start Cmp",value:"with string mui icon name",onAccept:(0,dist.fn)(),onChange:(0,dist.fn)()})),react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{startCmp:react.createElement(Send.A,null),label:"Start Cmp",value:"with mui icon element",onAccept:(0,dist.fn)(),onChange:(0,dist.fn)()}))),StartCmpExternal_=args=>react.createElement(Stack.A,{spacing:3},react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{startCmpExternal:"Send",label:"Start Cmp External",value:"with string mui icon name",onAccept:(0,dist.fn)(),onChange:(0,dist.fn)()})),react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{startCmpExternal:react.createElement(Send.A,null),label:"Start Cmp External",value:"with mui icon element",onAccept:(0,dist.fn)(),onChange:(0,dist.fn)()}))),Value={args:{value:"0501234567"},render},Variant_=args=>react.createElement(Stack.A,{spacing:3},react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{variant:"filled",label:"filled variant",value:"some text here",onAccept:(0,dist.fn)(),onChange:(0,dist.fn)()})),react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{variant:"outlined",label:"outlined variant",value:"some text here",onAccept:(0,dist.fn)(),onChange:(0,dist.fn)()})),react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{variant:"standard",label:"standard variant",value:"some text here",onAccept:(0,dist.fn)(),onChange:(0,dist.fn)()}))),CopyAction={args:{value:"0501234567",copyAction:!0,copyMessage:"COPIED!",copyTooltip:"copy tooltip"},render},Formik_=args=>react.createElement(formik_esm.l1,{initialValues:{phone:"050-000-0124",unmask:!1},validate:values=>values.phone.length?{}:{error:"Required!"},onSubmit:values=>alert(values.phone)},(({values,touched,errors,handleChange,handleSubmit})=>((0,external_STORYBOOK_MODULE_ACTIONS_.action)("formikRender")(values),react.createElement(Box.A,{sx:{display:"flex",flexDirection:"column",gap:2}},react.createElement(TextField_InputPhone,InputPhone_stories_extends({},args,{name:"phone",label:"Phone",helperText:touched.error&&errors.phone?errors.phone:"",error:!(!touched.error||!errors.phone),value:values.phone,unmask:values.unmask,onAccept:(0,dist.fn)(),onChange:handleChange,showMaskAsPlaceholder:touched.phone,onEnterKeyPress:handleSubmit})),react.createElement(Checkbox.A,{name:"unmask",label:"unmask value",checked:values.unmask,onChange:handleChange}),react.createElement(Typography.A,null,"VALUE: ",values.phone))))),__namedExportsOrder=["Default","TextAlign","Direction","LetterSpacing","ShowMaskAsPlaceholder","AlignActions","AlignActionsExternal","AutoComplete","CmpSpacing","ColorActive","ColorLabel","ColorText","Disabled","EndCmp_","EndCmpExternal_","Error","Focused","FullWidth","HelperText","HideStartActionsOnEmpty_","Label","Margin_","OnChangeText","ReadOnly","Required","StartCmp_","StartCmpExternal_","Value","Variant_","CopyAction","Formik_"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {},\n  render\n}",...Default.parameters?.docs?.source}}},TextAlign.parameters={...TextAlign.parameters,docs:{...TextAlign.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Text Align',\n    textAlign: 'center',\n    value\n  },\n  render\n}",...TextAlign.parameters?.docs?.source}}},Direction.parameters={...Direction.parameters,docs:{...Direction.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'RTL Direction',\n    direction: 'rtl',\n    value\n  },\n  render\n}",...Direction.parameters?.docs?.source}}},LetterSpacing.parameters={...LetterSpacing.parameters,docs:{...LetterSpacing.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Letter Spacing',\n    letterSpacing: '5px',\n    value\n  },\n  render\n}",...LetterSpacing.parameters?.docs?.source}}},ShowMaskAsPlaceholder.parameters={...ShowMaskAsPlaceholder.parameters,docs:{...ShowMaskAsPlaceholder.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Show Mask As Placeholder',\n    letterSpacing: '5px',\n    value,\n    showMaskAsPlaceholder: true\n  },\n  render\n}",...ShowMaskAsPlaceholder.parameters?.docs?.source}}},AlignActions.parameters={...AlignActions.parameters,docs:{...AlignActions.parameters?.docs,source:{originalSource:"{\n  args: {\n    alignActions: 'flex-start',\n    startCmp: 'Phone',\n    endCmp: 'Fingerprint',\n    multiline: true,\n    label: 'Align Actions',\n    value\n  },\n  render\n}",...AlignActions.parameters?.docs?.source}}},AlignActionsExternal.parameters={...AlignActionsExternal.parameters,docs:{...AlignActionsExternal.parameters?.docs,source:{originalSource:"{\n  args: {\n    alignActions: 'flex-start',\n    startCmpExternal: 'Phone',\n    endCmpExternal: 'Fingerprint',\n    multiline: true,\n    label: 'Align Actions External',\n    value\n  },\n  render\n}",...AlignActionsExternal.parameters?.docs?.source}}},AutoComplete.parameters={...AutoComplete.parameters,docs:{...AutoComplete.parameters?.docs,source:{originalSource:"{\n  args: {\n    autoComplete: 'phone',\n    name: 'phone',\n    label: 'Auto Complete'\n  },\n  render\n}",...AutoComplete.parameters?.docs?.source}}},CmpSpacing.parameters={...CmpSpacing.parameters,docs:{...CmpSpacing.parameters?.docs,source:{originalSource:"{\n  args: {\n    alignActions: 'flex-start',\n    startCmp: 'Phone',\n    endCmp: 'Fingerprint',\n    cmpSpacing: 6,\n    label: 'Cmp Spacing',\n    value\n  },\n  render\n}",...CmpSpacing.parameters?.docs?.source}}},ColorActive.parameters={...ColorActive.parameters,docs:{...ColorActive.parameters?.docs,source:{originalSource:"{\n  args: {\n    colorActive: 'warning',\n    label: 'Color Active',\n    value\n  },\n  render\n}",...ColorActive.parameters?.docs?.source}}},ColorLabel.parameters={...ColorLabel.parameters,docs:{...ColorLabel.parameters?.docs,source:{originalSource:"{\n  args: {\n    colorLabel: 'success',\n    label: 'Color Label',\n    value\n  },\n  render\n}",...ColorLabel.parameters?.docs?.source}}},ColorText.parameters={...ColorText.parameters,docs:{...ColorText.parameters?.docs,source:{originalSource:"{\n  args: {\n    colorText: '#D10DAA',\n    label: 'Color Text',\n    value\n  },\n  render\n}",...ColorText.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    colorText: '#D10DAA',\n    label: 'Disabled',\n    disabled: true,\n    value\n  },\n  render\n}",...Disabled.parameters?.docs?.source}}},EndCmp_.parameters={...EndCmp_.parameters,docs:{...EndCmp_.parameters?.docs,source:{originalSource:'(args): ReactElement | React.ReactNode => <Stack spacing={3}>\n        <InputPhone {...args} endCmp="Send" label="End Cmp" value="endCmp with mui icon name or mui icon element" onAccept={fn()} onChange={fn()} />\n        <InputPhone {...args} endCmp={<SendIcon />} label="End Cmp" value="endCmp with mui icon name or mui icon element" onAccept={fn()} onChange={fn()} />\n    </Stack>',...EndCmp_.parameters?.docs?.source}}},EndCmpExternal_.parameters={...EndCmpExternal_.parameters,docs:{...EndCmpExternal_.parameters?.docs,source:{originalSource:'(args): ReactElement | React.ReactNode => <Stack spacing={3}>\n        <InputPhone {...args} endCmpExternal="Send" label="End Cmp External" value="endCmpExternal with mui icon name or mui icon element" onAccept={fn()} onChange={fn()} />\n        <InputPhone {...args} endCmpExternal={<SendIcon />} label="End Cmp External" value="endCmpExternal with mui icon name or mui icon element" onAccept={fn()} onChange={fn()} />\n    </Stack>',...EndCmpExternal_.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:"{\n  args: {\n    error: true,\n    label: 'With Error',\n    value\n  },\n  render\n}",...Error.parameters?.docs?.source}}},Focused.parameters={...Focused.parameters,docs:{...Focused.parameters?.docs,source:{originalSource:"{\n  args: {\n    focused: true,\n    label: 'Focused',\n    value\n  },\n  render\n}",...Focused.parameters?.docs?.source}}},FullWidth.parameters={...FullWidth.parameters,docs:{...FullWidth.parameters?.docs,source:{originalSource:"{\n  args: {\n    fullWidth: false,\n    label: 'Not FullWidth',\n    value\n  },\n  render\n}",...FullWidth.parameters?.docs?.source}}},HelperText.parameters={...HelperText.parameters,docs:{...HelperText.parameters?.docs,source:{originalSource:"{\n  args: {\n    helperText: 'some helperText',\n    label: 'HelperText',\n    value\n  },\n  render\n}",...HelperText.parameters?.docs?.source}}},HideStartActionsOnEmpty_.parameters={...HideStartActionsOnEmpty_.parameters,docs:{...HideStartActionsOnEmpty_.parameters?.docs,source:{originalSource:'(args): ReactElement | React.ReactNode => <Stack spacing={3}>\n        <InputPhone {...args} hideStartActionsOnEmpty={true} startCmp="Send" endCmp="Fingerprint" label="Hide Start Actions OnEmpty" onAccept={fn()} onChange={fn()} />\n        <InputPhone {...args} hideStartActionsOnEmpty={false} startCmp="Send" endCmp="Fingerprint" label="Not Hide Start Actions OnEmpty" onAccept={fn()} onChange={fn()} />\n    </Stack>',...HideStartActionsOnEmpty_.parameters?.docs?.source}}},Label.parameters={...Label.parameters,docs:{...Label.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Some Label Input'\n  },\n  render\n}",...Label.parameters?.docs?.source}}},Margin_.parameters={...Margin_.parameters,docs:{...Margin_.parameters?.docs,source:{originalSource:"(args): ReactElement | React.ReactNode => <Stack>\n        <div style={{\n    backgroundColor: '#8d8773',\n    textAlign: 'center'\n  }}>some text for see the margin</div>\n        <InputPhone {...args} label=\"None Margin\" onAccept={fn()} onChange={fn()} />\n        <div style={{\n    backgroundColor: '#8d8773',\n    textAlign: 'center'\n  }}>some text for see the margin</div>\n        <InputPhone {...args} margin=\"dense\" label=\"Dense Margin\" onAccept={fn()} onChange={fn()} />\n        <div style={{\n    backgroundColor: '#8d8773',\n    textAlign: 'center'\n  }}>some text for see the margin</div>\n        <InputPhone {...args} margin=\"normal\" label=\"Normal Margin\" onAccept={fn()} onChange={fn()} />\n        <div style={{\n    backgroundColor: '#8d8773',\n    textAlign: 'center'\n  }}>some text for see the margin</div>\n    </Stack>",...Margin_.parameters?.docs?.source}}},OnChangeText.parameters={...OnChangeText.parameters,docs:{...OnChangeText.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'text field state'\n  },\n  render\n}",...OnChangeText.parameters?.docs?.source}}},ReadOnly.parameters={...ReadOnly.parameters,docs:{...ReadOnly.parameters?.docs,source:{originalSource:"{\n  args: {\n    readOnly: true,\n    label: 'Read Only',\n    value: 'some text for show only'\n  },\n  render\n}",...ReadOnly.parameters?.docs?.source}}},Required.parameters={...Required.parameters,docs:{...Required.parameters?.docs,source:{originalSource:"{\n  args: {\n    required: true,\n    label: 'Required field'\n  },\n  render\n}",...Required.parameters?.docs?.source}}},StartCmp_.parameters={...StartCmp_.parameters,docs:{...StartCmp_.parameters?.docs,source:{originalSource:'(args): ReactElement | React.ReactNode => <Stack spacing={3}>\n        <InputPhone {...args} startCmp="Send" label="Start Cmp" value="with string mui icon name" onAccept={fn()} onChange={fn()} />\n        <InputPhone {...args} startCmp={<SendIcon />} label="Start Cmp" value="with mui icon element" onAccept={fn()} onChange={fn()} />\n    </Stack>',...StartCmp_.parameters?.docs?.source}}},StartCmpExternal_.parameters={...StartCmpExternal_.parameters,docs:{...StartCmpExternal_.parameters?.docs,source:{originalSource:'(args): ReactElement | React.ReactNode => <Stack spacing={3}>\n        <InputPhone {...args} startCmpExternal="Send" label="Start Cmp External" value="with string mui icon name" onAccept={fn()} onChange={fn()} />\n        <InputPhone {...args} startCmpExternal={<SendIcon />} label="Start Cmp External" value="with mui icon element" onAccept={fn()} onChange={fn()} />\n    </Stack>',...StartCmpExternal_.parameters?.docs?.source}}},Value.parameters={...Value.parameters,docs:{...Value.parameters?.docs,source:{originalSource:"{\n  args: {\n    value: '0501234567'\n  },\n  render\n}",...Value.parameters?.docs?.source}}},Variant_.parameters={...Variant_.parameters,docs:{...Variant_.parameters?.docs,source:{originalSource:'(args): ReactElement | React.ReactNode => <Stack spacing={3}>\n        <InputPhone {...args} variant="filled" label="filled variant" value="some text here" onAccept={fn()} onChange={fn()} />\n        <InputPhone {...args} variant="outlined" label="outlined variant" value="some text here" onAccept={fn()} onChange={fn()} />\n        <InputPhone {...args} variant="standard" label="standard variant" value="some text here" onAccept={fn()} onChange={fn()} />\n    </Stack>',...Variant_.parameters?.docs?.source}}},CopyAction.parameters={...CopyAction.parameters,docs:{...CopyAction.parameters?.docs,source:{originalSource:"{\n  args: {\n    value: '0501234567',\n    copyAction: true,\n    copyMessage: 'COPIED!',\n    copyTooltip: 'copy tooltip'\n  },\n  render\n}",...CopyAction.parameters?.docs?.source}}},Formik_.parameters={...Formik_.parameters,docs:{...Formik_.parameters?.docs,source:{originalSource:"(args): React.ReactElement | React.ReactNode => {\n  return <Formik initialValues={{\n    phone: '050-000-0124',\n    unmask: false\n  }} validate={values => !values.phone.length ? {\n    error: 'Required!'\n  } : {}} onSubmit={values => alert(values.phone)}>\n            {({\n      values,\n      touched,\n      errors,\n      handleChange,\n      handleSubmit\n    }: any) => {\n      action('formikRender')(values);\n      return <Box sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2\n      }}>\n                        <InputPhone {...args} name=\"phone\" label=\"Phone\" helperText={touched.error && errors.phone ? errors.phone : ''} error={!!(touched.error && errors.phone)} value={values.phone} unmask={values.unmask} onAccept={fn()} onChange={handleChange} showMaskAsPlaceholder={touched.phone} onEnterKeyPress={handleSubmit} />\n                        <Checkbox name=\"unmask\" label=\"unmask value\" checked={values.unmask} onChange={handleChange} />\n                        <Typography>VALUE: {values.phone}</Typography>\n                    </Box>;\n    }}\n        </Formik>;\n}",...Formik_.parameters?.docs?.source}}}}}]);