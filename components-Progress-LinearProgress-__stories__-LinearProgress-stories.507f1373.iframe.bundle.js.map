{"version":3,"file":"components-Progress-LinearProgress-__stories__-LinearProgress-stories.507f1373.iframe.bundle.js","mappings":";;;AAiBA;;AAEA;AACA;AAGA;;AAIA;;AAsBA;;;;AAQA;;;AAGA;;;AAGA;AACA;;;AAGA;;AAEA;;;;AAIA","sources":["webpack://@hdriel/mui-simple/./src/components/Progress/LinearProgress/LinearProgress.styled.tsx"],"sourcesContent":["import React from 'react';\r\nimport { get } from 'lodash-es';\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n    LinearProgress as MuiLinearProgress,\r\n    Box as MuiBox,\r\n    Typography as MuiTypography,\r\n    linearProgressClasses,\r\n    alpha,\r\n} from '@mui/material';\r\nimport { numberToPx } from '../../../utils/helpers';\r\n\r\nconst ContentWrapper = styled(MuiBox)`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst ProgressWrapper = styled(MuiBox)`\r\n    width: 100%;\r\n    margin-right: ${(props) => props.theme.spacing(1)};\r\n    margin-left: ${(props) => props.theme.spacing(1)};\r\n`;\r\n\r\nconst IndicatorWrapper = styled(MuiBox)`\r\n    min-width: 35px;\r\n`;\r\n\r\nexport const LinearProgress = styled(\r\n    ({ value, variant, showProgress, ...props }) => (\r\n        <ContentWrapper>\r\n            <ProgressWrapper>\r\n                <MuiLinearProgress\r\n                    value={value}\r\n                    variant={value && variant === undefined ? 'determinate' : variant}\r\n                    {...props}\r\n                />\r\n            </ProgressWrapper>\r\n            <IndicatorWrapper>\r\n                <MuiTypography variant=\"body2\" color=\"text.secondary\">\r\n                    {showProgress && value !== undefined ? `${Math.round(value)}%` : ''}\r\n                </MuiTypography>\r\n            </IndicatorWrapper>\r\n        </ContentWrapper>\r\n    ),\r\n    {\r\n        shouldForwardProp: (propName) => !['customColor'].includes(propName),\r\n    }\r\n)`\r\n    &.MuiLinearProgress-root {\r\n        background-color: ${(props) =>\r\n            alpha(\r\n                get(props, `theme.palette.${props.color}.main`, props.customColor ?? 'rgba(0,0,0,0.3)'),\r\n                0.2\r\n            )} !important;\r\n    }\r\n\r\n    &.MuiLinearProgress-bar {\r\n        background-color: ${(props) => props.customColor};\r\n    }\r\n\r\n    height: ${(props) => `${numberToPx(props.thickness)}` || '5px'};\r\n    border-radius: 5px;\r\n\r\n    &.${linearProgressClasses.colorPrimary} {\r\n        background-color: ${({ theme }) => theme.palette.grey[theme.palette.mode === 'light' ? 200 : 800]};\r\n    }\r\n\r\n    & .${linearProgressClasses.bar} {\r\n        border-radius: 5px;\r\n        background-color: ${({ theme, color, customColor }) => get(theme, `palette.${color}.main`, customColor)};\r\n    }\r\n\r\n    .MuiLinearProgress-dashed {\r\n        background-image: ${(props) => {\r\n            const color = alpha(\r\n                get(props, `theme.palette.${props.color}.main`, props.customColor ?? 'rgba(0,0,0,0.3)'),\r\n                0.2\r\n            );\r\n\r\n            return `radial-gradient(${color} 0%, ${color} 16%, transparent 42%)`;\r\n        }};\r\n    }\r\n`;\r\n"],"names":[],"sourceRoot":""}