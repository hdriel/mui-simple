/*! For license information please see 8429.bd9d94ee.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[8429],{"./node_modules/.pnpm/@hello-pangea+dnd@18.0.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@hello-pangea/dnd/dist/dnd.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{JY:()=>DragDropContext,sx:()=>PublicDraggable,gL:()=>ConnectedDroppable});var react=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),react_dom=__webpack_require__("./node_modules/.pnpm/react-dom@18.3.1_react@18.3.1/node_modules/react-dom/index.js");function formatProdErrorMessage(code){return`Minified Redux error #${code}; visit https://redux.js.org/Errors?code=${code} for the full message or use the non-minified dev environment for full errors. `}var symbol_observable_default=(()=>"function"==typeof Symbol&&Symbol.observable||"@@observable")(),randomString=()=>Math.random().toString(36).substring(7).split("").join("."),actionTypes_default={INIT:`@@redux/INIT${randomString()}`,REPLACE:`@@redux/REPLACE${randomString()}`,PROBE_UNKNOWN_ACTION:()=>`@@redux/PROBE_UNKNOWN_ACTION${randomString()}`};function isPlainObject(obj){if("object"!=typeof obj||null===obj)return!1;let proto=obj;for(;null!==Object.getPrototypeOf(proto);)proto=Object.getPrototypeOf(proto);return Object.getPrototypeOf(obj)===proto||null===Object.getPrototypeOf(obj)}function createStore(reducer,preloadedState,enhancer){if("function"!=typeof reducer)throw new Error(formatProdErrorMessage(2));if("function"==typeof preloadedState&&"function"==typeof enhancer||"function"==typeof enhancer&&"function"==typeof arguments[3])throw new Error(formatProdErrorMessage(0));if("function"==typeof preloadedState&&void 0===enhancer&&(enhancer=preloadedState,preloadedState=void 0),void 0!==enhancer){if("function"!=typeof enhancer)throw new Error(formatProdErrorMessage(1));return enhancer(createStore)(reducer,preloadedState)}let currentReducer=reducer,currentState=preloadedState,currentListeners=new Map,nextListeners=currentListeners,listenerIdCounter=0,isDispatching=!1;function ensureCanMutateNextListeners(){nextListeners===currentListeners&&(nextListeners=new Map,currentListeners.forEach((listener,key)=>{nextListeners.set(key,listener)}))}function getState(){if(isDispatching)throw new Error(formatProdErrorMessage(3));return currentState}function subscribe(listener){if("function"!=typeof listener)throw new Error(formatProdErrorMessage(4));if(isDispatching)throw new Error(formatProdErrorMessage(5));let isSubscribed=!0;ensureCanMutateNextListeners();const listenerId=listenerIdCounter++;return nextListeners.set(listenerId,listener),function unsubscribe(){if(isSubscribed){if(isDispatching)throw new Error(formatProdErrorMessage(6));isSubscribed=!1,ensureCanMutateNextListeners(),nextListeners.delete(listenerId),currentListeners=null}}}function dispatch(action){if(!isPlainObject(action))throw new Error(formatProdErrorMessage(7));if(void 0===action.type)throw new Error(formatProdErrorMessage(8));if("string"!=typeof action.type)throw new Error(formatProdErrorMessage(17));if(isDispatching)throw new Error(formatProdErrorMessage(9));try{isDispatching=!0,currentState=currentReducer(currentState,action)}finally{isDispatching=!1}return(currentListeners=nextListeners).forEach(listener=>{listener()}),action}dispatch({type:actionTypes_default.INIT});return{dispatch,subscribe,getState,replaceReducer:function replaceReducer(nextReducer){if("function"!=typeof nextReducer)throw new Error(formatProdErrorMessage(10));currentReducer=nextReducer,dispatch({type:actionTypes_default.REPLACE})},[symbol_observable_default]:function observable(){const outerSubscribe=subscribe;return{subscribe(observer){if("object"!=typeof observer||null===observer)throw new Error(formatProdErrorMessage(11));function observeState(){const observerAsObserver=observer;observerAsObserver.next&&observerAsObserver.next(getState())}observeState();return{unsubscribe:outerSubscribe(observeState)}},[symbol_observable_default](){return this}}}}}function bindActionCreator(actionCreator,dispatch){return function(...args){return dispatch(actionCreator.apply(this,args))}}function bindActionCreators(actionCreators,dispatch){if("function"==typeof actionCreators)return bindActionCreator(actionCreators,dispatch);if("object"!=typeof actionCreators||null===actionCreators)throw new Error(formatProdErrorMessage(16));const boundActionCreators={};for(const key in actionCreators){const actionCreator=actionCreators[key];"function"==typeof actionCreator&&(boundActionCreators[key]=bindActionCreator(actionCreator,dispatch))}return boundActionCreators}function compose(...funcs){return 0===funcs.length?arg=>arg:1===funcs.length?funcs[0]:funcs.reduce((a,b)=>(...args)=>a(b(...args)))}__webpack_require__("./node_modules/.pnpm/use-sync-external-store@1.5.0_react@18.3.1/node_modules/use-sync-external-store/with-selector.js");var IS_REACT_19=react.version.startsWith("19"),REACT_ELEMENT_TYPE=Symbol.for(IS_REACT_19?"react.transitional.element":"react.element"),REACT_PORTAL_TYPE=Symbol.for("react.portal"),REACT_FRAGMENT_TYPE=Symbol.for("react.fragment"),REACT_STRICT_MODE_TYPE=Symbol.for("react.strict_mode"),REACT_PROFILER_TYPE=Symbol.for("react.profiler"),REACT_CONSUMER_TYPE=Symbol.for("react.consumer"),REACT_CONTEXT_TYPE=Symbol.for("react.context"),REACT_FORWARD_REF_TYPE=Symbol.for("react.forward_ref"),REACT_SUSPENSE_TYPE=Symbol.for("react.suspense"),REACT_SUSPENSE_LIST_TYPE=Symbol.for("react.suspense_list"),REACT_MEMO_TYPE=Symbol.for("react.memo"),REACT_LAZY_TYPE=Symbol.for("react.lazy"),ForwardRef=REACT_FORWARD_REF_TYPE,Memo=REACT_MEMO_TYPE;function typeOf(object){if("object"==typeof object&&null!==object){const{$$typeof}=object;switch($$typeof){case REACT_ELEMENT_TYPE:switch(object=object.type){case REACT_FRAGMENT_TYPE:case REACT_PROFILER_TYPE:case REACT_STRICT_MODE_TYPE:case REACT_SUSPENSE_TYPE:case REACT_SUSPENSE_LIST_TYPE:return object;default:switch(object=object&&object.$$typeof){case REACT_CONTEXT_TYPE:case REACT_FORWARD_REF_TYPE:case REACT_LAZY_TYPE:case REACT_MEMO_TYPE:case REACT_CONSUMER_TYPE:return object;default:return $$typeof}}case REACT_PORTAL_TYPE:return $$typeof}}}function pureFinalPropsSelectorFactory(mapStateToProps,mapDispatchToProps,mergeProps,dispatch,{areStatesEqual,areOwnPropsEqual,areStatePropsEqual}){let state,ownProps,stateProps,dispatchProps,mergedProps,hasRunAtLeastOnce=!1;function handleSubsequentCalls(nextState,nextOwnProps){const propsChanged=!areOwnPropsEqual(nextOwnProps,ownProps),stateChanged=!areStatesEqual(nextState,state,nextOwnProps,ownProps);return state=nextState,ownProps=nextOwnProps,propsChanged&&stateChanged?function handleNewPropsAndNewState(){return stateProps=mapStateToProps(state,ownProps),mapDispatchToProps.dependsOnOwnProps&&(dispatchProps=mapDispatchToProps(dispatch,ownProps)),mergedProps=mergeProps(stateProps,dispatchProps,ownProps),mergedProps}():propsChanged?function handleNewProps(){return mapStateToProps.dependsOnOwnProps&&(stateProps=mapStateToProps(state,ownProps)),mapDispatchToProps.dependsOnOwnProps&&(dispatchProps=mapDispatchToProps(dispatch,ownProps)),mergedProps=mergeProps(stateProps,dispatchProps,ownProps),mergedProps}():stateChanged?function handleNewState(){const nextStateProps=mapStateToProps(state,ownProps),statePropsChanged=!areStatePropsEqual(nextStateProps,stateProps);return stateProps=nextStateProps,statePropsChanged&&(mergedProps=mergeProps(stateProps,dispatchProps,ownProps)),mergedProps}():mergedProps}return function pureFinalPropsSelector(nextState,nextOwnProps){return hasRunAtLeastOnce?handleSubsequentCalls(nextState,nextOwnProps):function handleFirstCall(firstState,firstOwnProps){return state=firstState,ownProps=firstOwnProps,stateProps=mapStateToProps(state,ownProps),dispatchProps=mapDispatchToProps(dispatch,ownProps),mergedProps=mergeProps(stateProps,dispatchProps,ownProps),hasRunAtLeastOnce=!0,mergedProps}(nextState,nextOwnProps)}}function wrapMapToPropsConstant(getConstant){return function initConstantSelector(dispatch){const constant=getConstant(dispatch);function constantSelector(){return constant}return constantSelector.dependsOnOwnProps=!1,constantSelector}}function getDependsOnOwnProps(mapToProps){return mapToProps.dependsOnOwnProps?Boolean(mapToProps.dependsOnOwnProps):1!==mapToProps.length}function wrapMapToPropsFunc(mapToProps,methodName){return function initProxySelector(dispatch,{displayName}){const proxy=function mapToPropsProxy(stateOrDispatch,ownProps){return proxy.dependsOnOwnProps?proxy.mapToProps(stateOrDispatch,ownProps):proxy.mapToProps(stateOrDispatch,void 0)};return proxy.dependsOnOwnProps=!0,proxy.mapToProps=function detectFactoryAndVerify(stateOrDispatch,ownProps){proxy.mapToProps=mapToProps,proxy.dependsOnOwnProps=getDependsOnOwnProps(mapToProps);let props=proxy(stateOrDispatch,ownProps);return"function"==typeof props&&(proxy.mapToProps=props,proxy.dependsOnOwnProps=getDependsOnOwnProps(props),props=proxy(stateOrDispatch,ownProps)),props},proxy}}function createInvalidArgFactory(arg,name){return(dispatch,options)=>{throw new Error(`Invalid value of type ${typeof arg} for ${name} argument when connecting component ${options.wrappedComponentName}.`)}}function defaultMergeProps(stateProps,dispatchProps,ownProps){return{...ownProps,...stateProps,...dispatchProps}}function defaultNoopBatch(callback){callback()}var nullListeners={notify(){},get:()=>[]};function createSubscription(store,parentSub){let unsubscribe,listeners=nullListeners,subscriptionsAmount=0,selfSubscribed=!1;function handleChangeWrapper(){subscription.onStateChange&&subscription.onStateChange()}function trySubscribe(){subscriptionsAmount++,unsubscribe||(unsubscribe=parentSub?parentSub.addNestedSub(handleChangeWrapper):store.subscribe(handleChangeWrapper),listeners=function createListenerCollection(){let first=null,last=null;return{clear(){first=null,last=null},notify(){defaultNoopBatch(()=>{let listener=first;for(;listener;)listener.callback(),listener=listener.next})},get(){const listeners=[];let listener=first;for(;listener;)listeners.push(listener),listener=listener.next;return listeners},subscribe(callback){let isSubscribed=!0;const listener=last={callback,next:null,prev:last};return listener.prev?listener.prev.next=listener:first=listener,function unsubscribe(){isSubscribed&&null!==first&&(isSubscribed=!1,listener.next?listener.next.prev=listener.prev:last=listener.prev,listener.prev?listener.prev.next=listener.next:first=listener.next)}}}}())}function tryUnsubscribe(){subscriptionsAmount--,unsubscribe&&0===subscriptionsAmount&&(unsubscribe(),unsubscribe=void 0,listeners.clear(),listeners=nullListeners)}const subscription={addNestedSub:function addNestedSub(listener){trySubscribe();const cleanupListener=listeners.subscribe(listener);let removed=!1;return()=>{removed||(removed=!0,cleanupListener(),tryUnsubscribe())}},notifyNestedSubs:function notifyNestedSubs(){listeners.notify()},handleChangeWrapper,isSubscribed:function isSubscribed(){return selfSubscribed},trySubscribe:function trySubscribeSelf(){selfSubscribed||(selfSubscribed=!0,trySubscribe())},tryUnsubscribe:function tryUnsubscribeSelf(){selfSubscribed&&(selfSubscribed=!1,tryUnsubscribe())},getListeners:()=>listeners};return subscription}var isDOM=(()=>!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement))(),isReactNative=(()=>"undefined"!=typeof navigator&&"ReactNative"===navigator.product)(),useIsomorphicLayoutEffect=(()=>isDOM||isReactNative?react.useLayoutEffect:react.useEffect)();function is(x,y){return x===y?0!==x||0!==y||1/x==1/y:x!=x&&y!=y}function shallowEqual(objA,objB){if(is(objA,objB))return!0;if("object"!=typeof objA||null===objA||"object"!=typeof objB||null===objB)return!1;const keysA=Object.keys(objA),keysB=Object.keys(objB);if(keysA.length!==keysB.length)return!1;for(let i=0;i<keysA.length;i++)if(!Object.prototype.hasOwnProperty.call(objB,keysA[i])||!is(objA[keysA[i]],objB[keysA[i]]))return!1;return!0}var REACT_STATICS={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},KNOWN_STATICS={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},MEMO_STATICS={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},TYPE_STATICS={[ForwardRef]:{$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},[Memo]:MEMO_STATICS};function getStatics(component){return function isMemo(object){return typeOf(object)===REACT_MEMO_TYPE}(component)?MEMO_STATICS:TYPE_STATICS[component.$$typeof]||REACT_STATICS}var defineProperty=Object.defineProperty,getOwnPropertyNames=Object.getOwnPropertyNames,getOwnPropertySymbols=Object.getOwnPropertySymbols,getOwnPropertyDescriptor=Object.getOwnPropertyDescriptor,getPrototypeOf=Object.getPrototypeOf,objectPrototype=Object.prototype;function hoistNonReactStatics(targetComponent,sourceComponent){if("string"!=typeof sourceComponent){if(objectPrototype){const inheritedComponent=getPrototypeOf(sourceComponent);inheritedComponent&&inheritedComponent!==objectPrototype&&hoistNonReactStatics(targetComponent,inheritedComponent)}let keys=getOwnPropertyNames(sourceComponent);getOwnPropertySymbols&&(keys=keys.concat(getOwnPropertySymbols(sourceComponent)));const targetStatics=getStatics(targetComponent),sourceStatics=getStatics(sourceComponent);for(let i=0;i<keys.length;++i){const key=keys[i];if(!(KNOWN_STATICS[key]||sourceStatics&&sourceStatics[key]||targetStatics&&targetStatics[key])){const descriptor=getOwnPropertyDescriptor(sourceComponent,key);try{defineProperty(targetComponent,key,descriptor)}catch(e){}}}}return targetComponent}var ContextKey=Symbol.for("react-redux-context"),gT="undefined"!=typeof globalThis?globalThis:{};function getContext(){if(!react.createContext)return{};const contextMap=gT[ContextKey]??=new Map;let realContext=contextMap.get(react.createContext);return realContext||(realContext=react.createContext(null),contextMap.set(react.createContext,realContext)),realContext}var ReactReduxContext=getContext(),NO_SUBSCRIPTION_ARRAY=[null,null];function captureWrapperProps(lastWrapperProps,lastChildProps,renderIsScheduled,wrapperProps,childPropsFromStoreUpdate,notifyNestedSubs){lastWrapperProps.current=wrapperProps,renderIsScheduled.current=!1,childPropsFromStoreUpdate.current&&(childPropsFromStoreUpdate.current=null,notifyNestedSubs())}function strictEqual(a,b){return a===b}var connect_default=function connect(mapStateToProps,mapDispatchToProps,mergeProps,{pure,areStatesEqual=strictEqual,areOwnPropsEqual=shallowEqual,areStatePropsEqual=shallowEqual,areMergedPropsEqual=shallowEqual,forwardRef=!1,context=ReactReduxContext}={}){const Context=context,initMapStateToProps=function mapStateToPropsFactory(mapStateToProps){return mapStateToProps?"function"==typeof mapStateToProps?wrapMapToPropsFunc(mapStateToProps):createInvalidArgFactory(mapStateToProps,"mapStateToProps"):wrapMapToPropsConstant(()=>({}))}(mapStateToProps),initMapDispatchToProps=function mapDispatchToPropsFactory(mapDispatchToProps){return mapDispatchToProps&&"object"==typeof mapDispatchToProps?wrapMapToPropsConstant(dispatch=>function react_redux_bindActionCreators(actionCreators,dispatch){const boundActionCreators={};for(const key in actionCreators){const actionCreator=actionCreators[key];"function"==typeof actionCreator&&(boundActionCreators[key]=(...args)=>dispatch(actionCreator(...args)))}return boundActionCreators}(mapDispatchToProps,dispatch)):mapDispatchToProps?"function"==typeof mapDispatchToProps?wrapMapToPropsFunc(mapDispatchToProps):createInvalidArgFactory(mapDispatchToProps,"mapDispatchToProps"):wrapMapToPropsConstant(dispatch=>({dispatch}))}(mapDispatchToProps),initMergeProps=function mergePropsFactory(mergeProps){return mergeProps?"function"==typeof mergeProps?function wrapMergePropsFunc(mergeProps){return function initMergePropsProxy(dispatch,{displayName,areMergedPropsEqual}){let mergedProps,hasRunOnce=!1;return function mergePropsProxy(stateProps,dispatchProps,ownProps){const nextMergedProps=mergeProps(stateProps,dispatchProps,ownProps);return hasRunOnce?areMergedPropsEqual(nextMergedProps,mergedProps)||(mergedProps=nextMergedProps):(hasRunOnce=!0,mergedProps=nextMergedProps),mergedProps}}}(mergeProps):createInvalidArgFactory(mergeProps,"mergeProps"):()=>defaultMergeProps}(mergeProps),shouldHandleStateChanges=Boolean(mapStateToProps);return WrappedComponent=>{const wrappedComponentName=WrappedComponent.displayName||WrappedComponent.name||"Component",displayName=`Connect(${wrappedComponentName})`,selectorFactoryOptions={shouldHandleStateChanges,displayName,wrappedComponentName,WrappedComponent,initMapStateToProps,initMapDispatchToProps,initMergeProps,areStatesEqual,areStatePropsEqual,areOwnPropsEqual,areMergedPropsEqual};function ConnectFunction(props){const[propsContext,reactReduxForwardedRef,wrapperProps]=react.useMemo(()=>{const{reactReduxForwardedRef:reactReduxForwardedRef2,...wrapperProps2}=props;return[props.context,reactReduxForwardedRef2,wrapperProps2]},[props]),ContextToUse=react.useMemo(()=>Context,[propsContext,Context]),contextValue=react.useContext(ContextToUse),didStoreComeFromProps=Boolean(props.store)&&Boolean(props.store.getState)&&Boolean(props.store.dispatch),didStoreComeFromContext=Boolean(contextValue)&&Boolean(contextValue.store);const store=didStoreComeFromProps?props.store:contextValue.store,getServerState=didStoreComeFromContext?contextValue.getServerState:store.getState,childPropsSelector=react.useMemo(()=>function finalPropsSelectorFactory(dispatch,{initMapStateToProps,initMapDispatchToProps,initMergeProps,...options}){return pureFinalPropsSelectorFactory(initMapStateToProps(dispatch,options),initMapDispatchToProps(dispatch,options),initMergeProps(dispatch,options),dispatch,options)}(store.dispatch,selectorFactoryOptions),[store]),[subscription,notifyNestedSubs]=react.useMemo(()=>{if(!shouldHandleStateChanges)return NO_SUBSCRIPTION_ARRAY;const subscription2=createSubscription(store,didStoreComeFromProps?void 0:contextValue.subscription),notifyNestedSubs2=subscription2.notifyNestedSubs.bind(subscription2);return[subscription2,notifyNestedSubs2]},[store,didStoreComeFromProps,contextValue]),overriddenContextValue=react.useMemo(()=>didStoreComeFromProps?contextValue:{...contextValue,subscription},[didStoreComeFromProps,contextValue,subscription]),lastChildProps=react.useRef(void 0),lastWrapperProps=react.useRef(wrapperProps),childPropsFromStoreUpdate=react.useRef(void 0),renderIsScheduled=react.useRef(!1),isMounted=react.useRef(!1),latestSubscriptionCallbackError=react.useRef(void 0);useIsomorphicLayoutEffect(()=>(isMounted.current=!0,()=>{isMounted.current=!1}),[]);const actualChildPropsSelector=react.useMemo(()=>()=>childPropsFromStoreUpdate.current&&wrapperProps===lastWrapperProps.current?childPropsFromStoreUpdate.current:childPropsSelector(store.getState(),wrapperProps),[store,wrapperProps]),subscribeForReact=react.useMemo(()=>reactListener=>subscription?function subscribeUpdates(shouldHandleStateChanges,store,subscription,childPropsSelector,lastWrapperProps,lastChildProps,renderIsScheduled,isMounted,childPropsFromStoreUpdate,notifyNestedSubs,additionalSubscribeListener){if(!shouldHandleStateChanges)return()=>{};let didUnsubscribe=!1,lastThrownError=null;const checkForUpdates=()=>{if(didUnsubscribe||!isMounted.current)return;const latestStoreState=store.getState();let newChildProps,error;try{newChildProps=childPropsSelector(latestStoreState,lastWrapperProps.current)}catch(e){error=e,lastThrownError=e}error||(lastThrownError=null),newChildProps===lastChildProps.current?renderIsScheduled.current||notifyNestedSubs():(lastChildProps.current=newChildProps,childPropsFromStoreUpdate.current=newChildProps,renderIsScheduled.current=!0,additionalSubscribeListener())};return subscription.onStateChange=checkForUpdates,subscription.trySubscribe(),checkForUpdates(),()=>{if(didUnsubscribe=!0,subscription.tryUnsubscribe(),subscription.onStateChange=null,lastThrownError)throw lastThrownError}}(shouldHandleStateChanges,store,subscription,childPropsSelector,lastWrapperProps,lastChildProps,renderIsScheduled,isMounted,childPropsFromStoreUpdate,notifyNestedSubs,reactListener):()=>{},[subscription]);let actualChildProps;!function useIsomorphicLayoutEffectWithArgs(effectFunc,effectArgs,dependencies){useIsomorphicLayoutEffect(()=>effectFunc(...effectArgs),dependencies)}(captureWrapperProps,[lastWrapperProps,lastChildProps,renderIsScheduled,wrapperProps,childPropsFromStoreUpdate,notifyNestedSubs]);try{actualChildProps=react.useSyncExternalStore(subscribeForReact,actualChildPropsSelector,getServerState?()=>childPropsSelector(getServerState(),wrapperProps):actualChildPropsSelector)}catch(err){throw latestSubscriptionCallbackError.current&&(err.message+=`\nThe error may be correlated with this previous error:\n${latestSubscriptionCallbackError.current.stack}\n\n`),err}useIsomorphicLayoutEffect(()=>{latestSubscriptionCallbackError.current=void 0,childPropsFromStoreUpdate.current=void 0,lastChildProps.current=actualChildProps});const renderedWrappedComponent=react.useMemo(()=>react.createElement(WrappedComponent,{...actualChildProps,ref:reactReduxForwardedRef}),[reactReduxForwardedRef,WrappedComponent,actualChildProps]);return react.useMemo(()=>shouldHandleStateChanges?react.createElement(ContextToUse.Provider,{value:overriddenContextValue},renderedWrappedComponent):renderedWrappedComponent,[ContextToUse,renderedWrappedComponent,overriddenContextValue])}const Connect=react.memo(ConnectFunction);if(Connect.WrappedComponent=WrappedComponent,Connect.displayName=ConnectFunction.displayName=displayName,forwardRef){const forwarded=react.forwardRef(function forwardConnectRef(props,ref){return react.createElement(Connect,{...props,reactReduxForwardedRef:ref})});return forwarded.displayName=displayName,forwarded.WrappedComponent=WrappedComponent,hoistNonReactStatics(forwarded,WrappedComponent)}return hoistNonReactStatics(Connect,WrappedComponent)}};var Provider_default=function Provider(providerProps){const{children,context,serverState,store}=providerProps,contextValue=react.useMemo(()=>{const subscription=createSubscription(store);return{store,subscription,getServerState:serverState?()=>serverState:void 0}},[store,serverState]),previousState=react.useMemo(()=>store.getState(),[store]);useIsomorphicLayoutEffect(()=>{const{subscription}=contextValue;return subscription.onStateChange=subscription.notifyNestedSubs,subscription.trySubscribe(),previousState!==store.getState()&&subscription.notifyNestedSubs(),()=>{subscription.tryUnsubscribe(),subscription.onStateChange=void 0}},[contextValue,previousState]);const Context=context||ReactReduxContext;return react.createElement(Context.Provider,{value:contextValue},children)};var prefix="Invariant failed";var getRect=function getRect(_ref){var top=_ref.top,right=_ref.right,bottom=_ref.bottom,left=_ref.left;return{top,right,bottom,left,width:right-left,height:bottom-top,x:left,y:top,center:{x:(right+left)/2,y:(bottom+top)/2}}},expand=function expand(target,expandBy){return{top:target.top-expandBy.top,left:target.left-expandBy.left,bottom:target.bottom+expandBy.bottom,right:target.right+expandBy.right}},shrink=function shrink(target,shrinkBy){return{top:target.top+shrinkBy.top,left:target.left+shrinkBy.left,bottom:target.bottom-shrinkBy.bottom,right:target.right-shrinkBy.right}},noSpacing={top:0,right:0,bottom:0,left:0},createBox=function createBox(_ref2){var borderBox=_ref2.borderBox,_ref2$margin=_ref2.margin,margin=void 0===_ref2$margin?noSpacing:_ref2$margin,_ref2$border=_ref2.border,border=void 0===_ref2$border?noSpacing:_ref2$border,_ref2$padding=_ref2.padding,padding=void 0===_ref2$padding?noSpacing:_ref2$padding,marginBox=getRect(expand(borderBox,margin)),paddingBox=getRect(shrink(borderBox,border)),contentBox=getRect(shrink(paddingBox,padding));return{marginBox,borderBox:getRect(borderBox),paddingBox,contentBox,margin,border,padding}},parse=function parse(raw){var value=raw.slice(0,-2);if("px"!==raw.slice(-2))return 0;var result=Number(value);return isNaN(result)&&function invariant(condition,message){if(!condition)throw new Error(prefix)}(!1),result},offset=function offset(original,change){var borderBox=original.borderBox,border=original.border,margin=original.margin,padding=original.padding,shifted=function shift(target,shiftBy){return{top:target.top+shiftBy.y,left:target.left+shiftBy.x,bottom:target.bottom+shiftBy.y,right:target.right+shiftBy.x}}(borderBox,change);return createBox({borderBox:shifted,border,margin,padding})},withScroll=function withScroll(original,scroll){return void 0===scroll&&(scroll=function getWindowScroll(){return{x:window.pageXOffset,y:window.pageYOffset}}()),offset(original,scroll)},calculateBox=function calculateBox(borderBox,styles){var margin={top:parse(styles.marginTop),right:parse(styles.marginRight),bottom:parse(styles.marginBottom),left:parse(styles.marginLeft)},padding={top:parse(styles.paddingTop),right:parse(styles.paddingRight),bottom:parse(styles.paddingBottom),left:parse(styles.paddingLeft)},border={top:parse(styles.borderTopWidth),right:parse(styles.borderRightWidth),bottom:parse(styles.borderBottomWidth),left:parse(styles.borderLeftWidth)};return createBox({borderBox,margin,padding,border})},getBox=function getBox(el){var borderBox=el.getBoundingClientRect(),styles=window.getComputedStyle(el);return calculateBox(borderBox,styles)};const raf_schd_esm=function rafSchd(fn){var lastArgs=[],frameId=null,wrapperFn=function wrapperFn(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];lastArgs=args,frameId||(frameId=requestAnimationFrame(function(){frameId=null,fn.apply(void 0,lastArgs)}))};return wrapperFn.cancel=function(){frameId&&(cancelAnimationFrame(frameId),frameId=null)},wrapperFn};var esm_extends=__webpack_require__("./node_modules/.pnpm/@babel+runtime@7.27.6/node_modules/@babel/runtime/helpers/esm/extends.js");function log(type,message){}log.bind(null,"warn"),log.bind(null,"error");function noop$2(){}function bindEvents(el,bindings,sharedOptions){const unbindings=bindings.map(binding=>{const options=function getOptions(shared,fromBinding){return{...shared,...fromBinding}}(sharedOptions,binding.options);return el.addEventListener(binding.eventName,binding.fn,options),function unbind(){el.removeEventListener(binding.eventName,binding.fn,options)}});return function unbindAll(){unbindings.forEach(unbind=>{unbind()})}}const dnd_esm_isProduction=!0,prefix$1="Invariant failed";class RbdInvariant extends Error{}function dnd_esm_invariant(condition,message){throw new RbdInvariant(dnd_esm_isProduction?prefix$1:`${prefix$1}: ${message||""}`)}RbdInvariant.prototype.toString=function toString(){return this.message};class ErrorBoundary extends react.Component{constructor(...args){super(...args),this.callbacks=null,this.unbind=noop$2,this.onWindowError=event=>{const callbacks=this.getCallbacks();callbacks.isDragging()&&callbacks.tryAbort();event.error instanceof RbdInvariant&&event.preventDefault()},this.getCallbacks=()=>{if(!this.callbacks)throw new Error("Unable to find AppCallbacks in <ErrorBoundary/>");return this.callbacks},this.setCallbacks=callbacks=>{this.callbacks=callbacks}}componentDidMount(){this.unbind=bindEvents(window,[{eventName:"error",fn:this.onWindowError}])}componentDidCatch(err){if(!(err instanceof RbdInvariant))throw err;this.setState({})}componentWillUnmount(){this.unbind()}render(){return this.props.children(this.setCallbacks)}}const position=index=>index+1,withLocation=(source,destination)=>{const isInHomeList=source.droppableId===destination.droppableId,startPosition=position(source.index),endPosition=position(destination.index);return isInHomeList?`\n      You have moved the item from position ${startPosition}\n      to position ${endPosition}\n    `:`\n    You have moved the item from position ${startPosition}\n    in list ${source.droppableId}\n    to list ${destination.droppableId}\n    in position ${endPosition}\n  `},withCombine=(id,source,combine)=>source.droppableId===combine.droppableId?`\n      The item ${id}\n      has been combined with ${combine.draggableId}`:`\n      The item ${id}\n      in list ${source.droppableId}\n      has been combined with ${combine.draggableId}\n      in list ${combine.droppableId}\n    `,returnedToStart=source=>`\n  The item has returned to its starting position\n  of ${position(source.index)}\n`,preset={dragHandleUsageInstructions:"\n  Press space bar to start a drag.\n  When dragging you can use the arrow keys to move the item around and escape to cancel.\n  Some screen readers may require you to be in focus mode or to use your pass through key\n",onDragStart:start=>`\n  You have lifted an item in position ${position(start.source.index)}\n`,onDragUpdate:update=>{const location=update.destination;if(location)return withLocation(update.source,location);const combine=update.combine;return combine?withCombine(update.draggableId,update.source,combine):"You are over an area that cannot be dropped on"},onDragEnd:result=>{if("CANCEL"===result.reason)return`\n      Movement cancelled.\n      ${returnedToStart(result.source)}\n    `;const location=result.destination,combine=result.combine;return location?`\n      You have dropped the item.\n      ${withLocation(result.source,location)}\n    `:combine?`\n      You have dropped the item.\n      ${withCombine(result.draggableId,result.source,combine)}\n    `:`\n    The item has been dropped while not over a drop area.\n    ${returnedToStart(result.source)}\n  `}};function isEqual$2(first,second){return first===second||!(!Number.isNaN(first)||!Number.isNaN(second))}function areInputsEqual(newInputs,lastInputs){if(newInputs.length!==lastInputs.length)return!1;for(let i=0;i<newInputs.length;i++)if(!isEqual$2(newInputs[i],lastInputs[i]))return!1;return!0}function useMemo(getResult,inputs){const initial=(0,react.useState)(()=>({inputs,result:getResult()}))[0],isFirstRun=(0,react.useRef)(!0),committed=(0,react.useRef)(initial),cache=isFirstRun.current||Boolean(inputs&&committed.current.inputs&&areInputsEqual(inputs,committed.current.inputs))?committed.current:{inputs,result:getResult()};return(0,react.useEffect)(()=>{isFirstRun.current=!1,committed.current=cache},[cache]),cache.result}function useCallback(callback,inputs){return useMemo(()=>callback,inputs)}const origin={x:0,y:0},add=(point1,point2)=>({x:point1.x+point2.x,y:point1.y+point2.y}),subtract=(point1,point2)=>({x:point1.x-point2.x,y:point1.y-point2.y}),isEqual$1=(point1,point2)=>point1.x===point2.x&&point1.y===point2.y,negate=point=>({x:0!==point.x?-point.x:0,y:0!==point.y?-point.y:0}),patch=(line,value,otherValue=0)=>"x"===line?{x:value,y:otherValue}:{x:otherValue,y:value},distance=(point1,point2)=>Math.sqrt((point2.x-point1.x)**2+(point2.y-point1.y)**2),closest$1=(target,points)=>Math.min(...points.map(point=>distance(target,point))),apply=fn=>point=>({x:fn(point.x),y:fn(point.y)});const offsetByPosition=(spacing,point)=>({top:spacing.top+point.y,left:spacing.left+point.x,bottom:spacing.bottom+point.y,right:spacing.right+point.x}),getCorners=spacing=>[{x:spacing.left,y:spacing.top},{x:spacing.right,y:spacing.top},{x:spacing.left,y:spacing.bottom},{x:spacing.right,y:spacing.bottom}],clip=(target,frame)=>frame&&frame.shouldClipSubject?((frame,subject)=>{const result=getRect({top:Math.max(subject.top,frame.top),right:Math.min(subject.right,frame.right),bottom:Math.min(subject.bottom,frame.bottom),left:Math.max(subject.left,frame.left)});return result.width<=0||result.height<=0?null:result})(frame.pageMarginBox,target):getRect(target);var getSubject=({page,withPlaceholder,axis,frame})=>{const scrolled=((target,frame)=>frame?offsetByPosition(target,frame.scroll.diff.displacement):target)(page.marginBox,frame),increased=((target,axis,withPlaceholder)=>withPlaceholder&&withPlaceholder.increasedBy?{...target,[axis.end]:target[axis.end]+withPlaceholder.increasedBy[axis.line]}:target)(scrolled,axis,withPlaceholder);return{page,withPlaceholder,active:clip(increased,frame)}},scrollDroppable=(droppable,newScroll)=>{droppable.frame||dnd_esm_invariant();const scrollable=droppable.frame,scrollDiff=subtract(newScroll,scrollable.scroll.initial),scrollDisplacement=negate(scrollDiff),frame={...scrollable,scroll:{initial:scrollable.scroll.initial,current:newScroll,diff:{value:scrollDiff,displacement:scrollDisplacement},max:scrollable.scroll.max}},subject=getSubject({page:droppable.subject.page,withPlaceholder:droppable.subject.withPlaceholder,axis:droppable.axis,frame});return{...droppable,frame,subject}};function memoizeOne(resultFn,isEqual=areInputsEqual){let cache=null;function memoized(...newArgs){if(cache&&cache.lastThis===this&&isEqual(newArgs,cache.lastArgs))return cache.lastResult;const lastResult=resultFn.apply(this,newArgs);return cache={lastResult,lastArgs:newArgs,lastThis:this},lastResult}return memoized.clear=function clear(){cache=null},memoized}const toDroppableMap=memoizeOne(droppables=>droppables.reduce((previous,current)=>(previous[current.descriptor.id]=current,previous),{})),toDraggableMap=memoizeOne(draggables=>draggables.reduce((previous,current)=>(previous[current.descriptor.id]=current,previous),{})),toDroppableList=memoizeOne(droppables=>Object.values(droppables)),toDraggableList=memoizeOne(draggables=>Object.values(draggables));var getDraggablesInsideDroppable=memoizeOne((droppableId,draggables)=>{const result=toDraggableList(draggables).filter(draggable=>droppableId===draggable.descriptor.droppableId).sort((a,b)=>a.descriptor.index-b.descriptor.index);return result});function tryGetDestination(impact){return impact.at&&"REORDER"===impact.at.type?impact.at.destination:null}function tryGetCombine(impact){return impact.at&&"COMBINE"===impact.at.type?impact.at.combine:null}var removeDraggableFromList=memoizeOne((remove,list)=>list.filter(item=>item.descriptor.id!==remove.descriptor.id)),isHomeOf=(draggable,destination)=>draggable.descriptor.droppableId===destination.descriptor.id;const noDisplacedBy={point:origin,value:0},emptyGroups={invisible:{},visible:{},all:[]},noImpact={displaced:emptyGroups,displacedBy:noDisplacedBy,at:null};var isWithin=(lowerBound,upperBound)=>value=>lowerBound<=value&&value<=upperBound,isPartiallyVisibleThroughFrame=frame=>{const isWithinVertical=isWithin(frame.top,frame.bottom),isWithinHorizontal=isWithin(frame.left,frame.right);return subject=>{if(isWithinVertical(subject.top)&&isWithinVertical(subject.bottom)&&isWithinHorizontal(subject.left)&&isWithinHorizontal(subject.right))return!0;const isPartiallyVisibleVertically=isWithinVertical(subject.top)||isWithinVertical(subject.bottom),isPartiallyVisibleHorizontally=isWithinHorizontal(subject.left)||isWithinHorizontal(subject.right);if(isPartiallyVisibleVertically&&isPartiallyVisibleHorizontally)return!0;const isBiggerVertically=subject.top<frame.top&&subject.bottom>frame.bottom,isBiggerHorizontally=subject.left<frame.left&&subject.right>frame.right;if(isBiggerVertically&&isBiggerHorizontally)return!0;return isBiggerVertically&&isPartiallyVisibleHorizontally||isBiggerHorizontally&&isPartiallyVisibleVertically}},isTotallyVisibleThroughFrame=frame=>{const isWithinVertical=isWithin(frame.top,frame.bottom),isWithinHorizontal=isWithin(frame.left,frame.right);return subject=>isWithinVertical(subject.top)&&isWithinVertical(subject.bottom)&&isWithinHorizontal(subject.left)&&isWithinHorizontal(subject.right)};const vertical={direction:"vertical",line:"y",crossAxisLine:"x",start:"top",end:"bottom",size:"height",crossAxisStart:"left",crossAxisEnd:"right",crossAxisSize:"width"},horizontal={direction:"horizontal",line:"x",crossAxisLine:"y",start:"left",end:"right",size:"width",crossAxisStart:"top",crossAxisEnd:"bottom",crossAxisSize:"height"};const isVisible$1=({target:toBeDisplaced,destination,viewport,withDroppableDisplacement,isVisibleThroughFrameFn})=>{const displacedTarget=withDroppableDisplacement?((target,destination)=>{const displacement=destination.frame?destination.frame.scroll.diff.displacement:origin;return offsetByPosition(target,displacement)})(toBeDisplaced,destination):toBeDisplaced;return((target,destination,isVisibleThroughFrameFn)=>!!destination.subject.active&&isVisibleThroughFrameFn(destination.subject.active)(target))(displacedTarget,destination,isVisibleThroughFrameFn)&&((target,viewport,isVisibleThroughFrameFn)=>isVisibleThroughFrameFn(viewport)(target))(displacedTarget,viewport,isVisibleThroughFrameFn)},isTotallyVisible=args=>isVisible$1({...args,isVisibleThroughFrameFn:isTotallyVisibleThroughFrame});function getDisplacementGroups({afterDragging,destination,displacedBy,viewport,forceShouldAnimate,last}){return afterDragging.reduce(function process(groups,draggable){const target=function getTarget(draggable,displacedBy){const marginBox=draggable.page.marginBox,expandBy={top:displacedBy.point.y,right:0,bottom:0,left:displacedBy.point.x};return getRect(expand(marginBox,expandBy))}(draggable,displacedBy),id=draggable.descriptor.id;groups.all.push(id);var args;if(!(args={target,destination,viewport,withDroppableDisplacement:!0},isVisible$1({...args,isVisibleThroughFrameFn:isPartiallyVisibleThroughFrame})))return groups.invisible[draggable.descriptor.id]=!0,groups;const shouldAnimate=((id,last,forceShouldAnimate)=>{if("boolean"==typeof forceShouldAnimate)return forceShouldAnimate;if(!last)return!0;const{invisible,visible}=last;if(invisible[id])return!1;const previous=visible[id];return!previous||previous.shouldAnimate})(id,last,forceShouldAnimate),displacement={draggableId:id,shouldAnimate};return groups.visible[id]=displacement,groups},{all:[],visible:{},invisible:{}})}function goAtEnd({insideDestination,inHomeList,displacedBy,destination}){const newIndex=function getIndexOfLastItem(draggables,options){if(!draggables.length)return 0;const indexOfLastItem=draggables[draggables.length-1].descriptor.index;return options.inHomeList?indexOfLastItem:indexOfLastItem+1}(insideDestination,{inHomeList});return{displaced:emptyGroups,displacedBy,at:{type:"REORDER",destination:{droppableId:destination.descriptor.id,index:newIndex}}}}function calculateReorderImpact({draggable,insideDestination,destination,viewport,displacedBy,last,index,forceShouldAnimate}){const inHomeList=isHomeOf(draggable,destination);if(null==index)return goAtEnd({insideDestination,inHomeList,displacedBy,destination});const match=insideDestination.find(item=>item.descriptor.index===index);if(!match)return goAtEnd({insideDestination,inHomeList,displacedBy,destination});const withoutDragging=removeDraggableFromList(draggable,insideDestination),sliceFrom=insideDestination.indexOf(match);return{displaced:getDisplacementGroups({afterDragging:withoutDragging.slice(sliceFrom),destination,displacedBy,last,viewport:viewport.frame,forceShouldAnimate}),displacedBy,at:{type:"REORDER",destination:{droppableId:destination.descriptor.id,index}}}}function didStartAfterCritical(draggableId,afterCritical){return Boolean(afterCritical.effected[draggableId])}var moveToNextIndex=({isMovingForward,isInHomeList,draggable,draggables,destination,insideDestination,previousImpact,viewport,afterCritical})=>{const wasAt=previousImpact.at;if(wasAt||dnd_esm_invariant(),"REORDER"===wasAt.type){const newIndex=(({isMovingForward,isInHomeList,insideDestination,location})=>{if(!insideDestination.length)return null;const currentIndex=location.index,proposedIndex=isMovingForward?currentIndex+1:currentIndex-1,firstIndex=insideDestination[0].descriptor.index,lastIndex=insideDestination[insideDestination.length-1].descriptor.index;return proposedIndex<firstIndex||proposedIndex>(isInHomeList?lastIndex:lastIndex+1)?null:proposedIndex})({isMovingForward,isInHomeList,location:wasAt.destination,insideDestination});return null==newIndex?null:calculateReorderImpact({draggable,insideDestination,destination,viewport,last:previousImpact.displaced,displacedBy:previousImpact.displacedBy,index:newIndex})}const newIndex=(({isMovingForward,destination,draggables,combine,afterCritical})=>{if(!destination.isCombineEnabled)return null;const combineId=combine.draggableId,combineWithIndex=draggables[combineId].descriptor.index;return didStartAfterCritical(combineId,afterCritical)?isMovingForward?combineWithIndex:combineWithIndex-1:isMovingForward?combineWithIndex+1:combineWithIndex})({isMovingForward,destination,displaced:previousImpact.displaced,draggables,combine:wasAt.combine,afterCritical});return null==newIndex?null:calculateReorderImpact({draggable,insideDestination,destination,viewport,last:previousImpact.displaced,displacedBy:previousImpact.displacedBy,index:newIndex})},whenCombining=({afterCritical,impact,draggables})=>{const combine=tryGetCombine(impact);combine||dnd_esm_invariant();const combineWith=combine.draggableId,center=draggables[combineWith].page.borderBox.center,displaceBy=(({displaced,afterCritical,combineWith,displacedBy})=>{const isDisplaced=Boolean(displaced.visible[combineWith]||displaced.invisible[combineWith]);return didStartAfterCritical(combineWith,afterCritical)?isDisplaced?origin:negate(displacedBy.point):isDisplaced?displacedBy.point:origin})({displaced:impact.displaced,afterCritical,combineWith,displacedBy:impact.displacedBy});return add(center,displaceBy)};const distanceFromStartToBorderBoxCenter=(axis,box)=>box.margin[axis.start]+box.borderBox[axis.size]/2,getCrossAxisBorderBoxCenter=(axis,target,isMoving)=>target[axis.crossAxisStart]+isMoving.margin[axis.crossAxisStart]+isMoving.borderBox[axis.crossAxisSize]/2,goAfter=({axis,moveRelativeTo,isMoving})=>patch(axis.line,moveRelativeTo.marginBox[axis.end]+distanceFromStartToBorderBoxCenter(axis,isMoving),getCrossAxisBorderBoxCenter(axis,moveRelativeTo.marginBox,isMoving)),goBefore=({axis,moveRelativeTo,isMoving})=>patch(axis.line,moveRelativeTo.marginBox[axis.start]-((axis,box)=>box.margin[axis.end]+box.borderBox[axis.size]/2)(axis,isMoving),getCrossAxisBorderBoxCenter(axis,moveRelativeTo.marginBox,isMoving));var whenReordering=({impact,draggable,draggables,droppable,afterCritical})=>{const insideDestination=getDraggablesInsideDroppable(droppable.descriptor.id,draggables),draggablePage=draggable.page,axis=droppable.axis;if(!insideDestination.length)return(({axis,moveInto,isMoving})=>patch(axis.line,moveInto.contentBox[axis.start]+distanceFromStartToBorderBoxCenter(axis,isMoving),getCrossAxisBorderBoxCenter(axis,moveInto.contentBox,isMoving)))({axis,moveInto:droppable.page,isMoving:draggablePage});const{displaced,displacedBy}=impact,closestAfter=displaced.all[0];if(closestAfter){const closest=draggables[closestAfter];if(didStartAfterCritical(closestAfter,afterCritical))return goBefore({axis,moveRelativeTo:closest.page,isMoving:draggablePage});const withDisplacement=offset(closest.page,displacedBy.point);return goBefore({axis,moveRelativeTo:withDisplacement,isMoving:draggablePage})}const last=insideDestination[insideDestination.length-1];if(last.descriptor.id===draggable.descriptor.id)return draggablePage.borderBox.center;if(didStartAfterCritical(last.descriptor.id,afterCritical)){const page=offset(last.page,negate(afterCritical.displacedBy.point));return goAfter({axis,moveRelativeTo:page,isMoving:draggablePage})}return goAfter({axis,moveRelativeTo:last.page,isMoving:draggablePage})},withDroppableDisplacement=(droppable,point)=>{const frame=droppable.frame;return frame?add(point,frame.scroll.diff.displacement):point};var getPageBorderBoxCenterFromImpact=args=>{const withoutDisplacement=(({impact,draggable,droppable,draggables,afterCritical})=>{const original=draggable.page.borderBox.center,at=impact.at;return droppable&&at?"REORDER"===at.type?whenReordering({impact,draggable,draggables,droppable,afterCritical}):whenCombining({impact,draggables,afterCritical}):original})(args),droppable=args.droppable;return droppable?withDroppableDisplacement(droppable,withoutDisplacement):withoutDisplacement},scrollViewport=(viewport,newScroll)=>{const diff=subtract(newScroll,viewport.scroll.initial),displacement=negate(diff);return{frame:getRect({top:newScroll.y,bottom:newScroll.y+viewport.frame.height,left:newScroll.x,right:newScroll.x+viewport.frame.width}),scroll:{initial:viewport.scroll.initial,max:viewport.scroll.max,current:newScroll,diff:{value:diff,displacement}}}};function getDraggables$1(ids,draggables){return ids.map(id=>draggables[id])}var getClientFromPageBorderBoxCenter=({pageBorderBoxCenter,draggable,viewport})=>{const withoutPageScrollChange=((viewport,point)=>add(viewport.scroll.diff.displacement,point))(viewport,pageBorderBoxCenter),offset=subtract(withoutPageScrollChange,draggable.page.borderBox.center);return add(draggable.client.borderBox.center,offset)},isTotallyVisibleInNewLocation=({draggable,destination,newPageBorderBoxCenter,viewport,withDroppableDisplacement,onlyOnMainAxis=!1})=>{const changeNeeded=subtract(newPageBorderBoxCenter,draggable.page.borderBox.center),args={target:offsetByPosition(draggable.page.borderBox,changeNeeded),destination,withDroppableDisplacement,viewport};return onlyOnMainAxis?(args=>{return isVisible$1({...args,isVisibleThroughFrameFn:(axis=args.destination.axis,frame=>{const isWithinVertical=isWithin(frame.top,frame.bottom),isWithinHorizontal=isWithin(frame.left,frame.right);return subject=>axis===vertical?isWithinVertical(subject.top)&&isWithinVertical(subject.bottom):isWithinHorizontal(subject.left)&&isWithinHorizontal(subject.right)})});var axis})(args):isTotallyVisible(args)},moveToNextPlace=({isMovingForward,draggable,destination,draggables,previousImpact,viewport,previousPageBorderBoxCenter,previousClientSelection,afterCritical})=>{if(!destination.isEnabled)return null;const insideDestination=getDraggablesInsideDroppable(destination.descriptor.id,draggables),isInHomeList=isHomeOf(draggable,destination),impact=(({isMovingForward,draggable,destination,insideDestination,previousImpact})=>{if(!destination.isCombineEnabled)return null;if(!tryGetDestination(previousImpact))return null;function getImpact(target){const at={type:"COMBINE",combine:{draggableId:target,droppableId:destination.descriptor.id}};return{...previousImpact,at}}const all=previousImpact.displaced.all,closestId=all.length?all[0]:null;if(isMovingForward)return closestId?getImpact(closestId):null;const withoutDraggable=removeDraggableFromList(draggable,insideDestination);if(!closestId)return withoutDraggable.length?getImpact(withoutDraggable[withoutDraggable.length-1].descriptor.id):null;const indexOfClosest=withoutDraggable.findIndex(d=>d.descriptor.id===closestId);-1===indexOfClosest&&dnd_esm_invariant();const proposedIndex=indexOfClosest-1;return proposedIndex<0?null:getImpact(withoutDraggable[proposedIndex].descriptor.id)})({isMovingForward,draggable,destination,insideDestination,previousImpact})||moveToNextIndex({isMovingForward,isInHomeList,draggable,draggables,destination,insideDestination,previousImpact,viewport,afterCritical});if(!impact)return null;const pageBorderBoxCenter=getPageBorderBoxCenterFromImpact({impact,draggable,droppable:destination,draggables,afterCritical});if(isTotallyVisibleInNewLocation({draggable,destination,newPageBorderBoxCenter:pageBorderBoxCenter,viewport:viewport.frame,withDroppableDisplacement:!1,onlyOnMainAxis:!0})){return{clientSelection:getClientFromPageBorderBoxCenter({pageBorderBoxCenter,draggable,viewport}),impact,scrollJumpRequest:null}}const distance=subtract(pageBorderBoxCenter,previousPageBorderBoxCenter),cautious=(({impact,viewport,destination,draggables,maxScrollChange})=>{const scrolledViewport=scrollViewport(viewport,add(viewport.scroll.current,maxScrollChange)),scrolledDroppable=destination.frame?scrollDroppable(destination,add(destination.frame.scroll.current,maxScrollChange)):destination,last=impact.displaced,withViewportScroll=getDisplacementGroups({afterDragging:getDraggables$1(last.all,draggables),destination,displacedBy:impact.displacedBy,viewport:scrolledViewport.frame,last,forceShouldAnimate:!1}),withDroppableScroll=getDisplacementGroups({afterDragging:getDraggables$1(last.all,draggables),destination:scrolledDroppable,displacedBy:impact.displacedBy,viewport:viewport.frame,last,forceShouldAnimate:!1}),invisible={},visible={},groups=[last,withViewportScroll,withDroppableScroll];return last.all.forEach(id=>{const displacement=function tryGetVisible(id,groups){for(let i=0;i<groups.length;i++){const displacement=groups[i].visible[id];if(displacement)return displacement}return null}(id,groups);displacement?visible[id]=displacement:invisible[id]=!0}),{...impact,displaced:{all:last.all,invisible,visible}}})({impact,viewport,destination,draggables,maxScrollChange:distance});return{clientSelection:previousClientSelection,impact:cautious,scrollJumpRequest:distance}};const getKnownActive=droppable=>{const rect=droppable.subject.active;return rect||dnd_esm_invariant(),rect};const getCurrentPageBorderBoxCenter=(draggable,afterCritical)=>{const original=draggable.page.borderBox.center;return didStartAfterCritical(draggable.descriptor.id,afterCritical)?subtract(original,afterCritical.displacedBy.point):original},getCurrentPageBorderBox=(draggable,afterCritical)=>{const original=draggable.page.borderBox;return didStartAfterCritical(draggable.descriptor.id,afterCritical)?offsetByPosition(original,negate(afterCritical.displacedBy.point)):original};var getDisplacedBy=memoizeOne(function getDisplacedBy(axis,displaceBy){const displacement=displaceBy[axis.line];return{value:displacement,point:patch(axis.line,displacement)}});const withMaxScroll=(frame,max)=>({...frame,scroll:{...frame.scroll,max}}),addPlaceholder=(droppable,draggable,draggables)=>{const frame=droppable.frame;isHomeOf(draggable,droppable)&&dnd_esm_invariant(),droppable.subject.withPlaceholder&&dnd_esm_invariant();const placeholderSize=getDisplacedBy(droppable.axis,draggable.displaceBy).point,requiredGrowth=((droppable,placeholderSize,draggables)=>{const axis=droppable.axis;if("virtual"===droppable.descriptor.mode)return patch(axis.line,placeholderSize[axis.line]);const availableSpace=droppable.subject.page.contentBox[axis.size],needsToGrowBy=getDraggablesInsideDroppable(droppable.descriptor.id,draggables).reduce((sum,dimension)=>sum+dimension.client.marginBox[axis.size],0)+placeholderSize[axis.line]-availableSpace;return needsToGrowBy<=0?null:patch(axis.line,needsToGrowBy)})(droppable,placeholderSize,draggables),added={placeholderSize,increasedBy:requiredGrowth,oldFrameMaxScroll:droppable.frame?droppable.frame.scroll.max:null};if(!frame){const subject=getSubject({page:droppable.subject.page,withPlaceholder:added,axis:droppable.axis,frame:droppable.frame});return{...droppable,subject}}const maxScroll=requiredGrowth?add(frame.scroll.max,requiredGrowth):frame.scroll.max,newFrame=withMaxScroll(frame,maxScroll),subject=getSubject({page:droppable.subject.page,withPlaceholder:added,axis:droppable.axis,frame:newFrame});return{...droppable,subject,frame:newFrame}};var moveCrossAxis=({isMovingForward,previousPageBorderBoxCenter,draggable,isOver,draggables,droppables,viewport,afterCritical})=>{const destination=(({isMovingForward,pageBorderBoxCenter,source,droppables,viewport})=>{const active=source.subject.active;if(!active)return null;const axis=source.axis,isBetweenSourceClipped=isWithin(active[axis.start],active[axis.end]),candidates=toDroppableList(droppables).filter(droppable=>droppable!==source).filter(droppable=>droppable.isEnabled).filter(droppable=>Boolean(droppable.subject.active)).filter(droppable=>isPartiallyVisibleThroughFrame(viewport.frame)(getKnownActive(droppable))).filter(droppable=>{const activeOfTarget=getKnownActive(droppable);return isMovingForward?active[axis.crossAxisEnd]<activeOfTarget[axis.crossAxisEnd]:activeOfTarget[axis.crossAxisStart]<active[axis.crossAxisStart]}).filter(droppable=>{const activeOfTarget=getKnownActive(droppable),isBetweenDestinationClipped=isWithin(activeOfTarget[axis.start],activeOfTarget[axis.end]);return isBetweenSourceClipped(activeOfTarget[axis.start])||isBetweenSourceClipped(activeOfTarget[axis.end])||isBetweenDestinationClipped(active[axis.start])||isBetweenDestinationClipped(active[axis.end])}).sort((a,b)=>{const first=getKnownActive(a)[axis.crossAxisStart],second=getKnownActive(b)[axis.crossAxisStart];return isMovingForward?first-second:second-first}).filter((droppable,index,array)=>getKnownActive(droppable)[axis.crossAxisStart]===getKnownActive(array[0])[axis.crossAxisStart]);if(!candidates.length)return null;if(1===candidates.length)return candidates[0];const contains=candidates.filter(droppable=>isWithin(getKnownActive(droppable)[axis.start],getKnownActive(droppable)[axis.end])(pageBorderBoxCenter[axis.line]));return 1===contains.length?contains[0]:contains.length>1?contains.sort((a,b)=>getKnownActive(a)[axis.start]-getKnownActive(b)[axis.start])[0]:candidates.sort((a,b)=>{const first=closest$1(pageBorderBoxCenter,getCorners(getKnownActive(a))),second=closest$1(pageBorderBoxCenter,getCorners(getKnownActive(b)));return first!==second?first-second:getKnownActive(a)[axis.start]-getKnownActive(b)[axis.start]})[0]})({isMovingForward,pageBorderBoxCenter:previousPageBorderBoxCenter,source:isOver,droppables,viewport});if(!destination)return null;const insideDestination=getDraggablesInsideDroppable(destination.descriptor.id,draggables),moveRelativeTo=(({pageBorderBoxCenter,viewport,destination,insideDestination,afterCritical})=>{const sorted=insideDestination.filter(draggable=>isTotallyVisible({target:getCurrentPageBorderBox(draggable,afterCritical),destination,viewport:viewport.frame,withDroppableDisplacement:!0})).sort((a,b)=>{const distanceToA=distance(pageBorderBoxCenter,withDroppableDisplacement(destination,getCurrentPageBorderBoxCenter(a,afterCritical))),distanceToB=distance(pageBorderBoxCenter,withDroppableDisplacement(destination,getCurrentPageBorderBoxCenter(b,afterCritical)));return distanceToA<distanceToB?-1:distanceToB<distanceToA?1:a.descriptor.index-b.descriptor.index});return sorted[0]||null})({pageBorderBoxCenter:previousPageBorderBoxCenter,viewport,destination,insideDestination,afterCritical}),impact=(({previousPageBorderBoxCenter,moveRelativeTo,insideDestination,draggable,draggables,destination,viewport,afterCritical})=>{if(!moveRelativeTo){if(insideDestination.length)return null;const proposed={displaced:emptyGroups,displacedBy:noDisplacedBy,at:{type:"REORDER",destination:{droppableId:destination.descriptor.id,index:0}}},proposedPageBorderBoxCenter=getPageBorderBoxCenterFromImpact({impact:proposed,draggable,droppable:destination,draggables,afterCritical}),withPlaceholder=isHomeOf(draggable,destination)?destination:addPlaceholder(destination,draggable,draggables);return isTotallyVisibleInNewLocation({draggable,destination:withPlaceholder,newPageBorderBoxCenter:proposedPageBorderBoxCenter,viewport:viewport.frame,withDroppableDisplacement:!1,onlyOnMainAxis:!0})?proposed:null}const isGoingBeforeTarget=Boolean(previousPageBorderBoxCenter[destination.axis.line]<=moveRelativeTo.page.borderBox.center[destination.axis.line]),proposedIndex=(()=>{const relativeTo=moveRelativeTo.descriptor.index;return moveRelativeTo.descriptor.id===draggable.descriptor.id||isGoingBeforeTarget?relativeTo:relativeTo+1})(),displacedBy=getDisplacedBy(destination.axis,draggable.displaceBy);return calculateReorderImpact({draggable,insideDestination,destination,viewport,displacedBy,last:emptyGroups,index:proposedIndex})})({previousPageBorderBoxCenter,destination,draggable,draggables,moveRelativeTo,insideDestination,viewport,afterCritical});if(!impact)return null;const pageBorderBoxCenter=getPageBorderBoxCenterFromImpact({impact,draggable,droppable:destination,draggables,afterCritical});return{clientSelection:getClientFromPageBorderBoxCenter({pageBorderBoxCenter,draggable,viewport}),impact,scrollJumpRequest:null}},whatIsDraggedOver=impact=>{const at=impact.at;return at?"REORDER"===at.type?at.destination.droppableId:at.combine.droppableId:null};var moveInDirection=({state,type})=>{const isActuallyOver=((impact,droppables)=>{const id=whatIsDraggedOver(impact);return id?droppables[id]:null})(state.impact,state.dimensions.droppables),isMainAxisMovementAllowed=Boolean(isActuallyOver),home=state.dimensions.droppables[state.critical.droppable.id],isOver=isActuallyOver||home,direction=isOver.axis.direction,isMovingOnMainAxis="vertical"===direction&&("MOVE_UP"===type||"MOVE_DOWN"===type)||"horizontal"===direction&&("MOVE_LEFT"===type||"MOVE_RIGHT"===type);if(isMovingOnMainAxis&&!isMainAxisMovementAllowed)return null;const isMovingForward="MOVE_DOWN"===type||"MOVE_RIGHT"===type,draggable=state.dimensions.draggables[state.critical.draggable.id],previousPageBorderBoxCenter=state.current.page.borderBoxCenter,{draggables,droppables}=state.dimensions;return isMovingOnMainAxis?moveToNextPlace({isMovingForward,previousPageBorderBoxCenter,draggable,destination:isOver,draggables,viewport:state.viewport,previousClientSelection:state.current.client.selection,previousImpact:state.impact,afterCritical:state.afterCritical}):moveCrossAxis({isMovingForward,previousPageBorderBoxCenter,draggable,isOver,draggables,droppables,viewport:state.viewport,afterCritical:state.afterCritical})};function isMovementAllowed(state){return"DRAGGING"===state.phase||"COLLECTING"===state.phase}function isPositionInFrame(frame){const isWithinVertical=isWithin(frame.top,frame.bottom),isWithinHorizontal=isWithin(frame.left,frame.right);return function run(point){return isWithinVertical(point.y)&&isWithinHorizontal(point.x)}}function getDroppableOver({pageBorderBox,draggable,droppables}){const candidates=toDroppableList(droppables).filter(item=>{if(!item.isEnabled)return!1;const active=item.subject.active;if(!active)return!1;if(!function getHasOverlap(first,second){return first.left<second.right&&first.right>second.left&&first.top<second.bottom&&first.bottom>second.top}(pageBorderBox,active))return!1;if(isPositionInFrame(active)(pageBorderBox.center))return!0;const axis=item.axis,childCenter=active.center[axis.crossAxisLine],crossAxisStart=pageBorderBox[axis.crossAxisStart],crossAxisEnd=pageBorderBox[axis.crossAxisEnd],isContained=isWithin(active[axis.crossAxisStart],active[axis.crossAxisEnd]),isStartContained=isContained(crossAxisStart),isEndContained=isContained(crossAxisEnd);return!isStartContained&&!isEndContained||(isStartContained?crossAxisStart<childCenter:crossAxisEnd>childCenter)});return candidates.length?1===candidates.length?candidates[0].descriptor.id:function getFurthestAway({pageBorderBox,draggable,candidates}){const startCenter=draggable.page.borderBox.center,sorted=candidates.map(candidate=>{const axis=candidate.axis,target=patch(candidate.axis.line,pageBorderBox.center[axis.line],candidate.page.borderBox.center[axis.crossAxisLine]);return{id:candidate.descriptor.id,distance:distance(startCenter,target)}}).sort((a,b)=>b.distance-a.distance);return sorted[0]?sorted[0].id:null}({pageBorderBox,draggable,candidates}):null}const offsetRectByPosition=(rect,point)=>getRect(offsetByPosition(rect,point));function getIsDisplaced({displaced,id}){return Boolean(displaced.visible[id]||displaced.invisible[id])}var getDragImpact=({pageOffset,draggable,draggables,droppables,previousImpact,viewport,afterCritical})=>{const pageBorderBox=offsetRectByPosition(draggable.page.borderBox,pageOffset),destinationId=getDroppableOver({pageBorderBox,draggable,droppables});if(!destinationId)return noImpact;const destination=droppables[destinationId],insideDestination=getDraggablesInsideDroppable(destination.descriptor.id,draggables),pageBorderBoxWithDroppableScroll=((droppable,area)=>{const frame=droppable.frame;return frame?offsetRectByPosition(area,frame.scroll.diff.value):area})(destination,pageBorderBox);return(({draggable,pageBorderBoxWithDroppableScroll:targetRect,previousImpact,destination,insideDestination,afterCritical})=>{if(!destination.isCombineEnabled)return null;const axis=destination.axis,displacedBy=getDisplacedBy(destination.axis,draggable.displaceBy),displacement=displacedBy.value,targetStart=targetRect[axis.start],targetEnd=targetRect[axis.end],combineWith=removeDraggableFromList(draggable,insideDestination).find(child=>{const id=child.descriptor.id,childRect=child.page.borderBox,threshold=childRect[axis.size]/4,didStartAfterCritical$1=didStartAfterCritical(id,afterCritical),isDisplaced=getIsDisplaced({displaced:previousImpact.displaced,id});return didStartAfterCritical$1?isDisplaced?targetEnd>childRect[axis.start]+threshold&&targetEnd<childRect[axis.end]-threshold:targetStart>childRect[axis.start]-displacement+threshold&&targetStart<childRect[axis.end]-displacement-threshold:isDisplaced?targetEnd>childRect[axis.start]+displacement+threshold&&targetEnd<childRect[axis.end]+displacement-threshold:targetStart>childRect[axis.start]+threshold&&targetStart<childRect[axis.end]-threshold});return combineWith?{displacedBy,displaced:previousImpact.displaced,at:{type:"COMBINE",combine:{draggableId:combineWith.descriptor.id,droppableId:destination.descriptor.id}}}:null})({pageBorderBoxWithDroppableScroll,draggable,previousImpact,destination,insideDestination,afterCritical})||(({pageBorderBoxWithDroppableScroll:targetRect,draggable,destination,insideDestination,last,viewport,afterCritical})=>{const axis=destination.axis,displacedBy=getDisplacedBy(destination.axis,draggable.displaceBy),displacement=displacedBy.value,targetStart=targetRect[axis.start],targetEnd=targetRect[axis.end],newIndex=function atIndex({draggable,closest,inHomeList}){return closest?inHomeList&&closest.descriptor.index>draggable.descriptor.index?closest.descriptor.index-1:closest.descriptor.index:null}({draggable,closest:removeDraggableFromList(draggable,insideDestination).find(child=>{const id=child.descriptor.id,childCenter=child.page.borderBox.center[axis.line],didStartAfterCritical$1=didStartAfterCritical(id,afterCritical),isDisplaced=getIsDisplaced({displaced:last,id});return didStartAfterCritical$1?isDisplaced?targetEnd<=childCenter:targetStart<childCenter-displacement:isDisplaced?targetEnd<=childCenter+displacement:targetStart<childCenter})||null,inHomeList:isHomeOf(draggable,destination)});return calculateReorderImpact({draggable,insideDestination,destination,viewport,last,displacedBy,index:newIndex})})({pageBorderBoxWithDroppableScroll,draggable,destination,insideDestination,last:previousImpact.displaced,viewport,afterCritical})},patchDroppableMap=(droppables,updated)=>({...droppables,[updated.descriptor.id]:updated});const clearUnusedPlaceholder=({previousImpact,impact,droppables})=>{const last=whatIsDraggedOver(previousImpact),now=whatIsDraggedOver(impact);if(!last)return droppables;if(last===now)return droppables;const lastDroppable=droppables[last];if(!lastDroppable.subject.withPlaceholder)return droppables;const updated=(droppable=>{const added=droppable.subject.withPlaceholder;added||dnd_esm_invariant();const frame=droppable.frame;if(!frame){const subject=getSubject({page:droppable.subject.page,axis:droppable.axis,frame:null,withPlaceholder:null});return{...droppable,subject}}const oldMaxScroll=added.oldFrameMaxScroll;oldMaxScroll||dnd_esm_invariant();const newFrame=withMaxScroll(frame,oldMaxScroll),subject=getSubject({page:droppable.subject.page,axis:droppable.axis,frame:newFrame,withPlaceholder:null});return{...droppable,subject,frame:newFrame}})(lastDroppable);return patchDroppableMap(droppables,updated)};var update=({state,clientSelection:forcedClientSelection,dimensions:forcedDimensions,viewport:forcedViewport,impact:forcedImpact,scrollJumpRequest})=>{const viewport=forcedViewport||state.viewport,dimensions=forcedDimensions||state.dimensions,clientSelection=forcedClientSelection||state.current.client.selection,offset=subtract(clientSelection,state.initial.client.selection),client={offset,selection:clientSelection,borderBoxCenter:add(state.initial.client.borderBoxCenter,offset)},page={selection:add(client.selection,viewport.scroll.current),borderBoxCenter:add(client.borderBoxCenter,viewport.scroll.current),offset:add(client.offset,viewport.scroll.diff.value)},current={client,page};if("COLLECTING"===state.phase)return{...state,dimensions,viewport,current};const draggable=dimensions.draggables[state.critical.draggable.id],newImpact=forcedImpact||getDragImpact({pageOffset:page.offset,draggable,draggables:dimensions.draggables,droppables:dimensions.droppables,previousImpact:state.impact,viewport,afterCritical:state.afterCritical}),withUpdatedPlaceholders=(({draggable,draggables,droppables,previousImpact,impact})=>{const cleaned=clearUnusedPlaceholder({previousImpact,impact,droppables}),isOver=whatIsDraggedOver(impact);if(!isOver)return cleaned;const droppable=droppables[isOver];if(isHomeOf(draggable,droppable))return cleaned;if(droppable.subject.withPlaceholder)return cleaned;const patched=addPlaceholder(droppable,draggable,draggables);return patchDroppableMap(cleaned,patched)})({draggable,impact:newImpact,previousImpact:state.impact,draggables:dimensions.draggables,droppables:dimensions.droppables});return{...state,current,dimensions:{draggables:dimensions.draggables,droppables:withUpdatedPlaceholders},impact:newImpact,viewport,scrollJumpRequest:scrollJumpRequest||null,forceShouldAnimate:!scrollJumpRequest&&null}};var recompute=({impact,viewport,draggables,destination,forceShouldAnimate})=>{const last=impact.displaced,afterDragging=function getDraggables(ids,draggables){return ids.map(id=>draggables[id])}(last.all,draggables),displaced=getDisplacementGroups({afterDragging,destination,displacedBy:impact.displacedBy,viewport:viewport.frame,forceShouldAnimate,last});return{...impact,displaced}},getClientBorderBoxCenter=({impact,draggable,droppable,draggables,viewport,afterCritical})=>{const pageBorderBoxCenter=getPageBorderBoxCenterFromImpact({impact,draggable,draggables,droppable,afterCritical});return getClientFromPageBorderBoxCenter({pageBorderBoxCenter,draggable,viewport})},refreshSnap=({state,dimensions:forcedDimensions,viewport:forcedViewport})=>{"SNAP"!==state.movementMode&&dnd_esm_invariant();const needsVisibilityCheck=state.impact,viewport=forcedViewport||state.viewport,dimensions=forcedDimensions||state.dimensions,{draggables,droppables}=dimensions,draggable=draggables[state.critical.draggable.id],isOver=whatIsDraggedOver(needsVisibilityCheck);isOver||dnd_esm_invariant();const destination=droppables[isOver],impact=recompute({impact:needsVisibilityCheck,viewport,destination,draggables}),clientSelection=getClientBorderBoxCenter({impact,draggable,droppable:destination,draggables,viewport,afterCritical:state.afterCritical});return update({impact,clientSelection,state,dimensions,viewport})},getLiftEffect=({draggable,home,draggables,viewport})=>{const displacedBy=getDisplacedBy(home.axis,draggable.displaceBy),insideHome=getDraggablesInsideDroppable(home.descriptor.id,draggables),rawIndex=insideHome.indexOf(draggable);-1===rawIndex&&dnd_esm_invariant();const afterDragging=insideHome.slice(rawIndex+1),effected=afterDragging.reduce((previous,item)=>(previous[item.descriptor.id]=!0,previous),{}),afterCritical={inVirtualList:"virtual"===home.descriptor.mode,displacedBy,effected};var descriptor;return{impact:{displaced:getDisplacementGroups({afterDragging,destination:home,displacedBy,last:null,viewport:viewport.frame,forceShouldAnimate:!1}),displacedBy,at:{type:"REORDER",destination:(descriptor=draggable.descriptor,{index:descriptor.index,droppableId:descriptor.droppableId})}},afterCritical}};const start=key=>{0},finish=key=>{0};var adjustAdditionsForScrollChanges=({additions,updatedDroppables,viewport})=>{const windowScrollChange=viewport.scroll.diff.value;return additions.map(draggable=>{const droppableId=draggable.descriptor.droppableId,frame=(droppable=>{const frame=droppable.frame;return frame||dnd_esm_invariant(),frame})(updatedDroppables[droppableId]),droppableScrollChange=frame.scroll.diff.value,moved=(({draggable,offset:offset$1,initialWindowScroll})=>{const client=offset(draggable.client,offset$1),page=withScroll(client,initialWindowScroll);return{...draggable,placeholder:{...draggable.placeholder,client},client,page}})({draggable,offset:add(windowScrollChange,droppableScrollChange),initialWindowScroll:viewport.scroll.initial});return moved})};const isSnapping=state=>"SNAP"===state.movementMode,postDroppableChange=(state,updated,isEnabledChanging)=>{const dimensions=((dimensions,updated)=>({draggables:dimensions.draggables,droppables:patchDroppableMap(dimensions.droppables,updated)}))(state.dimensions,updated);return!isSnapping(state)||isEnabledChanging?update({state,dimensions}):refreshSnap({state,dimensions})};function removeScrollJumpRequest(state){return state.isDragging&&"SNAP"===state.movementMode?{...state,scrollJumpRequest:null}:state}const idle$2={phase:"IDLE",completed:null,shouldFlush:!1};var reducer=(state=idle$2,action)=>{if("FLUSH"===action.type)return{...idle$2,shouldFlush:!0};if("INITIAL_PUBLISH"===action.type){"IDLE"!==state.phase&&dnd_esm_invariant();const{critical,clientSelection,viewport,dimensions,movementMode}=action.payload,draggable=dimensions.draggables[critical.draggable.id],home=dimensions.droppables[critical.droppable.id],client={selection:clientSelection,borderBoxCenter:draggable.client.borderBox.center,offset:origin},initial={client,page:{selection:add(client.selection,viewport.scroll.initial),borderBoxCenter:add(client.selection,viewport.scroll.initial),offset:add(client.selection,viewport.scroll.diff.value)}},isWindowScrollAllowed=toDroppableList(dimensions.droppables).every(item=>!item.isFixedOnPage),{impact,afterCritical}=getLiftEffect({draggable,home,draggables:dimensions.draggables,viewport});return{phase:"DRAGGING",isDragging:!0,critical,movementMode,dimensions,initial,current:initial,isWindowScrollAllowed,impact,afterCritical,onLiftImpact:impact,viewport,scrollJumpRequest:null,forceShouldAnimate:null}}if("COLLECTION_STARTING"===action.type){if("COLLECTING"===state.phase||"DROP_PENDING"===state.phase)return state;"DRAGGING"!==state.phase&&dnd_esm_invariant();return{...state,phase:"COLLECTING"}}if("PUBLISH_WHILE_DRAGGING"===action.type)return"COLLECTING"!==state.phase&&"DROP_PENDING"!==state.phase&&dnd_esm_invariant(),(({state,published})=>{start();const withScrollChange=published.modified.map(update=>{const existing=state.dimensions.droppables[update.droppableId];return scrollDroppable(existing,update.scroll)}),droppables={...state.dimensions.droppables,...toDroppableMap(withScrollChange)},updatedAdditions=toDraggableMap(adjustAdditionsForScrollChanges({additions:published.additions,updatedDroppables:droppables,viewport:state.viewport})),draggables={...state.dimensions.draggables,...updatedAdditions};published.removals.forEach(id=>{delete draggables[id]});const dimensions={droppables,draggables},wasOverId=whatIsDraggedOver(state.impact),wasOver=wasOverId?dimensions.droppables[wasOverId]:null,draggable=dimensions.draggables[state.critical.draggable.id],home=dimensions.droppables[state.critical.droppable.id],{impact:onLiftImpact,afterCritical}=getLiftEffect({draggable,home,draggables,viewport:state.viewport}),previousImpact=wasOver&&wasOver.isCombineEnabled?state.impact:onLiftImpact,impact=getDragImpact({pageOffset:state.current.page.offset,draggable:dimensions.draggables[state.critical.draggable.id],draggables:dimensions.draggables,droppables:dimensions.droppables,previousImpact,viewport:state.viewport,afterCritical});finish();const draggingState={...state,phase:"DRAGGING",impact,onLiftImpact,dimensions,afterCritical,forceShouldAnimate:!1};return"COLLECTING"===state.phase?draggingState:{...draggingState,phase:"DROP_PENDING",reason:state.reason,isWaiting:!1}})({state,published:action.payload});if("MOVE"===action.type){if("DROP_PENDING"===state.phase)return state;isMovementAllowed(state)||dnd_esm_invariant();const{client:clientSelection}=action.payload;return isEqual$1(clientSelection,state.current.client.selection)?state:update({state,clientSelection,impact:isSnapping(state)?state.impact:null})}if("UPDATE_DROPPABLE_SCROLL"===action.type){if("DROP_PENDING"===state.phase)return removeScrollJumpRequest(state);if("COLLECTING"===state.phase)return removeScrollJumpRequest(state);isMovementAllowed(state)||dnd_esm_invariant();const{id,newScroll}=action.payload,target=state.dimensions.droppables[id];if(!target)return state;const scrolled=scrollDroppable(target,newScroll);return postDroppableChange(state,scrolled,!1)}if("UPDATE_DROPPABLE_IS_ENABLED"===action.type){if("DROP_PENDING"===state.phase)return state;isMovementAllowed(state)||dnd_esm_invariant();const{id,isEnabled}=action.payload,target=state.dimensions.droppables[id];target||dnd_esm_invariant(),target.isEnabled===isEnabled&&dnd_esm_invariant();const updated={...target,isEnabled};return postDroppableChange(state,updated,!0)}if("UPDATE_DROPPABLE_IS_COMBINE_ENABLED"===action.type){if("DROP_PENDING"===state.phase)return state;isMovementAllowed(state)||dnd_esm_invariant();const{id,isCombineEnabled}=action.payload,target=state.dimensions.droppables[id];target||dnd_esm_invariant(),target.isCombineEnabled===isCombineEnabled&&dnd_esm_invariant();const updated={...target,isCombineEnabled};return postDroppableChange(state,updated,!0)}if("MOVE_BY_WINDOW_SCROLL"===action.type){if("DROP_PENDING"===state.phase||"DROP_ANIMATING"===state.phase)return state;isMovementAllowed(state)||dnd_esm_invariant(),state.isWindowScrollAllowed||dnd_esm_invariant();const newScroll=action.payload.newScroll;if(isEqual$1(state.viewport.scroll.current,newScroll))return removeScrollJumpRequest(state);const viewport=scrollViewport(state.viewport,newScroll);return isSnapping(state)?refreshSnap({state,viewport}):update({state,viewport})}if("UPDATE_VIEWPORT_MAX_SCROLL"===action.type){if(!isMovementAllowed(state))return state;const maxScroll=action.payload.maxScroll;if(isEqual$1(maxScroll,state.viewport.scroll.max))return state;const withMaxScroll={...state.viewport,scroll:{...state.viewport.scroll,max:maxScroll}};return{...state,viewport:withMaxScroll}}if("MOVE_UP"===action.type||"MOVE_DOWN"===action.type||"MOVE_LEFT"===action.type||"MOVE_RIGHT"===action.type){if("COLLECTING"===state.phase||"DROP_PENDING"===state.phase)return state;"DRAGGING"!==state.phase&&dnd_esm_invariant();const result=moveInDirection({state,type:action.type});return result?update({state,impact:result.impact,clientSelection:result.clientSelection,scrollJumpRequest:result.scrollJumpRequest}):state}if("DROP_PENDING"===action.type){const reason=action.payload.reason;"COLLECTING"!==state.phase&&dnd_esm_invariant();return{...state,phase:"DROP_PENDING",isWaiting:!0,reason}}if("DROP_ANIMATE"===action.type){const{completed,dropDuration,newHomeClientOffset}=action.payload;"DRAGGING"!==state.phase&&"DROP_PENDING"!==state.phase&&dnd_esm_invariant();return{phase:"DROP_ANIMATING",completed,dropDuration,newHomeClientOffset,dimensions:state.dimensions}}if("DROP_COMPLETE"===action.type){const{completed}=action.payload;return{phase:"IDLE",completed,shouldFlush:!1}}return state};function guard(action,predicate){return action instanceof Object&&"type"in action&&action.type===predicate}const lift$1=args=>({type:"LIFT",payload:args}),publishWhileDragging=args=>({type:"PUBLISH_WHILE_DRAGGING",payload:args}),collectionStarting=()=>({type:"COLLECTION_STARTING",payload:null}),updateDroppableScroll=args=>({type:"UPDATE_DROPPABLE_SCROLL",payload:args}),updateDroppableIsEnabled=args=>({type:"UPDATE_DROPPABLE_IS_ENABLED",payload:args}),updateDroppableIsCombineEnabled=args=>({type:"UPDATE_DROPPABLE_IS_COMBINE_ENABLED",payload:args}),move=args=>({type:"MOVE",payload:args}),moveUp=()=>({type:"MOVE_UP",payload:null}),moveDown=()=>({type:"MOVE_DOWN",payload:null}),moveRight=()=>({type:"MOVE_RIGHT",payload:null}),moveLeft=()=>({type:"MOVE_LEFT",payload:null}),flush=()=>({type:"FLUSH",payload:null}),completeDrop=args=>({type:"DROP_COMPLETE",payload:args}),drop=args=>({type:"DROP",payload:args}),dropAnimationFinished=()=>({type:"DROP_ANIMATION_FINISHED",payload:null});const curves_drop="cubic-bezier(.2,1,.1,1)",combine_opacity={drop:0,combining:.7},combine_scale={drop:.75},timings={outOfTheWay:.2,minDropTime:.33,maxDropTime:.55},outOfTheWayTiming=`${timings.outOfTheWay}s ${"cubic-bezier(0.2, 0, 0, 1)"}`,transitions={fluid:`opacity ${outOfTheWayTiming}`,snap:`transform ${outOfTheWayTiming}, opacity ${outOfTheWayTiming}`,drop:duration=>{const timing=`${duration}s ${curves_drop}`;return`transform ${timing}, opacity ${timing}`},outOfTheWay:`transform ${outOfTheWayTiming}`,placeholder:`height ${outOfTheWayTiming}, width ${outOfTheWayTiming}, margin ${outOfTheWayTiming}`},moveTo=offset=>isEqual$1(offset,origin)?void 0:`translate(${offset.x}px, ${offset.y}px)`,transforms_moveTo=moveTo,transforms_drop=(offset,isCombining)=>{const translate=moveTo(offset);if(translate)return isCombining?`${translate} scale(${combine_scale.drop})`:translate},{minDropTime,maxDropTime}=timings,dropTimeRange=maxDropTime-minDropTime;const dropMiddleware=({getState,dispatch})=>next=>action=>{if(!guard(action,"DROP"))return void next(action);const state=getState(),reason=action.payload.reason;if("COLLECTING"===state.phase)return void dispatch((args=>({type:"DROP_PENDING",payload:args}))({reason}));if("IDLE"===state.phase)return;"DROP_PENDING"===state.phase&&state.isWaiting&&dnd_esm_invariant(),"DRAGGING"!==state.phase&&"DROP_PENDING"!==state.phase&&dnd_esm_invariant();const critical=state.critical,dimensions=state.dimensions,draggable=dimensions.draggables[state.critical.draggable.id],{impact,didDropInsideDroppable}=(({draggables,reason,lastImpact,home,viewport,onLiftImpact})=>{if(!lastImpact.at||"DROP"!==reason)return{impact:recompute({draggables,impact:onLiftImpact,destination:home,viewport,forceShouldAnimate:!0}),didDropInsideDroppable:!1};return"REORDER"===lastImpact.at.type?{impact:lastImpact,didDropInsideDroppable:!0}:{impact:{...lastImpact,displaced:emptyGroups},didDropInsideDroppable:!0}})({reason,lastImpact:state.impact,afterCritical:state.afterCritical,onLiftImpact:state.onLiftImpact,home:state.dimensions.droppables[state.critical.droppable.id],viewport:state.viewport,draggables:state.dimensions.draggables}),destination=didDropInsideDroppable?tryGetDestination(impact):null,combine=didDropInsideDroppable?tryGetCombine(impact):null,source={index:critical.draggable.index,droppableId:critical.droppable.id},result={draggableId:draggable.descriptor.id,type:draggable.descriptor.type,source,reason,mode:state.movementMode,destination,combine},newHomeClientOffset=(({impact,draggable,dimensions,viewport,afterCritical})=>{const{draggables,droppables}=dimensions,droppableId=whatIsDraggedOver(impact),destination=droppableId?droppables[droppableId]:null,home=droppables[draggable.descriptor.droppableId],newClientCenter=getClientBorderBoxCenter({impact,draggable,draggables,afterCritical,droppable:destination||home,viewport});return subtract(newClientCenter,draggable.client.borderBox.center)})({impact,draggable,dimensions,viewport:state.viewport,afterCritical:state.afterCritical}),completed={critical:state.critical,afterCritical:state.afterCritical,result,impact};if(!(!isEqual$1(state.current.client.offset,newHomeClientOffset)||Boolean(result.combine)))return void dispatch(completeDrop({completed}));const dropDuration=(({current,destination,reason})=>{const distance$1=distance(current,destination);if(distance$1<=0)return minDropTime;if(distance$1>=1500)return maxDropTime;const duration=minDropTime+dropTimeRange*(distance$1/1500);return Number(("CANCEL"===reason?.6*duration:duration).toFixed(2))})({current:state.current.client.offset,destination:newHomeClientOffset,reason});dispatch((args=>({type:"DROP_ANIMATE",payload:args}))({newHomeClientOffset,dropDuration,completed}))};var dnd_esm_getWindowScroll=()=>({x:window.pageXOffset,y:window.pageYOffset});function getScrollListener({onWindowScroll}){const scheduled=raf_schd_esm(function updateScroll(){onWindowScroll(dnd_esm_getWindowScroll())}),binding=function getWindowScrollBinding(update){return{eventName:"scroll",options:{passive:!0,capture:!1},fn:event=>{event.target!==window&&event.target!==window.document||update()}}}(scheduled);let unbind=noop$2;function isActive(){return unbind!==noop$2}return{start:function start(){isActive()&&dnd_esm_invariant(),unbind=bindEvents(window,[binding])},stop:function stop(){isActive()||dnd_esm_invariant(),scheduled.cancel(),unbind(),unbind=noop$2},isActive}}const scrollListener=store=>{const listener=getScrollListener({onWindowScroll:newScroll=>{store.dispatch({type:"MOVE_BY_WINDOW_SCROLL",payload:{newScroll}})}});return next=>action=>{!listener.isActive()&&guard(action,"INITIAL_PUBLISH")&&listener.start(),listener.isActive()&&(action=>guard(action,"DROP_COMPLETE")||guard(action,"DROP_ANIMATE")||guard(action,"FLUSH"))(action)&&listener.stop(),next(action)}};var getAsyncMarshal=()=>{const entries=[];return{add:fn=>{const timerId=setTimeout(()=>(timerId=>{const index=entries.findIndex(item=>item.timerId===timerId);-1===index&&dnd_esm_invariant();const[entry]=entries.splice(index,1);entry.callback()})(timerId)),entry={timerId,callback:fn};entries.push(entry)},flush:()=>{if(!entries.length)return;const shallow=[...entries];entries.length=0,shallow.forEach(entry=>{clearTimeout(entry.timerId),entry.callback()})}}};const withTimings=(key,fn)=>{start(),fn(),finish()},getDragStart=(critical,mode)=>({draggableId:critical.draggable.id,type:critical.droppable.type,source:{droppableId:critical.droppable.id,index:critical.draggable.index},mode});function execute(responder,data,announce,getDefaultMessage){if(!responder)return void announce(getDefaultMessage(data));const willExpire=(announce=>{let wasCalled=!1,isExpired=!1;const timeoutId=setTimeout(()=>{isExpired=!0}),result=message=>{wasCalled||isExpired||(wasCalled=!0,announce(message),clearTimeout(timeoutId))};return result.wasCalled=()=>wasCalled,result})(announce);responder(data,{announce:willExpire}),willExpire.wasCalled()||announce(getDefaultMessage(data))}var responders=(getResponders,announce)=>{const publisher=((getResponders,announce)=>{const asyncMarshal=getAsyncMarshal();let dragging=null;const drop=result=>{dragging||dnd_esm_invariant(),dragging=null,withTimings(0,()=>execute(getResponders().onDragEnd,result,announce,preset.onDragEnd))};return{beforeCapture:(draggableId,mode)=>{dragging&&dnd_esm_invariant(),withTimings(0,()=>{const fn=getResponders().onBeforeCapture;fn&&fn({draggableId,mode})})},beforeStart:(critical,mode)=>{dragging&&dnd_esm_invariant(),withTimings(0,()=>{const fn=getResponders().onBeforeDragStart;fn&&fn(getDragStart(critical,mode))})},start:(critical,mode)=>{dragging&&dnd_esm_invariant();const data=getDragStart(critical,mode);dragging={mode,lastCritical:critical,lastLocation:data.source,lastCombine:null},asyncMarshal.add(()=>{withTimings(0,()=>execute(getResponders().onDragStart,data,announce,preset.onDragStart))})},update:(critical,impact)=>{const location=tryGetDestination(impact),combine=tryGetCombine(impact);dragging||dnd_esm_invariant();const hasCriticalChanged=!((first,second)=>{if(first===second)return!0;const isDraggableEqual=first.draggable.id===second.draggable.id&&first.draggable.droppableId===second.draggable.droppableId&&first.draggable.type===second.draggable.type&&first.draggable.index===second.draggable.index,isDroppableEqual=first.droppable.id===second.droppable.id&&first.droppable.type===second.droppable.type;return isDraggableEqual&&isDroppableEqual})(critical,dragging.lastCritical);hasCriticalChanged&&(dragging.lastCritical=critical);const hasLocationChanged=(second=location,!(null==(first=dragging.lastLocation)&&null==second||null!=first&&null!=second&&first.droppableId===second.droppableId&&first.index===second.index));var first,second;hasLocationChanged&&(dragging.lastLocation=location);const hasGroupingChanged=!((first,second)=>null==first&&null==second||null!=first&&null!=second&&first.draggableId===second.draggableId&&first.droppableId===second.droppableId)(dragging.lastCombine,combine);if(hasGroupingChanged&&(dragging.lastCombine=combine),!hasCriticalChanged&&!hasLocationChanged&&!hasGroupingChanged)return;const data={...getDragStart(critical,dragging.mode),combine,destination:location};asyncMarshal.add(()=>{withTimings(0,()=>execute(getResponders().onDragUpdate,data,announce,preset.onDragUpdate))})},flush:()=>{dragging||dnd_esm_invariant(),asyncMarshal.flush()},drop,abort:()=>{if(!dragging)return;const result={...getDragStart(dragging.lastCritical,dragging.mode),combine:null,destination:null,reason:"CANCEL"};drop(result)}}})(getResponders,announce);return store=>next=>action=>{if(guard(action,"BEFORE_INITIAL_CAPTURE"))return void publisher.beforeCapture(action.payload.draggableId,action.payload.movementMode);if(guard(action,"INITIAL_PUBLISH")){const critical=action.payload.critical;return publisher.beforeStart(critical,action.payload.movementMode),next(action),void publisher.start(critical,action.payload.movementMode)}if(guard(action,"DROP_COMPLETE")){const result=action.payload.completed.result;return publisher.flush(),next(action),void publisher.drop(result)}if(next(action),guard(action,"FLUSH"))return void publisher.abort();const state=store.getState();"DRAGGING"===state.phase&&publisher.update(state.critical,state.impact)}};const dropAnimationFinishMiddleware=store=>next=>action=>{if(!guard(action,"DROP_ANIMATION_FINISHED"))return void next(action);const state=store.getState();"DROP_ANIMATING"!==state.phase&&dnd_esm_invariant(),store.dispatch(completeDrop({completed:state.completed}))},dropAnimationFlushOnScrollMiddleware=store=>{let unbind=null,frameId=null;return next=>action=>{if((guard(action,"FLUSH")||guard(action,"DROP_COMPLETE")||guard(action,"DROP_ANIMATION_FINISHED"))&&function clear(){frameId&&(cancelAnimationFrame(frameId),frameId=null),unbind&&(unbind(),unbind=null)}(),next(action),!guard(action,"DROP_ANIMATE"))return;const binding={eventName:"scroll",options:{capture:!0,passive:!1,once:!0},fn:function flushDropAnimation(){"DROP_ANIMATING"===store.getState().phase&&store.dispatch({type:"DROP_ANIMATION_FINISHED",payload:null})}};frameId=requestAnimationFrame(()=>{frameId=null,unbind=bindEvents(window,[binding])})}};var autoScroll=autoScroller=>store=>next=>action=>{if((action=>guard(action,"DROP_COMPLETE")||guard(action,"DROP_ANIMATE")||guard(action,"FLUSH"))(action))return autoScroller.stop(),void next(action);if(guard(action,"INITIAL_PUBLISH")){next(action);const state=store.getState();return"DRAGGING"!==state.phase&&dnd_esm_invariant(),void autoScroller.start(state)}next(action),autoScroller.scroll(store.getState())};const pendingDrop=store=>next=>action=>{if(next(action),!guard(action,"PUBLISH_WHILE_DRAGGING"))return;const postActionState=store.getState();"DROP_PENDING"===postActionState.phase&&(postActionState.isWaiting||store.dispatch(drop({reason:postActionState.reason})))},composeEnhancers=compose;var dnd_esm_createStore=({dimensionMarshal,focusMarshal,styleMarshal,getResponders,announce,autoScroller})=>{return createStore(reducer,composeEnhancers(function applyMiddleware(...middlewares){return createStore2=>(reducer,preloadedState)=>{const store=createStore2(reducer,preloadedState);let dispatch=()=>{throw new Error(formatProdErrorMessage(15))};const middlewareAPI={getState:store.getState,dispatch:(action,...args)=>dispatch(action,...args)},chain=middlewares.map(middleware=>middleware(middlewareAPI));return dispatch=compose(...chain)(store.dispatch),{...store,dispatch}}}((marshal=styleMarshal,()=>next=>action=>{guard(action,"INITIAL_PUBLISH")&&marshal.dragging(),guard(action,"DROP_ANIMATE")&&marshal.dropping(action.payload.completed.result.reason),(guard(action,"FLUSH")||guard(action,"DROP_COMPLETE"))&&marshal.resting(),next(action)}),(marshal=>()=>next=>action=>{(guard(action,"DROP_COMPLETE")||guard(action,"FLUSH")||guard(action,"DROP_ANIMATE"))&&marshal.stopPublishing(),next(action)})(dimensionMarshal),(marshal=>({getState,dispatch})=>next=>action=>{if(!guard(action,"LIFT"))return void next(action);const{id,clientSelection,movementMode}=action.payload,initial=getState();"DROP_ANIMATING"===initial.phase&&dispatch(completeDrop({completed:initial.completed})),"IDLE"!==getState().phase&&dnd_esm_invariant(),dispatch(flush()),dispatch({type:"BEFORE_INITIAL_CAPTURE",payload:{draggableId:id,movementMode}});const request={draggableId:id,scrollOptions:{shouldPublishImmediately:"SNAP"===movementMode}},{critical,dimensions,viewport}=marshal.startPublishing(request);dispatch({type:"INITIAL_PUBLISH",payload:{critical,dimensions,clientSelection,movementMode,viewport}})})(dimensionMarshal),dropMiddleware,dropAnimationFinishMiddleware,dropAnimationFlushOnScrollMiddleware,pendingDrop,autoScroll(autoScroller),scrollListener,(marshal=>{let isWatching=!1;return()=>next=>action=>{if(guard(action,"INITIAL_PUBLISH"))return isWatching=!0,marshal.tryRecordFocus(action.payload.critical.draggable.id),next(action),void marshal.tryRestoreFocusRecorded();if(next(action),isWatching){if(guard(action,"FLUSH"))return isWatching=!1,void marshal.tryRestoreFocusRecorded();if(guard(action,"DROP_COMPLETE")){isWatching=!1;const result=action.payload.completed.result;result.combine&&marshal.tryShiftRecord(result.draggableId,result.combine.draggableId),marshal.tryRestoreFocusRecorded()}}}})(focusMarshal),responders(getResponders,announce))));var marshal};var getMaxScroll=({scrollHeight,scrollWidth,height,width})=>{const maxScroll=subtract({x:scrollWidth,y:scrollHeight},{x:width,y:height});return{x:Math.max(0,maxScroll.x),y:Math.max(0,maxScroll.y)}},getDocumentElement=()=>{const doc=document.documentElement;return doc||dnd_esm_invariant(),doc},getMaxWindowScroll=()=>{const doc=getDocumentElement();return getMaxScroll({scrollHeight:doc.scrollHeight,scrollWidth:doc.scrollWidth,width:doc.clientWidth,height:doc.clientHeight})},getInitialPublish=({critical,scrollOptions,registry})=>{start();const viewport=(()=>{const scroll=dnd_esm_getWindowScroll(),maxScroll=getMaxWindowScroll(),top=scroll.y,left=scroll.x,doc=getDocumentElement(),width=doc.clientWidth,height=doc.clientHeight;return{frame:getRect({top,left,right:left+width,bottom:top+height}),scroll:{initial:scroll,current:scroll,max:maxScroll,diff:{value:origin,displacement:origin}}}})(),windowScroll=viewport.scroll.current,home=critical.droppable,droppables=registry.droppable.getAllByType(home.type).map(entry=>entry.callbacks.getDimensionAndWatchScroll(windowScroll,scrollOptions)),draggables=registry.draggable.getAllByType(critical.draggable.type).map(entry=>entry.getDimension(windowScroll)),dimensions={draggables:toDraggableMap(draggables),droppables:toDroppableMap(droppables)};finish();return{dimensions,critical,viewport}};function shouldPublishUpdate(registry,dragging,entry){if(entry.descriptor.id===dragging.id)return!1;if(entry.descriptor.type!==dragging.type)return!1;return"virtual"===registry.droppable.getById(entry.descriptor.droppableId).descriptor.mode}var createDimensionMarshal=(registry,callbacks)=>{let collection=null;const publisher=function createPublisher({registry,callbacks}){let staging={additions:{},removals:{},modified:{}},frameId=null;const collect=()=>{frameId||(callbacks.collectionStarting(),frameId=requestAnimationFrame(()=>{frameId=null,start();const{additions,removals,modified}=staging,added=Object.keys(additions).map(id=>registry.draggable.getById(id).getDimension(origin)).sort((a,b)=>a.descriptor.index-b.descriptor.index),updated=Object.keys(modified).map(id=>({droppableId:id,scroll:registry.droppable.getById(id).callbacks.getScrollWhileDragging()})),result={additions:added,removals:Object.keys(removals),modified:updated};staging={additions:{},removals:{},modified:{}},finish(),callbacks.publish(result)}))};return{add:entry=>{const id=entry.descriptor.id;staging.additions[id]=entry,staging.modified[entry.descriptor.droppableId]=!0,staging.removals[id]&&delete staging.removals[id],collect()},remove:entry=>{const descriptor=entry.descriptor;staging.removals[descriptor.id]=!0,staging.modified[descriptor.droppableId]=!0,staging.additions[descriptor.id]&&delete staging.additions[descriptor.id],collect()},stop:()=>{frameId&&(cancelAnimationFrame(frameId),frameId=null,staging={additions:{},removals:{},modified:{}})}}}({callbacks:{publish:callbacks.publishWhileDragging,collectionStarting:callbacks.collectionStarting},registry}),subscriber=event=>{collection||dnd_esm_invariant();const dragging=collection.critical.draggable;"ADDITION"===event.type&&shouldPublishUpdate(registry,dragging,event.value)&&publisher.add(event.value),"REMOVAL"===event.type&&shouldPublishUpdate(registry,dragging,event.value)&&publisher.remove(event.value)},marshal={updateDroppableIsEnabled:(id,isEnabled)=>{registry.droppable.exists(id)||dnd_esm_invariant(),collection&&callbacks.updateDroppableIsEnabled({id,isEnabled})},updateDroppableIsCombineEnabled:(id,isCombineEnabled)=>{collection&&(registry.droppable.exists(id)||dnd_esm_invariant(),callbacks.updateDroppableIsCombineEnabled({id,isCombineEnabled}))},scrollDroppable:(id,change)=>{collection&&registry.droppable.getById(id).callbacks.scroll(change)},updateDroppableScroll:(id,newScroll)=>{collection&&(registry.droppable.exists(id)||dnd_esm_invariant(),callbacks.updateDroppableScroll({id,newScroll}))},startPublishing:request=>{collection&&dnd_esm_invariant();const entry=registry.draggable.getById(request.draggableId),home=registry.droppable.getById(entry.descriptor.droppableId),critical={draggable:entry.descriptor,droppable:home.descriptor},unsubscribe=registry.subscribe(subscriber);return collection={critical,unsubscribe},getInitialPublish({critical,registry,scrollOptions:request.scrollOptions})},stopPublishing:()=>{if(!collection)return;publisher.stop();const home=collection.critical.droppable;registry.droppable.getAllByType(home.type).forEach(entry=>entry.callbacks.dragStopped()),collection.unsubscribe(),collection=null}};return marshal},canStartDrag=(state,id)=>"IDLE"===state.phase||"DROP_ANIMATING"===state.phase&&(state.completed.result.draggableId!==id&&"DROP"===state.completed.result.reason),scrollWindow=change=>{window.scrollBy(change.x,change.y)};const getScrollableDroppables=memoizeOne(droppables=>toDroppableList(droppables).filter(droppable=>!!droppable.isEnabled&&!!droppable.frame));var getBestScrollableDroppable=({center,destination,droppables})=>{if(destination){const dimension=droppables[destination];return dimension.frame?dimension:null}const dimension=((target,droppables)=>{const maybe=getScrollableDroppables(droppables).find(droppable=>(droppable.frame||dnd_esm_invariant(),isPositionInFrame(droppable.frame.pageMarginBox)(target)))||null;return maybe})(center,droppables);return dimension};const defaultAutoScrollerOptions={startFromPercentage:.25,maxScrollAtPercentage:.05,maxPixelScroll:28,ease:percentage=>percentage**2,durationDampening:{stopDampeningAt:1200,accelerateAt:360},disabled:!1};var getPercentage=({startOfRange,endOfRange,current})=>{const range=endOfRange-startOfRange;if(0===range)return 0;return(current-startOfRange)/range},getValue=({distanceToEdge,thresholds,dragStartTime,shouldUseTimeDampening,getAutoScrollerOptions})=>{const scroll=((distanceToEdge,thresholds,getAutoScrollerOptions=()=>defaultAutoScrollerOptions)=>{const autoScrollerOptions=getAutoScrollerOptions();if(distanceToEdge>thresholds.startScrollingFrom)return 0;if(distanceToEdge<=thresholds.maxScrollValueAt)return autoScrollerOptions.maxPixelScroll;if(distanceToEdge===thresholds.startScrollingFrom)return 1;const percentageFromStartScrollingFrom=1-getPercentage({startOfRange:thresholds.maxScrollValueAt,endOfRange:thresholds.startScrollingFrom,current:distanceToEdge}),scroll=autoScrollerOptions.maxPixelScroll*autoScrollerOptions.ease(percentageFromStartScrollingFrom);return Math.ceil(scroll)})(distanceToEdge,thresholds,getAutoScrollerOptions);return 0===scroll?0:shouldUseTimeDampening?Math.max(((proposedScroll,dragStartTime,getAutoScrollerOptions)=>{const autoScrollerOptions=getAutoScrollerOptions(),accelerateAt=autoScrollerOptions.durationDampening.accelerateAt,stopAt=autoScrollerOptions.durationDampening.stopDampeningAt,startOfRange=dragStartTime,endOfRange=stopAt,runTime=Date.now()-startOfRange;if(runTime>=stopAt)return proposedScroll;if(runTime<accelerateAt)return 1;const betweenAccelerateAtAndStopAtPercentage=getPercentage({startOfRange:accelerateAt,endOfRange,current:runTime}),scroll=proposedScroll*autoScrollerOptions.ease(betweenAccelerateAtAndStopAtPercentage);return Math.ceil(scroll)})(scroll,dragStartTime,getAutoScrollerOptions),1):scroll},getScrollOnAxis=({container,distanceToEdges,dragStartTime,axis,shouldUseTimeDampening,getAutoScrollerOptions})=>{const thresholds=((container,axis,getAutoScrollerOptions=()=>defaultAutoScrollerOptions)=>{const autoScrollerOptions=getAutoScrollerOptions();return{startScrollingFrom:container[axis.size]*autoScrollerOptions.startFromPercentage,maxScrollValueAt:container[axis.size]*autoScrollerOptions.maxScrollAtPercentage}})(container,axis,getAutoScrollerOptions);return distanceToEdges[axis.end]<distanceToEdges[axis.start]?getValue({distanceToEdge:distanceToEdges[axis.end],thresholds,dragStartTime,shouldUseTimeDampening,getAutoScrollerOptions}):-1*getValue({distanceToEdge:distanceToEdges[axis.start],thresholds,dragStartTime,shouldUseTimeDampening,getAutoScrollerOptions})};const clean=apply(value=>0===value?0:value);var getScroll$1=({dragStartTime,container,subject,center,shouldUseTimeDampening,getAutoScrollerOptions})=>{const distanceToEdges={top:center.y-container.top,right:container.right-center.x,bottom:container.bottom-center.y,left:center.x-container.left},y=getScrollOnAxis({container,distanceToEdges,dragStartTime,axis:vertical,shouldUseTimeDampening,getAutoScrollerOptions}),x=getScrollOnAxis({container,distanceToEdges,dragStartTime,axis:horizontal,shouldUseTimeDampening,getAutoScrollerOptions}),required=clean({x,y});if(isEqual$1(required,origin))return null;const limited=(({container,subject,proposedScroll})=>{const isTooBigVertically=subject.height>container.height,isTooBigHorizontally=subject.width>container.width;return isTooBigHorizontally||isTooBigVertically?isTooBigHorizontally&&isTooBigVertically?null:{x:isTooBigHorizontally?0:proposedScroll.x,y:isTooBigVertically?0:proposedScroll.y}:proposedScroll})({container,subject,proposedScroll:required});return limited?isEqual$1(limited,origin)?null:limited:null};const smallestSigned=apply(value=>0===value?0:value>0?1:-1),getOverlap=(()=>{const getRemainder=(target,max)=>target<0?target:target>max?target-max:0;return({current,max,change})=>{const targetScroll=add(current,change),overlap={x:getRemainder(targetScroll.x,max.x),y:getRemainder(targetScroll.y,max.y)};return isEqual$1(overlap,origin)?null:overlap}})(),canPartiallyScroll=({max:rawMax,current,change})=>{const max={x:Math.max(current.x,rawMax.x),y:Math.max(current.y,rawMax.y)},smallestChange=smallestSigned(change),overlap=getOverlap({max,current,change:smallestChange});return!overlap||(0!==smallestChange.x&&0===overlap.x||0!==smallestChange.y&&0===overlap.y)},canScrollWindow=(viewport,change)=>canPartiallyScroll({current:viewport.scroll.current,max:viewport.scroll.max,change}),canScrollDroppable=(droppable,change)=>{const frame=droppable.frame;return!!frame&&canPartiallyScroll({current:frame.scroll.current,max:frame.scroll.max,change})};var dnd_esm_scroll=({state,dragStartTime,shouldUseTimeDampening,scrollWindow,scrollDroppable,getAutoScrollerOptions})=>{const center=state.current.page.borderBoxCenter,subject=state.dimensions.draggables[state.critical.draggable.id].page.marginBox;if(state.isWindowScrollAllowed){const change=(({viewport,subject,center,dragStartTime,shouldUseTimeDampening,getAutoScrollerOptions})=>{const scroll=getScroll$1({dragStartTime,container:viewport.frame,subject,center,shouldUseTimeDampening,getAutoScrollerOptions});return scroll&&canScrollWindow(viewport,scroll)?scroll:null})({dragStartTime,viewport:state.viewport,subject,center,shouldUseTimeDampening,getAutoScrollerOptions});if(change)return void scrollWindow(change)}const droppable=getBestScrollableDroppable({center,destination:whatIsDraggedOver(state.impact),droppables:state.dimensions.droppables});if(!droppable)return;const change=(({droppable,subject,center,dragStartTime,shouldUseTimeDampening,getAutoScrollerOptions})=>{const frame=droppable.frame;if(!frame)return null;const scroll=getScroll$1({dragStartTime,container:frame.pageMarginBox,subject,center,shouldUseTimeDampening,getAutoScrollerOptions});return scroll&&canScrollDroppable(droppable,scroll)?scroll:null})({dragStartTime,droppable,subject,center,shouldUseTimeDampening,getAutoScrollerOptions});change&&scrollDroppable(droppable.descriptor.id,change)},createJumpScroller=({move,scrollDroppable,scrollWindow})=>{const scrollDroppableAsMuchAsItCan=(droppable,change)=>{if(!canScrollDroppable(droppable,change))return change;const overlap=((droppable,change)=>{const frame=droppable.frame;return frame&&canScrollDroppable(droppable,change)?getOverlap({current:frame.scroll.current,max:frame.scroll.max,change}):null})(droppable,change);if(!overlap)return scrollDroppable(droppable.descriptor.id,change),null;const whatTheDroppableCanScroll=subtract(change,overlap);scrollDroppable(droppable.descriptor.id,whatTheDroppableCanScroll);return subtract(change,whatTheDroppableCanScroll)},scrollWindowAsMuchAsItCan=(isWindowScrollAllowed,viewport,change)=>{if(!isWindowScrollAllowed)return change;if(!canScrollWindow(viewport,change))return change;const overlap=((viewport,change)=>{if(!canScrollWindow(viewport,change))return null;const max=viewport.scroll.max,current=viewport.scroll.current;return getOverlap({current,max,change})})(viewport,change);if(!overlap)return scrollWindow(change),null;const whatTheWindowCanScroll=subtract(change,overlap);scrollWindow(whatTheWindowCanScroll);return subtract(change,whatTheWindowCanScroll)};return state=>{const request=state.scrollJumpRequest;if(!request)return;const destination=whatIsDraggedOver(state.impact);destination||dnd_esm_invariant();const droppableRemainder=scrollDroppableAsMuchAsItCan(state.dimensions.droppables[destination],request);if(!droppableRemainder)return;const viewport=state.viewport,windowRemainder=scrollWindowAsMuchAsItCan(state.isWindowScrollAllowed,viewport,droppableRemainder);windowRemainder&&((state,offset)=>{const client=add(state.current.client.selection,offset);move({client})})(state,windowRemainder)}},createAutoScroller=({scrollDroppable,scrollWindow,move,getAutoScrollerOptions})=>{const fluidScroller=(({scrollWindow,scrollDroppable,getAutoScrollerOptions=()=>defaultAutoScrollerOptions})=>{const scheduleWindowScroll=raf_schd_esm(scrollWindow),scheduleDroppableScroll=raf_schd_esm(scrollDroppable);let dragging=null;const tryScroll=state=>{dragging||dnd_esm_invariant();const{shouldUseTimeDampening,dragStartTime}=dragging;dnd_esm_scroll({state,scrollWindow:scheduleWindowScroll,scrollDroppable:scheduleDroppableScroll,dragStartTime,shouldUseTimeDampening,getAutoScrollerOptions})};return{start:state=>{start(),dragging&&dnd_esm_invariant();const dragStartTime=Date.now();let wasScrollNeeded=!1;const fakeScrollCallback=()=>{wasScrollNeeded=!0};dnd_esm_scroll({state,dragStartTime:0,shouldUseTimeDampening:!1,scrollWindow:fakeScrollCallback,scrollDroppable:fakeScrollCallback,getAutoScrollerOptions}),dragging={dragStartTime,shouldUseTimeDampening:wasScrollNeeded},finish(),wasScrollNeeded&&tryScroll(state)},stop:()=>{dragging&&(scheduleWindowScroll.cancel(),scheduleDroppableScroll.cancel(),dragging=null)},scroll:tryScroll}})({scrollWindow,scrollDroppable,getAutoScrollerOptions}),jumpScroll=createJumpScroller({move,scrollWindow,scrollDroppable});return{scroll:state=>{getAutoScrollerOptions().disabled||"DRAGGING"!==state.phase||("FLUID"!==state.movementMode?state.scrollJumpRequest&&jumpScroll(state):fluidScroller.scroll(state))},start:fluidScroller.start,stop:fluidScroller.stop}};const dnd_esm_prefix="data-rfd",dragHandle=(()=>{const base=`${dnd_esm_prefix}-drag-handle`;return{base,draggableId:`${base}-draggable-id`,contextId:`${base}-context-id`}})(),draggable=(()=>{const base=`${dnd_esm_prefix}-draggable`;return{base,contextId:`${base}-context-id`,id:`${base}-id`}})(),droppable=(()=>{const base=`${dnd_esm_prefix}-droppable`;return{base,contextId:`${base}-context-id`,id:`${base}-id`}})(),scrollContainer={contextId:`${dnd_esm_prefix}-scroll-container-context-id`},getStyles=(rules,property)=>rules.map(rule=>{const value=rule.styles[property];return value?`${rule.selector} { ${value} }`:""}).join(" ");var getStyles$1=contextId=>{const getSelector=(context=contextId,attribute=>`[${attribute}="${context}"]`);var context;const dragHandle$1=(()=>{const grabCursor="\n      cursor: -webkit-grab;\n      cursor: grab;\n    ";return{selector:getSelector(dragHandle.contextId),styles:{always:"\n          -webkit-touch-callout: none;\n          -webkit-tap-highlight-color: rgba(0,0,0,0);\n          touch-action: manipulation;\n        ",resting:grabCursor,dragging:"pointer-events: none;",dropAnimating:grabCursor}}})(),rules=[(()=>{const transition=`\n      transition: ${transitions.outOfTheWay};\n    `;return{selector:getSelector(draggable.contextId),styles:{dragging:transition,dropAnimating:transition,userCancel:transition}}})(),dragHandle$1,{selector:getSelector(droppable.contextId),styles:{always:"overflow-anchor: none;"}},{selector:"body",styles:{dragging:"\n        cursor: grabbing;\n        cursor: -webkit-grabbing;\n        user-select: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        overflow-anchor: none;\n      "}}];return{always:getStyles(rules,"always"),resting:getStyles(rules,"resting"),dragging:getStyles(rules,"dragging"),dropAnimating:getStyles(rules,"dropAnimating"),userCancel:getStyles(rules,"userCancel")}};const dnd_esm_useIsomorphicLayoutEffect="undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?react.useLayoutEffect:react.useEffect,getHead=()=>{const head=document.querySelector("head");return head||dnd_esm_invariant(),head},createStyleEl=nonce=>{const el=document.createElement("style");return nonce&&el.setAttribute("nonce",nonce),el.type="text/css",el};function querySelectorAll(parentNode,selector){return Array.from(parentNode.querySelectorAll(selector))}var getWindowFromEl=el=>el&&el.ownerDocument&&el.ownerDocument.defaultView?el.ownerDocument.defaultView:window;function isHtmlElement(el){return el instanceof getWindowFromEl(el).HTMLElement}function findDragHandle(contextId,draggableId){const selector=`[${dragHandle.contextId}="${contextId}"]`,possible=querySelectorAll(document,selector);if(!possible.length)return null;const handle=possible.find(el=>el.getAttribute(dragHandle.draggableId)===draggableId);return handle&&isHtmlElement(handle)?handle:null}function createRegistry(){const entries={draggables:{},droppables:{}},subscribers=[];function notify(event){subscribers.length&&subscribers.forEach(cb=>cb(event))}function findDraggableById(id){return entries.draggables[id]||null}function findDroppableById(id){return entries.droppables[id]||null}return{draggable:{register:entry=>{entries.draggables[entry.descriptor.id]=entry,notify({type:"ADDITION",value:entry})},update:(entry,last)=>{const current=entries.draggables[last.descriptor.id];current&&current.uniqueId===entry.uniqueId&&(delete entries.draggables[last.descriptor.id],entries.draggables[entry.descriptor.id]=entry)},unregister:entry=>{const draggableId=entry.descriptor.id,current=findDraggableById(draggableId);current&&entry.uniqueId===current.uniqueId&&(delete entries.draggables[draggableId],entries.droppables[entry.descriptor.droppableId]&&notify({type:"REMOVAL",value:entry}))},getById:function getDraggableById(id){const entry=findDraggableById(id);return entry||dnd_esm_invariant(),entry},findById:findDraggableById,exists:id=>Boolean(findDraggableById(id)),getAllByType:type=>Object.values(entries.draggables).filter(entry=>entry.descriptor.type===type)},droppable:{register:entry=>{entries.droppables[entry.descriptor.id]=entry},unregister:entry=>{const current=findDroppableById(entry.descriptor.id);current&&entry.uniqueId===current.uniqueId&&delete entries.droppables[entry.descriptor.id]},getById:function getDroppableById(id){const entry=findDroppableById(id);return entry||dnd_esm_invariant(),entry},findById:findDroppableById,exists:id=>Boolean(findDroppableById(id)),getAllByType:type=>Object.values(entries.droppables).filter(entry=>entry.descriptor.type===type)},subscribe:function subscribe(cb){return subscribers.push(cb),function unsubscribe(){const index=subscribers.indexOf(cb);-1!==index&&subscribers.splice(index,1)}},clean:function clean(){entries.draggables={},entries.droppables={},subscribers.length=0}}}var StoreContext=react.createContext(null),getBodyElement=()=>{const body=document.body;return body||dnd_esm_invariant(),body};const visuallyHidden={position:"absolute",width:"1px",height:"1px",margin:"-1px",border:"0",padding:"0",overflow:"hidden",clip:"rect(0 0 0 0)","clip-path":"inset(100%)"},getId=contextId=>`rfd-announcement-${contextId}`;const defaults={separator:"::"};function useUniqueId(prefix,options=defaults){const id=react.useId();return useMemo(()=>`${prefix}${options.separator}${id}`,[options.separator,prefix,id])}var AppContext=react.createContext(null);function useDev(useHook){0}function useDevSetupWarning(fn,inputs){useDev()}function usePrevious(current){const ref=(0,react.useRef)(current);return(0,react.useEffect)(()=>{ref.current=current}),ref}function isDragging(state){return"IDLE"!==state.phase&&"DROP_ANIMATING"!==state.phase&&state.isDragging}const tab=9,enter=13,pageUp=33,pageDown=34,end=35,home=36,preventedKeys={[enter]:!0,[tab]:!0};var preventStandardKeyEvents=event=>{preventedKeys[event.keyCode]&&event.preventDefault()};const supportedEventName=(()=>{const base="visibilitychange";if("undefined"==typeof document)return base;return[base,`ms${base}`,`webkit${base}`,`moz${base}`,`o${base}`].find(eventName=>`on${eventName}`in document)||base})();const idle$1={type:"IDLE"};function getCaptureBindings({cancel,completed,getPhase,setPhase}){return[{eventName:"mousemove",fn:event=>{const{button,clientX,clientY}=event;if(0!==button)return;const point={x:clientX,y:clientY},phase=getPhase();if("DRAGGING"===phase.type)return event.preventDefault(),void phase.actions.move(point);"PENDING"!==phase.type&&dnd_esm_invariant();if(!function isSloppyClickThresholdExceeded(original,current){return Math.abs(current.x-original.x)>=5||Math.abs(current.y-original.y)>=5}(phase.point,point))return;event.preventDefault();const actions=phase.actions.fluidLift(point);setPhase({type:"DRAGGING",actions})}},{eventName:"mouseup",fn:event=>{const phase=getPhase();"DRAGGING"===phase.type?(event.preventDefault(),phase.actions.drop({shouldBlockNextClick:!0}),completed()):cancel()}},{eventName:"mousedown",fn:event=>{"DRAGGING"===getPhase().type&&event.preventDefault(),cancel()}},{eventName:"keydown",fn:event=>{if("PENDING"!==getPhase().type)return 27===event.keyCode?(event.preventDefault(),void cancel()):void preventStandardKeyEvents(event);cancel()}},{eventName:"resize",fn:cancel},{eventName:"scroll",options:{passive:!0,capture:!1},fn:()=>{"PENDING"===getPhase().type&&cancel()}},{eventName:"webkitmouseforcedown",fn:event=>{const phase=getPhase();"IDLE"===phase.type&&dnd_esm_invariant(),phase.actions.shouldRespectForcePress()?cancel():event.preventDefault()}},{eventName:supportedEventName,fn:cancel}]}function noop$1(){}const scrollJumpKeys={[pageDown]:!0,[pageUp]:!0,[home]:!0,[end]:!0};function getDraggingBindings(actions,stop){function cancel(){stop(),actions.cancel()}return[{eventName:"keydown",fn:event=>27===event.keyCode?(event.preventDefault(),void cancel()):32===event.keyCode?(event.preventDefault(),void function drop(){stop(),actions.drop()}()):40===event.keyCode?(event.preventDefault(),void actions.moveDown()):38===event.keyCode?(event.preventDefault(),void actions.moveUp()):39===event.keyCode?(event.preventDefault(),void actions.moveRight()):37===event.keyCode?(event.preventDefault(),void actions.moveLeft()):void(scrollJumpKeys[event.keyCode]?event.preventDefault():preventStandardKeyEvents(event))},{eventName:"mousedown",fn:cancel},{eventName:"mouseup",fn:cancel},{eventName:"click",fn:cancel},{eventName:"touchstart",fn:cancel},{eventName:"resize",fn:cancel},{eventName:"wheel",fn:cancel,options:{passive:!0}},{eventName:supportedEventName,fn:cancel}]}const idle={type:"IDLE"};const interactiveTagNames=["input","button","textarea","select","option","optgroup","video","audio"];function isAnInteractiveElement(parent,current){if(null==current)return!1;if(interactiveTagNames.includes(current.tagName.toLowerCase()))return!0;const attribute=current.getAttribute("contenteditable");return"true"===attribute||""===attribute||current!==parent&&isAnInteractiveElement(parent,current.parentElement)}function isEventInInteractiveElement(draggable,event){const target=event.target;return!!isHtmlElement(target)&&isAnInteractiveElement(draggable,target)}var getBorderBoxCenterPosition=el=>getRect(el.getBoundingClientRect()).center;const supportedMatchesName=(()=>{if("undefined"==typeof document)return"matches";return["matches","msMatchesSelector","webkitMatchesSelector"].find(name=>name in Element.prototype)||"matches"})();function closestPonyfill(el,selector){return null==el?null:el[supportedMatchesName](selector)?el:closestPonyfill(el.parentElement,selector)}function closest(el,selector){return el.closest?el.closest(selector):closestPonyfill(el,selector)}function findClosestDragHandleFromEvent(contextId,event){const target=event.target;if(!function isElement(el){return el instanceof getWindowFromEl(el).Element}(target))return null;const selector=function getSelector(contextId){return`[${dragHandle.contextId}="${contextId}"]`}(contextId),handle=closest(target,selector);return handle&&isHtmlElement(handle)?handle:null}function preventDefault(event){event.preventDefault()}function isActive({expected,phase,isLockActive,shouldWarn}){return!!isLockActive()&&expected===phase}function canStart({lockAPI,store,registry,draggableId}){if(lockAPI.isClaimed())return!1;const entry=registry.draggable.findById(draggableId);return!!entry&&(!!entry.options.isEnabled&&!!canStartDrag(store.getState(),draggableId))}function tryStart({lockAPI,contextId,store,registry,draggableId,forceSensorStop,sourceEvent}){if(!canStart({lockAPI,store,registry,draggableId}))return null;const entry=registry.draggable.getById(draggableId),el=function findDraggable(contextId,draggableId){const selector=`[${draggable.contextId}="${contextId}"]`,draggable$1=querySelectorAll(document,selector).find(el=>el.getAttribute(draggable.id)===draggableId);return draggable$1&&isHtmlElement(draggable$1)?draggable$1:null}(contextId,entry.descriptor.id);if(!el)return null;if(sourceEvent&&!entry.options.canDragInteractiveElements&&isEventInInteractiveElement(el,sourceEvent))return null;const lock=lockAPI.claim(forceSensorStop||noop$2);let phase="PRE_DRAG";function getShouldRespectForcePress(){return entry.options.shouldRespectForcePress}function isLockActive(){return lockAPI.isActive(lock)}const tryDispatchWhenDragging=function tryDispatch(expected,getAction){isActive({expected,phase,isLockActive,shouldWarn:!0})&&store.dispatch(getAction())}.bind(null,"DRAGGING");function lift(args){function completed(){lockAPI.release(),phase="COMPLETED"}function finish(reason,options={shouldBlockNextClick:!1}){if(args.cleanup(),options.shouldBlockNextClick){const unbind=bindEvents(window,[{eventName:"click",fn:preventDefault,options:{once:!0,passive:!1,capture:!0}}]);setTimeout(unbind)}completed(),store.dispatch(drop({reason}))}return"PRE_DRAG"!==phase&&(completed(),dnd_esm_invariant()),store.dispatch(lift$1(args.liftActionArgs)),phase="DRAGGING",{isActive:()=>isActive({expected:"DRAGGING",phase,isLockActive,shouldWarn:!1}),shouldRespectForcePress:getShouldRespectForcePress,drop:options=>finish("DROP",options),cancel:options=>finish("CANCEL",options),...args.actions}}return{isActive:()=>isActive({expected:"PRE_DRAG",phase,isLockActive,shouldWarn:!1}),shouldRespectForcePress:getShouldRespectForcePress,fluidLift:function fluidLift(clientSelection){const move$1=raf_schd_esm(client=>{tryDispatchWhenDragging(()=>move({client}))});return{...lift({liftActionArgs:{id:draggableId,clientSelection,movementMode:"FLUID"},cleanup:()=>move$1.cancel(),actions:{move:move$1}}),move:move$1}},snapLift:function snapLift(){const actions={moveUp:()=>tryDispatchWhenDragging(moveUp),moveRight:()=>tryDispatchWhenDragging(moveRight),moveDown:()=>tryDispatchWhenDragging(moveDown),moveLeft:()=>tryDispatchWhenDragging(moveLeft)};return lift({liftActionArgs:{id:draggableId,clientSelection:getBorderBoxCenterPosition(el),movementMode:"SNAP"},cleanup:noop$2,actions})},abort:function abortPreDrag(){isActive({expected:"PRE_DRAG",phase,isLockActive,shouldWarn:!0})&&lockAPI.release()}}}const defaultSensors=[function useMouseSensor(api){const phaseRef=(0,react.useRef)(idle$1),unbindEventsRef=(0,react.useRef)(noop$2),startCaptureBinding=useMemo(()=>({eventName:"mousedown",fn:function onMouseDown(event){if(event.defaultPrevented)return;if(0!==event.button)return;if(event.ctrlKey||event.metaKey||event.shiftKey||event.altKey)return;const draggableId=api.findClosestDraggableId(event);if(!draggableId)return;const actions=api.tryGetLock(draggableId,stop,{sourceEvent:event});if(!actions)return;event.preventDefault();const point={x:event.clientX,y:event.clientY};unbindEventsRef.current(),startPendingDrag(actions,point)}}),[api]),preventForcePressBinding=useMemo(()=>({eventName:"webkitmouseforcewillbegin",fn:event=>{if(event.defaultPrevented)return;const id=api.findClosestDraggableId(event);if(!id)return;const options=api.findOptionsForDraggable(id);options&&(options.shouldRespectForcePress||api.canGetLock(id)&&event.preventDefault())}}),[api]),listenForCapture=useCallback(function listenForCapture(){unbindEventsRef.current=bindEvents(window,[preventForcePressBinding,startCaptureBinding],{passive:!1,capture:!0})},[preventForcePressBinding,startCaptureBinding]),stop=useCallback(()=>{"IDLE"!==phaseRef.current.type&&(phaseRef.current=idle$1,unbindEventsRef.current(),listenForCapture())},[listenForCapture]),cancel=useCallback(()=>{const phase=phaseRef.current;stop(),"DRAGGING"===phase.type&&phase.actions.cancel({shouldBlockNextClick:!0}),"PENDING"===phase.type&&phase.actions.abort()},[stop]),bindCapturingEvents=useCallback(function bindCapturingEvents(){const bindings=getCaptureBindings({cancel,completed:stop,getPhase:()=>phaseRef.current,setPhase:phase=>{phaseRef.current=phase}});unbindEventsRef.current=bindEvents(window,bindings,{capture:!0,passive:!1})},[cancel,stop]),startPendingDrag=useCallback(function startPendingDrag(actions,point){"IDLE"!==phaseRef.current.type&&dnd_esm_invariant(),phaseRef.current={type:"PENDING",point,actions},bindCapturingEvents()},[bindCapturingEvents]);dnd_esm_useIsomorphicLayoutEffect(function mount(){return listenForCapture(),function unmount(){unbindEventsRef.current()}},[listenForCapture])},function useKeyboardSensor(api){const unbindEventsRef=(0,react.useRef)(noop$1),startCaptureBinding=useMemo(()=>({eventName:"keydown",fn:function onKeyDown(event){if(event.defaultPrevented)return;if(32!==event.keyCode)return;const draggableId=api.findClosestDraggableId(event);if(!draggableId)return;const preDrag=api.tryGetLock(draggableId,stop,{sourceEvent:event});if(!preDrag)return;event.preventDefault();let isCapturing=!0;const actions=preDrag.snapLift();function stop(){isCapturing||dnd_esm_invariant(),isCapturing=!1,unbindEventsRef.current(),listenForCapture()}unbindEventsRef.current(),unbindEventsRef.current=bindEvents(window,getDraggingBindings(actions,stop),{capture:!0,passive:!1})}}),[api]),listenForCapture=useCallback(function tryStartCapture(){unbindEventsRef.current=bindEvents(window,[startCaptureBinding],{passive:!1,capture:!0})},[startCaptureBinding]);dnd_esm_useIsomorphicLayoutEffect(function mount(){return listenForCapture(),function unmount(){unbindEventsRef.current()}},[listenForCapture])},function useTouchSensor(api){const phaseRef=(0,react.useRef)(idle),unbindEventsRef=(0,react.useRef)(noop$2),getPhase=useCallback(function getPhase(){return phaseRef.current},[]),setPhase=useCallback(function setPhase(phase){phaseRef.current=phase},[]),startCaptureBinding=useMemo(()=>({eventName:"touchstart",fn:function onTouchStart(event){if(event.defaultPrevented)return;const draggableId=api.findClosestDraggableId(event);if(!draggableId)return;const actions=api.tryGetLock(draggableId,stop,{sourceEvent:event});if(!actions)return;const touch=event.touches[0],{clientX,clientY}=touch,point={x:clientX,y:clientY};unbindEventsRef.current(),startPendingDrag(actions,point)}}),[api]),listenForCapture=useCallback(function listenForCapture(){unbindEventsRef.current=bindEvents(window,[startCaptureBinding],{capture:!0,passive:!1})},[startCaptureBinding]),stop=useCallback(()=>{const current=phaseRef.current;"IDLE"!==current.type&&("PENDING"===current.type&&clearTimeout(current.longPressTimerId),setPhase(idle),unbindEventsRef.current(),listenForCapture())},[listenForCapture,setPhase]),cancel=useCallback(()=>{const phase=phaseRef.current;stop(),"DRAGGING"===phase.type&&phase.actions.cancel({shouldBlockNextClick:!0}),"PENDING"===phase.type&&phase.actions.abort()},[stop]),bindCapturingEvents=useCallback(function bindCapturingEvents(){const options={capture:!0,passive:!1},args={cancel,completed:stop,getPhase},unbindTarget=bindEvents(window,function getHandleBindings({cancel,completed,getPhase}){return[{eventName:"touchmove",options:{capture:!1},fn:event=>{const phase=getPhase();if("DRAGGING"!==phase.type)return void cancel();phase.hasMoved=!0;const{clientX,clientY}=event.touches[0],point={x:clientX,y:clientY};event.preventDefault(),phase.actions.move(point)}},{eventName:"touchend",fn:event=>{const phase=getPhase();"DRAGGING"===phase.type?(event.preventDefault(),phase.actions.drop({shouldBlockNextClick:!0}),completed()):cancel()}},{eventName:"touchcancel",fn:event=>{"DRAGGING"===getPhase().type?(event.preventDefault(),cancel()):cancel()}},{eventName:"touchforcechange",fn:event=>{const phase=getPhase();"IDLE"===phase.type&&dnd_esm_invariant();const touch=event.touches[0];if(!touch)return;if(!(touch.force>=.15))return;const shouldRespect=phase.actions.shouldRespectForcePress();if("PENDING"!==phase.type)return shouldRespect?phase.hasMoved?void event.preventDefault():void cancel():void event.preventDefault();shouldRespect&&cancel()}},{eventName:supportedEventName,fn:cancel}]}(args),options),unbindWindow=bindEvents(window,function getWindowBindings({cancel,getPhase}){return[{eventName:"orientationchange",fn:cancel},{eventName:"resize",fn:cancel},{eventName:"contextmenu",fn:event=>{event.preventDefault()}},{eventName:"keydown",fn:event=>{"DRAGGING"===getPhase().type?(27===event.keyCode&&event.preventDefault(),cancel()):cancel()}},{eventName:supportedEventName,fn:cancel}]}(args),options);unbindEventsRef.current=function unbindAll(){unbindTarget(),unbindWindow()}},[cancel,getPhase,stop]),startDragging=useCallback(function startDragging(){const phase=getPhase();"PENDING"!==phase.type&&dnd_esm_invariant();const actions=phase.actions.fluidLift(phase.point);setPhase({type:"DRAGGING",actions,hasMoved:!1})},[getPhase,setPhase]),startPendingDrag=useCallback(function startPendingDrag(actions,point){"IDLE"!==getPhase().type&&dnd_esm_invariant();const longPressTimerId=setTimeout(startDragging,120);setPhase({type:"PENDING",point,actions,longPressTimerId}),bindCapturingEvents()},[bindCapturingEvents,getPhase,setPhase,startDragging]);dnd_esm_useIsomorphicLayoutEffect(function mount(){return listenForCapture(),function unmount(){unbindEventsRef.current();const phase=getPhase();"PENDING"===phase.type&&(clearTimeout(phase.longPressTimerId),setPhase(idle))}},[getPhase,listenForCapture,setPhase]),dnd_esm_useIsomorphicLayoutEffect(function webkitHack(){return bindEvents(window,[{eventName:"touchmove",fn:()=>{},options:{capture:!1,passive:!1}}])},[])}];function useSensorMarshal({contextId,store,registry,customSensors,enableDefaultSensors}){const useSensors=[...enableDefaultSensors?defaultSensors:[],...customSensors||[]],lockAPI=(0,react.useState)(()=>function create(){let lock=null;function release(){lock||dnd_esm_invariant(),lock=null}return{isClaimed:function isClaimed(){return Boolean(lock)},isActive:function isActive(value){return value===lock},claim:function claim(abandon){lock&&dnd_esm_invariant();const newLock={abandon};return lock=newLock,newLock},release,tryAbandon:function tryAbandon(){lock&&(lock.abandon(),release())}}}())[0],tryAbandonLock=useCallback(function tryAbandonLock(previous,current){isDragging(previous)&&!isDragging(current)&&lockAPI.tryAbandon()},[lockAPI]);dnd_esm_useIsomorphicLayoutEffect(function listenToStore(){let previous=store.getState();return store.subscribe(()=>{const current=store.getState();tryAbandonLock(previous,current),previous=current})},[lockAPI,store,tryAbandonLock]),dnd_esm_useIsomorphicLayoutEffect(()=>lockAPI.tryAbandon,[lockAPI.tryAbandon]);const canGetLock=useCallback(draggableId=>canStart({lockAPI,registry,store,draggableId}),[lockAPI,registry,store]),tryGetLock=useCallback((draggableId,forceStop,options)=>tryStart({lockAPI,registry,contextId,store,draggableId,forceSensorStop:forceStop||null,sourceEvent:options&&options.sourceEvent?options.sourceEvent:null}),[contextId,lockAPI,registry,store]),findClosestDraggableId=useCallback(event=>function tryGetClosestDraggableIdFromEvent(contextId,event){const handle=findClosestDragHandleFromEvent(contextId,event);return handle?handle.getAttribute(dragHandle.draggableId):null}(contextId,event),[contextId]),findOptionsForDraggable=useCallback(id=>{const entry=registry.draggable.findById(id);return entry?entry.options:null},[registry.draggable]),tryReleaseLock=useCallback(function tryReleaseLock(){lockAPI.isClaimed()&&(lockAPI.tryAbandon(),"IDLE"!==store.getState().phase&&store.dispatch(flush()))},[lockAPI,store]),isLockClaimed=useCallback(()=>lockAPI.isClaimed(),[lockAPI]),api=useMemo(()=>({canGetLock,tryGetLock,findClosestDraggableId,findOptionsForDraggable,tryReleaseLock,isLockClaimed}),[canGetLock,tryGetLock,findClosestDraggableId,findOptionsForDraggable,tryReleaseLock,isLockClaimed]);!function useValidateSensorHooks(sensorHooks){useDev()}();for(let i=0;i<useSensors.length;i++)useSensors[i](api)}const createResponders=props=>({onBeforeCapture:t=>{(0,react_dom.flushSync)(()=>{props.onBeforeCapture&&props.onBeforeCapture(t)})},onBeforeDragStart:props.onBeforeDragStart,onDragStart:props.onDragStart,onDragEnd:props.onDragEnd,onDragUpdate:props.onDragUpdate}),createAutoScrollerOptions=props=>({...defaultAutoScrollerOptions,...props.autoScrollerOptions,durationDampening:{...defaultAutoScrollerOptions.durationDampening,...props.autoScrollerOptions}});function getStore(lazyRef){return lazyRef.current||dnd_esm_invariant(),lazyRef.current}function App(props){const{contextId,setCallbacks,sensors,nonce,dragHandleUsageInstructions}=props,lazyStoreRef=(0,react.useRef)(null);!function useStartupValidation(){useDevSetupWarning()}();const lastPropsRef=usePrevious(props),getResponders=useCallback(()=>createResponders(lastPropsRef.current),[lastPropsRef]),getAutoScrollerOptions=useCallback(()=>createAutoScrollerOptions(lastPropsRef.current),[lastPropsRef]),announce=function useAnnouncer(contextId){const id=useMemo(()=>getId(contextId),[contextId]),ref=(0,react.useRef)(null);return(0,react.useEffect)(function setup(){const el=document.createElement("div");return ref.current=el,el.id=id,el.setAttribute("aria-live","assertive"),el.setAttribute("aria-atomic","true"),(0,esm_extends.A)(el.style,visuallyHidden),getBodyElement().appendChild(el),function cleanup(){setTimeout(function remove(){const body=getBodyElement();body.contains(el)&&body.removeChild(el),el===ref.current&&(ref.current=null)})}},[id]),useCallback(message=>{const el=ref.current;el&&(el.textContent=message)},[])}(contextId),dragHandleUsageInstructionsId=function useHiddenTextElement({contextId,text}){const uniqueId=useUniqueId("hidden-text",{separator:"-"}),id=useMemo(()=>function getElementId({contextId,uniqueId}){return`rfd-hidden-text-${contextId}-${uniqueId}`}({contextId,uniqueId}),[uniqueId,contextId]);return(0,react.useEffect)(function mount(){const el=document.createElement("div");return el.id=id,el.textContent=text,el.style.display="none",getBodyElement().appendChild(el),function unmount(){const body=getBodyElement();body.contains(el)&&body.removeChild(el)}},[id,text]),id}({contextId,text:dragHandleUsageInstructions}),styleMarshal=function useStyleMarshal(contextId,nonce){const styles=useMemo(()=>getStyles$1(contextId),[contextId]),alwaysRef=(0,react.useRef)(null),dynamicRef=(0,react.useRef)(null),setDynamicStyle=useCallback(memoizeOne(proposed=>{const el=dynamicRef.current;el||dnd_esm_invariant(),el.textContent=proposed}),[]),setAlwaysStyle=useCallback(proposed=>{const el=alwaysRef.current;el||dnd_esm_invariant(),el.textContent=proposed},[]);dnd_esm_useIsomorphicLayoutEffect(()=>{(alwaysRef.current||dynamicRef.current)&&dnd_esm_invariant();const always=createStyleEl(nonce),dynamic=createStyleEl(nonce);return alwaysRef.current=always,dynamicRef.current=dynamic,always.setAttribute(`${dnd_esm_prefix}-always`,contextId),dynamic.setAttribute(`${dnd_esm_prefix}-dynamic`,contextId),getHead().appendChild(always),getHead().appendChild(dynamic),setAlwaysStyle(styles.always),setDynamicStyle(styles.resting),()=>{const remove=ref=>{const current=ref.current;current||dnd_esm_invariant(),getHead().removeChild(current),ref.current=null};remove(alwaysRef),remove(dynamicRef)}},[nonce,setAlwaysStyle,setDynamicStyle,styles.always,styles.resting,contextId]);const dragging=useCallback(()=>setDynamicStyle(styles.dragging),[setDynamicStyle,styles.dragging]),dropping=useCallback(reason=>{setDynamicStyle("DROP"!==reason?styles.userCancel:styles.dropAnimating)},[setDynamicStyle,styles.dropAnimating,styles.userCancel]),resting=useCallback(()=>{dynamicRef.current&&setDynamicStyle(styles.resting)},[setDynamicStyle,styles.resting]);return useMemo(()=>({dragging,dropping,resting}),[dragging,dropping,resting])}(contextId,nonce),lazyDispatch=useCallback(action=>{getStore(lazyStoreRef).dispatch(action)},[]),marshalCallbacks=useMemo(()=>bindActionCreators({publishWhileDragging,updateDroppableScroll,updateDroppableIsEnabled,updateDroppableIsCombineEnabled,collectionStarting},lazyDispatch),[lazyDispatch]),registry=function useRegistry(){const registry=useMemo(createRegistry,[]);return(0,react.useEffect)(()=>function unmount(){registry.clean()},[registry]),registry}(),dimensionMarshal=useMemo(()=>createDimensionMarshal(registry,marshalCallbacks),[registry,marshalCallbacks]),autoScroller=useMemo(()=>createAutoScroller({scrollWindow,scrollDroppable:dimensionMarshal.scrollDroppable,getAutoScrollerOptions,...bindActionCreators({move},lazyDispatch)}),[dimensionMarshal.scrollDroppable,lazyDispatch,getAutoScrollerOptions]),focusMarshal=function useFocusMarshal(contextId){const entriesRef=(0,react.useRef)({}),recordRef=(0,react.useRef)(null),restoreFocusFrameRef=(0,react.useRef)(null),isMountedRef=(0,react.useRef)(!1),register=useCallback(function register(id,focus){const entry={id,focus};return entriesRef.current[id]=entry,function unregister(){const entries=entriesRef.current;entries[id]!==entry&&delete entries[id]}},[]),tryGiveFocus=useCallback(function tryGiveFocus(tryGiveFocusTo){const handle=findDragHandle(contextId,tryGiveFocusTo);handle&&handle!==document.activeElement&&handle.focus()},[contextId]),tryShiftRecord=useCallback(function tryShiftRecord(previous,redirectTo){recordRef.current===previous&&(recordRef.current=redirectTo)},[]),tryRestoreFocusRecorded=useCallback(function tryRestoreFocusRecorded(){restoreFocusFrameRef.current||isMountedRef.current&&(restoreFocusFrameRef.current=requestAnimationFrame(()=>{restoreFocusFrameRef.current=null;const record=recordRef.current;record&&tryGiveFocus(record)}))},[tryGiveFocus]),tryRecordFocus=useCallback(function tryRecordFocus(id){recordRef.current=null;const focused=document.activeElement;focused&&focused.getAttribute(dragHandle.draggableId)===id&&(recordRef.current=id)},[]);return dnd_esm_useIsomorphicLayoutEffect(()=>(isMountedRef.current=!0,function clearFrameOnUnmount(){isMountedRef.current=!1;const frameId=restoreFocusFrameRef.current;frameId&&cancelAnimationFrame(frameId)}),[]),useMemo(()=>({register,tryRecordFocus,tryRestoreFocusRecorded,tryShiftRecord}),[register,tryRecordFocus,tryRestoreFocusRecorded,tryShiftRecord])}(contextId),store=useMemo(()=>dnd_esm_createStore({announce,autoScroller,dimensionMarshal,focusMarshal,getResponders,styleMarshal}),[announce,autoScroller,dimensionMarshal,focusMarshal,getResponders,styleMarshal]);lazyStoreRef.current=store;const tryResetStore=useCallback(()=>{const current=getStore(lazyStoreRef);"IDLE"!==current.getState().phase&&current.dispatch(flush())},[]),isDragging=useCallback(()=>{const state=getStore(lazyStoreRef).getState();return"DROP_ANIMATING"===state.phase||"IDLE"!==state.phase&&state.isDragging},[]);setCallbacks(useMemo(()=>({isDragging,tryAbort:tryResetStore}),[isDragging,tryResetStore]));const getCanLift=useCallback(id=>canStartDrag(getStore(lazyStoreRef).getState(),id),[]),getIsMovementAllowed=useCallback(()=>isMovementAllowed(getStore(lazyStoreRef).getState()),[]),appContext=useMemo(()=>({marshal:dimensionMarshal,focus:focusMarshal,contextId,canLift:getCanLift,isMovementAllowed:getIsMovementAllowed,dragHandleUsageInstructionsId,registry}),[contextId,dimensionMarshal,dragHandleUsageInstructionsId,focusMarshal,getCanLift,getIsMovementAllowed,registry]);return useSensorMarshal({contextId,store,registry,customSensors:sensors||null,enableDefaultSensors:!1!==props.enableDefaultSensors}),(0,react.useEffect)(()=>tryResetStore,[tryResetStore]),react.createElement(AppContext.Provider,{value:appContext},react.createElement(Provider_default,{context:StoreContext,store},props.children))}function DragDropContext(props){const contextId=function useUniqueContextId(){return react.useId()}(),dragHandleUsageInstructions=props.dragHandleUsageInstructions||preset.dragHandleUsageInstructions;return react.createElement(ErrorBoundary,null,setCallbacks=>react.createElement(App,{nonce:props.nonce,contextId,setCallbacks,dragHandleUsageInstructions,enableDefaultSensors:props.enableDefaultSensors,sensors:props.sensors,onBeforeCapture:props.onBeforeCapture,onBeforeDragStart:props.onBeforeDragStart,onDragStart:props.onDragStart,onDragUpdate:props.onDragUpdate,onDragEnd:props.onDragEnd,autoScrollerOptions:props.autoScrollerOptions},props.children))}const zIndexOptions_dragging=5e3,zIndexOptions_dropAnimating=4500,getDraggingTransition=(shouldAnimateDragMovement,dropping)=>dropping?transitions.drop(dropping.duration):shouldAnimateDragMovement?transitions.snap:transitions.fluid,getDraggingOpacity=(isCombining,isDropAnimating)=>{if(isCombining)return isDropAnimating?combine_opacity.drop:combine_opacity.combining};function getStyle$1(mapped){return"DRAGGING"===mapped.type?function getDraggingStyle(dragging){const box=dragging.dimension.client,{offset,combineWith,dropping}=dragging,isCombining=Boolean(combineWith),shouldAnimate=(dragging=>null!=dragging.forceShouldAnimate?dragging.forceShouldAnimate:"SNAP"===dragging.mode)(dragging),isDropAnimating=Boolean(dropping),transform=isDropAnimating?transforms_drop(offset,isCombining):transforms_moveTo(offset);return{position:"fixed",top:box.marginBox.top,left:box.marginBox.left,boxSizing:"border-box",width:box.borderBox.width,height:box.borderBox.height,transition:getDraggingTransition(shouldAnimate,dropping),transform,opacity:getDraggingOpacity(isCombining,isDropAnimating),zIndex:isDropAnimating?zIndexOptions_dropAnimating:zIndexOptions_dragging,pointerEvents:"none"}}(mapped):function getSecondaryStyle(secondary){return{transform:transforms_moveTo(secondary.offset),transition:secondary.shouldAnimateDisplacement?void 0:"none"}}(mapped)}function useDraggablePublisher(args){const uniqueId=useUniqueId("draggable"),{descriptor,registry,getDraggableRef,canDragInteractiveElements,shouldRespectForcePress,isEnabled}=args,options=useMemo(()=>({canDragInteractiveElements,shouldRespectForcePress,isEnabled}),[canDragInteractiveElements,isEnabled,shouldRespectForcePress]),getDimension=useCallback(windowScroll=>{const el=getDraggableRef();return el||dnd_esm_invariant(),function getDimension$1(descriptor,el,windowScroll=origin){const computedStyles=window.getComputedStyle(el),borderBox=el.getBoundingClientRect(),client=calculateBox(borderBox,computedStyles),page=withScroll(client,windowScroll);return{descriptor,placeholder:{client,tagName:el.tagName.toLowerCase(),display:computedStyles.display},displaceBy:{x:client.marginBox.width,y:client.marginBox.height},client,page}}(descriptor,el,windowScroll)},[descriptor,getDraggableRef]),entry=useMemo(()=>({uniqueId,descriptor,options,getDimension}),[descriptor,getDimension,options,uniqueId]),publishedRef=(0,react.useRef)(entry),isFirstPublishRef=(0,react.useRef)(!0);dnd_esm_useIsomorphicLayoutEffect(()=>(registry.draggable.register(publishedRef.current),()=>registry.draggable.unregister(publishedRef.current)),[registry.draggable]),dnd_esm_useIsomorphicLayoutEffect(()=>{if(isFirstPublishRef.current)return void(isFirstPublishRef.current=!1);const last=publishedRef.current;publishedRef.current=entry,registry.draggable.update(entry,last)},[entry,registry.draggable])}var DroppableContext=react.createContext(null);function useRequiredContext(Context){const result=(0,react.useContext)(Context);return result||dnd_esm_invariant(),result}function preventHtml5Dnd(event){event.preventDefault()}var isStrictEqual=(a,b)=>a===b,whatIsDraggedOverFromResult=result=>{const{combine,destination}=result;return destination?destination.droppableId:combine?combine.droppableId:null};function getSecondarySnapshot(combineTargetFor=null){return{isDragging:!1,isDropAnimating:!1,isClone:!1,dropAnimation:null,mode:null,draggingOver:null,combineTargetFor,combineWith:null}}const atRest={mapped:{type:"SECONDARY",offset:origin,combineTargetFor:null,shouldAnimateDisplacement:!0,snapshot:getSecondarySnapshot(null)}};const ConnectedDraggable=connect_default(()=>{const draggingSelector=function getDraggableSelector(){const memoizedOffset=memoizeOne((x,y)=>({x,y})),getMemoizedSnapshot=memoizeOne((mode,isClone,draggingOver=null,combineWith=null,dropping=null)=>({isDragging:!0,isClone,isDropAnimating:Boolean(dropping),dropAnimation:dropping,mode,draggingOver,combineWith,combineTargetFor:null})),getMemoizedProps=memoizeOne((offset,mode,dimension,isClone,draggingOver=null,combineWith=null,forceShouldAnimate=null)=>({mapped:{type:"DRAGGING",dropping:null,draggingOver,combineWith,mode,offset,dimension,forceShouldAnimate,snapshot:getMemoizedSnapshot(mode,isClone,draggingOver,combineWith,null)}}));return(state,ownProps)=>{if(isDragging(state)){if(state.critical.draggable.id!==ownProps.draggableId)return null;const offset=state.current.client.offset,dimension=state.dimensions.draggables[ownProps.draggableId],draggingOver=whatIsDraggedOver(state.impact),combineWith=(impact=state.impact).at&&"COMBINE"===impact.at.type?impact.at.combine.draggableId:null,forceShouldAnimate=state.forceShouldAnimate;return getMemoizedProps(memoizedOffset(offset.x,offset.y),state.movementMode,dimension,ownProps.isClone,draggingOver,combineWith,forceShouldAnimate)}var impact;if("DROP_ANIMATING"===state.phase){const completed=state.completed;if(completed.result.draggableId!==ownProps.draggableId)return null;const isClone=ownProps.isClone,dimension=state.dimensions.draggables[ownProps.draggableId],result=completed.result,mode=result.mode,draggingOver=whatIsDraggedOverFromResult(result),combineWith=(result=>result.combine?result.combine.draggableId:null)(result),dropping={duration:state.dropDuration,curve:curves_drop,moveTo:state.newHomeClientOffset,opacity:combineWith?combine_opacity.drop:null,scale:combineWith?combine_scale.drop:null};return{mapped:{type:"DRAGGING",offset:state.newHomeClientOffset,dimension,dropping,draggingOver,combineWith,mode,forceShouldAnimate:null,snapshot:getMemoizedSnapshot(mode,isClone,draggingOver,combineWith,dropping)}}}return null}}(),secondarySelector=function getSecondarySelector(){const memoizedOffset=memoizeOne((x,y)=>({x,y})),getMemoizedSnapshot=memoizeOne(getSecondarySnapshot),getMemoizedProps=memoizeOne((offset,combineTargetFor=null,shouldAnimateDisplacement)=>({mapped:{type:"SECONDARY",offset,combineTargetFor,shouldAnimateDisplacement,snapshot:getMemoizedSnapshot(combineTargetFor)}})),getFallback=combineTargetFor=>combineTargetFor?getMemoizedProps(origin,combineTargetFor,!0):null,getProps=(ownId,draggingId,impact,afterCritical)=>{const visualDisplacement=impact.displaced.visible[ownId],isAfterCriticalInVirtualList=Boolean(afterCritical.inVirtualList&&afterCritical.effected[ownId]),combine=tryGetCombine(impact),combineTargetFor=combine&&combine.draggableId===ownId?draggingId:null;if(!visualDisplacement){if(!isAfterCriticalInVirtualList)return getFallback(combineTargetFor);if(impact.displaced.invisible[ownId])return null;const change=negate(afterCritical.displacedBy.point),offset=memoizedOffset(change.x,change.y);return getMemoizedProps(offset,combineTargetFor,!0)}if(isAfterCriticalInVirtualList)return getFallback(combineTargetFor);const displaceBy=impact.displacedBy.point,offset=memoizedOffset(displaceBy.x,displaceBy.y);return getMemoizedProps(offset,combineTargetFor,visualDisplacement.shouldAnimate)};return(state,ownProps)=>{if(isDragging(state))return state.critical.draggable.id===ownProps.draggableId?null:getProps(ownProps.draggableId,state.critical.draggable.id,state.impact,state.afterCritical);if("DROP_ANIMATING"===state.phase){const completed=state.completed;return completed.result.draggableId===ownProps.draggableId?null:getProps(ownProps.draggableId,completed.result.draggableId,completed.impact,completed.afterCritical)}return null}}();return(state,ownProps)=>draggingSelector(state,ownProps)||secondarySelector(state,ownProps)||atRest},{dropAnimationFinished},null,{context:StoreContext,areStatePropsEqual:isStrictEqual})(props=>{const ref=(0,react.useRef)(null),setRef=useCallback((el=null)=>{ref.current=el},[]),getRef=useCallback(()=>ref.current,[]),{contextId,dragHandleUsageInstructionsId,registry}=useRequiredContext(AppContext),{type,droppableId}=useRequiredContext(DroppableContext),descriptor=useMemo(()=>({id:props.draggableId,index:props.index,type,droppableId}),[props.draggableId,props.index,type,droppableId]),{children,draggableId,isEnabled,shouldRespectForcePress,canDragInteractiveElements,isClone,mapped,dropAnimationFinished:dropAnimationFinishedAction}=props;if(function useValidation$1(props,contextId,getRef){useDevSetupWarning()}(),function useClonePropValidation(isClone){useDev()}(),!isClone){useDraggablePublisher(useMemo(()=>({descriptor,registry,getDraggableRef:getRef,canDragInteractiveElements,shouldRespectForcePress,isEnabled}),[descriptor,registry,getRef,canDragInteractiveElements,shouldRespectForcePress,isEnabled]))}const dragHandleProps=useMemo(()=>isEnabled?{tabIndex:0,role:"button","aria-describedby":dragHandleUsageInstructionsId,"data-rfd-drag-handle-draggable-id":draggableId,"data-rfd-drag-handle-context-id":contextId,draggable:!1,onDragStart:preventHtml5Dnd}:null,[contextId,dragHandleUsageInstructionsId,draggableId,isEnabled]),onMoveEnd=useCallback(event=>{"DRAGGING"===mapped.type&&mapped.dropping&&"transform"===event.propertyName&&(0,react_dom.flushSync)(dropAnimationFinishedAction)},[dropAnimationFinishedAction,mapped]),provided=useMemo(()=>{const style=getStyle$1(mapped),onTransitionEnd="DRAGGING"===mapped.type&&mapped.dropping?onMoveEnd:void 0;return{innerRef:setRef,draggableProps:{"data-rfd-draggable-context-id":contextId,"data-rfd-draggable-id":draggableId,style,onTransitionEnd},dragHandleProps}},[contextId,dragHandleProps,draggableId,mapped,onMoveEnd,setRef]),rubric=useMemo(()=>({draggableId:descriptor.id,type:descriptor.type,source:{index:descriptor.index,droppableId:descriptor.droppableId}}),[descriptor.droppableId,descriptor.id,descriptor.index,descriptor.type]);return react.createElement(react.Fragment,null,children(provided,mapped.snapshot,rubric))});function PrivateDraggable(props){return useRequiredContext(DroppableContext).isUsingCloneFor!==props.draggableId||props.isClone?react.createElement(ConnectedDraggable,props):null}function PublicDraggable(props){const isEnabled="boolean"!=typeof props.isDragDisabled||!props.isDragDisabled,canDragInteractiveElements=Boolean(props.disableInteractiveElementBlocking),shouldRespectForcePress=Boolean(props.shouldRespectForcePress);return react.createElement(PrivateDraggable,(0,esm_extends.A)({},props,{isClone:!1,isEnabled,canDragInteractiveElements,shouldRespectForcePress}))}const isEqual=base=>value=>base===value,isScroll=isEqual("scroll"),isAuto=isEqual("auto"),isEither=(isEqual("visible"),(overflow,fn)=>fn(overflow.overflowX)||fn(overflow.overflowY)),getClosestScrollable=el=>null==el||el===document.body||el===document.documentElement?null:(el=>{const style=window.getComputedStyle(el),overflow={overflowX:style.overflowX,overflowY:style.overflowY};return isEither(overflow,isScroll)||isEither(overflow,isAuto)})(el)?el:getClosestScrollable(el.parentElement);var getScroll=el=>({x:el.scrollLeft,y:el.scrollTop});const getIsFixed=el=>{if(!el)return!1;return"fixed"===window.getComputedStyle(el).position||getIsFixed(el.parentElement)};var getDimension=({ref,descriptor,env,windowScroll,direction,isDropDisabled,isCombineEnabled,shouldClipSubject})=>{const closestScrollable=env.closestScrollable,client=((targetRef,closestScrollable)=>{const base=getBox(targetRef);if(!closestScrollable)return base;if(targetRef!==closestScrollable)return base;const top=base.paddingBox.top-closestScrollable.scrollTop,left=base.paddingBox.left-closestScrollable.scrollLeft,bottom=top+closestScrollable.scrollHeight,right=left+closestScrollable.scrollWidth,borderBox=expand({top,right,bottom,left},base.border);return createBox({borderBox,margin:base.margin,border:base.border,padding:base.padding})})(ref,closestScrollable),page=withScroll(client,windowScroll),closest=(()=>{if(!closestScrollable)return null;const frameClient=getBox(closestScrollable),scrollSize={scrollHeight:closestScrollable.scrollHeight,scrollWidth:closestScrollable.scrollWidth};return{client:frameClient,page:withScroll(frameClient,windowScroll),scroll:getScroll(closestScrollable),scrollSize,shouldClipSubject}})(),dimension=(({descriptor,isEnabled,isCombineEnabled,isFixedOnPage,direction,client,page,closest})=>{const frame=(()=>{if(!closest)return null;const{scrollSize,client:frameClient}=closest,maxScroll=getMaxScroll({scrollHeight:scrollSize.scrollHeight,scrollWidth:scrollSize.scrollWidth,height:frameClient.paddingBox.height,width:frameClient.paddingBox.width});return{pageMarginBox:closest.page.marginBox,frameClient,scrollSize,shouldClipSubject:closest.shouldClipSubject,scroll:{initial:closest.scroll,current:closest.scroll,max:maxScroll,diff:{value:origin,displacement:origin}}}})(),axis="vertical"===direction?vertical:horizontal;return{descriptor,isCombineEnabled,isFixedOnPage,axis,isEnabled,client,page,frame,subject:getSubject({page,withPlaceholder:null,axis,frame})}})({descriptor,isEnabled:!isDropDisabled,isCombineEnabled,isFixedOnPage:env.isFixedOnPage,direction,client,page,closest});return dimension};const immediate={passive:!1},delayed={passive:!0};var getListenerOptions=options=>options.shouldPublishImmediately?immediate:delayed;const getClosestScrollableFromDrag=dragging=>dragging&&dragging.env.closestScrollable||null;function useDroppablePublisher(args){const whileDraggingRef=(0,react.useRef)(null),appContext=useRequiredContext(AppContext),uniqueId=useUniqueId("droppable"),{registry,marshal}=appContext,previousRef=usePrevious(args),descriptor=useMemo(()=>({id:args.droppableId,type:args.type,mode:args.mode}),[args.droppableId,args.mode,args.type]),publishedDescriptorRef=(0,react.useRef)(descriptor),memoizedUpdateScroll=useMemo(()=>memoizeOne((x,y)=>{whileDraggingRef.current||dnd_esm_invariant();const scroll={x,y};marshal.updateDroppableScroll(descriptor.id,scroll)}),[descriptor.id,marshal]),getClosestScroll=useCallback(()=>{const dragging=whileDraggingRef.current;return dragging&&dragging.env.closestScrollable?getScroll(dragging.env.closestScrollable):origin},[]),updateScroll=useCallback(()=>{const scroll=getClosestScroll();memoizedUpdateScroll(scroll.x,scroll.y)},[getClosestScroll,memoizedUpdateScroll]),scheduleScrollUpdate=useMemo(()=>raf_schd_esm(updateScroll),[updateScroll]),onClosestScroll=useCallback(()=>{const dragging=whileDraggingRef.current,closest=getClosestScrollableFromDrag(dragging);dragging&&closest||dnd_esm_invariant();dragging.scrollOptions.shouldPublishImmediately?updateScroll():scheduleScrollUpdate()},[scheduleScrollUpdate,updateScroll]),getDimensionAndWatchScroll=useCallback((windowScroll,options)=>{whileDraggingRef.current&&dnd_esm_invariant();const previous=previousRef.current,ref=previous.getDroppableRef();ref||dnd_esm_invariant();const env=(start=>({closestScrollable:getClosestScrollable(start),isFixedOnPage:getIsFixed(start)}))(ref),dragging={ref,descriptor,env,scrollOptions:options};whileDraggingRef.current=dragging;const dimension=getDimension({ref,descriptor,env,windowScroll,direction:previous.direction,isDropDisabled:previous.isDropDisabled,isCombineEnabled:previous.isCombineEnabled,shouldClipSubject:!previous.ignoreContainerClipping}),scrollable=env.closestScrollable;return scrollable&&(scrollable.setAttribute(scrollContainer.contextId,appContext.contextId),scrollable.addEventListener("scroll",onClosestScroll,getListenerOptions(dragging.scrollOptions))),dimension},[appContext.contextId,descriptor,onClosestScroll,previousRef]),getScrollWhileDragging=useCallback(()=>{const dragging=whileDraggingRef.current,closest=getClosestScrollableFromDrag(dragging);return dragging&&closest||dnd_esm_invariant(),getScroll(closest)},[]),dragStopped=useCallback(()=>{const dragging=whileDraggingRef.current;dragging||dnd_esm_invariant();const closest=getClosestScrollableFromDrag(dragging);whileDraggingRef.current=null,closest&&(scheduleScrollUpdate.cancel(),closest.removeAttribute(scrollContainer.contextId),closest.removeEventListener("scroll",onClosestScroll,getListenerOptions(dragging.scrollOptions)))},[onClosestScroll,scheduleScrollUpdate]),scroll=useCallback(change=>{const dragging=whileDraggingRef.current;dragging||dnd_esm_invariant();const closest=getClosestScrollableFromDrag(dragging);closest||dnd_esm_invariant(),closest.scrollTop+=change.y,closest.scrollLeft+=change.x},[]),callbacks=useMemo(()=>({getDimensionAndWatchScroll,getScrollWhileDragging,dragStopped,scroll}),[dragStopped,getDimensionAndWatchScroll,getScrollWhileDragging,scroll]),entry=useMemo(()=>({uniqueId,descriptor,callbacks}),[callbacks,descriptor,uniqueId]);dnd_esm_useIsomorphicLayoutEffect(()=>(publishedDescriptorRef.current=entry.descriptor,registry.droppable.register(entry),()=>{whileDraggingRef.current&&dragStopped(),registry.droppable.unregister(entry)}),[callbacks,descriptor,dragStopped,entry,marshal,registry.droppable]),dnd_esm_useIsomorphicLayoutEffect(()=>{whileDraggingRef.current&&marshal.updateDroppableIsEnabled(publishedDescriptorRef.current.id,!args.isDropDisabled)},[args.isDropDisabled,marshal]),dnd_esm_useIsomorphicLayoutEffect(()=>{whileDraggingRef.current&&marshal.updateDroppableIsCombineEnabled(publishedDescriptorRef.current.id,args.isCombineEnabled)},[args.isCombineEnabled,marshal])}function noop(){}const empty={width:0,height:0,margin:{top:0,right:0,bottom:0,left:0}},getStyle=({isAnimatingOpenOnMount,placeholder,animate})=>{const size=(({isAnimatingOpenOnMount,placeholder,animate})=>isAnimatingOpenOnMount||"close"===animate?empty:{height:placeholder.client.borderBox.height,width:placeholder.client.borderBox.width,margin:placeholder.client.margin})({isAnimatingOpenOnMount,placeholder,animate});return{display:placeholder.display,boxSizing:"border-box",width:size.width,height:size.height,marginTop:size.margin.top,marginRight:size.margin.right,marginBottom:size.margin.bottom,marginLeft:size.margin.left,flexShrink:"0",flexGrow:"0",pointerEvents:"none",transition:"none"!==animate?transitions.placeholder:null}};var Placeholder$1=react.memo(props=>{const animateOpenTimerRef=(0,react.useRef)(null),tryClearAnimateOpenTimer=useCallback(()=>{animateOpenTimerRef.current&&(clearTimeout(animateOpenTimerRef.current),animateOpenTimerRef.current=null)},[]),{animate,onTransitionEnd,onClose,contextId}=props,[isAnimatingOpenOnMount,setIsAnimatingOpenOnMount]=(0,react.useState)("open"===props.animate);(0,react.useEffect)(()=>isAnimatingOpenOnMount?"open"!==animate?(tryClearAnimateOpenTimer(),setIsAnimatingOpenOnMount(!1),noop):animateOpenTimerRef.current?noop:(animateOpenTimerRef.current=setTimeout(()=>{animateOpenTimerRef.current=null,setIsAnimatingOpenOnMount(!1)}),tryClearAnimateOpenTimer):noop,[animate,isAnimatingOpenOnMount,tryClearAnimateOpenTimer]);const onSizeChangeEnd=useCallback(event=>{"height"===event.propertyName&&(onTransitionEnd(),"close"===animate&&onClose())},[animate,onClose,onTransitionEnd]),style=getStyle({isAnimatingOpenOnMount,animate:props.animate,placeholder:props.placeholder});return react.createElement(props.placeholder.tagName,{style,"data-rfd-placeholder-context-id":contextId,onTransitionEnd:onSizeChangeEnd,ref:props.innerRef})});class AnimateInOut extends react.PureComponent{constructor(...args){super(...args),this.state={isVisible:Boolean(this.props.on),data:this.props.on,animate:this.props.shouldAnimate&&this.props.on?"open":"none"},this.onClose=()=>{"close"===this.state.animate&&this.setState({isVisible:!1})}}static getDerivedStateFromProps(props,state){return props.shouldAnimate?props.on?{isVisible:!0,data:props.on,animate:"open"}:state.isVisible?{isVisible:!0,data:state.data,animate:"close"}:{isVisible:!1,animate:"close",data:null}:{isVisible:Boolean(props.on),data:props.on,animate:"none"}}render(){if(!this.state.isVisible)return null;const provided={onClose:this.onClose,data:this.state.data,animate:this.state.animate};return this.props.children(provided)}}const defaultProps={mode:"standard",type:"DEFAULT",direction:"vertical",isDropDisabled:!1,isCombineEnabled:!1,ignoreContainerClipping:!1,renderClone:null,getContainerForClone:function getBody(){return document.body||dnd_esm_invariant(),document.body}},attachDefaultPropsToOwnProps=ownProps=>{let defaultPropKey,mergedProps={...ownProps};for(defaultPropKey in defaultProps)void 0===ownProps[defaultPropKey]&&(mergedProps={...mergedProps,[defaultPropKey]:defaultProps[defaultPropKey]});return mergedProps},isMatchingType=(type,critical)=>type===critical.droppable.type,getDraggable=(critical,dimensions)=>dimensions.draggables[critical.draggable.id],ConnectedDroppable=connect_default(()=>{const idleWithAnimation={placeholder:null,shouldAnimatePlaceholder:!0,snapshot:{isDraggingOver:!1,draggingOverWith:null,draggingFromThisWith:null,isUsingPlaceholder:!1},useClone:null},idleWithoutAnimation={...idleWithAnimation,shouldAnimatePlaceholder:!1},getDraggableRubric=memoizeOne(descriptor=>({draggableId:descriptor.id,type:descriptor.type,source:{index:descriptor.index,droppableId:descriptor.droppableId}})),getMapProps=memoizeOne((id,isEnabled,isDraggingOverForConsumer,isDraggingOverForImpact,dragging,renderClone)=>{const draggableId=dragging.descriptor.id;if(dragging.descriptor.droppableId===id){const useClone=renderClone?{render:renderClone,dragging:getDraggableRubric(dragging.descriptor)}:null,snapshot={isDraggingOver:isDraggingOverForConsumer,draggingOverWith:isDraggingOverForConsumer?draggableId:null,draggingFromThisWith:draggableId,isUsingPlaceholder:!0};return{placeholder:dragging.placeholder,shouldAnimatePlaceholder:!1,snapshot,useClone}}if(!isEnabled)return idleWithoutAnimation;if(!isDraggingOverForImpact)return idleWithAnimation;const snapshot={isDraggingOver:isDraggingOverForConsumer,draggingOverWith:draggableId,draggingFromThisWith:null,isUsingPlaceholder:!0};return{placeholder:dragging.placeholder,shouldAnimatePlaceholder:!0,snapshot,useClone:null}});return(state,ownProps)=>{const ownPropsWithDefaultProps=attachDefaultPropsToOwnProps(ownProps),id=ownPropsWithDefaultProps.droppableId,type=ownPropsWithDefaultProps.type,isEnabled=!ownPropsWithDefaultProps.isDropDisabled,renderClone=ownPropsWithDefaultProps.renderClone;if(isDragging(state)){const critical=state.critical;if(!isMatchingType(type,critical))return idleWithoutAnimation;const dragging=getDraggable(critical,state.dimensions),isDraggingOver=whatIsDraggedOver(state.impact)===id;return getMapProps(id,isEnabled,isDraggingOver,isDraggingOver,dragging,renderClone)}if("DROP_ANIMATING"===state.phase){const completed=state.completed;if(!isMatchingType(type,completed.critical))return idleWithoutAnimation;const dragging=getDraggable(completed.critical,state.dimensions);return getMapProps(id,isEnabled,whatIsDraggedOverFromResult(completed.result)===id,whatIsDraggedOver(completed.impact)===id,dragging,renderClone)}if("IDLE"===state.phase&&state.completed&&!state.shouldFlush){const completed=state.completed;if(!isMatchingType(type,completed.critical))return idleWithoutAnimation;const wasOver=whatIsDraggedOver(completed.impact)===id,wasCombining=Boolean(completed.impact.at&&"COMBINE"===completed.impact.at.type),isHome=completed.critical.droppable.id===id;return wasOver?wasCombining?idleWithAnimation:idleWithoutAnimation:isHome?idleWithAnimation:idleWithoutAnimation}return idleWithoutAnimation}},{updateViewportMaxScroll:args=>({type:"UPDATE_VIEWPORT_MAX_SCROLL",payload:args})},(stateProps,dispatchProps,ownProps)=>({...attachDefaultPropsToOwnProps(ownProps),...stateProps,...dispatchProps}),{context:StoreContext,areStatePropsEqual:isStrictEqual})(props=>{const appContext=(0,react.useContext)(AppContext);appContext||dnd_esm_invariant();const{contextId,isMovementAllowed}=appContext,droppableRef=(0,react.useRef)(null),placeholderRef=(0,react.useRef)(null),{children,droppableId,type,mode,direction,ignoreContainerClipping,isDropDisabled,isCombineEnabled,snapshot,useClone,updateViewportMaxScroll,getContainerForClone}=props,getDroppableRef=useCallback(()=>droppableRef.current,[]),setDroppableRef=useCallback((value=null)=>{droppableRef.current=value},[]),setPlaceholderRef=(useCallback(()=>placeholderRef.current,[]),useCallback((value=null)=>{placeholderRef.current=value},[]));!function useValidation(args){useDevSetupWarning()}();const onPlaceholderTransitionEnd=useCallback(()=>{isMovementAllowed()&&updateViewportMaxScroll({maxScroll:getMaxWindowScroll()})},[isMovementAllowed,updateViewportMaxScroll]);useDroppablePublisher({droppableId,type,mode,direction,isDropDisabled,isCombineEnabled,ignoreContainerClipping,getDroppableRef});const placeholder=useMemo(()=>react.createElement(AnimateInOut,{on:props.placeholder,shouldAnimate:props.shouldAnimatePlaceholder},({onClose,data,animate})=>react.createElement(Placeholder$1,{placeholder:data,onClose,innerRef:setPlaceholderRef,animate,contextId,onTransitionEnd:onPlaceholderTransitionEnd})),[contextId,onPlaceholderTransitionEnd,props.placeholder,props.shouldAnimatePlaceholder,setPlaceholderRef]),provided=useMemo(()=>({innerRef:setDroppableRef,placeholder,droppableProps:{"data-rfd-droppable-id":droppableId,"data-rfd-droppable-context-id":contextId}}),[contextId,droppableId,placeholder,setDroppableRef]),isUsingCloneFor=useClone?useClone.dragging.draggableId:null,droppableContext=useMemo(()=>({droppableId,type,isUsingCloneFor}),[droppableId,isUsingCloneFor,type]);return react.createElement(DroppableContext.Provider,{value:droppableContext},children(provided,snapshot),function getClone(){if(!useClone)return null;const{dragging,render}=useClone,node=react.createElement(PrivateDraggable,{draggableId:dragging.draggableId,index:dragging.source.index,isClone:!0,isEnabled:!0,shouldRespectForcePress:!1,canDragInteractiveElements:!0},(draggableProvided,draggableSnapshot)=>render(draggableProvided,draggableSnapshot,dragging));return react_dom.createPortal(node,getContainerForClone())}())})},"./node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isEmpty.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _baseKeys_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseKeys.js"),_getTag_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_getTag.js"),_isArguments_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isArguments.js"),_isArray_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isArray.js"),_isArrayLike_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isArrayLike.js"),_isBuffer_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isBuffer.js"),_isPrototype_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_isPrototype.js"),_isTypedArray_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isTypedArray.js"),hasOwnProperty=Object.prototype.hasOwnProperty;const __WEBPACK_DEFAULT_EXPORT__=function isEmpty(value){if(null==value)return!0;if((0,_isArrayLike_js__WEBPACK_IMPORTED_MODULE_4__.A)(value)&&((0,_isArray_js__WEBPACK_IMPORTED_MODULE_3__.A)(value)||"string"==typeof value||"function"==typeof value.splice||(0,_isBuffer_js__WEBPACK_IMPORTED_MODULE_5__.A)(value)||(0,_isTypedArray_js__WEBPACK_IMPORTED_MODULE_7__.A)(value)||(0,_isArguments_js__WEBPACK_IMPORTED_MODULE_2__.A)(value)))return!value.length;var tag=(0,_getTag_js__WEBPACK_IMPORTED_MODULE_1__.A)(value);if("[object Map]"==tag||"[object Set]"==tag)return!value.size;if((0,_isPrototype_js__WEBPACK_IMPORTED_MODULE_6__.A)(value))return!(0,_baseKeys_js__WEBPACK_IMPORTED_MODULE_0__.A)(value).length;for(var key in value)if(hasOwnProperty.call(value,key))return!1;return!0}},"./node_modules/.pnpm/parse-unit@1.0.1/node_modules/parse-unit/index.js":module=>{module.exports=function parseUnit(str,out){out||(out=[0,""]),str=String(str);var num=parseFloat(str,10);return out[0]=num,out[1]=str.match(/[\d.\-\+]*\s*(.*)/)[1]||"",out}},"./node_modules/.pnpm/to-px@1.1.0/node_modules/to-px/browser.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var parseUnit=__webpack_require__("./node_modules/.pnpm/parse-unit@1.0.1/node_modules/parse-unit/index.js");module.exports=toPX;var PIXELS_PER_INCH=getSizeBrutal("in",document.body);function getPropertyInPX(element,prop){var parts=parseUnit(getComputedStyle(element).getPropertyValue(prop));return parts[0]*toPX(parts[1],element)}function getSizeBrutal(unit,element){var testDIV=document.createElement("div");testDIV.style.height="128"+unit,element.appendChild(testDIV);var size=getPropertyInPX(testDIV,"height")/128;return element.removeChild(testDIV),size}function toPX(str,element){if(!str)return null;switch(element=element||document.body,str=(str+""||"px").trim().toLowerCase(),element!==window&&element!==document||(element=document.body),str){case"%":return element.clientHeight/100;case"ch":case"ex":return getSizeBrutal(str,element);case"em":return getPropertyInPX(element,"font-size");case"rem":return getPropertyInPX(document.body,"font-size");case"vw":return window.innerWidth/100;case"vh":return window.innerHeight/100;case"vmin":return Math.min(window.innerWidth,window.innerHeight)/100;case"vmax":return Math.max(window.innerWidth,window.innerHeight)/100;case"in":return PIXELS_PER_INCH;case"cm":return PIXELS_PER_INCH/2.54;case"mm":return PIXELS_PER_INCH/25.4;case"pt":return PIXELS_PER_INCH/72;case"pc":return PIXELS_PER_INCH/6;case"px":return 1}var parts=parseUnit(str);if(!isNaN(parts[0])&&parts[1]){var px=toPX(parts[1],element);return"number"==typeof px?parts[0]*px:null}return null}},"./node_modules/.pnpm/use-sync-external-store@1.5.0_react@18.3.1/node_modules/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";var React=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");var objectIs="function"==typeof Object.is?Object.is:function is(x,y){return x===y&&(0!==x||1/x==1/y)||x!=x&&y!=y},useSyncExternalStore=React.useSyncExternalStore,useRef=React.useRef,useEffect=React.useEffect,useMemo=React.useMemo,useDebugValue=React.useDebugValue},"./node_modules/.pnpm/use-sync-external-store@1.5.0_react@18.3.1/node_modules/use-sync-external-store/with-selector.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/.pnpm/use-sync-external-store@1.5.0_react@18.3.1/node_modules/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.js")}}]);