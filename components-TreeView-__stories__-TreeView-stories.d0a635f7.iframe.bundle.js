"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[8469],{"./src/components/TreeView/__stories__/TreeView.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicTreeView:()=>BasicTreeView,CustomItem:()=>CustomItem,Default:()=>Default,GmailCloneStyles:()=>GmailCloneStyles,IndentBorderStyles:()=>IndentBorderStyles,MultiSelection:()=>MultiSelection,__namedExportsOrder:()=>__namedExportsOrder,default:()=>TreeView_stories});var templateObject_1,templateObject_2,templateObject_3,templateObject_4,templateObject_5,templateObject_6,templateObject_7,react=__webpack_require__("./node_modules/react/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),ExpandMore=__webpack_require__("./node_modules/@mui/icons-material/esm/ExpandMore.js"),ChevronRight=__webpack_require__("./node_modules/@mui/icons-material/esm/ChevronRight.js"),styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),colorManipulator=__webpack_require__("./node_modules/@mui/system/esm/colorManipulator.js"),TreeView=__webpack_require__("./node_modules/@mui/lab/TreeView/TreeView.js"),TreeItem=__webpack_require__("./node_modules/@mui/lab/TreeItem/TreeItem.js"),treeItemClasses=__webpack_require__("./node_modules/@mui/lab/TreeItem/treeItemClasses.js"),emotion_react_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js"),__makeTemplateObject=function(cooked,raw){return Object.defineProperty?Object.defineProperty(cooked,"raw",{value:raw}):cooked.raw=raw,cooked};function borderedStyles(props){return props.bordered?(0,emotion_react_browser_esm.iv)(templateObject_2||(templateObject_2=__makeTemplateObject(["\n    & ."," {\n      margin-left: 15px;\n      padding-left: 18px;\n      border-left: 1px dashed ",";\n    }\n  "],["\n    & ."," {\n      margin-left: 15px;\n      padding-left: 18px;\n      border-left: 1px dashed ",";\n    }\n  "])),treeItemClasses.Z.group,(0,colorManipulator.Fq)(props.theme.palette.text.primary,.4)):(0,emotion_react_browser_esm.iv)(templateObject_1||(templateObject_1=__makeTemplateObject([""],[""])))}function closeIconFade(props){return props.closeIconFade?(0,emotion_react_browser_esm.iv)(templateObject_4||(templateObject_4=__makeTemplateObject(["\n    & ."," {\n      & .close {\n        opacity: 0.3;\n      }\n    }\n  "],["\n    & ."," {\n      & .close {\n        opacity: 0.3;\n      }\n    }\n  "])),treeItemClasses.Z.iconContainer):(0,emotion_react_browser_esm.iv)(templateObject_3||(templateObject_3=__makeTemplateObject([""],[""])))}function selectedColor(props){return(0,emotion_react_browser_esm.iv)(templateObject_5||(templateObject_5=__makeTemplateObject(["\n    color: ",";\n    & ."," {\n      color: ",";\n\n      &.Mui-focused,\n      &.Mui-selected,\n      &.Mui-selected.Mui-focused {\n        color: var(--tree-view-color);\n        background-color: var(\n          --tree-view-bg-color,\n          ","}\n        );\n      }\n\n      &:hover {\n        background-color: ",";\n      }\n    }\n  "],["\n    color: ",";\n    & ."," {\n      color: ",";\n\n      &.Mui-focused,\n      &.Mui-selected,\n      &.Mui-selected.Mui-focused {\n        color: var(--tree-view-color);\n        background-color: var(\n          --tree-view-bg-color,\n          ","}\n        );\n      }\n\n      &:hover {\n        background-color: ",";\n      }\n    }\n  "])),props.theme.palette.text.secondary,treeItemClasses.Z.content,props.theme.palette.text.secondary,props.theme.palette.action.selected,props.theme.palette.action.hover)}function edgeCorners(props){return props.edgeCorners?(0,emotion_react_browser_esm.iv)(templateObject_7||(templateObject_7=__makeTemplateObject(["\n    & ."," {\n      border-top-right-radius: ",";\n      border-bottom-right-radius: ",";\n    }\n  "],["\n    & ."," {\n      border-top-right-radius: ",";\n      border-bottom-right-radius: ",";\n    }\n  "])),treeItemClasses.Z.content,props.theme.spacing(2),props.theme.spacing(2)):(0,emotion_react_browser_esm.iv)(templateObject_6||(templateObject_6=__makeTemplateObject([""],[""])))}try{borderedStyles.displayName="borderedStyles",borderedStyles.__docgenInfo={description:"",displayName:"borderedStyles",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.styles.tsx#borderedStyles"]={docgenInfo:borderedStyles.__docgenInfo,name:"borderedStyles",path:"src/components/TreeView/TreeView.styles.tsx#borderedStyles"})}catch(__react_docgen_typescript_loader_error){}try{closeIconFade.displayName="closeIconFade",closeIconFade.__docgenInfo={description:"",displayName:"closeIconFade",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.styles.tsx#closeIconFade"]={docgenInfo:closeIconFade.__docgenInfo,name:"closeIconFade",path:"src/components/TreeView/TreeView.styles.tsx#closeIconFade"})}catch(__react_docgen_typescript_loader_error){}try{selectedColor.displayName="selectedColor",selectedColor.__docgenInfo={description:"",displayName:"selectedColor",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.styles.tsx#selectedColor"]={docgenInfo:selectedColor.__docgenInfo,name:"selectedColor",path:"src/components/TreeView/TreeView.styles.tsx#selectedColor"})}catch(__react_docgen_typescript_loader_error){}try{edgeCorners.displayName="edgeCorners",edgeCorners.__docgenInfo={description:"",displayName:"edgeCorners",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.styles.tsx#edgeCorners"]={docgenInfo:edgeCorners.__docgenInfo,name:"edgeCorners",path:"src/components/TreeView/TreeView.styles.tsx#edgeCorners"})}catch(__react_docgen_typescript_loader_error){}var TreeView_styled_templateObject_1,TreeView_styled_templateObject_2,TreeView_styled_makeTemplateObject=function(cooked,raw){return Object.defineProperty?Object.defineProperty(cooked,"raw",{value:raw}):cooked.raw=raw,cooked},TreeView_styled_TreeView=(0,styled.ZP)(TreeView.Z,{shouldForwardProp:function(propName){return!["maxWidth","height"].includes(propName)}})(TreeView_styled_templateObject_1||(TreeView_styled_templateObject_1=TreeView_styled_makeTemplateObject(["\n    height: ",";\n    flex-grow: 1;\n    max-width: ",";\n    overflow-y: auto;\n    overflow-x: hidden;\n"],["\n    height: ",";\n    flex-grow: 1;\n    max-width: ",";\n    overflow-y: auto;\n    overflow-x: hidden;\n"])),(function(props){return props.height}),(function(props){return props.maxWidth?"".concat(props.maxWidth,"px"):void 0})),TreeView_styled_TreeItem=TreeItem.Z,LabelIconTreeItemStyled=(0,styled.ZP)(TreeItem.Z)((function(_a){var _b,_c,_d,theme=_a.theme;return(_b={color:theme.palette.text.secondary})["& .".concat(treeItemClasses.Z.content)]=((_c={width:"auto",color:theme.palette.text.secondary,borderTopRightRadius:theme.spacing(2),borderBottomRightRadius:theme.spacing(2),paddingRight:theme.spacing(1),fontWeight:theme.typography.fontWeightMedium,"&.Mui-expanded":{fontWeight:theme.typography.fontWeightRegular},"&:hover":{backgroundColor:theme.palette.action.hover},"&.Mui-focused, &.Mui-selected, &.Mui-selected.Mui-focused":{backgroundColor:"var(--tree-view-bg-color, ".concat(theme.palette.action.selected,")"),color:"var(--tree-view-color)"}})["& .".concat(treeItemClasses.Z.label)]={fontWeight:"inherit",color:"inherit"},_c),_b["& .".concat(treeItemClasses.Z.group)]=((_d={marginLeft:0})["& .".concat(treeItemClasses.Z.content)]={paddingLeft:theme.spacing(2)},_d),_b})),IndentBorderTreeItemStyled=(0,styled.ZP)(TreeItem.Z)((function(_a){var _b,theme=_a.theme;return(_b={})["& .".concat(treeItemClasses.Z.iconContainer)]={"& .close":{opacity:.3}},_b["& .".concat(treeItemClasses.Z.group)]={marginLeft:15,paddingLeft:18,borderLeft:"1px dashed ".concat((0,colorManipulator.Fq)(theme.palette.text.primary,.4))},_b})),TreeItemStyled=(0,styled.ZP)(TreeItem.Z,{shouldForwardProp:function(propName){return!["bordered","closeIconFade"].includes(propName)}})(TreeView_styled_templateObject_2||(TreeView_styled_templateObject_2=TreeView_styled_makeTemplateObject(["\n    ","\n    ","\n  ","\n  ","\n\n  & ."," {\n        width: auto;\n\n        padding-right: ",";\n        font-weight: ",";\n\n        &.Mui-expanded {\n            font-weight: ",";\n        }\n\n        & ."," {\n            font-weight: inherit;\n            color: inherit;\n        }\n    }\n\n    & ."," {\n        margin-left: 0;\n\n        & ."," {\n            padding-left: ",";\n        }\n    }\n"],["\n    ","\n    ","\n  ","\n  ","\n\n  & ."," {\n        width: auto;\n\n        padding-right: ",";\n        font-weight: ",";\n\n        &.Mui-expanded {\n            font-weight: ",";\n        }\n\n        & ."," {\n            font-weight: inherit;\n            color: inherit;\n        }\n    }\n\n    & ."," {\n        margin-left: 0;\n\n        & ."," {\n            padding-left: ",";\n        }\n    }\n"])),closeIconFade,borderedStyles,selectedColor,edgeCorners,treeItemClasses.Z.content,(function(props){return props.theme.spacing(1)}),(function(props){return props.theme.typography.fontWeightMedium}),(function(props){return props.theme.typography.fontWeightRegular}),treeItemClasses.Z.label,treeItemClasses.Z.group,treeItemClasses.Z.content,(function(props){return props.theme.spacing(2)}));try{TreeView_styled_TreeView.displayName="TreeView",TreeView_styled_TreeView.__docgenInfo={description:"",displayName:"TreeView",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.styled.tsx#TreeView"]={docgenInfo:TreeView_styled_TreeView.__docgenInfo,name:"TreeView",path:"src/components/TreeView/TreeView.styled.tsx#TreeView"})}catch(__react_docgen_typescript_loader_error){}try{TreeView_styled_TreeItem.displayName="TreeItem",TreeView_styled_TreeItem.__docgenInfo={description:"",displayName:"TreeItem",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.styled.tsx#TreeItem"]={docgenInfo:TreeView_styled_TreeItem.__docgenInfo,name:"TreeItem",path:"src/components/TreeView/TreeView.styled.tsx#TreeItem"})}catch(__react_docgen_typescript_loader_error){}try{LabelIconTreeItemStyled.displayName="LabelIconTreeItemStyled",LabelIconTreeItemStyled.__docgenInfo={description:"",displayName:"LabelIconTreeItemStyled",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.styled.tsx#LabelIconTreeItemStyled"]={docgenInfo:LabelIconTreeItemStyled.__docgenInfo,name:"LabelIconTreeItemStyled",path:"src/components/TreeView/TreeView.styled.tsx#LabelIconTreeItemStyled"})}catch(__react_docgen_typescript_loader_error){}try{IndentBorderTreeItemStyled.displayName="IndentBorderTreeItemStyled",IndentBorderTreeItemStyled.__docgenInfo={description:"",displayName:"IndentBorderTreeItemStyled",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.styled.tsx#IndentBorderTreeItemStyled"]={docgenInfo:IndentBorderTreeItemStyled.__docgenInfo,name:"IndentBorderTreeItemStyled",path:"src/components/TreeView/TreeView.styled.tsx#IndentBorderTreeItemStyled"})}catch(__react_docgen_typescript_loader_error){}try{TreeItemStyled.displayName="TreeItemStyled",TreeItemStyled.__docgenInfo={description:"",displayName:"TreeItemStyled",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.styled.tsx#TreeItemStyled"]={docgenInfo:TreeItemStyled.__docgenInfo,name:"TreeItemStyled",path:"src/components/TreeView/TreeView.styled.tsx#TreeItemStyled"})}catch(__react_docgen_typescript_loader_error){}var Collapse=__webpack_require__("./node_modules/@mui/material/Collapse/Collapse.js"),react_spring_web_modern=__webpack_require__("./node_modules/@react-spring/web/dist/react-spring_web.modern.mjs");function TransitionComponent(props){var style=(0,react_spring_web_modern.q_)({from:{opacity:0,transform:"translate3d(0,-20px,0)"},to:{opacity:props.in?1:0,transform:"translate3d(0,".concat(props.in?0:20,"px,0)")}});return react.createElement(react_spring_web_modern.q.div,{style},react.createElement(Collapse.Z,props))}TransitionComponent.displayName="TransitionComponent",TransitionComponent.propTypes={in:prop_types_default().bool};try{TreeViewtransition.displayName="TreeViewtransition",TreeViewtransition.__docgenInfo={description:"",displayName:"TreeViewtransition",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.transition.tsx#TreeViewtransition"]={docgenInfo:TreeViewtransition.__docgenInfo,name:"TreeViewtransition",path:"src/components/TreeView/TreeView.transition.tsx#TreeViewtransition"})}catch(__react_docgen_typescript_loader_error){}var useTreeItem=__webpack_require__("./node_modules/@mui/lab/TreeItem/useTreeItem.js"),_excluded=["nodeId","TransitionComponent","children","closeIconFade","closeIconFadeStyles","borderedStyles","edgeCornersStyles"],_excluded2=["children"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var TreeView_excluded=["nodes","collapseIcon","expandIcon","endIcon","multiSelect","expandedIds","onExpended","selectedIds","onSelected","useStyle","LabelComponent","TreeItemComponent","TransitionComponent","closeIconFadeStyles","borderedStyles","edgeCornersStyles"],TreeView_excluded2=["id","label"];function TreeView_extends(){return TreeView_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},TreeView_extends.apply(this,arguments)}function TreeView_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function TreeView_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function TreeView_TreeView(_ref){var nodes=_ref.nodes,collapseIcon=_ref.collapseIcon,expandIcon=_ref.expandIcon,endIcon=_ref.endIcon,multiSelect=_ref.multiSelect,expandedIds=_ref.expandedIds,onExpended=_ref.onExpended,selectedIds=_ref.selectedIds,onSelected=_ref.onSelected,LabelComponent=(_ref.useStyle,_ref.LabelComponent),TreeItemComponent=_ref.TreeItemComponent,TransitionComponent=_ref.TransitionComponent,props=(_ref.closeIconFadeStyles,_ref.borderedStyles,_ref.edgeCornersStyles,TreeView_objectWithoutProperties(_ref,TreeView_excluded)),handleToggle=onExpended?function(event,nodeIds){onExpended([].concat(nodeIds))}:void 0,handleSelect=onSelected?function(event,nodeIds){onSelected([].concat(nodeIds))}:void 0,CustomTreeItem=LabelComponent?function withTreeViewItem(Component,TreeItemComponent){void 0===TreeItemComponent&&(TreeItemComponent=TreeView_styled_TreeItem);var CustomTreeItemChild=(0,react.forwardRef)((function(props,ref){var _a,_ref=null!=props?props:{},nodeId=_ref.nodeId,TransitionComponent=_ref.TransitionComponent,children=_ref.children,closeIconFade=_ref.closeIconFade,closeIconFadeStyles=_ref.closeIconFadeStyles,borderedStyles=_ref.borderedStyles,edgeCornersStyles=_ref.edgeCornersStyles,restProps=_objectWithoutProperties(_ref,_excluded),_b=(0,useTreeItem.Z)(nodeId),disabled=_b.disabled,expanded=_b.expanded,selected=_b.selected,focused=_b.focused,handleExpansion=_b.handleExpansion,handleSelection=_b.handleSelection,preventSelection=_b.preventSelection;return props&&react.createElement(TreeItemComponent,{key:nodeId,ref,nodeId,TransitionComponent,closeIconFade,bordered:borderedStyles,closeIconFadeStyles,borderedStyles,edgeCornersStyles,label:react.createElement(Component,_extends({},restProps,{nodeId,itemDisabled:disabled,itemExpanded:expanded,itemSelected:selected,itemFocused:focused,onExpandedItem:function(event){return null==handleExpansion?void 0:handleExpansion(event)},onSelectedItem:function(event){return null==handleSelection?void 0:handleSelection(event)},preventSelectItem:preventSelection})),style:{"--tree-view-color":restProps.color,"--tree-view-bg-color":restProps.bgColor}},null===(_a=[].concat(null!=children?children:[]))||void 0===_a?void 0:_a.map((function(_a,index){var _b,treeItemProps=_a.props;return react.createElement(CustomTreeItemChild,_extends({key:null!==(_b=null==treeItemProps?void 0:treeItemProps.nodeId)&&void 0!==_b?_b:index},treeItemProps))})))}));return function renderTree(_ref2){var _a,children=_ref2.children,props=_objectWithoutProperties(_ref2,_excluded2);return react.createElement(CustomTreeItemChild,props,null===(_a=[].concat(null!=children?children:[]))||void 0===_a?void 0:_a.map((function(_a){var treeItemProps=_a.props;return renderTree(treeItemProps)})))}}(LabelComponent,TreeItemStyled):TreeItemComponent,renderTree=function(nodes){return null==nodes?void 0:nodes.map((function(_ref2){var id=_ref2.id,label=_ref2.label,node=TreeView_objectWithoutProperties(_ref2,TreeView_excluded2);return react.createElement(CustomTreeItem,TreeView_extends({key:id,id,nodeId:id,label,TransitionComponent},node),renderTree(node.children))}))};return react.createElement(Box.Z,null,react.createElement(TreeView_styled_TreeView,TreeView_extends({defaultCollapseIcon:collapseIcon,defaultExpandIcon:expandIcon,defaultEndIcon:endIcon,multiSelect,expanded:expandedIds,selected:selectedIds,onNodeToggle:handleToggle,onNodeSelect:handleSelect,maxWidth:400},props),CustomTreeItem&&renderTree(nodes)))}TreeView_TreeView.displayName="TreeView";var nodePropTypes=prop_types_default().arrayOf(prop_types_default().shape({id:prop_types_default().string,label:prop_types_default().string,children:prop_types_default().array}));TreeView_TreeView.propTypes={nodes:nodePropTypes,collapseIcon:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().node]),expandIcon:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().node]),multiSelect:prop_types_default().bool,expandedIds:prop_types_default().arrayOf(prop_types_default().string),onExpended:prop_types_default().func,selectedIds:prop_types_default().arrayOf(prop_types_default().string),onSelected:prop_types_default().func,useStyle:prop_types_default().oneOf(["default","LabelIcon","IndentBorder"]),LabelComponent:prop_types_default().any,TreeItemComponent:prop_types_default().any,closeIconFadeStyles:prop_types_default().bool,borderedStyles:prop_types_default().bool,edgeCornersStyles:prop_types_default().bool},TreeView_TreeView.defaultProps={nodes:[],collapseIcon:react.createElement(ExpandMore.Z,null),expandIcon:react.createElement(ChevronRight.Z,null),endIcon:void 0,multiSelect:void 0,expandedIds:void 0,onExpended:void 0,selectedIds:void 0,onSelected:void 0,LabelComponent:void 0,TreeItemComponent:TreeView_styled_TreeItem,TransitionComponent,closeIconFadeStyles:!1,borderedStyles:!1,edgeCornersStyles:!1};try{TreeView_TreeView.displayName="TreeView",TreeView_TreeView.__docgenInfo={description:"",displayName:"TreeView",props:{nodes:{defaultValue:{value:"[]"},description:"",name:"nodes",required:!1,type:{name:"any"}},collapseIcon:{defaultValue:{value:"<ExpandMoreIcon />"},description:"",name:"collapseIcon",required:!1,type:{name:"any"}},expandIcon:{defaultValue:{value:"<ChevronRightIcon />"},description:"",name:"expandIcon",required:!1,type:{name:"any"}},endIcon:{defaultValue:{value:"undefined"},description:"",name:"endIcon",required:!1,type:{name:"any"}},multiSelect:{defaultValue:{value:"undefined"},description:"",name:"multiSelect",required:!1,type:{name:"any"}},expandedIds:{defaultValue:{value:"undefined"},description:"",name:"expandedIds",required:!1,type:{name:"any"}},onExpended:{defaultValue:{value:"undefined"},description:"",name:"onExpended",required:!1,type:{name:"any"}},selectedIds:{defaultValue:{value:"undefined"},description:"",name:"selectedIds",required:!1,type:{name:"any"}},onSelected:{defaultValue:{value:"undefined"},description:"",name:"onSelected",required:!1,type:{name:"any"}},useStyle:{defaultValue:null,description:"",name:"useStyle",required:!0,type:{name:"any"}},LabelComponent:{defaultValue:{value:"undefined"},description:"",name:"LabelComponent",required:!1,type:{name:"any"}},TreeItemComponent:{defaultValue:null,description:"",name:"TreeItemComponent",required:!0,type:{name:"any"}},TransitionComponent:{defaultValue:null,description:"",name:"TransitionComponent",required:!0,type:{name:"any"}},closeIconFadeStyles:{defaultValue:{value:"false"},description:"",name:"closeIconFadeStyles",required:!1,type:{name:"any"}},borderedStyles:{defaultValue:{value:"false"},description:"",name:"borderedStyles",required:!1,type:{name:"any"}},edgeCornersStyles:{defaultValue:{value:"false"},description:"",name:"edgeCornersStyles",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.tsx#TreeView"]={docgenInfo:TreeView_TreeView.__docgenInfo,name:"TreeView",path:"src/components/TreeView/TreeView.tsx#TreeView"})}catch(__react_docgen_typescript_loader_error){}var Button=__webpack_require__("./src/components/Button/Button.tsx"),Typography=__webpack_require__("./src/components/Typography/Typography.tsx"),SVGIcon=__webpack_require__("./src/components/SVGIcon/SVGIcon.tsx"),ArrowDropDown=__webpack_require__("./node_modules/@mui/icons-material/esm/ArrowDropDown.js"),ArrowRight=__webpack_require__("./node_modules/@mui/icons-material/esm/ArrowRight.js"),LabelIconTreeItem_excluded=["bgColor","color","icon","info","label"];function LabelIconTreeItem_extends(){return LabelIconTreeItem_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},LabelIconTreeItem_extends.apply(this,arguments)}function LabelIconTreeItem_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function LabelIconTreeItem_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var LabelIconTreeItem=(0,react.forwardRef)((function(props,ref){var _ref=null!=props?props:{},bgColor=_ref.bgColor,color=_ref.color,labelIcon=_ref.icon,labelInfo=_ref.info,labelText=_ref.label,other=LabelIconTreeItem_objectWithoutProperties(_ref,LabelIconTreeItem_excluded);return props&&react.createElement(LabelIconTreeItemStyled,LabelIconTreeItem_extends({ref},other,{label:react.createElement(Box.Z,{sx:{display:"flex",alignItems:"center",p:.5,pr:0}},labelIcon&&react.createElement(Box.Z,{color:"inherit",sx:{mr:1,display:"flex",alignItems:"center"}},react.createElement(SVGIcon.Z,{muiIconName:labelIcon},labelIcon)),labelText&&react.createElement(Typography.Z,{variant:"body2",sx:{fontWeight:"inherit",flexGrow:1}},labelText),labelInfo&&react.createElement(Typography.Z,{variant:"caption",color:"inherit"},labelInfo)),style:{"--tree-view-color":color,"--tree-view-bg-color":bgColor}}))}));LabelIconTreeItem.propTypes={bgColor:prop_types_default().string,color:prop_types_default().string,icon:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().node,prop_types_default().any]),info:prop_types_default().string,label:prop_types_default().string.isRequired},LabelIconTreeItem.defaultProps={bgColor:void 0,color:void 0,icon:void 0,info:void 0,label:void 0};const TreeItemComponents_LabelIconTreeItem=LabelIconTreeItem;var LabelIconTreeItemIcons={collapseIcon:react.createElement(ArrowDropDown.Z,null),expandIcon:react.createElement(ArrowRight.Z,null),endIcon:react.createElement("div",{style:{width:24}})};try{LabelIconTreeItem.displayName="LabelIconTreeItem",LabelIconTreeItem.__docgenInfo={description:"",displayName:"LabelIconTreeItem",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeItemComponents/LabelIconTreeItem.tsx#LabelIconTreeItem"]={docgenInfo:LabelIconTreeItem.__docgenInfo,name:"LabelIconTreeItem",path:"src/components/TreeView/TreeItemComponents/LabelIconTreeItem.tsx#LabelIconTreeItem"})}catch(__react_docgen_typescript_loader_error){}var SvgIcon=__webpack_require__("./node_modules/@mui/material/SvgIcon/SvgIcon.js");function TreeView_icons_extends(){return TreeView_icons_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},TreeView_icons_extends.apply(this,arguments)}function MinusSquare(props){return react.createElement(SvgIcon.Z,TreeView_icons_extends({fontSize:"inherit",style:{width:14,height:14}},props),react.createElement("path",{d:"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z"}))}function PlusSquare(props){return react.createElement(SvgIcon.Z,TreeView_icons_extends({fontSize:"inherit",style:{width:14,height:14}},props),react.createElement("path",{d:"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z"}))}function CloseSquare(props){return react.createElement(SvgIcon.Z,TreeView_icons_extends({className:"close",fontSize:"inherit",style:{width:14,height:14}},props),react.createElement("path",{d:"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z"}))}MinusSquare.displayName="MinusSquare",PlusSquare.displayName="PlusSquare",CloseSquare.displayName="CloseSquare";try{MinusSquare.displayName="MinusSquare",MinusSquare.__docgenInfo={description:"",displayName:"MinusSquare",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.icons.tsx#MinusSquare"]={docgenInfo:MinusSquare.__docgenInfo,name:"MinusSquare",path:"src/components/TreeView/TreeView.icons.tsx#MinusSquare"})}catch(__react_docgen_typescript_loader_error){}try{PlusSquare.displayName="PlusSquare",PlusSquare.__docgenInfo={description:"",displayName:"PlusSquare",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.icons.tsx#PlusSquare"]={docgenInfo:PlusSquare.__docgenInfo,name:"PlusSquare",path:"src/components/TreeView/TreeView.icons.tsx#PlusSquare"})}catch(__react_docgen_typescript_loader_error){}try{CloseSquare.displayName="CloseSquare",CloseSquare.__docgenInfo={description:"",displayName:"CloseSquare",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.icons.tsx#CloseSquare"]={docgenInfo:CloseSquare.__docgenInfo,name:"CloseSquare",path:"src/components/TreeView/TreeView.icons.tsx#CloseSquare"})}catch(__react_docgen_typescript_loader_error){}var IndentBorderTreeItem_excluded=["bgColor","color","icon","label"];function IndentBorderTreeItem_extends(){return IndentBorderTreeItem_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},IndentBorderTreeItem_extends.apply(this,arguments)}function IndentBorderTreeItem_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function IndentBorderTreeItem_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var IndentBorderTreeItem=(0,react.forwardRef)((function(props,ref){var _ref=null!=props?props:{},bgColor=_ref.bgColor,color=_ref.color,label=(_ref.icon,_ref.label),other=IndentBorderTreeItem_objectWithoutProperties(_ref,IndentBorderTreeItem_excluded);return props&&react.createElement(IndentBorderTreeItemStyled,IndentBorderTreeItem_extends({ref},other,{label,style:{"--tree-view-color":color,"--tree-view-bg-color":bgColor}}))}));IndentBorderTreeItem.propTypes={bgColor:prop_types_default().string,color:prop_types_default().string,label:prop_types_default().string.isRequired},IndentBorderTreeItem.defaultProps={bgColor:void 0,color:void 0,label:void 0};const TreeItemComponents_IndentBorderTreeItem=IndentBorderTreeItem;var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,IndentBorderTreeItemIcons={collapseIcon:react.createElement(MinusSquare,null),expandIcon:react.createElement(PlusSquare,null),endIcon:react.createElement(CloseSquare,null)};try{IndentBorderTreeItem.displayName="IndentBorderTreeItem",IndentBorderTreeItem.__docgenInfo={description:"",displayName:"IndentBorderTreeItem",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeItemComponents/IndentBorderTreeItem.tsx#IndentBorderTreeItem"]={docgenInfo:IndentBorderTreeItem.__docgenInfo,name:"IndentBorderTreeItem",path:"src/components/TreeView/TreeItemComponents/IndentBorderTreeItem.tsx#IndentBorderTreeItem"})}catch(__react_docgen_typescript_loader_error){}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TreeView_stories_extends(){return TreeView_stories_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},TreeView_stories_extends.apply(this,arguments)}const TreeView_stories={parameters:{storySource:{source:'import React from "react";\nimport { action } from "@storybook/addon-actions";\nimport TreeView from "../TreeView";\nimport { Box } from "@mui/material";\nimport Button from "../../Button/Button";\nimport LabelIconTreeItem, { LabelIconTreeItemIcons } from "../TreeItemComponents/LabelIconTreeItem";\nimport IndentBorderTreeItem, { IndentBorderTreeItemIcons } from "../TreeItemComponents/IndentBorderTreeItem";\nimport SVGIcon from "../../SVGIcon/SVGIcon";\nimport Typography from "../../Typography/Typography";\nexport default {\n  title: "Lab/TreeView",\n  component: TreeView\n};\nconst actions = {\n  onClick: action("onClick")\n};\nexport const Default = () => {\n  return <TreeView {...actions} />;\n};\nexport const BasicTreeView = () => {\n  const nodes = [{\n    id: "1",\n    label: "Applications",\n    children: [{\n      id: "2",\n      label: "Calendar"\n    }]\n  }, {\n    id: "5",\n    label: "Documents",\n    children: [{\n      id: "10",\n      label: "OSS"\n    }, {\n      id: "6",\n      label: "MUI",\n      children: [{\n        id: "8",\n        label: "index.js"\n      }]\n    }]\n  }];\n  return <TreeView nodes={nodes} />;\n};\nexport const MultiSelection = () => {\n  const nodes = [{\n    id: "1",\n    label: "Applications",\n    children: [{\n      id: "2",\n      label: "Calendar"\n    }, {\n      id: "3",\n      label: "Chrome"\n    }, {\n      id: "4",\n      label: "Webstorm"\n    }]\n  }, {\n    id: "5",\n    label: "Documents",\n    children: [{\n      id: "6",\n      label: "MUI",\n      children: [{\n        id: "7",\n        label: "src",\n        children: [{\n          id: "8",\n          label: "index.js"\n        }, {\n          id: "9",\n          label: "tree-view.js"\n        }]\n      }]\n    }]\n  }];\n  const [expanded, setExpanded] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const handleExpandClick = () => {\n    setExpanded(oldExpanded => oldExpanded.length === 0 ? ["1", "5", "6", "7"] : []);\n  };\n  const handleSelectClick = () => {\n    setSelected(oldSelected => oldSelected.length === 0 ? ["1", "2", "3", "4", "5", "6", "7", "8", "9"] : []);\n  };\n  return <Box sx={{\n    height: 270,\n    flexGrow: 1,\n    maxWidth: 400,\n    overflowY: "auto"\n  }}>\n      <Box sx={{\n      mb: 1\n    }}>\n        <Button onClick={handleExpandClick}>\n          {expanded.length === 0 ? "Expand all" : "Collapse all"}\n        </Button>\n        <Button onClick={handleSelectClick}>\n          {selected.length === 0 ? "Select all" : "Unselect all"}\n        </Button>\n      </Box>\n\n      <TreeView nodes={nodes} expandedIds={expanded} selectedIds={selected} onExpended={setExpanded} onSelected={setSelected} multiSelect />\n    </Box>;\n};\nexport const GmailCloneStyles = () => {\n  const nodes = [{\n    id: "1",\n    label: "All Mail",\n    icon: "Mail"\n  }, {\n    id: "2",\n    label: "Trash",\n    icon: "Delete"\n  }, {\n    id: "3",\n    label: "Categories",\n    icon: "Label",\n    children: [{\n      id: "5",\n      label: "Social",\n      icon: "SupervisorAccount",\n      info: "90",\n      color: "#1a73e8",\n      bgColor: "#e8f0fe"\n    }, {\n      id: "6",\n      label: "Updates",\n      icon: "Info",\n      info: "2,294",\n      color: "#e3742f",\n      bgColor: "#fcefe3"\n    }, {\n      id: "7",\n      label: "Forums",\n      icon: "Forum",\n      info: "3,566",\n      color: "#a250f5",\n      bgColor: "#f3e8fd"\n    }, {\n      id: "8",\n      label: "Promotions",\n      icon: "LocalOffer",\n      info: "733",\n      color: "#3c8039",\n      bgColor: "#e6f4ea"\n    }]\n  }, {\n    id: "4",\n    label: "History",\n    icon: "Label"\n  }];\n  const [expanded, setExpanded] = React.useState(["3"]);\n  const [selected, setSelected] = React.useState([]);\n  return <TreeView nodes={nodes} expandedIds={expanded} selectedIds={selected} onExpended={setExpanded} onSelected={setSelected} TreeItemComponent={LabelIconTreeItem} {...LabelIconTreeItemIcons} />;\n};\nexport const IndentBorderStyles = () => {\n  const nodes = [{\n    id: "1",\n    label: "Main",\n    children: [{\n      id: "2",\n      label: "Hello"\n    }, {\n      id: "3",\n      label: "Subtree with children",\n      children: [{\n        id: "6",\n        label: "Hello"\n      }, {\n        id: "7",\n        label: "Sub-subtree with children",\n        children: [{\n          id: "9",\n          label: "Child 1"\n        }, {\n          id: "10",\n          label: "Child 2"\n        }, {\n          id: "11",\n          label: "Child 3"\n        }]\n      }, {\n        id: "8",\n        label: "Hello"\n      }]\n    }, {\n      id: "4",\n      label: "World"\n    }, {\n      id: "5",\n      label: "Something something"\n    }]\n  }];\n  const [expanded, setExpanded] = React.useState(["1"]);\n  const [selected, setSelected] = React.useState([]);\n  return <TreeView nodes={nodes} expandedIds={expanded} selectedIds={selected} onExpended={setExpanded} onSelected={setSelected} TreeItemComponent={IndentBorderTreeItem} {...IndentBorderTreeItemIcons} />;\n};\nconst StyledTreeItemContent = props => {\n  const {\n    nodeId,\n    icon: labelIcon,\n    info: labelInfo,\n    label: labelText,\n    selected\n  } = props ?? {};\n  return props && <Box sx={{\n    display: "flex",\n    alignItems: "center",\n    p: 0.5,\n    pr: 0\n  }}>\n        {labelIcon && <Box color="inherit" sx={{\n      mr: 1,\n      display: "flex",\n      alignItems: "center"\n    }}>\n            <SVGIcon muiIconName={labelIcon}>{labelIcon}</SVGIcon>\n          </Box>}\n        {labelText && <Typography variant="body2" sx={{\n      fontWeight: "inherit",\n      flexGrow: 1,\n      bgColor: selected ? "red" : undefined\n    }}>\n            {labelText} ({nodeId})\n          </Typography>}\n        {labelInfo && <Typography variant="caption" color="inherit">\n            {labelInfo}\n          </Typography>}\n      </Box>;\n};\nexport const CustomItem = () => {\n  const nodes = [{\n    id: "1",\n    label: "Main",\n    icon: "Home",\n    info: "test",\n    // color: "red",\n    // bgColor: "yellow",\n    children: [{\n      id: "2",\n      label: "Hello"\n    }, {\n      id: "3",\n      label: "Subtree with children",\n      children: [{\n        id: "6",\n        label: "Hello"\n      }, {\n        id: "7",\n        label: "Sub-subtree with children",\n        children: [{\n          id: "9",\n          label: "Child 1"\n        }, {\n          id: "10",\n          label: "Child 2"\n        }, {\n          id: "11",\n          label: "Child 3"\n        }]\n      }, {\n        id: "8",\n        label: "Hello"\n      }]\n    }, {\n      id: "4",\n      label: "World"\n    }, {\n      id: "5",\n      label: "Something something"\n    }]\n  }];\n  const [expanded, setExpanded] = React.useState(["1"]);\n  const [selected, setSelected] = React.useState([]);\n  return <TreeView nodes={nodes} expandedIds={expanded} selectedIds={selected} onExpended={setExpanded} onSelected={setSelected} TransitionComponent={null} LabelComponent={StyledTreeItemContent} />;\n};\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...Default.parameters?.docs,\n    source: {\n      originalSource: "() => {\\n  return <TreeView {...actions} />;\\n}",\n      ...Default.parameters?.docs?.source\n    }\n  }\n};\nBasicTreeView.parameters = {\n  ...BasicTreeView.parameters,\n  docs: {\n    ...BasicTreeView.parameters?.docs,\n    source: {\n      originalSource: "() => {\\n  const nodes = [{\\n    id: \\"1\\",\\n    label: \\"Applications\\",\\n    children: [{\\n      id: \\"2\\",\\n      label: \\"Calendar\\"\\n    }]\\n  }, {\\n    id: \\"5\\",\\n    label: \\"Documents\\",\\n    children: [{\\n      id: \\"10\\",\\n      label: \\"OSS\\"\\n    }, {\\n      id: \\"6\\",\\n      label: \\"MUI\\",\\n      children: [{\\n        id: \\"8\\",\\n        label: \\"index.js\\"\\n      }]\\n    }]\\n  }];\\n  return <TreeView nodes={nodes} />;\\n}",\n      ...BasicTreeView.parameters?.docs?.source\n    }\n  }\n};\nMultiSelection.parameters = {\n  ...MultiSelection.parameters,\n  docs: {\n    ...MultiSelection.parameters?.docs,\n    source: {\n      originalSource: "() => {\\n  const nodes = [{\\n    id: \\"1\\",\\n    label: \\"Applications\\",\\n    children: [{\\n      id: \\"2\\",\\n      label: \\"Calendar\\"\\n    }, {\\n      id: \\"3\\",\\n      label: \\"Chrome\\"\\n    }, {\\n      id: \\"4\\",\\n      label: \\"Webstorm\\"\\n    }]\\n  }, {\\n    id: \\"5\\",\\n    label: \\"Documents\\",\\n    children: [{\\n      id: \\"6\\",\\n      label: \\"MUI\\",\\n      children: [{\\n        id: \\"7\\",\\n        label: \\"src\\",\\n        children: [{\\n          id: \\"8\\",\\n          label: \\"index.js\\"\\n        }, {\\n          id: \\"9\\",\\n          label: \\"tree-view.js\\"\\n        }]\\n      }]\\n    }]\\n  }];\\n  const [expanded, setExpanded] = React.useState([]);\\n  const [selected, setSelected] = React.useState([]);\\n  const handleExpandClick = () => {\\n    setExpanded(oldExpanded => oldExpanded.length === 0 ? [\\"1\\", \\"5\\", \\"6\\", \\"7\\"] : []);\\n  };\\n  const handleSelectClick = () => {\\n    setSelected(oldSelected => oldSelected.length === 0 ? [\\"1\\", \\"2\\", \\"3\\", \\"4\\", \\"5\\", \\"6\\", \\"7\\", \\"8\\", \\"9\\"] : []);\\n  };\\n  return <Box sx={{\\n    height: 270,\\n    flexGrow: 1,\\n    maxWidth: 400,\\n    overflowY: \\"auto\\"\\n  }}>\\n      <Box sx={{\\n      mb: 1\\n    }}>\\n        <Button onClick={handleExpandClick}>\\n          {expanded.length === 0 ? \\"Expand all\\" : \\"Collapse all\\"}\\n        </Button>\\n        <Button onClick={handleSelectClick}>\\n          {selected.length === 0 ? \\"Select all\\" : \\"Unselect all\\"}\\n        </Button>\\n      </Box>\\n\\n      <TreeView nodes={nodes} expandedIds={expanded} selectedIds={selected} onExpended={setExpanded} onSelected={setSelected} multiSelect />\\n    </Box>;\\n}",\n      ...MultiSelection.parameters?.docs?.source\n    }\n  }\n};\nGmailCloneStyles.parameters = {\n  ...GmailCloneStyles.parameters,\n  docs: {\n    ...GmailCloneStyles.parameters?.docs,\n    source: {\n      originalSource: "() => {\\n  const nodes = [{\\n    id: \\"1\\",\\n    label: \\"All Mail\\",\\n    icon: \\"Mail\\"\\n  }, {\\n    id: \\"2\\",\\n    label: \\"Trash\\",\\n    icon: \\"Delete\\"\\n  }, {\\n    id: \\"3\\",\\n    label: \\"Categories\\",\\n    icon: \\"Label\\",\\n    children: [{\\n      id: \\"5\\",\\n      label: \\"Social\\",\\n      icon: \\"SupervisorAccount\\",\\n      info: \\"90\\",\\n      color: \\"#1a73e8\\",\\n      bgColor: \\"#e8f0fe\\"\\n    }, {\\n      id: \\"6\\",\\n      label: \\"Updates\\",\\n      icon: \\"Info\\",\\n      info: \\"2,294\\",\\n      color: \\"#e3742f\\",\\n      bgColor: \\"#fcefe3\\"\\n    }, {\\n      id: \\"7\\",\\n      label: \\"Forums\\",\\n      icon: \\"Forum\\",\\n      info: \\"3,566\\",\\n      color: \\"#a250f5\\",\\n      bgColor: \\"#f3e8fd\\"\\n    }, {\\n      id: \\"8\\",\\n      label: \\"Promotions\\",\\n      icon: \\"LocalOffer\\",\\n      info: \\"733\\",\\n      color: \\"#3c8039\\",\\n      bgColor: \\"#e6f4ea\\"\\n    }]\\n  }, {\\n    id: \\"4\\",\\n    label: \\"History\\",\\n    icon: \\"Label\\"\\n  }];\\n  const [expanded, setExpanded] = React.useState([\\"3\\"]);\\n  const [selected, setSelected] = React.useState([]);\\n  return <TreeView nodes={nodes} expandedIds={expanded} selectedIds={selected} onExpended={setExpanded} onSelected={setSelected} TreeItemComponent={LabelIconTreeItem} {...LabelIconTreeItemIcons} />;\\n}",\n      ...GmailCloneStyles.parameters?.docs?.source\n    }\n  }\n};\nIndentBorderStyles.parameters = {\n  ...IndentBorderStyles.parameters,\n  docs: {\n    ...IndentBorderStyles.parameters?.docs,\n    source: {\n      originalSource: "() => {\\n  const nodes = [{\\n    id: \\"1\\",\\n    label: \\"Main\\",\\n    children: [{\\n      id: \\"2\\",\\n      label: \\"Hello\\"\\n    }, {\\n      id: \\"3\\",\\n      label: \\"Subtree with children\\",\\n      children: [{\\n        id: \\"6\\",\\n        label: \\"Hello\\"\\n      }, {\\n        id: \\"7\\",\\n        label: \\"Sub-subtree with children\\",\\n        children: [{\\n          id: \\"9\\",\\n          label: \\"Child 1\\"\\n        }, {\\n          id: \\"10\\",\\n          label: \\"Child 2\\"\\n        }, {\\n          id: \\"11\\",\\n          label: \\"Child 3\\"\\n        }]\\n      }, {\\n        id: \\"8\\",\\n        label: \\"Hello\\"\\n      }]\\n    }, {\\n      id: \\"4\\",\\n      label: \\"World\\"\\n    }, {\\n      id: \\"5\\",\\n      label: \\"Something something\\"\\n    }]\\n  }];\\n  const [expanded, setExpanded] = React.useState([\\"1\\"]);\\n  const [selected, setSelected] = React.useState([]);\\n  return <TreeView nodes={nodes} expandedIds={expanded} selectedIds={selected} onExpended={setExpanded} onSelected={setSelected} TreeItemComponent={IndentBorderTreeItem} {...IndentBorderTreeItemIcons} />;\\n}",\n      ...IndentBorderStyles.parameters?.docs?.source\n    }\n  }\n};\nCustomItem.parameters = {\n  ...CustomItem.parameters,\n  docs: {\n    ...CustomItem.parameters?.docs,\n    source: {\n      originalSource: "() => {\\n  const nodes = [{\\n    id: \\"1\\",\\n    label: \\"Main\\",\\n    icon: \\"Home\\",\\n    info: \\"test\\",\\n    // color: \\"red\\",\\n    // bgColor: \\"yellow\\",\\n    children: [{\\n      id: \\"2\\",\\n      label: \\"Hello\\"\\n    }, {\\n      id: \\"3\\",\\n      label: \\"Subtree with children\\",\\n      children: [{\\n        id: \\"6\\",\\n        label: \\"Hello\\"\\n      }, {\\n        id: \\"7\\",\\n        label: \\"Sub-subtree with children\\",\\n        children: [{\\n          id: \\"9\\",\\n          label: \\"Child 1\\"\\n        }, {\\n          id: \\"10\\",\\n          label: \\"Child 2\\"\\n        }, {\\n          id: \\"11\\",\\n          label: \\"Child 3\\"\\n        }]\\n      }, {\\n        id: \\"8\\",\\n        label: \\"Hello\\"\\n      }]\\n    }, {\\n      id: \\"4\\",\\n      label: \\"World\\"\\n    }, {\\n      id: \\"5\\",\\n      label: \\"Something something\\"\\n    }]\\n  }];\\n  const [expanded, setExpanded] = React.useState([\\"1\\"]);\\n  const [selected, setSelected] = React.useState([]);\\n  return <TreeView nodes={nodes} expandedIds={expanded} selectedIds={selected} onExpended={setExpanded} onSelected={setSelected} TransitionComponent={null} LabelComponent={StyledTreeItemContent} />;\\n}",\n      ...CustomItem.parameters?.docs?.source\n    }\n  }\n};',locationsMap:{default:{startLoc:{col:23,line:17},endLoc:{col:1,line:19},startBody:{col:23,line:17},endBody:{col:1,line:19}},"basic-tree-view":{startLoc:{col:29,line:20},endLoc:{col:1,line:44},startBody:{col:29,line:20},endBody:{col:1,line:44}},"multi-selection":{startLoc:{col:30,line:45},endLoc:{col:1,line:105},startBody:{col:30,line:45},endBody:{col:1,line:105}},"gmail-clone-styles":{startLoc:{col:32,line:106},endLoc:{col:1,line:156},startBody:{col:32,line:106},endBody:{col:1,line:156}},"indent-border-styles":{startLoc:{col:34,line:157},endLoc:{col:1,line:198},startBody:{col:34,line:157},endBody:{col:1,line:198}},"custom-item":{startLoc:{col:26,line:232},endLoc:{col:1,line:277},startBody:{col:26,line:232},endBody:{col:1,line:277}}}}},title:"Lab/TreeView",component:TreeView_TreeView};var actions={onClick:(0,dist.aD)("onClick")},Default=function(){return react.createElement(TreeView_TreeView,actions)};Default.displayName="Default";var BasicTreeView=function(){return react.createElement(TreeView_TreeView,{nodes:[{id:"1",label:"Applications",children:[{id:"2",label:"Calendar"}]},{id:"5",label:"Documents",children:[{id:"10",label:"OSS"},{id:"6",label:"MUI",children:[{id:"8",label:"index.js"}]}]}]})};BasicTreeView.displayName="BasicTreeView";var MultiSelection=function(){var _a=react.useState([]),expanded=_a[0],setExpanded=_a[1],_b=react.useState([]),selected=_b[0],setSelected=_b[1];return react.createElement(Box.Z,{sx:{height:270,flexGrow:1,maxWidth:400,overflowY:"auto"}},react.createElement(Box.Z,{sx:{mb:1}},react.createElement(Button.Z,{onClick:function(){setExpanded((function(oldExpanded){return 0===oldExpanded.length?["1","5","6","7"]:[]}))}},0===expanded.length?"Expand all":"Collapse all"),react.createElement(Button.Z,{onClick:function(){setSelected((function(oldSelected){return 0===oldSelected.length?["1","2","3","4","5","6","7","8","9"]:[]}))}},0===selected.length?"Select all":"Unselect all")),react.createElement(TreeView_TreeView,{nodes:[{id:"1",label:"Applications",children:[{id:"2",label:"Calendar"},{id:"3",label:"Chrome"},{id:"4",label:"Webstorm"}]},{id:"5",label:"Documents",children:[{id:"6",label:"MUI",children:[{id:"7",label:"src",children:[{id:"8",label:"index.js"},{id:"9",label:"tree-view.js"}]}]}]}],expandedIds:expanded,selectedIds:selected,onExpended:setExpanded,onSelected:setSelected,multiSelect:!0}))};MultiSelection.displayName="MultiSelection";var GmailCloneStyles=function(){var _a=react.useState(["3"]),expanded=_a[0],setExpanded=_a[1],_b=react.useState([]),selected=_b[0],setSelected=_b[1];return react.createElement(TreeView_TreeView,TreeView_stories_extends({nodes:[{id:"1",label:"All Mail",icon:"Mail"},{id:"2",label:"Trash",icon:"Delete"},{id:"3",label:"Categories",icon:"Label",children:[{id:"5",label:"Social",icon:"SupervisorAccount",info:"90",color:"#1a73e8",bgColor:"#e8f0fe"},{id:"6",label:"Updates",icon:"Info",info:"2,294",color:"#e3742f",bgColor:"#fcefe3"},{id:"7",label:"Forums",icon:"Forum",info:"3,566",color:"#a250f5",bgColor:"#f3e8fd"},{id:"8",label:"Promotions",icon:"LocalOffer",info:"733",color:"#3c8039",bgColor:"#e6f4ea"}]},{id:"4",label:"History",icon:"Label"}],expandedIds:expanded,selectedIds:selected,onExpended:setExpanded,onSelected:setSelected,TreeItemComponent:TreeItemComponents_LabelIconTreeItem},LabelIconTreeItemIcons))};GmailCloneStyles.displayName="GmailCloneStyles";var IndentBorderStyles=function(){var _a=react.useState(["1"]),expanded=_a[0],setExpanded=_a[1],_b=react.useState([]),selected=_b[0],setSelected=_b[1];return react.createElement(TreeView_TreeView,TreeView_stories_extends({nodes:[{id:"1",label:"Main",children:[{id:"2",label:"Hello"},{id:"3",label:"Subtree with children",children:[{id:"6",label:"Hello"},{id:"7",label:"Sub-subtree with children",children:[{id:"9",label:"Child 1"},{id:"10",label:"Child 2"},{id:"11",label:"Child 3"}]},{id:"8",label:"Hello"}]},{id:"4",label:"World"},{id:"5",label:"Something something"}]}],expandedIds:expanded,selectedIds:selected,onExpended:setExpanded,onSelected:setSelected,TreeItemComponent:TreeItemComponents_IndentBorderTreeItem},IndentBorderTreeItemIcons))};IndentBorderStyles.displayName="IndentBorderStyles";var StyledTreeItemContent=function(props){var _a=null!=props?props:{},nodeId=_a.nodeId,labelIcon=_a.icon,labelInfo=_a.info,labelText=_a.label,selected=_a.selected;return props&&react.createElement(Box.Z,{sx:{display:"flex",alignItems:"center",p:.5,pr:0}},labelIcon&&react.createElement(Box.Z,{color:"inherit",sx:{mr:1,display:"flex",alignItems:"center"}},react.createElement(SVGIcon.Z,{muiIconName:labelIcon},labelIcon)),labelText&&react.createElement(Typography.Z,{variant:"body2",sx:{fontWeight:"inherit",flexGrow:1,bgColor:selected?"red":void 0}},labelText," (",nodeId,")"),labelInfo&&react.createElement(Typography.Z,{variant:"caption",color:"inherit"},labelInfo))},CustomItem=function(){var _a=react.useState(["1"]),expanded=_a[0],setExpanded=_a[1],_b=react.useState([]),selected=_b[0],setSelected=_b[1];return react.createElement(TreeView_TreeView,{nodes:[{id:"1",label:"Main",icon:"Home",info:"test",children:[{id:"2",label:"Hello"},{id:"3",label:"Subtree with children",children:[{id:"6",label:"Hello"},{id:"7",label:"Sub-subtree with children",children:[{id:"9",label:"Child 1"},{id:"10",label:"Child 2"},{id:"11",label:"Child 3"}]},{id:"8",label:"Hello"}]},{id:"4",label:"World"},{id:"5",label:"Something something"}]}],expandedIds:expanded,selectedIds:selected,onExpended:setExpanded,onSelected:setSelected,TransitionComponent:null,LabelComponent:StyledTreeItemContent})};CustomItem.displayName="CustomItem",Default.parameters=_objectSpread(_objectSpread({},Default.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_a=Default.parameters)||void 0===_a?void 0:_a.docs),{},{source:_objectSpread({originalSource:"() => {\n  return <TreeView {...actions} />;\n}"},null===(_c=null===(_b=Default.parameters)||void 0===_b?void 0:_b.docs)||void 0===_c?void 0:_c.source)})}),BasicTreeView.parameters=_objectSpread(_objectSpread({},BasicTreeView.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_d=BasicTreeView.parameters)||void 0===_d?void 0:_d.docs),{},{source:_objectSpread({originalSource:'() => {\n  const nodes = [{\n    id: "1",\n    label: "Applications",\n    children: [{\n      id: "2",\n      label: "Calendar"\n    }]\n  }, {\n    id: "5",\n    label: "Documents",\n    children: [{\n      id: "10",\n      label: "OSS"\n    }, {\n      id: "6",\n      label: "MUI",\n      children: [{\n        id: "8",\n        label: "index.js"\n      }]\n    }]\n  }];\n  return <TreeView nodes={nodes} />;\n}'},null===(_f=null===(_e=BasicTreeView.parameters)||void 0===_e?void 0:_e.docs)||void 0===_f?void 0:_f.source)})}),MultiSelection.parameters=_objectSpread(_objectSpread({},MultiSelection.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_g=MultiSelection.parameters)||void 0===_g?void 0:_g.docs),{},{source:_objectSpread({originalSource:'() => {\n  const nodes = [{\n    id: "1",\n    label: "Applications",\n    children: [{\n      id: "2",\n      label: "Calendar"\n    }, {\n      id: "3",\n      label: "Chrome"\n    }, {\n      id: "4",\n      label: "Webstorm"\n    }]\n  }, {\n    id: "5",\n    label: "Documents",\n    children: [{\n      id: "6",\n      label: "MUI",\n      children: [{\n        id: "7",\n        label: "src",\n        children: [{\n          id: "8",\n          label: "index.js"\n        }, {\n          id: "9",\n          label: "tree-view.js"\n        }]\n      }]\n    }]\n  }];\n  const [expanded, setExpanded] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const handleExpandClick = () => {\n    setExpanded(oldExpanded => oldExpanded.length === 0 ? ["1", "5", "6", "7"] : []);\n  };\n  const handleSelectClick = () => {\n    setSelected(oldSelected => oldSelected.length === 0 ? ["1", "2", "3", "4", "5", "6", "7", "8", "9"] : []);\n  };\n  return <Box sx={{\n    height: 270,\n    flexGrow: 1,\n    maxWidth: 400,\n    overflowY: "auto"\n  }}>\n      <Box sx={{\n      mb: 1\n    }}>\n        <Button onClick={handleExpandClick}>\n          {expanded.length === 0 ? "Expand all" : "Collapse all"}\n        </Button>\n        <Button onClick={handleSelectClick}>\n          {selected.length === 0 ? "Select all" : "Unselect all"}\n        </Button>\n      </Box>\n\n      <TreeView nodes={nodes} expandedIds={expanded} selectedIds={selected} onExpended={setExpanded} onSelected={setSelected} multiSelect />\n    </Box>;\n}'},null===(_j=null===(_h=MultiSelection.parameters)||void 0===_h?void 0:_h.docs)||void 0===_j?void 0:_j.source)})}),GmailCloneStyles.parameters=_objectSpread(_objectSpread({},GmailCloneStyles.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_k=GmailCloneStyles.parameters)||void 0===_k?void 0:_k.docs),{},{source:_objectSpread({originalSource:'() => {\n  const nodes = [{\n    id: "1",\n    label: "All Mail",\n    icon: "Mail"\n  }, {\n    id: "2",\n    label: "Trash",\n    icon: "Delete"\n  }, {\n    id: "3",\n    label: "Categories",\n    icon: "Label",\n    children: [{\n      id: "5",\n      label: "Social",\n      icon: "SupervisorAccount",\n      info: "90",\n      color: "#1a73e8",\n      bgColor: "#e8f0fe"\n    }, {\n      id: "6",\n      label: "Updates",\n      icon: "Info",\n      info: "2,294",\n      color: "#e3742f",\n      bgColor: "#fcefe3"\n    }, {\n      id: "7",\n      label: "Forums",\n      icon: "Forum",\n      info: "3,566",\n      color: "#a250f5",\n      bgColor: "#f3e8fd"\n    }, {\n      id: "8",\n      label: "Promotions",\n      icon: "LocalOffer",\n      info: "733",\n      color: "#3c8039",\n      bgColor: "#e6f4ea"\n    }]\n  }, {\n    id: "4",\n    label: "History",\n    icon: "Label"\n  }];\n  const [expanded, setExpanded] = React.useState(["3"]);\n  const [selected, setSelected] = React.useState([]);\n  return <TreeView nodes={nodes} expandedIds={expanded} selectedIds={selected} onExpended={setExpanded} onSelected={setSelected} TreeItemComponent={LabelIconTreeItem} {...LabelIconTreeItemIcons} />;\n}'},null===(_m=null===(_l=GmailCloneStyles.parameters)||void 0===_l?void 0:_l.docs)||void 0===_m?void 0:_m.source)})}),IndentBorderStyles.parameters=_objectSpread(_objectSpread({},IndentBorderStyles.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_o=IndentBorderStyles.parameters)||void 0===_o?void 0:_o.docs),{},{source:_objectSpread({originalSource:'() => {\n  const nodes = [{\n    id: "1",\n    label: "Main",\n    children: [{\n      id: "2",\n      label: "Hello"\n    }, {\n      id: "3",\n      label: "Subtree with children",\n      children: [{\n        id: "6",\n        label: "Hello"\n      }, {\n        id: "7",\n        label: "Sub-subtree with children",\n        children: [{\n          id: "9",\n          label: "Child 1"\n        }, {\n          id: "10",\n          label: "Child 2"\n        }, {\n          id: "11",\n          label: "Child 3"\n        }]\n      }, {\n        id: "8",\n        label: "Hello"\n      }]\n    }, {\n      id: "4",\n      label: "World"\n    }, {\n      id: "5",\n      label: "Something something"\n    }]\n  }];\n  const [expanded, setExpanded] = React.useState(["1"]);\n  const [selected, setSelected] = React.useState([]);\n  return <TreeView nodes={nodes} expandedIds={expanded} selectedIds={selected} onExpended={setExpanded} onSelected={setSelected} TreeItemComponent={IndentBorderTreeItem} {...IndentBorderTreeItemIcons} />;\n}'},null===(_q=null===(_p=IndentBorderStyles.parameters)||void 0===_p?void 0:_p.docs)||void 0===_q?void 0:_q.source)})}),CustomItem.parameters=_objectSpread(_objectSpread({},CustomItem.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_r=CustomItem.parameters)||void 0===_r?void 0:_r.docs),{},{source:_objectSpread({originalSource:'() => {\n  const nodes = [{\n    id: "1",\n    label: "Main",\n    icon: "Home",\n    info: "test",\n    // color: "red",\n    // bgColor: "yellow",\n    children: [{\n      id: "2",\n      label: "Hello"\n    }, {\n      id: "3",\n      label: "Subtree with children",\n      children: [{\n        id: "6",\n        label: "Hello"\n      }, {\n        id: "7",\n        label: "Sub-subtree with children",\n        children: [{\n          id: "9",\n          label: "Child 1"\n        }, {\n          id: "10",\n          label: "Child 2"\n        }, {\n          id: "11",\n          label: "Child 3"\n        }]\n      }, {\n        id: "8",\n        label: "Hello"\n      }]\n    }, {\n      id: "4",\n      label: "World"\n    }, {\n      id: "5",\n      label: "Something something"\n    }]\n  }];\n  const [expanded, setExpanded] = React.useState(["1"]);\n  const [selected, setSelected] = React.useState([]);\n  return <TreeView nodes={nodes} expandedIds={expanded} selectedIds={selected} onExpended={setExpanded} onSelected={setSelected} TransitionComponent={null} LabelComponent={StyledTreeItemContent} />;\n}'},null===(_t=null===(_s=CustomItem.parameters)||void 0===_s?void 0:_s.docs)||void 0===_t?void 0:_t.source)})});var __namedExportsOrder=["Default","BasicTreeView","MultiSelection","GmailCloneStyles","IndentBorderStyles","CustomItem"]}}]);