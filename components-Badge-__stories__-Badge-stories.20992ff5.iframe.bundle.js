"use strict";(self.webpackChunk_hdriel_mui_simple=self.webpackChunk_hdriel_mui_simple||[]).push([[2719],{"./src/components/Badge/__stories__/Badge.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AnchorPosition:()=>AnchorPosition,Default:()=>Default,Hide:()=>Hide,Max99:()=>Max99,Overlap:()=>Overlap,ShowZero:()=>ShowZero,ThemedAndColored:()=>ThemedAndColored,Variant:()=>Variant,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Badge_stories});var react=__webpack_require__("./node_modules/react/index.js"),Mail=__webpack_require__("./node_modules/@mui/icons-material/esm/Mail.js"),Stack=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),Button=__webpack_require__("./node_modules/@mui/material/Button/Button.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),Badge=__webpack_require__("./node_modules/@mui/material/Badge/Badge.js");const Badge_styled_Badge=(0,__webpack_require__("./node_modules/@mui/material/styles/styled.js").ZP)(Badge.Z,{shouldForwardProp:propName=>!["customColor"].includes(propName)})`
  & .MuiBadge-badge {
    border: 1.5px solid ${props=>props.theme.palette.background.paper};
    background-color: ${props=>props.customColor};
  }
`;try{Badge_styled_Badge.displayName="Badge",Badge_styled_Badge.__docgenInfo={description:"",displayName:"Badge",props:{anchorOrigin:{defaultValue:{value:"{\nvertical: 'top',\nhorizontal: 'right',\n}"},description:"The anchor of the badge.",name:"anchorOrigin",required:!1,type:{name:"BadgeOrigin"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<BadgeClasses> & Partial<ClassNameMap<never>>"}},className:{defaultValue:null,description:"@ignore",name:"className",required:!1,type:{name:"string"}},color:{defaultValue:{value:"'default'"},description:"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).",name:"color",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"default"'},{value:'"primary"'},{value:'"secondary"'},{value:'"warning"'},{value:'"info"'},{value:'"success"'}]}},componentsProps:{defaultValue:{value:"{}"},description:"The extra props for the slot components.\nYou can override the existing props or add new ones.\n\nThis prop is an alias for the `slotProps` prop.\nIt's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.",name:"componentsProps",required:!1,type:{name:'{ root?: SlotComponentProps<"span", BadgeRootSlotPropsOverrides, { badgeContent: ReactNode; children?: ReactNode; invisible: boolean; max: number; slotProps?: ...; slots?: BadgeSlots; showZero: boolean; }>; badge?: SlotComponentProps<...>; }'}},components:{defaultValue:{value:"{}"},description:"The components used for each slot inside.\n\nThis prop is an alias for the `slots` prop.\nIt's recommended to use the `slots` prop instead.",name:"components",required:!1,type:{name:"{ Root?: ElementType<any>; Badge?: ElementType<any>; }"}},overlap:{defaultValue:{value:"'rectangular'"},description:"Wrapped shape the badge should overlap.",name:"overlap",required:!1,type:{name:"enum",value:[{value:'"circular"'},{value:'"rectangular"'}]}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},variant:{defaultValue:{value:"'standard'"},description:"The variant to use.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"standard"'},{value:'"dot"'}]}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLSpanElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Badge/Badge.styled.tsx#Badge"]={docgenInfo:Badge_styled_Badge.__docgenInfo,name:"Badge",path:"src/components/Badge/Badge.styled.tsx#Badge"})}catch(__react_docgen_typescript_loader_error){}var helpers=__webpack_require__("./src/utils/helpers.ts"),__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};function Badge_Badge(_a){var{variant,color,content,hide,showZero,max,overlap,vertical,horizontal}=_a,props=__rest(_a,["variant","color","content","hide","showZero","max","overlap","vertical","horizontal"]);const[customColor,muiColor]=(0,helpers.Ek)(color);return react.createElement(Badge_styled_Badge,Object.assign({color:muiColor,customColor:muiColor?void 0:customColor,badgeContent:content,variant,invisible:hide,showZero,max,overlap,anchorOrigin:(vertical||horizontal)&&{vertical:null!=vertical?vertical:"top",horizontal:null!=horizontal?horizontal:"right"}},props))}Badge_Badge.propTypes={color:prop_types_default().string,content:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().number]),variant:prop_types_default().oneOf(["dot"]),hide:prop_types_default().bool,showZero:prop_types_default().bool,max:prop_types_default().number,overlap:prop_types_default().oneOf(["circular"]),vertical:prop_types_default().oneOf(["top","bottom"]),horizontal:prop_types_default().oneOf(["right","left"])},Badge_Badge.defaultProps={color:void 0,content:0,variant:void 0,hide:void 0,showZero:void 0,max:void 0,overlap:void 0,vertical:void 0,horizontal:void 0};try{Badge_Badge.displayName="Badge",Badge_Badge.__docgenInfo={description:"",displayName:"Badge",props:{variant:{defaultValue:{value:"undefined"},description:"",name:"variant",required:!1,type:{name:"any"}},color:{defaultValue:{value:"undefined"},description:"",name:"color",required:!1,type:{name:"any"}},content:{defaultValue:{value:"0"},description:"",name:"content",required:!1,type:{name:"any"}},hide:{defaultValue:{value:"undefined"},description:"",name:"hide",required:!1,type:{name:"any"}},showZero:{defaultValue:{value:"undefined"},description:"",name:"showZero",required:!1,type:{name:"any"}},max:{defaultValue:{value:"undefined"},description:"",name:"max",required:!1,type:{name:"any"}},overlap:{defaultValue:{value:"undefined"},description:"",name:"overlap",required:!1,type:{name:"any"}},vertical:{defaultValue:{value:"undefined"},description:"",name:"vertical",required:!1,type:{name:"any"}},horizontal:{defaultValue:{value:"undefined"},description:"",name:"horizontal",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Badge/Badge.tsx#Badge"]={docgenInfo:Badge_Badge.__docgenInfo,name:"Badge",path:"src/components/Badge/Badge.tsx#Badge"})}catch(__react_docgen_typescript_loader_error){}var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v,_w,_x,_y,_z;const Badge_stories={parameters:{storySource:{source:'var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z;\nimport React, { useState } from "react";\nimport { Mail as MainIcon } from "@mui/icons-material";\nimport { Stack, Button, Box } from "@mui/material";\nimport Badge from "../Badge";\nexport default {\n  title: "Data-Display/Badge",\n  component: Badge\n};\nconst actions = {};\nexport const Default = () => {\n  return /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions), /*#__PURE__*/React.createElement(MainIcon, null));\n};\nexport const ThemedAndColored = () => {\n  return /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    spacing: 3\n  }, [undefined, "primary", "secondary", "info", "success", "warning", "error", "#d05e00"].map((color, index) => /*#__PURE__*/React.createElement(Badge, Object.assign({\n    key: index\n  }, actions, {\n    content: 1,\n    color: color\n  }), /*#__PURE__*/React.createElement(MainIcon, null))));\n};\nexport const Variant = () => {\n  return /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    spacing: 3,\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    content: "b",\n    color: "secondary"\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    content: "b",\n    color: "secondary",\n    variant: "dot"\n  }), /*#__PURE__*/React.createElement(MainIcon, null)));\n};\nexport const Hide = () => {\n  const [hide, setHide] = useState(false);\n  return /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    spacing: 3,\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: "secondary",\n    onClick: () => setHide(h => !h)\n  }, hide ? "show" : "hide"), /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    content: "b",\n    color: "secondary",\n    hide: hide\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    color: "secondary",\n    hide: hide\n  }), /*#__PURE__*/React.createElement(MainIcon, null)));\n};\nexport const ShowZero = () => {\n  return /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    spacing: 3,\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    content: 0,\n    color: "secondary",\n    showZero: false\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    content: 0,\n    color: "secondary",\n    showZero: true\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    content: 0,\n    color: "secondary"\n  }), /*#__PURE__*/React.createElement(MainIcon, null)));\n};\nexport const Max99 = () => {\n  return /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    spacing: 3,\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    content: 9\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    content: 99\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    content: 999\n  }), /*#__PURE__*/React.createElement(MainIcon, null)));\n};\nconst shapeStyles = {\n  bgcolor: "secondary.main",\n  width: 40,\n  height: 40\n};\nconst shapeCircleStyles = {\n  borderRadius: "50%"\n};\nconst rectangle = /*#__PURE__*/React.createElement(Box, {\n  component: "span",\n  sx: shapeStyles\n});\nconst circle = /*#__PURE__*/React.createElement(Box, {\n  component: "span",\n  sx: Object.assign(Object.assign({}, shapeStyles), shapeCircleStyles)\n});\nexport const Overlap = () => {\n  return /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    spacing: 3,\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    content: " "\n  }), rectangle), /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    content: " ",\n    variant: "dot"\n  }), rectangle), /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    content: " ",\n    overlap: "circular"\n  }), circle), /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    content: " ",\n    overlap: "circular",\n    variant: "dot"\n  }), circle));\n};\nexport const AnchorPosition = () => {\n  return /*#__PURE__*/React.createElement(Stack, {\n    direction: "column",\n    spacing: 3,\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    spacing: 5,\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    content: "T",\n    vertical: "top"\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    content: "B",\n    vertical: "bottom"\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    content: "R",\n    horizontal: "right"\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    content: "L",\n    horizontal: "left"\n  }), /*#__PURE__*/React.createElement(MainIcon, null))), /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    spacing: 5,\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    content: "TR",\n    vertical: "top",\n    horizontal: "right"\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    content: "TL",\n    vertical: "top",\n    horizontal: "left"\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    content: "BR",\n    vertical: "bottom",\n    horizontal: "right"\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, Object.assign({}, actions, {\n    content: "BL",\n    vertical: "bottom",\n    horizontal: "left"\n  }), /*#__PURE__*/React.createElement(MainIcon, null))));\n};\nDefault.parameters = Object.assign(Object.assign({}, Default.parameters), {\n  docs: Object.assign(Object.assign({}, (_a = Default.parameters) === null || _a === void 0 ? void 0 : _a.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  return <Badge {...actions}>\\n      <MainIcon />\\n    </Badge>;\\n}"\n    }, (_c = (_b = Default.parameters) === null || _b === void 0 ? void 0 : _b.docs) === null || _c === void 0 ? void 0 : _c.source)\n  })\n});\nThemedAndColored.parameters = Object.assign(Object.assign({}, ThemedAndColored.parameters), {\n  docs: Object.assign(Object.assign({}, (_d = ThemedAndColored.parameters) === null || _d === void 0 ? void 0 : _d.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  return <Stack direction=\\"row\\" spacing={3}>\\n      {[undefined, \\"primary\\", \\"secondary\\", \\"info\\", \\"success\\", \\"warning\\", \\"error\\", \\"#d05e00\\"].map((color, index) => <Badge key={index} {...actions} content={1} color={color}>\\n          <MainIcon />\\n        </Badge>)}\\n    </Stack>;\\n}"\n    }, (_f = (_e = ThemedAndColored.parameters) === null || _e === void 0 ? void 0 : _e.docs) === null || _f === void 0 ? void 0 : _f.source)\n  })\n});\nVariant.parameters = Object.assign(Object.assign({}, Variant.parameters), {\n  docs: Object.assign(Object.assign({}, (_g = Variant.parameters) === null || _g === void 0 ? void 0 : _g.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  return <Stack direction=\\"row\\" spacing={3} alignItems={\\"center\\"}>\\n      <Badge {...actions} content={\\"b\\"} color=\\"secondary\\">\\n        <MainIcon />\\n      </Badge>\\n      <Badge {...actions} content={\\"b\\"} color=\\"secondary\\" variant=\\"dot\\">\\n        <MainIcon />\\n      </Badge>\\n    </Stack>;\\n}"\n    }, (_j = (_h = Variant.parameters) === null || _h === void 0 ? void 0 : _h.docs) === null || _j === void 0 ? void 0 : _j.source)\n  })\n});\nHide.parameters = Object.assign(Object.assign({}, Hide.parameters), {\n  docs: Object.assign(Object.assign({}, (_k = Hide.parameters) === null || _k === void 0 ? void 0 : _k.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  const [hide, setHide] = useState(false);\\n  return <Stack direction=\\"row\\" spacing={3} alignItems={\\"center\\"}>\\n      <Button color=\\"secondary\\" onClick={() => setHide(h => !h)}>\\n        {hide ? \\"show\\" : \\"hide\\"}\\n      </Button>\\n      <Badge {...actions} content={\\"b\\"} color=\\"secondary\\" hide={hide}>\\n        <MainIcon />\\n      </Badge>\\n      <Badge {...actions} color=\\"secondary\\" hide={hide}>\\n        <MainIcon />\\n      </Badge>\\n    </Stack>;\\n}"\n    }, (_m = (_l = Hide.parameters) === null || _l === void 0 ? void 0 : _l.docs) === null || _m === void 0 ? void 0 : _m.source)\n  })\n});\nShowZero.parameters = Object.assign(Object.assign({}, ShowZero.parameters), {\n  docs: Object.assign(Object.assign({}, (_o = ShowZero.parameters) === null || _o === void 0 ? void 0 : _o.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  return <Stack direction=\\"row\\" spacing={3} alignItems={\\"center\\"}>\\n      <Badge {...actions} content={0} color=\\"secondary\\" showZero={false}>\\n        <MainIcon />\\n      </Badge>\\n      <Badge {...actions} content={0} color=\\"secondary\\" showZero={true}>\\n        <MainIcon />\\n      </Badge>\\n      <Badge {...actions} content={0} color=\\"secondary\\">\\n        <MainIcon />\\n      </Badge>\\n    </Stack>;\\n}"\n    }, (_q = (_p = ShowZero.parameters) === null || _p === void 0 ? void 0 : _p.docs) === null || _q === void 0 ? void 0 : _q.source)\n  })\n});\nMax99.parameters = Object.assign(Object.assign({}, Max99.parameters), {\n  docs: Object.assign(Object.assign({}, (_r = Max99.parameters) === null || _r === void 0 ? void 0 : _r.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  return <Stack direction=\\"row\\" spacing={3} alignItems={\\"center\\"}>\\n      <Badge {...actions} content={9}>\\n        <MainIcon />\\n      </Badge>\\n      <Badge {...actions} content={99}>\\n        <MainIcon />\\n      </Badge>\\n      <Badge {...actions} content={999}>\\n        <MainIcon />\\n      </Badge>\\n    </Stack>;\\n}"\n    }, (_t = (_s = Max99.parameters) === null || _s === void 0 ? void 0 : _s.docs) === null || _t === void 0 ? void 0 : _t.source)\n  })\n});\nOverlap.parameters = Object.assign(Object.assign({}, Overlap.parameters), {\n  docs: Object.assign(Object.assign({}, (_u = Overlap.parameters) === null || _u === void 0 ? void 0 : _u.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  return <Stack direction=\\"row\\" spacing={3} alignItems={\\"center\\"}>\\n      <Badge {...actions} content={\\" \\"}>\\n        {rectangle}\\n      </Badge>\\n      <Badge {...actions} content={\\" \\"} variant=\\"dot\\">\\n        {rectangle}\\n      </Badge>\\n      <Badge {...actions} content={\\" \\"} overlap={\\"circular\\"}>\\n        {circle}\\n      </Badge>\\n      <Badge {...actions} content={\\" \\"} overlap={\\"circular\\"} variant=\\"dot\\">\\n        {circle}\\n      </Badge>\\n    </Stack>;\\n}"\n    }, (_w = (_v = Overlap.parameters) === null || _v === void 0 ? void 0 : _v.docs) === null || _w === void 0 ? void 0 : _w.source)\n  })\n});\nAnchorPosition.parameters = Object.assign(Object.assign({}, AnchorPosition.parameters), {\n  docs: Object.assign(Object.assign({}, (_x = AnchorPosition.parameters) === null || _x === void 0 ? void 0 : _x.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  return <Stack direction=\\"column\\" spacing={3} alignItems={\\"center\\"}>\\n      <Stack direction=\\"row\\" spacing={5} alignItems={\\"center\\"}>\\n        <Badge {...actions} content={\\"T\\"} vertical=\\"top\\">\\n          <MainIcon />\\n        </Badge>\\n        <Badge {...actions} content={\\"B\\"} vertical=\\"bottom\\">\\n          <MainIcon />\\n        </Badge>\\n        <Badge {...actions} content={\\"R\\"} horizontal=\\"right\\">\\n          <MainIcon />\\n        </Badge>\\n        <Badge {...actions} content={\\"L\\"} horizontal=\\"left\\">\\n          <MainIcon />\\n        </Badge>\\n      </Stack>\\n      <Stack direction=\\"row\\" spacing={5} alignItems={\\"center\\"}>\\n        <Badge {...actions} content={\\"TR\\"} vertical=\\"top\\" horizontal=\\"right\\">\\n          <MainIcon />\\n        </Badge>\\n        <Badge {...actions} content={\\"TL\\"} vertical=\\"top\\" horizontal=\\"left\\">\\n          <MainIcon />\\n        </Badge>\\n        <Badge {...actions} content={\\"BR\\"} vertical=\\"bottom\\" horizontal=\\"right\\">\\n          <MainIcon />\\n        </Badge>\\n        <Badge {...actions} content={\\"BL\\"} vertical=\\"bottom\\" horizontal=\\"left\\">\\n          <MainIcon />\\n        </Badge>\\n      </Stack>\\n    </Stack>;\\n}"\n    }, (_z = (_y = AnchorPosition.parameters) === null || _y === void 0 ? void 0 : _y.docs) === null || _z === void 0 ? void 0 : _z.source)\n  })\n});',locationsMap:{default:{startLoc:{col:23,line:11},endLoc:{col:1,line:13},startBody:{col:23,line:11},endBody:{col:1,line:13}},"themed-and-colored":{startLoc:{col:32,line:14},endLoc:{col:1,line:24},startBody:{col:32,line:14},endBody:{col:1,line:24}},variant:{startLoc:{col:23,line:25},endLoc:{col:1,line:38},startBody:{col:23,line:25},endBody:{col:1,line:38}},hide:{startLoc:{col:20,line:39},endLoc:{col:1,line:56},startBody:{col:20,line:39},endBody:{col:1,line:56}},"show-zero":{startLoc:{col:24,line:57},endLoc:{col:1,line:74},startBody:{col:24,line:57},endBody:{col:1,line:74}},"max-99":{startLoc:{col:21,line:75},endLoc:{col:1,line:87},startBody:{col:21,line:75},endBody:{col:1,line:87}},overlap:{startLoc:{col:23,line:104},endLoc:{col:1,line:122},startBody:{col:23,line:104},endBody:{col:1,line:122}},"anchor-position":{startLoc:{col:30,line:123},endLoc:{col:1,line:165},startBody:{col:30,line:123},endBody:{col:1,line:165}}}}},title:"Data-Display/Badge",component:Badge_Badge},actions={},Default=()=>react.createElement(Badge_Badge,Object.assign({},actions),react.createElement(Mail.Z,null)),ThemedAndColored=()=>react.createElement(Stack.Z,{direction:"row",spacing:3},[void 0,"primary","secondary","info","success","warning","error","#d05e00"].map(((color,index)=>react.createElement(Badge_Badge,Object.assign({key:index},actions,{content:1,color}),react.createElement(Mail.Z,null))))),Variant=()=>react.createElement(Stack.Z,{direction:"row",spacing:3,alignItems:"center"},react.createElement(Badge_Badge,Object.assign({},actions,{content:"b",color:"secondary"}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Object.assign({},actions,{content:"b",color:"secondary",variant:"dot"}),react.createElement(Mail.Z,null))),Hide=()=>{const[hide,setHide]=(0,react.useState)(!1);return react.createElement(Stack.Z,{direction:"row",spacing:3,alignItems:"center"},react.createElement(Button.Z,{color:"secondary",onClick:()=>setHide((h=>!h))},hide?"show":"hide"),react.createElement(Badge_Badge,Object.assign({},actions,{content:"b",color:"secondary",hide}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Object.assign({},actions,{color:"secondary",hide}),react.createElement(Mail.Z,null)))},ShowZero=()=>react.createElement(Stack.Z,{direction:"row",spacing:3,alignItems:"center"},react.createElement(Badge_Badge,Object.assign({},actions,{content:0,color:"secondary",showZero:!1}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Object.assign({},actions,{content:0,color:"secondary",showZero:!0}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Object.assign({},actions,{content:0,color:"secondary"}),react.createElement(Mail.Z,null))),Max99=()=>react.createElement(Stack.Z,{direction:"row",spacing:3,alignItems:"center"},react.createElement(Badge_Badge,Object.assign({},actions,{content:9}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Object.assign({},actions,{content:99}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Object.assign({},actions,{content:999}),react.createElement(Mail.Z,null))),shapeStyles={bgcolor:"secondary.main",width:40,height:40},rectangle=react.createElement(Box.Z,{component:"span",sx:shapeStyles}),circle=react.createElement(Box.Z,{component:"span",sx:Object.assign(Object.assign({},shapeStyles),{borderRadius:"50%"})}),Overlap=()=>react.createElement(Stack.Z,{direction:"row",spacing:3,alignItems:"center"},react.createElement(Badge_Badge,Object.assign({},actions,{content:" "}),rectangle),react.createElement(Badge_Badge,Object.assign({},actions,{content:" ",variant:"dot"}),rectangle),react.createElement(Badge_Badge,Object.assign({},actions,{content:" ",overlap:"circular"}),circle),react.createElement(Badge_Badge,Object.assign({},actions,{content:" ",overlap:"circular",variant:"dot"}),circle)),AnchorPosition=()=>react.createElement(Stack.Z,{direction:"column",spacing:3,alignItems:"center"},react.createElement(Stack.Z,{direction:"row",spacing:5,alignItems:"center"},react.createElement(Badge_Badge,Object.assign({},actions,{content:"T",vertical:"top"}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Object.assign({},actions,{content:"B",vertical:"bottom"}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Object.assign({},actions,{content:"R",horizontal:"right"}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Object.assign({},actions,{content:"L",horizontal:"left"}),react.createElement(Mail.Z,null))),react.createElement(Stack.Z,{direction:"row",spacing:5,alignItems:"center"},react.createElement(Badge_Badge,Object.assign({},actions,{content:"TR",vertical:"top",horizontal:"right"}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Object.assign({},actions,{content:"TL",vertical:"top",horizontal:"left"}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Object.assign({},actions,{content:"BR",vertical:"bottom",horizontal:"right"}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Object.assign({},actions,{content:"BL",vertical:"bottom",horizontal:"left"}),react.createElement(Mail.Z,null))));Default.parameters=Object.assign(Object.assign({},Default.parameters),{docs:Object.assign(Object.assign({},null===(_a=Default.parameters)||void 0===_a?void 0:_a.docs),{source:Object.assign({originalSource:"() => {\n  return <Badge {...actions}>\n      <MainIcon />\n    </Badge>;\n}"},null===(_c=null===(_b=Default.parameters)||void 0===_b?void 0:_b.docs)||void 0===_c?void 0:_c.source)})}),ThemedAndColored.parameters=Object.assign(Object.assign({},ThemedAndColored.parameters),{docs:Object.assign(Object.assign({},null===(_d=ThemedAndColored.parameters)||void 0===_d?void 0:_d.docs),{source:Object.assign({originalSource:'() => {\n  return <Stack direction="row" spacing={3}>\n      {[undefined, "primary", "secondary", "info", "success", "warning", "error", "#d05e00"].map((color, index) => <Badge key={index} {...actions} content={1} color={color}>\n          <MainIcon />\n        </Badge>)}\n    </Stack>;\n}'},null===(_f=null===(_e=ThemedAndColored.parameters)||void 0===_e?void 0:_e.docs)||void 0===_f?void 0:_f.source)})}),Variant.parameters=Object.assign(Object.assign({},Variant.parameters),{docs:Object.assign(Object.assign({},null===(_g=Variant.parameters)||void 0===_g?void 0:_g.docs),{source:Object.assign({originalSource:'() => {\n  return <Stack direction="row" spacing={3} alignItems={"center"}>\n      <Badge {...actions} content={"b"} color="secondary">\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} content={"b"} color="secondary" variant="dot">\n        <MainIcon />\n      </Badge>\n    </Stack>;\n}'},null===(_j=null===(_h=Variant.parameters)||void 0===_h?void 0:_h.docs)||void 0===_j?void 0:_j.source)})}),Hide.parameters=Object.assign(Object.assign({},Hide.parameters),{docs:Object.assign(Object.assign({},null===(_k=Hide.parameters)||void 0===_k?void 0:_k.docs),{source:Object.assign({originalSource:'() => {\n  const [hide, setHide] = useState(false);\n  return <Stack direction="row" spacing={3} alignItems={"center"}>\n      <Button color="secondary" onClick={() => setHide(h => !h)}>\n        {hide ? "show" : "hide"}\n      </Button>\n      <Badge {...actions} content={"b"} color="secondary" hide={hide}>\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} color="secondary" hide={hide}>\n        <MainIcon />\n      </Badge>\n    </Stack>;\n}'},null===(_m=null===(_l=Hide.parameters)||void 0===_l?void 0:_l.docs)||void 0===_m?void 0:_m.source)})}),ShowZero.parameters=Object.assign(Object.assign({},ShowZero.parameters),{docs:Object.assign(Object.assign({},null===(_o=ShowZero.parameters)||void 0===_o?void 0:_o.docs),{source:Object.assign({originalSource:'() => {\n  return <Stack direction="row" spacing={3} alignItems={"center"}>\n      <Badge {...actions} content={0} color="secondary" showZero={false}>\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} content={0} color="secondary" showZero={true}>\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} content={0} color="secondary">\n        <MainIcon />\n      </Badge>\n    </Stack>;\n}'},null===(_q=null===(_p=ShowZero.parameters)||void 0===_p?void 0:_p.docs)||void 0===_q?void 0:_q.source)})}),Max99.parameters=Object.assign(Object.assign({},Max99.parameters),{docs:Object.assign(Object.assign({},null===(_r=Max99.parameters)||void 0===_r?void 0:_r.docs),{source:Object.assign({originalSource:'() => {\n  return <Stack direction="row" spacing={3} alignItems={"center"}>\n      <Badge {...actions} content={9}>\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} content={99}>\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} content={999}>\n        <MainIcon />\n      </Badge>\n    </Stack>;\n}'},null===(_t=null===(_s=Max99.parameters)||void 0===_s?void 0:_s.docs)||void 0===_t?void 0:_t.source)})}),Overlap.parameters=Object.assign(Object.assign({},Overlap.parameters),{docs:Object.assign(Object.assign({},null===(_u=Overlap.parameters)||void 0===_u?void 0:_u.docs),{source:Object.assign({originalSource:'() => {\n  return <Stack direction="row" spacing={3} alignItems={"center"}>\n      <Badge {...actions} content={" "}>\n        {rectangle}\n      </Badge>\n      <Badge {...actions} content={" "} variant="dot">\n        {rectangle}\n      </Badge>\n      <Badge {...actions} content={" "} overlap={"circular"}>\n        {circle}\n      </Badge>\n      <Badge {...actions} content={" "} overlap={"circular"} variant="dot">\n        {circle}\n      </Badge>\n    </Stack>;\n}'},null===(_w=null===(_v=Overlap.parameters)||void 0===_v?void 0:_v.docs)||void 0===_w?void 0:_w.source)})}),AnchorPosition.parameters=Object.assign(Object.assign({},AnchorPosition.parameters),{docs:Object.assign(Object.assign({},null===(_x=AnchorPosition.parameters)||void 0===_x?void 0:_x.docs),{source:Object.assign({originalSource:'() => {\n  return <Stack direction="column" spacing={3} alignItems={"center"}>\n      <Stack direction="row" spacing={5} alignItems={"center"}>\n        <Badge {...actions} content={"T"} vertical="top">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"B"} vertical="bottom">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"R"} horizontal="right">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"L"} horizontal="left">\n          <MainIcon />\n        </Badge>\n      </Stack>\n      <Stack direction="row" spacing={5} alignItems={"center"}>\n        <Badge {...actions} content={"TR"} vertical="top" horizontal="right">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"TL"} vertical="top" horizontal="left">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"BR"} vertical="bottom" horizontal="right">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"BL"} vertical="bottom" horizontal="left">\n          <MainIcon />\n        </Badge>\n      </Stack>\n    </Stack>;\n}'},null===(_z=null===(_y=AnchorPosition.parameters)||void 0===_y?void 0:_y.docs)||void 0===_z?void 0:_z.source)})});const __namedExportsOrder=["Default","ThemedAndColored","Variant","Hide","ShowZero","Max99","Overlap","AnchorPosition"]},"./src/utils/helpers.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$K:()=>isDefined,Ek:()=>useCustomColor,F2:()=>generatePassword,_f:()=>numberToPx,_v:()=>sleep,im:()=>getCapitalLetters,mY:()=>getTextWidth,q4:()=>getCustomColor,u_:()=>stringToColor,vQ:()=>copyToClipboard});var lodash_es__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/lodash-es/get.js"),_mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mui/system/esm/colorManipulator.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@mui/material/styles/useTheme.js");const toHex=__webpack_require__("./node_modules/colornames/index.js");function getCapitalLetters(str){var _a;const chars=null!==(_a=null==str?void 0:str.split(" ").filter((v=>!!v)).map((word=>word[0].toUpperCase())))&&void 0!==_a?_a:void 0;if(!chars)return;const[firstChar,secondChar]=[null==chars?void 0:chars[0],null==chars?void 0:chars.slice(-1)];return chars.length>1?[firstChar,secondChar]:[firstChar]}function stringToColor(string){if(!string)return;let i,hash=0;for(i=0;i<string.length;i+=1)hash=string.charCodeAt(i)+((hash<<5)-hash);let color="#";for(i=0;i<3;i+=1){color+=`00${(hash>>8*i&255).toString(16)}`.slice(-2)}return color}function numberToPx(field){return"number"==typeof field?`${field}px`:field}function isDefined(value){return null!=value}function useCustomColor(color,options){return getCustomColor({theme:(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_0__.Z)(),customColor:color},options)}function getCustomColor(props,{field,muiLevel="main",opacity=1,darken:_darken,lighten:_lighten}={}){var _a,_b,_c,_d;const customColor=null!==(_a=null==props?void 0:props[field])&&void 0!==_a?_a:null==props?void 0:props.customColor;if(!customColor)return[];if(Array.isArray(customColor))return customColor;if("inherit"===customColor)return[void 0,"inherit"];let color=null!==(_d=null!==(_c=null!==(_b=(0,lodash_es__WEBPACK_IMPORTED_MODULE_1__.Z)(props,`theme.palette.${customColor}.${muiLevel}`))&&void 0!==_b?_b:(0,lodash_es__WEBPACK_IMPORTED_MODULE_1__.Z)(props,`theme.palette.${customColor}`))&&void 0!==_c?_c:toHex(customColor))&&void 0!==_d?_d:customColor;if(!isValidColor(color))return[];const isMuiColor=color&&color!==customColor;return color=isDefined(opacity)?(0,_mui_material__WEBPACK_IMPORTED_MODULE_2__.Fq)(color,opacity):color,color=isDefined(_darken)?(0,_mui_material__WEBPACK_IMPORTED_MODULE_2__._j)(color,_darken):color,color=isDefined(_lighten)?(0,_mui_material__WEBPACK_IMPORTED_MODULE_2__.$n)(color,_lighten):color,[color,isMuiColor?customColor:void 0]}const isValidColor=color=>CSS.supports("color",color),copyToClipboard=value=>{if(!value)return!1;const textField=document.createElement("textarea");return textField.innerText=value,document.body.appendChild(textField),textField.select(),document.execCommand("copy"),textField.remove(),!0},NUMBERS="0123456789",LOWERCASE="abcdefghijklmnopqrstuvwxyz",UPPERCASE="ABCDEFGHIJKLMNOPQRSTUVWXYZ",SYMBOL="!@#$%^&*()";function generatePassword({length=12,numbers=!0,lowercase=!0,uppercase=!0,symbol=!0}={}){const chars=[numbers&&NUMBERS,lowercase&&LOWERCASE,uppercase&&UPPERCASE,symbol&&SYMBOL].filter(Boolean).join("");let password="";for(let i=0;i<=length;i++){const randomNumber=Math.floor(Math.random()*chars.length);password+=chars.substring(randomNumber,randomNumber+1)}return password}function sleep(delay=0){return new Promise((resolve=>setTimeout(resolve,delay)))}function getTextWidth(text){const element=document.createElement("span");element.textContent=text,document.body.appendChild(element);const{offsetWidth,scrollWidth}=element;return element.parentElement.removeChild(element),{offsetWidth,scrollWidth}}}}]);
//# sourceMappingURL=components-Badge-__stories__-Badge-stories.20992ff5.iframe.bundle.js.map