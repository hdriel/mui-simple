"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[734],{"./src/components/_FIXED/Button/__stories__/ButtonGroup.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Color_:()=>Color_,Default:()=>Default,DisableElevation:()=>DisableElevation,DisableRipple:()=>DisableRipple,Disabled:()=>Disabled,FullWidth:()=>FullWidth,Size_:()=>Size_,Variant_:()=>Variant_,VerticalOrientation:()=>VerticalOrientation,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ButtonGroup_stories});var react=__webpack_require__("./node_modules/react/index.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),react_is=__webpack_require__("./node_modules/react-is/index.js"),Button=__webpack_require__("./src/components/_FIXED/Button/Button.tsx"),Button_styled=__webpack_require__("./src/components/_FIXED/Button/Button.styled.tsx"),helpers=__webpack_require__("./src/utils/helpers.ts");const ButtonGroup=({children,color,disableElevation,disabled=!1,...rest})=>{const[customColor,muiColor]=(0,helpers.Es)(color),buttons=[].concat((0,react_is.isFragment)(children)?children.props.children:children??[]).filter((child=>child?.type?.displayName===Button.A.displayName)).map(((child,index,arr)=>react.cloneElement(child,{key:`B${index}`,disableElevation,color:child.props.color??color}))).filter(Boolean);return react.createElement(Button_styled.e2,{color:muiColor,customColor:muiColor?void 0:customColor,disableElevation,disabled,...rest},buttons)};ButtonGroup.displayName="ButtonGroup";const Button_ButtonGroup=ButtonGroup;ButtonGroup.__docgenInfo={description:"",methods:[],displayName:"ButtonGroup",props:{color:{required:!1,tsType:{name:"string"},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},disableElevation:{required:!1,tsType:{name:"boolean"},description:""},disableRipple:{required:!1,tsType:{name:"boolean"},description:""},fullWidth:{required:!1,tsType:{name:"boolean"},description:""},orientation:{required:!1,tsType:{name:"union",raw:"'horizontal' | 'vertical'",elements:[{name:"literal",value:"'horizontal'"},{name:"literal",value:"'vertical'"}]},description:""},size:{required:!1,tsType:{name:"union",raw:"'small' | 'medium' | 'large'",elements:[{name:"literal",value:"'small'"},{name:"literal",value:"'medium'"},{name:"literal",value:"'large'"}]},description:""},variant:{required:!1,tsType:{name:"union",raw:"'contained' | 'outlined' | 'text'",elements:[{name:"literal",value:"'contained'"},{name:"literal",value:"'outlined'"},{name:"literal",value:"'text'"}]},description:""}}};const ButtonGroup_stories={title:"Inputs/ButtonGroup",component:Button_ButtonGroup,tags:["autodocs"]},children=react.createElement(react.Fragment,null,react.createElement(Button.A,null,"Action 1"),react.createElement(Button.A,null,"Action 2"),react.createElement(Button.A,null,"Action 3")),Default={args:{children}},Color_=args=>react.createElement(Box.A,{sx:{display:"flex",flexDirection:"column",gap:3}},react.createElement(Button_ButtonGroup,{color:"#00ab92"},children),react.createElement(Button_ButtonGroup,{color:"primary"},children),react.createElement(Button_ButtonGroup,{color:"secondary"},children)),Disabled={args:{disabled:!0,children}},DisableElevation={args:{disableElevation:!0,children}},DisableRipple={args:{disableRipple:!0,children}},FullWidth={args:{fullWidth:!0,children}},VerticalOrientation={args:{orientation:"vertical",children}},Size_=args=>react.createElement(Box.A,{sx:{display:"flex",flexDirection:"column",gap:3}},react.createElement(Button_ButtonGroup,{size:"small"},children),react.createElement(Button_ButtonGroup,{size:"medium"},children),react.createElement(Button_ButtonGroup,{size:"large"},children)),Variant_=args=>react.createElement(Box.A,{sx:{display:"flex",flexDirection:"column",gap:3}},react.createElement(Button_ButtonGroup,{variant:"contained"},children),react.createElement(Button_ButtonGroup,{variant:"outlined"},children),react.createElement(Button_ButtonGroup,{variant:"text"},children)),__namedExportsOrder=["Default","Color_","Disabled","DisableElevation","DisableRipple","FullWidth","VerticalOrientation","Size_","Variant_"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    children\n  }\n}",...Default.parameters?.docs?.source}}},Color_.parameters={...Color_.parameters,docs:{...Color_.parameters?.docs,source:{originalSource:"args => <Box sx={{\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 3\n}}>\n        <ButtonGroup color={'#00ab92'}>{children}</ButtonGroup>\n        <ButtonGroup color={'primary'}>{children}</ButtonGroup>\n        <ButtonGroup color={'secondary'}>{children}</ButtonGroup>\n    </Box>",...Color_.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    disabled: true,\n    children\n  }\n}",...Disabled.parameters?.docs?.source}}},DisableElevation.parameters={...DisableElevation.parameters,docs:{...DisableElevation.parameters?.docs,source:{originalSource:"{\n  args: {\n    disableElevation: true,\n    children\n  }\n}",...DisableElevation.parameters?.docs?.source}}},DisableRipple.parameters={...DisableRipple.parameters,docs:{...DisableRipple.parameters?.docs,source:{originalSource:"{\n  args: {\n    disableRipple: true,\n    children\n  }\n}",...DisableRipple.parameters?.docs?.source}}},FullWidth.parameters={...FullWidth.parameters,docs:{...FullWidth.parameters?.docs,source:{originalSource:"{\n  args: {\n    fullWidth: true,\n    children\n  }\n}",...FullWidth.parameters?.docs?.source}}},VerticalOrientation.parameters={...VerticalOrientation.parameters,docs:{...VerticalOrientation.parameters?.docs,source:{originalSource:"{\n  args: {\n    orientation: 'vertical',\n    children\n  }\n}",...VerticalOrientation.parameters?.docs?.source}}},Size_.parameters={...Size_.parameters,docs:{...Size_.parameters?.docs,source:{originalSource:'args => <Box sx={{\n  display: \'flex\',\n  flexDirection: \'column\',\n  gap: 3\n}}>\n        <ButtonGroup size="small">{children}</ButtonGroup>\n        <ButtonGroup size="medium">{children}</ButtonGroup>\n        <ButtonGroup size="large">{children}</ButtonGroup>\n    </Box>',...Size_.parameters?.docs?.source}}},Variant_.parameters={...Variant_.parameters,docs:{...Variant_.parameters?.docs,source:{originalSource:'args => <Box sx={{\n  display: \'flex\',\n  flexDirection: \'column\',\n  gap: 3\n}}>\n        <ButtonGroup variant="contained">{children}</ButtonGroup>\n        <ButtonGroup variant="outlined">{children}</ButtonGroup>\n        <ButtonGroup variant="text">{children}</ButtonGroup>\n    </Box>',...Variant_.parameters?.docs?.source}}}}}]);