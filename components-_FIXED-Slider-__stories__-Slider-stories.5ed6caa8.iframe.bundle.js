"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[5103],{"./src/components/_FIXED/Slider/__stories__/Slider.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ChooseFromMarksList:()=>ChooseFromMarksList,Color_:()=>Color_,Default:()=>Default,DisablePadding:()=>DisablePadding,Disabled:()=>Disabled,DisplayValue_:()=>DisplayValue_,Icons:()=>Icons,InputCmp:()=>InputCmp,Label:()=>Label,Marks:()=>Marks,OnChangeEvent:()=>OnChangeEvent,OrientationVertical:()=>OrientationVertical,RangeMarks_:()=>RangeMarks_,Range_:()=>Range_,RemovePadding:()=>RemovePadding,Size_:()=>Size_,Styles_:()=>Styles_,TrackBarLinePosition_:()=>TrackBarLinePosition_,ValueLabelFormat:()=>ValueLabelFormat,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,onChangeCommitted:()=>onChangeCommitted});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),_mui_material__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),_mui_icons_material__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@mui/icons-material/esm/VolumeUp.js"),_Slider__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/_FIXED/Slider/Slider.tsx"),storybook_actions__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("storybook/actions"),_TextField_TextField__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/_FIXED/TextField/TextField.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__={title:"Inputs/Slider",component:_Slider__WEBPACK_IMPORTED_MODULE_1__.A,tags:["autodocs"]},Default={args:{}},Color_=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__.A,null,["#10DDCC","primary","success.light",{track:"#D0CCC0",thumb:"#150CCC"},{track:"success.dark",thumb:"error"}].map(((color,index)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Slider__WEBPACK_IMPORTED_MODULE_1__.A,{key:JSON.stringify(color),color,defaultValue:40+10*index})))),Disabled={args:{disabled:!0,value:35}},DisablePadding={args:{disablePadding:!0,label:"disable padding"}},DisplayValue_=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__.A,null,["on","off","auto"].map((displayValue=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Slider__WEBPACK_IMPORTED_MODULE_1__.A,{key:displayValue,displayValue,label:displayValue})))),Icons={args:{color:"secondary",endIcon:"VolumeDown",startIcon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_5__.A,null)}},Label={args:{label:"Slider Label"}},OrientationVertical={args:{label:"Slider Vertical",orientation:"vertical",startIcon:"AcUnit",endIcon:"Whatshot",disablePadding:!0,marks:[{value:0,label:"0°C"},{value:20,label:"20°C"},{value:37,label:"37°C"},{value:100,label:"100°C"}]},decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__.A,{sx:{height:300,px:3}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]},Size_=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__.A,null,["small","medium"].map((size=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Slider__WEBPACK_IMPORTED_MODULE_1__.A,_extends({},args,{key:size,size,label:size}))))),Styles_=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__.A,null,["ios","pretto","tooltip","airbnb"].map((sliderStyle=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Slider__WEBPACK_IMPORTED_MODULE_1__.A,_extends({},args,{key:sliderStyle,sliderStyle,label:`'${sliderStyle}' styles`}))))),OnChangeEvent={args:{},render:args=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Slider__WEBPACK_IMPORTED_MODULE_1__.A,_extends({},args,{value,onChange:e=>setValue(e.target.value)}))}},onChangeCommitted={args:{label:"on Change Committed",min:0,max:50,step:2,onChangeCommitted:(e,newValue)=>alert(JSON.stringify(null!=newValue?newValue:0,null,4))}},ValueLabelFormat={args:{label:"Value Label Format",valueLabelFormat:n=>`score: ${n}`},render:args=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Slider__WEBPACK_IMPORTED_MODULE_1__.A,_extends({},args,{value,onChange:e=>setValue(e.target.value)}))}},RemovePadding={args:{label:"Slider Remove Padding",removePadding:!0}},TrackBarLinePosition_=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__.A,null,["normal","none","inverted"].map((trackBarLinePosition=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Slider__WEBPACK_IMPORTED_MODULE_1__.A,_extends({},args,{key:trackBarLinePosition,trackBarLinePosition,label:trackBarLinePosition}))))),Range_=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__.A,null,[[150,200],{min:150,max:200},[-10,10,2],{min:-10,max:10,step:2}].map((range=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Slider__WEBPACK_IMPORTED_MODULE_1__.A,_extends({},args,{key:JSON.stringify(range),range}))))),RangeMarks_=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__.A,null,[[void 0,void 0,5],[150,200,2.5,!0],{min:150,max:200,step:2.5,marks:!0},[-10,10,2,[{label:"2L",value:2},{label:"6L",value:6},{label:"8M",value:8}]],{min:-10,max:10,step:2,marks:[{label:"2L",value:2},{label:"6L",value:6},{label:"8M",value:8}]}].map((range=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Slider__WEBPACK_IMPORTED_MODULE_1__.A,_extends({},args,{key:range,range}))))),Marks={args:{label:"Marks",range:[4,20],step:2,marks:[{label:"8L",value:12},{label:"12L",value:16},{label:"16M",value:18}]}},ChooseFromMarksList={args:{label:"ChooseFromMarksList",chooseFromMarksList:!0,range:[5,20],marks:[{label:"5L",value:5},{label:"8L",value:12},{label:"12L",value:16},{label:"16M",value:18},{label:"20L",value:20}]}},InputCmp={args:{},render:args=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(30),input=react__WEBPACK_IMPORTED_MODULE_0__.createElement(_TextField_TextField__WEBPACK_IMPORTED_MODULE_3__.A,{value,size:"small",onChange:event=>{const v=event.target.value;setValue(""===v?0:Number(v)),(0,storybook_actions__WEBPACK_IMPORTED_MODULE_2__.action)("onChangeInput")(v)},onBlur:()=>{value<0?(setValue(0),(0,storybook_actions__WEBPACK_IMPORTED_MODULE_2__.action)("onChangeInput")(0)):value>100&&(setValue(100),(0,storybook_actions__WEBPACK_IMPORTED_MODULE_2__.action)("onChangeInput")(100))},inputProps:{step:10,min:0,max:100,type:"number"}});return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Slider__WEBPACK_IMPORTED_MODULE_1__.A,_extends({},args,{defaultValue:40,startIcon:input,value,onChange:(event,newValue)=>{setValue(newValue),(0,storybook_actions__WEBPACK_IMPORTED_MODULE_2__.action)("onChangeInput")(newValue)},endIcon:"VolumeUp"}))}},__namedExportsOrder=["Default","Color_","Disabled","DisablePadding","DisplayValue_","Icons","Label","OrientationVertical","Size_","Styles_","OnChangeEvent","onChangeCommitted","ValueLabelFormat","RemovePadding","TrackBarLinePosition_","Range_","RangeMarks_","Marks","ChooseFromMarksList","InputCmp"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Default.parameters?.docs?.source}}},Color_.parameters={...Color_.parameters,docs:{...Color_.parameters?.docs,source:{originalSource:"args => <Stack>\n        {['#10DDCC', 'primary', 'success.light', {\n    track: '#D0CCC0',\n    thumb: '#150CCC'\n  }, {\n    track: 'success.dark',\n    thumb: 'error'\n  }].map((color, index) => <Slider key={JSON.stringify(color)} color={color} defaultValue={40 + index * 10} />)}\n    </Stack>",...Color_.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    disabled: true,\n    value: 35\n  }\n}",...Disabled.parameters?.docs?.source}}},DisablePadding.parameters={...DisablePadding.parameters,docs:{...DisablePadding.parameters?.docs,source:{originalSource:"{\n  args: {\n    disablePadding: true,\n    label: 'disable padding'\n  }\n}",...DisablePadding.parameters?.docs?.source}}},DisplayValue_.parameters={...DisplayValue_.parameters,docs:{...DisplayValue_.parameters?.docs,source:{originalSource:"args => <Stack>\n        {['on', 'off', 'auto'].map((displayValue: 'on' | 'off' | 'auto') => <Slider key={displayValue} displayValue={displayValue} label={displayValue} />)}\n    </Stack>",...DisplayValue_.parameters?.docs?.source}}},Icons.parameters={...Icons.parameters,docs:{...Icons.parameters?.docs,source:{originalSource:"{\n  args: {\n    color: 'secondary',\n    endIcon: 'VolumeDown',\n    startIcon: <VolumeUpIcon />\n  }\n}",...Icons.parameters?.docs?.source}}},Label.parameters={...Label.parameters,docs:{...Label.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Slider Label'\n  }\n}",...Label.parameters?.docs?.source}}},OrientationVertical.parameters={...OrientationVertical.parameters,docs:{...OrientationVertical.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Slider Vertical',\n    orientation: 'vertical',\n    startIcon: 'AcUnit',\n    endIcon: 'Whatshot',\n    disablePadding: true,\n    marks: [{\n      value: 0,\n      label: '0°C'\n    }, {\n      value: 20,\n      label: '20°C'\n    }, {\n      value: 37,\n      label: '37°C'\n    }, {\n      value: 100,\n      label: '100°C'\n    }]\n  },\n  decorators: [Story => <Box sx={{\n    height: 300,\n    px: 3\n  }}>\n                <Story />\n            </Box>]\n}",...OrientationVertical.parameters?.docs?.source}}},Size_.parameters={...Size_.parameters,docs:{...Size_.parameters?.docs,source:{originalSource:"args => <Stack>\n        {['small', 'medium'].map((size: 'small' | 'medium') => <Slider {...args} key={size} size={size} label={size} />)}\n    </Stack>",...Size_.parameters?.docs?.source}}},Styles_.parameters={...Styles_.parameters,docs:{...Styles_.parameters?.docs,source:{originalSource:"args => <Stack>\n        {['ios', 'pretto', 'tooltip', 'airbnb'].map((sliderStyle: 'ios' | 'pretto' | 'tooltip' | 'airbnb') => <Slider {...args} key={sliderStyle} sliderStyle={sliderStyle} label={`'${sliderStyle}' styles`} />)}\n    </Stack>",...Styles_.parameters?.docs?.source}}},OnChangeEvent.parameters={...OnChangeEvent.parameters,docs:{...OnChangeEvent.parameters?.docs,source:{originalSource:"{\n  args: {},\n  render: args => {\n    const [value, setValue] = useState();\n    return <Slider {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...OnChangeEvent.parameters?.docs?.source}}},onChangeCommitted.parameters={...onChangeCommitted.parameters,docs:{...onChangeCommitted.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'on Change Committed',\n    min: 0,\n    max: 50,\n    step: 2,\n    onChangeCommitted: (e, newValue) => alert(JSON.stringify(newValue ?? 0, null, 4))\n  }\n}",...onChangeCommitted.parameters?.docs?.source}}},ValueLabelFormat.parameters={...ValueLabelFormat.parameters,docs:{...ValueLabelFormat.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Value Label Format',\n    valueLabelFormat: n => `score: ${n}`\n  },\n  render: args => {\n    const [value, setValue] = useState();\n    return <Slider {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...ValueLabelFormat.parameters?.docs?.source}}},RemovePadding.parameters={...RemovePadding.parameters,docs:{...RemovePadding.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Slider Remove Padding',\n    removePadding: true\n  }\n}",...RemovePadding.parameters?.docs?.source}}},TrackBarLinePosition_.parameters={...TrackBarLinePosition_.parameters,docs:{...TrackBarLinePosition_.parameters?.docs,source:{originalSource:"args => <Stack>\n        {['normal', 'none', 'inverted'].map((trackBarLinePosition: 'normal' | 'none' | 'inverted') => <Slider {...args} key={trackBarLinePosition} trackBarLinePosition={trackBarLinePosition} label={trackBarLinePosition} />)}\n    </Stack>",...TrackBarLinePosition_.parameters?.docs?.source}}},Range_.parameters={...Range_.parameters,docs:{...Range_.parameters?.docs,source:{originalSource:"args => <Stack>\n        {[[150, 200], {\n    min: 150,\n    max: 200\n  }, [-10, 10, 2], {\n    min: -10,\n    max: 10,\n    step: 2\n  }].map(range => <Slider {...args} key={JSON.stringify(range)} range={range} />)}\n    </Stack>",...Range_.parameters?.docs?.source}}},RangeMarks_.parameters={...RangeMarks_.parameters,docs:{...RangeMarks_.parameters?.docs,source:{originalSource:"args => <Stack>\n        {[[undefined, undefined, 5], [150, 200, 2.5, true], {\n    min: 150,\n    max: 200,\n    step: 2.5,\n    marks: true\n  }, [-10, 10, 2, [{\n    label: '2L',\n    value: 2\n  }, {\n    label: '6L',\n    value: 6\n  }, {\n    label: '8M',\n    value: 8\n  }]], {\n    min: -10,\n    max: 10,\n    step: 2,\n    marks: [{\n      label: '2L',\n      value: 2\n    }, {\n      label: '6L',\n      value: 6\n    }, {\n      label: '8M',\n      value: 8\n    }]\n  }].map(range => <Slider {...args} key={range} range={range} />)}\n    </Stack>",...RangeMarks_.parameters?.docs?.source}}},Marks.parameters={...Marks.parameters,docs:{...Marks.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Marks',\n    range: [4, 20],\n    step: 2,\n    marks: [{\n      label: '8L',\n      value: 12\n    }, {\n      label: '12L',\n      value: 16\n    }, {\n      label: '16M',\n      value: 18\n    }]\n  }\n}",...Marks.parameters?.docs?.source}}},ChooseFromMarksList.parameters={...ChooseFromMarksList.parameters,docs:{...ChooseFromMarksList.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'ChooseFromMarksList',\n    chooseFromMarksList: true,\n    range: [5, 20],\n    marks: [{\n      label: '5L',\n      value: 5\n    }, {\n      label: '8L',\n      value: 12\n    }, {\n      label: '12L',\n      value: 16\n    }, {\n      label: '16M',\n      value: 18\n    }, {\n      label: '20L',\n      value: 20\n    }]\n  }\n}",...ChooseFromMarksList.parameters?.docs?.source}}},InputCmp.parameters={...InputCmp.parameters,docs:{...InputCmp.parameters?.docs,source:{originalSource:"{\n  args: {},\n  render: args => {\n    const [value, setValue] = useState(30);\n    const handleChange = (event, newValue?) => {\n      setValue(newValue);\n      action('onChangeInput')(newValue);\n    };\n    const handleInputChange = event => {\n      const v = event.target.value;\n      setValue(v === '' ? 0 : Number(v));\n      action('onChangeInput')(v);\n    };\n    const handleBlur = () => {\n      if (value < 0) {\n        setValue(0);\n        action('onChangeInput')(0);\n      } else if (value > 100) {\n        setValue(100);\n        action('onChangeInput')(100);\n      }\n    };\n    const input = <TextField value={value} size=\"small\" onChange={handleInputChange} onBlur={handleBlur} inputProps={{\n      step: 10,\n      min: 0,\n      max: 100,\n      type: 'number'\n    }} />;\n    return <Slider {...args} defaultValue={40} startIcon={input} value={value} onChange={handleChange} endIcon=\"VolumeUp\" />;\n  }\n}",...InputCmp.parameters?.docs?.source}}}}}]);