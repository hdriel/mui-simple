"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[7105],{"./src/components/DraggableList/__stories__/DraggableList.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AvatarsColumn:()=>AvatarsColumn,AvatarsRow:()=>AvatarsRow,ButtonsColumn:()=>ButtonsColumn,ButtonsRow:()=>ButtonsRow,Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_DraggableList__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/DraggableList/DraggableList.tsx"),_FIXED_Avatar_Avatar__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/_FIXED/Avatar/Avatar.tsx"),_FIXED_Button_Button__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/_FIXED/Button/Button.tsx");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const __WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:"import React, { useState } from 'react';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport DraggableList from '../DraggableList';\nimport Avatar from '../../_FIXED/Avatar/Avatar';\nimport Button from '../../_FIXED/Button/Button';\nconst meta: Meta<typeof DraggableList> = {\n  title: 'Wrappers/DraggableList',\n  component: DraggableList,\n  tags: ['autodocs']\n};\nexport default meta;\ntype Story = StoryObj<typeof DraggableList>;\nexport const Default: Story = {\n  args: {}\n};\nexport const AvatarsColumn: Story = {\n  args: {\n    dataList: [{\n      image: '1.jpg'\n    }, {\n      image: '2.jpg'\n    }, {\n      image: '3.jpg'\n    }, {\n      image: '4.jpg'\n    }, {\n      image: '5.jpg'\n    }, {\n      image: '6.jpg'\n    }, {\n      image: '7.jpg'\n    }],\n    fieldId: 'image',\n    flexDirection: 'column',\n    flexGap: '10px',\n    renderValue: props => <Avatar {...props} />\n  },\n  render: args => {\n    const [items, setItems] = useState(args.dataList);\n    return <DraggableList {...args} dataList={items} onChange={setItems} />;\n  }\n};\nexport const AvatarsRow: Story = {\n  args: {\n    dataList: [{\n      image: '1.jpg'\n    }, {\n      image: '2.jpg'\n    }, {\n      image: '3.jpg'\n    }, {\n      image: '4.jpg'\n    }, {\n      image: '5.jpg'\n    }, {\n      image: '6.jpg'\n    }, {\n      image: '7.jpg'\n    }],\n    fieldId: 'image',\n    flexDirection: 'row',\n    flexGap: '10px',\n    renderValue: props => <Avatar {...props} />\n  },\n  render: args => {\n    const [items, setItems] = useState(args.dataList);\n    return <DraggableList {...args} dataList={items} onChange={setItems} />;\n  }\n};\nexport const ButtonsColumn: Story = {\n  args: {\n    dataList: [{\n      startIcon: 'Send',\n      label: 'Send'\n    }, {\n      startIcon: 'Photo',\n      label: 'Photo'\n    }, {\n      icon: 'Fingerprint'\n    }, {\n      startIcon: 'Google',\n      label: 'Google'\n    }, {\n      startIcon: 'YouTube',\n      label: 'YouTube'\n    }],\n    fieldId: 'image',\n    flexDirection: 'column',\n    flexGap: '10px',\n    renderValue: props => <Button {...props} />\n  },\n  render: args => {\n    const [items, setItems] = useState(args.dataList);\n    return <DraggableList {...args} dataList={items} onChange={setItems} />;\n  }\n};\nexport const ButtonsRow: Story = {\n  args: {\n    dataList: [{\n      startIcon: 'Send',\n      label: 'Send'\n    }, {\n      startIcon: 'Photo',\n      label: 'Photo'\n    }, {\n      icon: 'Fingerprint'\n    }, {\n      startIcon: 'Google',\n      label: 'Google'\n    }, {\n      startIcon: 'YouTube',\n      label: 'YouTube'\n    }],\n    fieldId: 'image',\n    flexDirection: 'row',\n    flexGap: '10px',\n    renderValue: props => <Button {...props} />\n  },\n  render: args => {\n    const [items, setItems] = useState(args.dataList);\n    return <DraggableList {...args} dataList={items} onChange={setItems} />;\n  }\n};\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...Default.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {}\\n}\",\n      ...Default.parameters?.docs?.source\n    }\n  }\n};\nAvatarsColumn.parameters = {\n  ...AvatarsColumn.parameters,\n  docs: {\n    ...AvatarsColumn.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    dataList: [{\\n      image: '1.jpg'\\n    }, {\\n      image: '2.jpg'\\n    }, {\\n      image: '3.jpg'\\n    }, {\\n      image: '4.jpg'\\n    }, {\\n      image: '5.jpg'\\n    }, {\\n      image: '6.jpg'\\n    }, {\\n      image: '7.jpg'\\n    }],\\n    fieldId: 'image',\\n    flexDirection: 'column',\\n    flexGap: '10px',\\n    renderValue: props => <Avatar {...props} />\\n  },\\n  render: args => {\\n    const [items, setItems] = useState(args.dataList);\\n    return <DraggableList {...args} dataList={items} onChange={setItems} />;\\n  }\\n}\",\n      ...AvatarsColumn.parameters?.docs?.source\n    }\n  }\n};\nAvatarsRow.parameters = {\n  ...AvatarsRow.parameters,\n  docs: {\n    ...AvatarsRow.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    dataList: [{\\n      image: '1.jpg'\\n    }, {\\n      image: '2.jpg'\\n    }, {\\n      image: '3.jpg'\\n    }, {\\n      image: '4.jpg'\\n    }, {\\n      image: '5.jpg'\\n    }, {\\n      image: '6.jpg'\\n    }, {\\n      image: '7.jpg'\\n    }],\\n    fieldId: 'image',\\n    flexDirection: 'row',\\n    flexGap: '10px',\\n    renderValue: props => <Avatar {...props} />\\n  },\\n  render: args => {\\n    const [items, setItems] = useState(args.dataList);\\n    return <DraggableList {...args} dataList={items} onChange={setItems} />;\\n  }\\n}\",\n      ...AvatarsRow.parameters?.docs?.source\n    }\n  }\n};\nButtonsColumn.parameters = {\n  ...ButtonsColumn.parameters,\n  docs: {\n    ...ButtonsColumn.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    dataList: [{\\n      startIcon: 'Send',\\n      label: 'Send'\\n    }, {\\n      startIcon: 'Photo',\\n      label: 'Photo'\\n    }, {\\n      icon: 'Fingerprint'\\n    }, {\\n      startIcon: 'Google',\\n      label: 'Google'\\n    }, {\\n      startIcon: 'YouTube',\\n      label: 'YouTube'\\n    }],\\n    fieldId: 'image',\\n    flexDirection: 'column',\\n    flexGap: '10px',\\n    renderValue: props => <Button {...props} />\\n  },\\n  render: args => {\\n    const [items, setItems] = useState(args.dataList);\\n    return <DraggableList {...args} dataList={items} onChange={setItems} />;\\n  }\\n}\",\n      ...ButtonsColumn.parameters?.docs?.source\n    }\n  }\n};\nButtonsRow.parameters = {\n  ...ButtonsRow.parameters,\n  docs: {\n    ...ButtonsRow.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    dataList: [{\\n      startIcon: 'Send',\\n      label: 'Send'\\n    }, {\\n      startIcon: 'Photo',\\n      label: 'Photo'\\n    }, {\\n      icon: 'Fingerprint'\\n    }, {\\n      startIcon: 'Google',\\n      label: 'Google'\\n    }, {\\n      startIcon: 'YouTube',\\n      label: 'YouTube'\\n    }],\\n    fieldId: 'image',\\n    flexDirection: 'row',\\n    flexGap: '10px',\\n    renderValue: props => <Button {...props} />\\n  },\\n  render: args => {\\n    const [items, setItems] = useState(args.dataList);\\n    return <DraggableList {...args} dataList={items} onChange={setItems} />;\\n  }\\n}\",\n      ...ButtonsRow.parameters?.docs?.source\n    }\n  }\n};",locationsMap:{default:{startLoc:{col:30,line:13},endLoc:{col:1,line:15},startBody:{col:30,line:13},endBody:{col:1,line:15}},"avatars-column":{startLoc:{col:36,line:16},endLoc:{col:1,line:42},startBody:{col:36,line:16},endBody:{col:1,line:42}},"avatars-row":{startLoc:{col:33,line:43},endLoc:{col:1,line:69},startBody:{col:33,line:43},endBody:{col:1,line:69}},"buttons-column":{startLoc:{col:36,line:70},endLoc:{col:1,line:96},startBody:{col:36,line:70},endBody:{col:1,line:96}},"buttons-row":{startLoc:{col:33,line:97},endLoc:{col:1,line:123},startBody:{col:33,line:97},endBody:{col:1,line:123}}}}},title:"Wrappers/DraggableList",component:_DraggableList__WEBPACK_IMPORTED_MODULE_1__.Z,tags:["autodocs"]};var Default={args:{}},AvatarsColumn={args:{dataList:[{image:"1.jpg"},{image:"2.jpg"},{image:"3.jpg"},{image:"4.jpg"},{image:"5.jpg"},{image:"6.jpg"},{image:"7.jpg"}],fieldId:"image",flexDirection:"column",flexGap:"10px",renderValue:function(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FIXED_Avatar_Avatar__WEBPACK_IMPORTED_MODULE_2__.Z,props)}},render:function(args){var _a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(args.dataList),items=_a[0],setItems=_a[1];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_DraggableList__WEBPACK_IMPORTED_MODULE_1__.Z,_extends({},args,{dataList:items,onChange:setItems}))}},AvatarsRow={args:{dataList:[{image:"1.jpg"},{image:"2.jpg"},{image:"3.jpg"},{image:"4.jpg"},{image:"5.jpg"},{image:"6.jpg"},{image:"7.jpg"}],fieldId:"image",flexDirection:"row",flexGap:"10px",renderValue:function(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FIXED_Avatar_Avatar__WEBPACK_IMPORTED_MODULE_2__.Z,props)}},render:function(args){var _a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(args.dataList),items=_a[0],setItems=_a[1];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_DraggableList__WEBPACK_IMPORTED_MODULE_1__.Z,_extends({},args,{dataList:items,onChange:setItems}))}},ButtonsColumn={args:{dataList:[{startIcon:"Send",label:"Send"},{startIcon:"Photo",label:"Photo"},{icon:"Fingerprint"},{startIcon:"Google",label:"Google"},{startIcon:"YouTube",label:"YouTube"}],fieldId:"image",flexDirection:"column",flexGap:"10px",renderValue:function(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FIXED_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,props)}},render:function(args){var _a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(args.dataList),items=_a[0],setItems=_a[1];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_DraggableList__WEBPACK_IMPORTED_MODULE_1__.Z,_extends({},args,{dataList:items,onChange:setItems}))}},ButtonsRow={args:{dataList:[{startIcon:"Send",label:"Send"},{startIcon:"Photo",label:"Photo"},{icon:"Fingerprint"},{startIcon:"Google",label:"Google"},{startIcon:"YouTube",label:"YouTube"}],fieldId:"image",flexDirection:"row",flexGap:"10px",renderValue:function(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FIXED_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,props)}},render:function(args){var _a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(args.dataList),items=_a[0],setItems=_a[1];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_DraggableList__WEBPACK_IMPORTED_MODULE_1__.Z,_extends({},args,{dataList:items,onChange:setItems}))}};Default.parameters=_objectSpread(_objectSpread({},Default.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_a=Default.parameters)||void 0===_a?void 0:_a.docs),{},{source:_objectSpread({originalSource:"{\n  args: {}\n}"},null===(_c=null===(_b=Default.parameters)||void 0===_b?void 0:_b.docs)||void 0===_c?void 0:_c.source)})}),AvatarsColumn.parameters=_objectSpread(_objectSpread({},AvatarsColumn.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_d=AvatarsColumn.parameters)||void 0===_d?void 0:_d.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    dataList: [{\n      image: '1.jpg'\n    }, {\n      image: '2.jpg'\n    }, {\n      image: '3.jpg'\n    }, {\n      image: '4.jpg'\n    }, {\n      image: '5.jpg'\n    }, {\n      image: '6.jpg'\n    }, {\n      image: '7.jpg'\n    }],\n    fieldId: 'image',\n    flexDirection: 'column',\n    flexGap: '10px',\n    renderValue: props => <Avatar {...props} />\n  },\n  render: args => {\n    const [items, setItems] = useState(args.dataList);\n    return <DraggableList {...args} dataList={items} onChange={setItems} />;\n  }\n}"},null===(_f=null===(_e=AvatarsColumn.parameters)||void 0===_e?void 0:_e.docs)||void 0===_f?void 0:_f.source)})}),AvatarsRow.parameters=_objectSpread(_objectSpread({},AvatarsRow.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_g=AvatarsRow.parameters)||void 0===_g?void 0:_g.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    dataList: [{\n      image: '1.jpg'\n    }, {\n      image: '2.jpg'\n    }, {\n      image: '3.jpg'\n    }, {\n      image: '4.jpg'\n    }, {\n      image: '5.jpg'\n    }, {\n      image: '6.jpg'\n    }, {\n      image: '7.jpg'\n    }],\n    fieldId: 'image',\n    flexDirection: 'row',\n    flexGap: '10px',\n    renderValue: props => <Avatar {...props} />\n  },\n  render: args => {\n    const [items, setItems] = useState(args.dataList);\n    return <DraggableList {...args} dataList={items} onChange={setItems} />;\n  }\n}"},null===(_j=null===(_h=AvatarsRow.parameters)||void 0===_h?void 0:_h.docs)||void 0===_j?void 0:_j.source)})}),ButtonsColumn.parameters=_objectSpread(_objectSpread({},ButtonsColumn.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_k=ButtonsColumn.parameters)||void 0===_k?void 0:_k.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    dataList: [{\n      startIcon: 'Send',\n      label: 'Send'\n    }, {\n      startIcon: 'Photo',\n      label: 'Photo'\n    }, {\n      icon: 'Fingerprint'\n    }, {\n      startIcon: 'Google',\n      label: 'Google'\n    }, {\n      startIcon: 'YouTube',\n      label: 'YouTube'\n    }],\n    fieldId: 'image',\n    flexDirection: 'column',\n    flexGap: '10px',\n    renderValue: props => <Button {...props} />\n  },\n  render: args => {\n    const [items, setItems] = useState(args.dataList);\n    return <DraggableList {...args} dataList={items} onChange={setItems} />;\n  }\n}"},null===(_m=null===(_l=ButtonsColumn.parameters)||void 0===_l?void 0:_l.docs)||void 0===_m?void 0:_m.source)})}),ButtonsRow.parameters=_objectSpread(_objectSpread({},ButtonsRow.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_o=ButtonsRow.parameters)||void 0===_o?void 0:_o.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    dataList: [{\n      startIcon: 'Send',\n      label: 'Send'\n    }, {\n      startIcon: 'Photo',\n      label: 'Photo'\n    }, {\n      icon: 'Fingerprint'\n    }, {\n      startIcon: 'Google',\n      label: 'Google'\n    }, {\n      startIcon: 'YouTube',\n      label: 'YouTube'\n    }],\n    fieldId: 'image',\n    flexDirection: 'row',\n    flexGap: '10px',\n    renderValue: props => <Button {...props} />\n  },\n  render: args => {\n    const [items, setItems] = useState(args.dataList);\n    return <DraggableList {...args} dataList={items} onChange={setItems} />;\n  }\n}"},null===(_q=null===(_p=ButtonsRow.parameters)||void 0===_p?void 0:_p.docs)||void 0===_q?void 0:_q.source)})});var __namedExportsOrder=["Default","AvatarsColumn","AvatarsRow","ButtonsColumn","ButtonsRow"]}}]);