"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[9225],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{aD:()=>action});var v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),preview_errors=__webpack_require__("./node_modules/@storybook/addon-actions/node_modules/@storybook/core-events/dist/errors/preview-errors.mjs"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.Z)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new preview_errors.is({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler}},"./src/components/_FIXED/Slider/__stories__/RangeSlider.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ChooseFromMarksList:()=>ChooseFromMarksList,Color_:()=>Color_,Default:()=>Default,DisablePadding:()=>DisablePadding,DisableSwap_:()=>DisableSwap_,Disabled:()=>Disabled,DisplayValue_:()=>DisplayValue_,Icons:()=>Icons,InputCmp:()=>InputCmp,Label:()=>Label,Marks:()=>Marks,MinDistance:()=>MinDistance,OnChangeEvent:()=>OnChangeEvent,OrientationVertical:()=>OrientationVertical,RangeMarks_:()=>RangeMarks_,Range_:()=>Range_,RemovePadding:()=>RemovePadding,Size_:()=>Size_,Styles_:()=>Styles_,TrackBarLinePosition_:()=>TrackBarLinePosition_,ValueLabelFormat:()=>ValueLabelFormat,__namedExportsOrder:()=>__namedExportsOrder,default:()=>RangeSlider_stories,onChangeCommitted:()=>onChangeCommitted});var react=__webpack_require__("./node_modules/react/index.js"),Stack=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),VolumeUp=__webpack_require__("./node_modules/@mui/icons-material/esm/VolumeUp.js"),Slider=__webpack_require__("./src/components/_FIXED/Slider/Slider.tsx"),helpers=__webpack_require__("./src/utils/helpers.ts");const _excluded=["disabled","disableSwap","displayValue","defaultValue","fromValue","minDistance","onChange","onChangeFromValue","onChangeToValue","range","toValue","value","trackBarLinePosition"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}const RangeSlider=_ref=>{let{disabled,disableSwap:_disableSwap,displayValue,defaultValue,fromValue,minDistance,onChange,onChangeFromValue,onChangeToValue,range,toValue,value:_value,trackBarLinePosition}=_ref,props=_objectWithoutProperties(_ref,_excluded);minDistance=minDistance||0;const value=(0,helpers.$K)(fromValue)||(0,helpers.$K)(toValue)?[fromValue,toValue]:Array.isArray(_value)?_value:(0,helpers.$K)(_value)&&"number"==typeof _value?[_value]:void 0,disableSwap=(0,helpers.$K)(_disableSwap)||minDistance>0?_disableSwap||"locking":void 0;return react.createElement(Slider.Z,_extends({disabled,displayValue,range,trackBarLinePosition,valueLabelDisplay:displayValue??(disabled?"on":"auto"),track:"none"!==trackBarLinePosition&&trackBarLinePosition,disableSwap:void 0!==disableSwap||minDistance>0,value,defaultValue:(0,helpers.$K)(value)?void 0:defaultValue,onChange:{locking:(event,newValue,activeThumb)=>{if(!Array.isArray(newValue))return;const[fromNewValue,toNewValue]=newValue;0===activeThumb?(onChangeFromValue?.(event,Math.min(fromNewValue,toNewValue-minDistance)),onChangeToValue?.(event,toNewValue)):(onChangeFromValue?.(event,fromValue),onChangeToValue?.(event,Math.max(toNewValue,fromValue+minDistance)))},trailing:(event,newValue,activeThumb)=>{if(!Array.isArray(newValue))return;const[fromNewValue,toNewValue]=newValue,max=(Array.isArray(range)?range[1]:range?.max)??props.max??100;if(toNewValue-fromNewValue<minDistance)if(0===activeThumb){const clamped=Math.min(fromNewValue,max-minDistance);onChangeFromValue?.(event,clamped),onChangeToValue?.(event,clamped+minDistance)}else{const clamped=Math.max(toNewValue,minDistance);onChangeFromValue?.(event,clamped-minDistance),onChangeToValue?.(event,clamped)}else onChangeFromValue?.(event,Math.min(...newValue)),onChangeToValue?.(event,Math.max(...newValue))}}[disableSwap]??((event,newValue)=>{Array.isArray(newValue)&&(onChangeFromValue?.(event,Math.min(...newValue)),onChangeToValue?.(event,Math.max(...newValue)),event.target.value=newValue,onChange?.(event,newValue))})},props))};RangeSlider.displayName="RangeSlider",RangeSlider.defaultProps={chooseFromMarksList:void 0,color:void 0,disabled:void 0,disablePadding:void 0,disableSwap:void 0,displayValue:void 0,endIcon:void 0,label:void 0,marks:void 0,max:void 0,min:void 0,minDistance:void 0,onChange:void 0,orientation:void 0,range:void 0,removePadding:void 0,size:void 0,sliderStyle:void 0,startIcon:void 0,step:void 0,trackBarLinePosition:void 0,value:void 0,valueLabelFormat:void 0,defaultValue:[0,0]};const Slider_RangeSlider=RangeSlider;try{RangeSlider.displayName="RangeSlider",RangeSlider.__docgenInfo={description:"",displayName:"RangeSlider",props:{disableSwap:{defaultValue:{value:"undefined"},description:"",name:"disableSwap",required:!1,type:{name:"enum",value:[{value:'"locking"'},{value:'"trailing"'}]}},fromValue:{defaultValue:null,description:"",name:"fromValue",required:!1,type:{name:"number"}},minDistance:{defaultValue:{value:"undefined"},description:"",name:"minDistance",required:!1,type:{name:"number"}},onChange:{defaultValue:{value:"undefined"},description:"",name:"onChange",required:!1,type:{name:"(event: any, newValue?: number[]) => void"}},onChangeCommitted:{defaultValue:null,description:"",name:"onChangeCommitted",required:!1,type:{name:"(event: any, newValue: number[]) => void"}},onChangeFromValue:{defaultValue:null,description:"",name:"onChangeFromValue",required:!1,type:{name:"(event: any, fromValue: number) => void"}},onChangeToValue:{defaultValue:null,description:"",name:"onChangeToValue",required:!1,type:{name:"(event: any, toValue: number) => void"}},toValue:{defaultValue:null,description:"",name:"toValue",required:!1,type:{name:"number"}},value:{defaultValue:{value:"undefined"},description:"",name:"value",required:!1,type:{name:"number[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Slider/RangeSlider.tsx#RangeSlider"]={docgenInfo:RangeSlider.__docgenInfo,name:"RangeSlider",path:"src/components/_FIXED/Slider/RangeSlider.tsx#RangeSlider"})}catch(__react_docgen_typescript_loader_error){}var dist=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),TextField=__webpack_require__("./src/components/_FIXED/TextField/TextField.tsx");function RangeSlider_stories_extends(){return RangeSlider_stories_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},RangeSlider_stories_extends.apply(this,arguments)}const RangeSlider_stories={parameters:{storySource:{source:"import React, { useState } from 'react';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport { Box, Stack } from '@mui/material';\nimport { VolumeUp as VolumeUpIcon } from '@mui/icons-material';\n\nimport RangeSlider from '../RangeSlider';\nimport { action } from '@storybook/addon-actions';\nimport TextField from '../../TextField/TextField';\n\nconst meta: Meta<typeof RangeSlider> = {\n    title: 'Inputs/RangeSlider',\n    component: RangeSlider,\n    tags: ['autodocs'],\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof RangeSlider>;\n\nexport const Default: Story = {\n    args: {\n        defaultValue: [10, 34],\n    },\n};\n\nexport const Color_ = (args) => (\n    <Stack>\n        {[\n            '#10DDCC',\n            'primary',\n            'success.light',\n            { track: '#D0CCC0', thumb: '#150CCC' },\n            { track: 'success.dark', thumb: 'error' },\n        ].map((color, index) => (\n            <RangeSlider key={JSON.stringify(color)} color={color} defaultValue={[40, 40 + (index + 1) * 10]} />\n        ))}\n    </Stack>\n);\n\nexport const Disabled: Story = {\n    args: {\n        disabled: true,\n        defaultValue: [15, 35],\n    },\n};\n\nexport const DisablePadding: Story = {\n    args: {\n        disablePadding: true,\n        label: 'disable padding',\n        defaultValue: [15, 35],\n    },\n};\n\nexport const DisplayValue_ = (args) => (\n    <Stack>\n        {['on', 'off', 'auto'].map((displayValue) => (\n            <RangeSlider key={displayValue} displayValue={displayValue} label={displayValue} defaultValue={[15, 35]} />\n        ))}\n    </Stack>\n);\n\nexport const Icons: Story = {\n    args: {\n        color: 'secondary',\n        endIcon: 'VolumeDown',\n        startIcon: <VolumeUpIcon />,\n        defaultValue: [15, 35],\n    },\n};\n\nexport const Label: Story = {\n    args: {\n        label: 'RangeSlider Label',\n        defaultValue: [15, 35],\n    },\n};\n\nexport const OrientationVertical: Story = {\n    args: {\n        label: 'RangeSlider Vertical',\n        orientation: 'vertical',\n        startIcon: 'AcUnit',\n        endIcon: 'Whatshot',\n        disablePadding: true,\n        marks: [\n            { value: 0, label: '0°C' },\n            { value: 20, label: '20°C' },\n            { value: 37, label: '37°C' },\n            { value: 100, label: '100°C' },\n        ],\n        defaultValue: [20, 37],\n    },\n    decorators: [\n        (Story) => (\n            <Box sx={{ height: 300, px: 3 }}>\n                <Story />\n            </Box>\n        ),\n    ],\n};\n\nexport const Size_ = (args) => (\n    <Stack>\n        {['small', 'medium'].map((size) => (\n            <RangeSlider key={size} size={size} label={size} defaultValue={[15, 35]} />\n        ))}\n    </Stack>\n);\n\nexport const Styles_ = (args) => (\n    <Stack>\n        {['ios', 'pretto', 'tooltip', 'airbnb'].map((sliderStyle, index) => (\n            <RangeSlider\n                key={sliderStyle}\n                sliderStyle={sliderStyle}\n                label={`'${sliderStyle}' styles`}\n                defaultValue={[15, 35 + (index + 1) * 10]}\n            />\n        ))}\n    </Stack>\n);\n\nexport const OnChangeEvent: Story = {\n    args: {\n        value: [15, 35],\n    },\n    render: (args) => {\n        const [value, setValue] = useState(args.value);\n        return <RangeSlider {...args} value={value} onChange={(e) => setValue(e.target.value)} />;\n    },\n};\n\nexport const onChangeCommitted: Story = {\n    args: {\n        label: 'on Change Committed',\n        min: 0,\n        max: 50,\n        step: 2,\n        defaultValue: [11, 23],\n        onChangeCommitted: (e, newValue) => alert(JSON.stringify(newValue ?? [])),\n    },\n};\n\nexport const ValueLabelFormat: Story = {\n    args: {\n        label: 'Value Label Format',\n        value: [15, 35],\n        valueLabelFormat: (from, to) => `${from} <= x <= ${to}`,\n    },\n    render: (args) => {\n        const [value, setValue] = useState(args.value);\n        return <RangeSlider {...args} value={value} onChange={(e) => setValue(e.target.value)} />;\n    },\n};\n\nexport const RemovePadding: Story = {\n    args: {\n        label: 'RangeSlider Remove Padding',\n        removePadding: true,\n        defaultValue: [15, 35],\n    },\n};\n\nexport const TrackBarLinePosition_ = (args) => (\n    <Stack>\n        {['normal', 'none', 'inverted'].map((trackBarLinePosition) => (\n            <RangeSlider\n                key={trackBarLinePosition}\n                trackBarLinePosition={trackBarLinePosition}\n                label={trackBarLinePosition}\n                defaultValue={[15, 35]}\n            />\n        ))}\n    </Stack>\n);\n\nexport const Range_ = (args) => (\n    <Stack>\n        {[[150, 200], { min: 150, max: 200 }, [-10, 10, 2], { min: -10, max: 10, step: 2 }].map((range) => (\n            <RangeSlider\n                key={range}\n                range={range}\n                defaultValue={[(range[0] ?? (range as any).min) + 2, (range[0] ?? (range as any).min) + 5]}\n            />\n        ))}\n    </Stack>\n);\n\nexport const RangeMarks_ = (args) => (\n    <Stack>\n        {[\n            [undefined, undefined, 5],\n            [150, 200, 2.5, true],\n            { min: 150, max: 200, step: 2.5, marks: true },\n            [\n                -10,\n                10,\n                2,\n                [\n                    { label: '2L', value: 2 },\n                    { label: '6L', value: 6 },\n                    { label: '8M', value: 8 },\n                ],\n            ],\n            {\n                min: -10,\n                max: 10,\n                step: 2,\n                marks: [\n                    { label: '2L', value: 2 },\n                    { label: '6L', value: 6 },\n                    { label: '8M', value: 8 },\n                ],\n            },\n        ].map((range) => (\n            <RangeSlider\n                key={range}\n                range={range}\n                defaultValue={[(range[0] ?? (range as any).min) + 2, (range[0] ?? (range as any).min) + 5]}\n            />\n        ))}\n    </Stack>\n);\n\nexport const Marks: Story = {\n    args: {\n        label: 'Marks',\n        range: [4, 20],\n        step: 2,\n        marks: [\n            { label: '8L', value: 12 },\n            { label: '12L', value: 16 },\n            { label: '16M', value: 18 },\n        ],\n        defaultValue: [5, 10],\n    },\n};\n\nexport const ChooseFromMarksList: Story = {\n    args: {\n        label: 'ChooseFromMarksList',\n        chooseFromMarksList: true,\n        range: [5, 20],\n        marks: [\n            { label: '5L', value: 5 },\n            { label: '8L', value: 12 },\n            { label: '12L', value: 16 },\n            { label: '16M', value: 18 },\n            { label: '20L', value: 20 },\n        ],\n        defaultValue: [12, 16],\n    },\n};\n\nexport const InputCmp: Story = {\n    args: {},\n    render: (args) => {\n        const [value, setValue] = useState([30, 50]);\n        const handleChange = (event, newValue) => {\n            setValue(newValue);\n            action('onChangeInput')(newValue);\n        };\n        const handleInputChange = (index) => (event) => {\n            const v = event.target.value;\n            setValue((value) => {\n                const newValue = [...value];\n                newValue[index] = v;\n                return newValue;\n            });\n            action('onChangeInput')(v);\n        };\n\n        const handleBlur = () => {\n            let min = value[0] < 0 ? 0 : value[0];\n            let max = value[1] > 100 ? 100 : value[1];\n            const v = [min, max];\n            setValue(v);\n            action('onChangeInput')(v);\n        };\n\n        return (\n            <RangeSlider\n                {...args}\n                value={value}\n                onChange={handleChange}\n                startIcon={\n                    <TextField\n                        value={value[0]}\n                        size=\"small\"\n                        onChange={handleInputChange(0)}\n                        onBlur={handleBlur}\n                        inputProps={{ step: 10, min: 0, max: 100, type: 'number' }}\n                    />\n                }\n                endIcon={\n                    <TextField\n                        value={value[1]}\n                        size=\"small\"\n                        onChange={handleInputChange(1)}\n                        onBlur={handleBlur}\n                        inputProps={{ step: 10, min: 0, max: 100, type: 'number' }}\n                    />\n                }\n            />\n        );\n    },\n};\n\nfunction useValue(v1 = 0, v2 = 0) {\n    const [fromValue, setFromValue] = React.useState(v1);\n    const [toValue, setToValue] = React.useState(v2);\n    const onChangeFromValue = (event, newValue) => setFromValue(newValue);\n    const onChangeToValue = (event, newValue) => setToValue(newValue);\n\n    return { fromValue, toValue, onChangeFromValue, onChangeToValue };\n}\n\nexport const DisableSwap_ = () => {\n    return (\n        <Stack spacing={3}>\n            <RangeSlider label=\"swap\" {...useValue(30, 50)} minDistance={10} />\n            <RangeSlider label=\"DisableSwap - locking\" disableSwap=\"locking\" {...useValue(30, 50)} minDistance={10} />\n            <RangeSlider label=\"DisableSwap - trailing\" disableSwap=\"trailing\" {...useValue(30, 50)} minDistance={10} />\n        </Stack>\n    );\n};\n\nexport const MinDistance: Story = {\n    args: {\n        label: 'Min Distance',\n        minDistance: 10,\n        max: 50,\n    },\n    render: (args) => <RangeSlider {...args} {...useValue(12, 26)} />,\n};\n",locationsMap:{default:{startLoc:{col:30,line:20},endLoc:{col:1,line:24},startBody:{col:30,line:20},endBody:{col:1,line:24}},color:{startLoc:{col:22,line:26},endLoc:{col:1,line:38},startBody:{col:22,line:26},endBody:{col:1,line:38}},disabled:{startLoc:{col:31,line:40},endLoc:{col:1,line:45},startBody:{col:31,line:40},endBody:{col:1,line:45}},"disable-padding":{startLoc:{col:37,line:47},endLoc:{col:1,line:53},startBody:{col:37,line:47},endBody:{col:1,line:53}},"display-value":{startLoc:{col:29,line:55},endLoc:{col:1,line:61},startBody:{col:29,line:55},endBody:{col:1,line:61}},icons:{startLoc:{col:28,line:63},endLoc:{col:1,line:70},startBody:{col:28,line:63},endBody:{col:1,line:70}},label:{startLoc:{col:28,line:72},endLoc:{col:1,line:77},startBody:{col:28,line:72},endBody:{col:1,line:77}},"orientation-vertical":{startLoc:{col:42,line:79},endLoc:{col:1,line:101},startBody:{col:42,line:79},endBody:{col:1,line:101}},size:{startLoc:{col:21,line:103},endLoc:{col:1,line:109},startBody:{col:21,line:103},endBody:{col:1,line:109}},styles:{startLoc:{col:23,line:111},endLoc:{col:1,line:122},startBody:{col:23,line:111},endBody:{col:1,line:122}},"on-change-event":{startLoc:{col:36,line:124},endLoc:{col:1,line:132},startBody:{col:36,line:124},endBody:{col:1,line:132}},"on-change-committed":{startLoc:{col:40,line:134},endLoc:{col:1,line:143},startBody:{col:40,line:134},endBody:{col:1,line:143}},"value-label-format":{startLoc:{col:39,line:145},endLoc:{col:1,line:155},startBody:{col:39,line:145},endBody:{col:1,line:155}},"remove-padding":{startLoc:{col:36,line:157},endLoc:{col:1,line:163},startBody:{col:36,line:157},endBody:{col:1,line:163}},"track-bar-line-position":{startLoc:{col:37,line:165},endLoc:{col:1,line:176},startBody:{col:37,line:165},endBody:{col:1,line:176}},range:{startLoc:{col:22,line:178},endLoc:{col:1,line:188},startBody:{col:22,line:178},endBody:{col:1,line:188}},"range-marks":{startLoc:{col:27,line:190},endLoc:{col:1,line:224},startBody:{col:27,line:190},endBody:{col:1,line:224}},marks:{startLoc:{col:28,line:226},endLoc:{col:1,line:238},startBody:{col:28,line:226},endBody:{col:1,line:238}},"choose-from-marks-list":{startLoc:{col:42,line:240},endLoc:{col:1,line:254},startBody:{col:42,line:240},endBody:{col:1,line:254}},"input-cmp":{startLoc:{col:31,line:256},endLoc:{col:1,line:308},startBody:{col:31,line:256},endBody:{col:1,line:308}},"disable-swap":{startLoc:{col:28,line:319},endLoc:{col:1,line:327},startBody:{col:28,line:319},endBody:{col:1,line:327}},"min-distance":{startLoc:{col:34,line:329},endLoc:{col:1,line:336},startBody:{col:34,line:329},endBody:{col:1,line:336}}}}},title:"Inputs/RangeSlider",component:Slider_RangeSlider,tags:["autodocs"]},Default={args:{defaultValue:[10,34]}},Color_=args=>react.createElement(Stack.Z,null,["#10DDCC","primary","success.light",{track:"#D0CCC0",thumb:"#150CCC"},{track:"success.dark",thumb:"error"}].map(((color,index)=>react.createElement(Slider_RangeSlider,{key:JSON.stringify(color),color,defaultValue:[40,40+10*(index+1)]}))));Color_.displayName="Color_";const Disabled={args:{disabled:!0,defaultValue:[15,35]}},DisablePadding={args:{disablePadding:!0,label:"disable padding",defaultValue:[15,35]}},DisplayValue_=args=>react.createElement(Stack.Z,null,["on","off","auto"].map((displayValue=>react.createElement(Slider_RangeSlider,{key:displayValue,displayValue,label:displayValue,defaultValue:[15,35]}))));DisplayValue_.displayName="DisplayValue_";const Icons={args:{color:"secondary",endIcon:"VolumeDown",startIcon:react.createElement(VolumeUp.Z,null),defaultValue:[15,35]}},Label={args:{label:"RangeSlider Label",defaultValue:[15,35]}},OrientationVertical={args:{label:"RangeSlider Vertical",orientation:"vertical",startIcon:"AcUnit",endIcon:"Whatshot",disablePadding:!0,marks:[{value:0,label:"0°C"},{value:20,label:"20°C"},{value:37,label:"37°C"},{value:100,label:"100°C"}],defaultValue:[20,37]},decorators:[Story=>react.createElement(Box.Z,{sx:{height:300,px:3}},react.createElement(Story,null))]},Size_=args=>react.createElement(Stack.Z,null,["small","medium"].map((size=>react.createElement(Slider_RangeSlider,{key:size,size,label:size,defaultValue:[15,35]}))));Size_.displayName="Size_";const Styles_=args=>react.createElement(Stack.Z,null,["ios","pretto","tooltip","airbnb"].map(((sliderStyle,index)=>react.createElement(Slider_RangeSlider,{key:sliderStyle,sliderStyle,label:`'${sliderStyle}' styles`,defaultValue:[15,35+10*(index+1)]}))));Styles_.displayName="Styles_";const OnChangeEvent={args:{value:[15,35]},render:args=>{const[value,setValue]=(0,react.useState)(args.value);return react.createElement(Slider_RangeSlider,RangeSlider_stories_extends({},args,{value,onChange:e=>setValue(e.target.value)}))}},onChangeCommitted={args:{label:"on Change Committed",min:0,max:50,step:2,defaultValue:[11,23],onChangeCommitted:(e,newValue)=>alert(JSON.stringify(newValue??[]))}},ValueLabelFormat={args:{label:"Value Label Format",value:[15,35],valueLabelFormat:(from,to)=>`${from} <= x <= ${to}`},render:args=>{const[value,setValue]=(0,react.useState)(args.value);return react.createElement(Slider_RangeSlider,RangeSlider_stories_extends({},args,{value,onChange:e=>setValue(e.target.value)}))}},RemovePadding={args:{label:"RangeSlider Remove Padding",removePadding:!0,defaultValue:[15,35]}},TrackBarLinePosition_=args=>react.createElement(Stack.Z,null,["normal","none","inverted"].map((trackBarLinePosition=>react.createElement(Slider_RangeSlider,{key:trackBarLinePosition,trackBarLinePosition,label:trackBarLinePosition,defaultValue:[15,35]}))));TrackBarLinePosition_.displayName="TrackBarLinePosition_";const Range_=args=>react.createElement(Stack.Z,null,[[150,200],{min:150,max:200},[-10,10,2],{min:-10,max:10,step:2}].map((range=>react.createElement(Slider_RangeSlider,{key:range,range,defaultValue:[(range[0]??range.min)+2,(range[0]??range.min)+5]}))));Range_.displayName="Range_";const RangeMarks_=args=>react.createElement(Stack.Z,null,[[void 0,void 0,5],[150,200,2.5,!0],{min:150,max:200,step:2.5,marks:!0},[-10,10,2,[{label:"2L",value:2},{label:"6L",value:6},{label:"8M",value:8}]],{min:-10,max:10,step:2,marks:[{label:"2L",value:2},{label:"6L",value:6},{label:"8M",value:8}]}].map((range=>react.createElement(Slider_RangeSlider,{key:range,range,defaultValue:[(range[0]??range.min)+2,(range[0]??range.min)+5]}))));RangeMarks_.displayName="RangeMarks_";const Marks={args:{label:"Marks",range:[4,20],step:2,marks:[{label:"8L",value:12},{label:"12L",value:16},{label:"16M",value:18}],defaultValue:[5,10]}},ChooseFromMarksList={args:{label:"ChooseFromMarksList",chooseFromMarksList:!0,range:[5,20],marks:[{label:"5L",value:5},{label:"8L",value:12},{label:"12L",value:16},{label:"16M",value:18},{label:"20L",value:20}],defaultValue:[12,16]}},InputCmp={args:{},render:args=>{const[value,setValue]=(0,react.useState)([30,50]),handleInputChange=index=>event=>{const v=event.target.value;setValue((value=>{const newValue=[...value];return newValue[index]=v,newValue})),(0,dist.aD)("onChangeInput")(v)},handleBlur=()=>{const v=[value[0]<0?0:value[0],value[1]>100?100:value[1]];setValue(v),(0,dist.aD)("onChangeInput")(v)};return react.createElement(Slider_RangeSlider,RangeSlider_stories_extends({},args,{value,onChange:(event,newValue)=>{setValue(newValue),(0,dist.aD)("onChangeInput")(newValue)},startIcon:react.createElement(TextField.Z,{value:value[0],size:"small",onChange:handleInputChange(0),onBlur:handleBlur,inputProps:{step:10,min:0,max:100,type:"number"}}),endIcon:react.createElement(TextField.Z,{value:value[1],size:"small",onChange:handleInputChange(1),onBlur:handleBlur,inputProps:{step:10,min:0,max:100,type:"number"}})}))}};function useValue(v1=0,v2=0){const[fromValue,setFromValue]=react.useState(v1),[toValue,setToValue]=react.useState(v2);return{fromValue,toValue,onChangeFromValue:(event,newValue)=>setFromValue(newValue),onChangeToValue:(event,newValue)=>setToValue(newValue)}}const DisableSwap_=()=>react.createElement(Stack.Z,{spacing:3},react.createElement(Slider_RangeSlider,RangeSlider_stories_extends({label:"swap"},useValue(30,50),{minDistance:10})),react.createElement(Slider_RangeSlider,RangeSlider_stories_extends({label:"DisableSwap - locking",disableSwap:"locking"},useValue(30,50),{minDistance:10})),react.createElement(Slider_RangeSlider,RangeSlider_stories_extends({label:"DisableSwap - trailing",disableSwap:"trailing"},useValue(30,50),{minDistance:10})));DisableSwap_.displayName="DisableSwap_";const MinDistance={args:{label:"Min Distance",minDistance:10,max:50},render:args=>react.createElement(Slider_RangeSlider,RangeSlider_stories_extends({},args,useValue(12,26)))};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    defaultValue: [10, 34]\n  }\n}",...Default.parameters?.docs?.source}}},Color_.parameters={...Color_.parameters,docs:{...Color_.parameters?.docs,source:{originalSource:"args => <Stack>\n        {['#10DDCC', 'primary', 'success.light', {\n    track: '#D0CCC0',\n    thumb: '#150CCC'\n  }, {\n    track: 'success.dark',\n    thumb: 'error'\n  }].map((color, index) => <RangeSlider key={JSON.stringify(color)} color={color} defaultValue={[40, 40 + (index + 1) * 10]} />)}\n    </Stack>",...Color_.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    disabled: true,\n    defaultValue: [15, 35]\n  }\n}",...Disabled.parameters?.docs?.source}}},DisablePadding.parameters={...DisablePadding.parameters,docs:{...DisablePadding.parameters?.docs,source:{originalSource:"{\n  args: {\n    disablePadding: true,\n    label: 'disable padding',\n    defaultValue: [15, 35]\n  }\n}",...DisablePadding.parameters?.docs?.source}}},DisplayValue_.parameters={...DisplayValue_.parameters,docs:{...DisplayValue_.parameters?.docs,source:{originalSource:"args => <Stack>\n        {['on', 'off', 'auto'].map(displayValue => <RangeSlider key={displayValue} displayValue={displayValue} label={displayValue} defaultValue={[15, 35]} />)}\n    </Stack>",...DisplayValue_.parameters?.docs?.source}}},Icons.parameters={...Icons.parameters,docs:{...Icons.parameters?.docs,source:{originalSource:"{\n  args: {\n    color: 'secondary',\n    endIcon: 'VolumeDown',\n    startIcon: <VolumeUpIcon />,\n    defaultValue: [15, 35]\n  }\n}",...Icons.parameters?.docs?.source}}},Label.parameters={...Label.parameters,docs:{...Label.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'RangeSlider Label',\n    defaultValue: [15, 35]\n  }\n}",...Label.parameters?.docs?.source}}},OrientationVertical.parameters={...OrientationVertical.parameters,docs:{...OrientationVertical.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'RangeSlider Vertical',\n    orientation: 'vertical',\n    startIcon: 'AcUnit',\n    endIcon: 'Whatshot',\n    disablePadding: true,\n    marks: [{\n      value: 0,\n      label: '0°C'\n    }, {\n      value: 20,\n      label: '20°C'\n    }, {\n      value: 37,\n      label: '37°C'\n    }, {\n      value: 100,\n      label: '100°C'\n    }],\n    defaultValue: [20, 37]\n  },\n  decorators: [Story => <Box sx={{\n    height: 300,\n    px: 3\n  }}>\n                <Story />\n            </Box>]\n}",...OrientationVertical.parameters?.docs?.source}}},Size_.parameters={...Size_.parameters,docs:{...Size_.parameters?.docs,source:{originalSource:"args => <Stack>\n        {['small', 'medium'].map(size => <RangeSlider key={size} size={size} label={size} defaultValue={[15, 35]} />)}\n    </Stack>",...Size_.parameters?.docs?.source}}},Styles_.parameters={...Styles_.parameters,docs:{...Styles_.parameters?.docs,source:{originalSource:"args => <Stack>\n        {['ios', 'pretto', 'tooltip', 'airbnb'].map((sliderStyle, index) => <RangeSlider key={sliderStyle} sliderStyle={sliderStyle} label={`'${sliderStyle}' styles`} defaultValue={[15, 35 + (index + 1) * 10]} />)}\n    </Stack>",...Styles_.parameters?.docs?.source}}},OnChangeEvent.parameters={...OnChangeEvent.parameters,docs:{...OnChangeEvent.parameters?.docs,source:{originalSource:"{\n  args: {\n    value: [15, 35]\n  },\n  render: args => {\n    const [value, setValue] = useState(args.value);\n    return <RangeSlider {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...OnChangeEvent.parameters?.docs?.source}}},onChangeCommitted.parameters={...onChangeCommitted.parameters,docs:{...onChangeCommitted.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'on Change Committed',\n    min: 0,\n    max: 50,\n    step: 2,\n    defaultValue: [11, 23],\n    onChangeCommitted: (e, newValue) => alert(JSON.stringify(newValue ?? []))\n  }\n}",...onChangeCommitted.parameters?.docs?.source}}},ValueLabelFormat.parameters={...ValueLabelFormat.parameters,docs:{...ValueLabelFormat.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Value Label Format',\n    value: [15, 35],\n    valueLabelFormat: (from, to) => `${from} <= x <= ${to}`\n  },\n  render: args => {\n    const [value, setValue] = useState(args.value);\n    return <RangeSlider {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...ValueLabelFormat.parameters?.docs?.source}}},RemovePadding.parameters={...RemovePadding.parameters,docs:{...RemovePadding.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'RangeSlider Remove Padding',\n    removePadding: true,\n    defaultValue: [15, 35]\n  }\n}",...RemovePadding.parameters?.docs?.source}}},TrackBarLinePosition_.parameters={...TrackBarLinePosition_.parameters,docs:{...TrackBarLinePosition_.parameters?.docs,source:{originalSource:"args => <Stack>\n        {['normal', 'none', 'inverted'].map(trackBarLinePosition => <RangeSlider key={trackBarLinePosition} trackBarLinePosition={trackBarLinePosition} label={trackBarLinePosition} defaultValue={[15, 35]} />)}\n    </Stack>",...TrackBarLinePosition_.parameters?.docs?.source}}},Range_.parameters={...Range_.parameters,docs:{...Range_.parameters?.docs,source:{originalSource:"args => <Stack>\n        {[[150, 200], {\n    min: 150,\n    max: 200\n  }, [-10, 10, 2], {\n    min: -10,\n    max: 10,\n    step: 2\n  }].map(range => <RangeSlider key={range} range={range} defaultValue={[(range[0] ?? (range as any).min) + 2, (range[0] ?? (range as any).min) + 5]} />)}\n    </Stack>",...Range_.parameters?.docs?.source}}},RangeMarks_.parameters={...RangeMarks_.parameters,docs:{...RangeMarks_.parameters?.docs,source:{originalSource:"args => <Stack>\n        {[[undefined, undefined, 5], [150, 200, 2.5, true], {\n    min: 150,\n    max: 200,\n    step: 2.5,\n    marks: true\n  }, [-10, 10, 2, [{\n    label: '2L',\n    value: 2\n  }, {\n    label: '6L',\n    value: 6\n  }, {\n    label: '8M',\n    value: 8\n  }]], {\n    min: -10,\n    max: 10,\n    step: 2,\n    marks: [{\n      label: '2L',\n      value: 2\n    }, {\n      label: '6L',\n      value: 6\n    }, {\n      label: '8M',\n      value: 8\n    }]\n  }].map(range => <RangeSlider key={range} range={range} defaultValue={[(range[0] ?? (range as any).min) + 2, (range[0] ?? (range as any).min) + 5]} />)}\n    </Stack>",...RangeMarks_.parameters?.docs?.source}}},Marks.parameters={...Marks.parameters,docs:{...Marks.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Marks',\n    range: [4, 20],\n    step: 2,\n    marks: [{\n      label: '8L',\n      value: 12\n    }, {\n      label: '12L',\n      value: 16\n    }, {\n      label: '16M',\n      value: 18\n    }],\n    defaultValue: [5, 10]\n  }\n}",...Marks.parameters?.docs?.source}}},ChooseFromMarksList.parameters={...ChooseFromMarksList.parameters,docs:{...ChooseFromMarksList.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'ChooseFromMarksList',\n    chooseFromMarksList: true,\n    range: [5, 20],\n    marks: [{\n      label: '5L',\n      value: 5\n    }, {\n      label: '8L',\n      value: 12\n    }, {\n      label: '12L',\n      value: 16\n    }, {\n      label: '16M',\n      value: 18\n    }, {\n      label: '20L',\n      value: 20\n    }],\n    defaultValue: [12, 16]\n  }\n}",...ChooseFromMarksList.parameters?.docs?.source}}},InputCmp.parameters={...InputCmp.parameters,docs:{...InputCmp.parameters?.docs,source:{originalSource:"{\n  args: {},\n  render: args => {\n    const [value, setValue] = useState([30, 50]);\n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n      action('onChangeInput')(newValue);\n    };\n    const handleInputChange = index => event => {\n      const v = event.target.value;\n      setValue(value => {\n        const newValue = [...value];\n        newValue[index] = v;\n        return newValue;\n      });\n      action('onChangeInput')(v);\n    };\n    const handleBlur = () => {\n      let min = value[0] < 0 ? 0 : value[0];\n      let max = value[1] > 100 ? 100 : value[1];\n      const v = [min, max];\n      setValue(v);\n      action('onChangeInput')(v);\n    };\n    return <RangeSlider {...args} value={value} onChange={handleChange} startIcon={<TextField value={value[0]} size=\"small\" onChange={handleInputChange(0)} onBlur={handleBlur} inputProps={{\n      step: 10,\n      min: 0,\n      max: 100,\n      type: 'number'\n    }} />} endIcon={<TextField value={value[1]} size=\"small\" onChange={handleInputChange(1)} onBlur={handleBlur} inputProps={{\n      step: 10,\n      min: 0,\n      max: 100,\n      type: 'number'\n    }} />} />;\n  }\n}",...InputCmp.parameters?.docs?.source}}},DisableSwap_.parameters={...DisableSwap_.parameters,docs:{...DisableSwap_.parameters?.docs,source:{originalSource:'() => {\n  return <Stack spacing={3}>\n            <RangeSlider label="swap" {...useValue(30, 50)} minDistance={10} />\n            <RangeSlider label="DisableSwap - locking" disableSwap="locking" {...useValue(30, 50)} minDistance={10} />\n            <RangeSlider label="DisableSwap - trailing" disableSwap="trailing" {...useValue(30, 50)} minDistance={10} />\n        </Stack>;\n}',...DisableSwap_.parameters?.docs?.source}}},MinDistance.parameters={...MinDistance.parameters,docs:{...MinDistance.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Min Distance',\n    minDistance: 10,\n    max: 50\n  },\n  render: args => <RangeSlider {...args} {...useValue(12, 26)} />\n}",...MinDistance.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Color_","Disabled","DisablePadding","DisplayValue_","Icons","Label","OrientationVertical","Size_","Styles_","OnChangeEvent","onChangeCommitted","ValueLabelFormat","RemovePadding","TrackBarLinePosition_","Range_","RangeMarks_","Marks","ChooseFromMarksList","InputCmp","DisableSwap_","MinDistance"];try{Color_.displayName="Color_",Color_.__docgenInfo={description:"",displayName:"Color_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Slider/__stories__/RangeSlider.stories.tsx#Color_"]={docgenInfo:Color_.__docgenInfo,name:"Color_",path:"src/components/_FIXED/Slider/__stories__/RangeSlider.stories.tsx#Color_"})}catch(__react_docgen_typescript_loader_error){}try{DisplayValue_.displayName="DisplayValue_",DisplayValue_.__docgenInfo={description:"",displayName:"DisplayValue_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Slider/__stories__/RangeSlider.stories.tsx#DisplayValue_"]={docgenInfo:DisplayValue_.__docgenInfo,name:"DisplayValue_",path:"src/components/_FIXED/Slider/__stories__/RangeSlider.stories.tsx#DisplayValue_"})}catch(__react_docgen_typescript_loader_error){}try{Size_.displayName="Size_",Size_.__docgenInfo={description:"",displayName:"Size_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Slider/__stories__/RangeSlider.stories.tsx#Size_"]={docgenInfo:Size_.__docgenInfo,name:"Size_",path:"src/components/_FIXED/Slider/__stories__/RangeSlider.stories.tsx#Size_"})}catch(__react_docgen_typescript_loader_error){}try{Styles_.displayName="Styles_",Styles_.__docgenInfo={description:"",displayName:"Styles_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Slider/__stories__/RangeSlider.stories.tsx#Styles_"]={docgenInfo:Styles_.__docgenInfo,name:"Styles_",path:"src/components/_FIXED/Slider/__stories__/RangeSlider.stories.tsx#Styles_"})}catch(__react_docgen_typescript_loader_error){}try{TrackBarLinePosition_.displayName="TrackBarLinePosition_",TrackBarLinePosition_.__docgenInfo={description:"",displayName:"TrackBarLinePosition_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Slider/__stories__/RangeSlider.stories.tsx#TrackBarLinePosition_"]={docgenInfo:TrackBarLinePosition_.__docgenInfo,name:"TrackBarLinePosition_",path:"src/components/_FIXED/Slider/__stories__/RangeSlider.stories.tsx#TrackBarLinePosition_"})}catch(__react_docgen_typescript_loader_error){}try{Range_.displayName="Range_",Range_.__docgenInfo={description:"",displayName:"Range_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Slider/__stories__/RangeSlider.stories.tsx#Range_"]={docgenInfo:Range_.__docgenInfo,name:"Range_",path:"src/components/_FIXED/Slider/__stories__/RangeSlider.stories.tsx#Range_"})}catch(__react_docgen_typescript_loader_error){}try{RangeMarks_.displayName="RangeMarks_",RangeMarks_.__docgenInfo={description:"",displayName:"RangeMarks_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Slider/__stories__/RangeSlider.stories.tsx#RangeMarks_"]={docgenInfo:RangeMarks_.__docgenInfo,name:"RangeMarks_",path:"src/components/_FIXED/Slider/__stories__/RangeSlider.stories.tsx#RangeMarks_"})}catch(__react_docgen_typescript_loader_error){}}}]);