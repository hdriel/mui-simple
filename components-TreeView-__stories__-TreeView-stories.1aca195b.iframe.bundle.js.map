{"version":3,"file":"components-TreeView-__stories__-TreeView-stories.1aca195b.iframe.bundle.js","mappings":";AAOA;;;AAGA;;AANA;AAeA;;;;;AAHA;AAaA;AACA;AACA;;;;;;;;AAQA;;;;;AAKA;;;AAIA;AAMA;AACA;AACA;;AALA;ACtCA;;AAEA;;;AAKA;AAmDA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;;AAGA;;;AAGA;;;;;;AAMA;;;AAGA;AACA","sources":["webpack://@hdriel/mui-simple/./src/components/TreeView/TreeView.styles.tsx","webpack://@hdriel/mui-simple/./src/components/TreeView/TreeView.styled.tsx"],"sourcesContent":["import { alpha, css } from \"@mui/material/styles\";\r\nimport { treeItemClasses } from \"@mui/lab/TreeItem\";\r\n\r\nexport function borderedStyles(props) {\r\n  if (!props.bordered) return css``;\r\n\r\n  return css`\r\n    & .${treeItemClasses.group} {\r\n      margin-left: 15px;\r\n      padding-left: 18px;\r\n      border-left: 1px dashed ${alpha(props.theme.palette.text.primary, 0.4)};\r\n    }\r\n  `;\r\n}\r\n\r\nexport function closeIconFade(props) {\r\n  if (!props.closeIconFade) return css``;\r\n\r\n  return css`\r\n    & .${treeItemClasses.iconContainer} {\r\n      & .close {\r\n        opacity: 0.3;\r\n      }\r\n    }\r\n  `;\r\n}\r\n\r\nexport function selectedColor(props) {\r\n  return css`\r\n    color: ${props.theme.palette.text.secondary};\r\n    & .${treeItemClasses.content} {\r\n      color: ${props.theme.palette.text.secondary};\r\n\r\n      &.Mui-focused,\r\n      &.Mui-selected,\r\n      &.Mui-selected.Mui-focused {\r\n        color: var(--tree-view-color);\r\n        background-color: var(\r\n          --tree-view-bg-color,\r\n          ${props.theme.palette.action.selected}}\r\n        );\r\n      }\r\n\r\n      &:hover {\r\n        background-color: ${props.theme.palette.action.hover};\r\n      }\r\n    }\r\n  `;\r\n}\r\n\r\nexport function edgeCorners(props) {\r\n  if (!props.edgeCorners) return css``;\r\n\r\n  return css`\r\n    & .${treeItemClasses.content} {\r\n      border-top-right-radius: ${props.theme.spacing(2)};\r\n      border-bottom-right-radius: ${props.theme.spacing(2)};\r\n    }\r\n  `;\r\n}\r\n","import { styled, alpha } from \"@mui/material/styles\";\r\nimport { TreeView as MuiTreeView } from \"@mui/lab\";\r\nimport MuiTreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\r\nimport {\r\n  borderedStyles,\r\n  closeIconFade,\r\n  edgeCorners,\r\n  selectedColor,\r\n} from \"./TreeView.styles\";\r\n\r\nexport const TreeView = styled(MuiTreeView, {\r\n  shouldForwardProp: (propName) => ![\"maxWidth\", \"height\"].includes(propName),\r\n})`\r\n  height: ${(props) => props.height};\r\n  flex-grow: 1;\r\n  max-width: ${(props) => (props.maxWidth ? `${props.maxWidth}px` : undefined)};\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nexport const TreeItem = MuiTreeItem;\r\n\r\nexport const LabelIconTreeItemStyled = styled(MuiTreeItem)(({ theme }) => ({\r\n  color: theme.palette.text.secondary,\r\n  [`& .${treeItemClasses.content}`]: {\r\n    width: \"auto\",\r\n    color: theme.palette.text.secondary,\r\n    borderTopRightRadius: theme.spacing(2),\r\n    borderBottomRightRadius: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    \"&.Mui-expanded\": {\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n    \"&.Mui-focused, &.Mui-selected, &.Mui-selected.Mui-focused\": {\r\n      backgroundColor: `var(--tree-view-bg-color, ${theme.palette.action.selected})`,\r\n      color: \"var(--tree-view-color)\",\r\n    },\r\n    [`& .${treeItemClasses.label}`]: {\r\n      fontWeight: \"inherit\",\r\n      color: \"inherit\",\r\n    },\r\n  },\r\n  [`& .${treeItemClasses.group}`]: {\r\n    marginLeft: 0,\r\n    [`& .${treeItemClasses.content}`]: {\r\n      paddingLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport const IndentBorderTreeItemStyled = styled(MuiTreeItem)(({ theme }) => ({\r\n  [`& .${treeItemClasses.iconContainer}`]: {\r\n    \"& .close\": {\r\n      opacity: 0.3,\r\n    },\r\n  },\r\n  [`& .${treeItemClasses.group}`]: {\r\n    marginLeft: 15,\r\n    paddingLeft: 18,\r\n    borderLeft: `1px dashed ${alpha(theme.palette.text.primary, 0.4)}`,\r\n  },\r\n}));\r\n\r\nexport const TreeItemStyled = styled(MuiTreeItem, {\r\n  shouldForwardProp: (propName) =>\r\n    ![\"bordered\", \"closeIconFade\"].includes(propName),\r\n})`\r\n  ${closeIconFade}\r\n  ${borderedStyles}\r\n  ${selectedColor}\r\n  ${edgeCorners}\r\n\r\n  & .${treeItemClasses.content} {\r\n    width: auto;\r\n\r\n    padding-right: ${(props) => props.theme.spacing(1)};\r\n    font-weight: ${(props) => props.theme.typography.fontWeightMedium};\r\n\r\n    &.Mui-expanded {\r\n      font-weight: ${(props) => props.theme.typography.fontWeightRegular};\r\n    }\r\n\r\n    & .${treeItemClasses.label} {\r\n      font-weight: inherit;\r\n      color: inherit;\r\n    }\r\n  }\r\n\r\n  & .${treeItemClasses.group} {\r\n    margin-left: 0;\r\n\r\n    & .${treeItemClasses.content} {\r\n      padding-left: ${(props) => props.theme.spacing(2)};\r\n    }\r\n  }\r\n`;\r\n"],"names":[],"sourceRoot":""}