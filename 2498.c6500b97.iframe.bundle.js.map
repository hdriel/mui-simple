{"version":3,"file":"2498.c6500b97.iframe.bundle.js","mappings":";;AA+BA;;;;;;;;AAWA;;AAGA;AACA;AAEA;;AC5CA;;AAEA;;;AAKA;;;;;;;;AAWA;;;;ACXA;AACA;;;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;AA4BA;;;;;;;;;AASA;;;;;AAKA;;;AAMA;;;;;;;;;;;;;;AAsBA;;;;AAOA;;;;;;;;;;AAaA;;;;;;;;;;;;AAmBA;;;;;;;;;AASA;;;;AAIA;;;;AAMA;;;;;;;;;;AAUA;;AAIA;;AAKA;AC5HA;AACA;AACA;AACA;;AAEA;;AAIA","sources":["webpack://@hdriel/mui-simple/./src/components/List/List.styled.tsx","webpack://@hdriel/mui-simple/./src/components/DraggableList/DraggableList.styled.tsx","webpack://@hdriel/mui-simple/./src/components/Switch/Switch.styles.tsx","webpack://@hdriel/mui-simple/./src/components/Switch/Switch.styled.tsx"],"sourcesContent":["import React from \"react\";\n\nimport {\n  List as MuiList,\n  ListItem as MuiListItem,\n  ListItemAvatar as MuiListItemAvatar,\n  ListItemButton as MuiListItemButton,\n  ListItemIcon as MuiListItemIcon,\n  ListItemSecondaryAction as MuiListItemSecondaryAction,\n  ListItemText as MuiListItemText,\n  ListSubheader as MuiListSubheader,\n  Collapse as MuiCollapse,\n} from \"@mui/material\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport { styled } from \"@mui/material/styles\";\nimport MuiDivider from \"../Divider/Divider\";\n\nexport const Divider = MuiDivider;\nexport const Collapse = MuiCollapse;\nexport const List = styled(({ useTransition, children, ...props }) => (\n  <MuiList {...props}>\n    {useTransition ? (\n      <TransitionGroup>{children}</TransitionGroup>\n    ) : (\n      { children }\n    )}\n  </MuiList>\n))`\n  width: 100%;\n`;\n\nexport const ListItem = styled(MuiListItem, {\n  shouldForwardProp: (propName) => ![\"flexDirectionItems\"].includes(propName),\n})`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  & .MuiCollapse-root {\n    width: 100%;\n  }\n`;\nexport const ListItemAvatar = MuiListItemAvatar;\nexport const ListItemButton = styled(MuiListItemButton)`\n  width: 100%;\n  padding: ${(props) => props.padding};\n  flex-direction: ${(props) => props.flexDirection ?? \"row\"};\n`;\nexport const ListItemIcon = MuiListItemIcon;\nexport const ListItemSecondaryAction = MuiListItemSecondaryAction;\nexport const ListItemText = MuiListItemText;\nexport const ListSubheader = MuiListSubheader;\n","import { styled, css } from '@mui/material/styles';\n\nexport const DraggableListUL = styled('ul')`\n    display: flex;\n    gap: ${(props) => props.flexGap};\n\n    ${(props) =>\n        props.flexDirection === 'row'\n            ? css`\n                  flex-direction: row;\n                  width: max-content;\n              `\n            : css`\n                  flex-direction: column;\n                  width: 100%;\n              `};\n\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n`;\n\nexport const DraggableListULItem = styled('li')`\n    width: 100%;\n`;\n","import { css } from \"@mui/material/styles\";\n\nimport { SWITCH_STYLES } from \"./Switch.consts\";\n\nexport function customColor(props) {\n  if (!props.color) return css``;\n  const opacity = props.theme.palette?.action?.hoverOpacity;\n  const color = props.color;\n\n  return css`\n    & .MuiSwitch-switchBase.Mui-checked {\n      color: ${color};\n      &:hover { background-color: alpha(${color}, ${opacity}) },\n    },\n  & .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track {\n    background-color: ${color};\n  },`;\n}\n\nexport function antSwitchStyle(props) {\n  if (props.switchStyle !== SWITCH_STYLES.ANT) return css``;\n\n  const { theme, color } = props;\n  const { palette: { mode } = {}, transitions } = theme ?? {};\n\n  return css`\n    width: 28px;\n    height: 16px;\n    padding: 0;\n    display: flex;\n    &:active {\n      & .MuiSwitch-thumb {\n        width: 15px;\n      }\n      & .MuiSwitch-switchBase.Mui-checked {\n        transform: translateX(9px);\n      }\n    }\n    & .MuiSwitch-switchBase {\n      padding: 2px;\n      &.Mui-checked {\n        transform: translateX(12px);\n        color: #fff;\n        & + .MuiSwitch-track {\n          opacity: 1;\n          background-color: ${color};\n        }\n      }\n    }\n    & .MuiSwitch-thumb {\n      box-shadow: 0 2px 4px 0 rgb(0 35 11 / 20%);\n      width: 12px;\n      height: 12px;\n      border-radius: 6px;\n      transition: ${transitions.create([\"width\"], { duration: 200 })};\n    }\n    & .MuiSwitch-track {\n      border-radius: 16 / 2;\n      opacity: 1;\n      background-color: ${mode === \"dark\"\n        ? \"rgba(255, 255, 255, .35)\"\n        : \"rgba(0, 0, 0, .25)\"};\n      box-sizing: border-box;\n    }\n  `;\n}\n\nexport function androidSwitchStyle(props) {\n  if (props.switchStyle !== SWITCH_STYLES.ANDROID12) return css``;\n\n  const { theme, color } = props;\n\n  return css`\n    padding: 8px;\n    & .MuiSwitch-track {\n      border-radius: 12px;\n      &:before, &:after {\n        content: '';\n        position: absolute;\n        top: 50%;\n        transform: translateY(-50%);\n        width: 16px;\n        height: 16px;\n      },\n      &:before {\n        left: 12px;\n        background-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${\n          color\n            ? encodeURIComponent(theme.palette.getContrastText(color))\n            : \"#000000\"\n        }\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>');\n      },\n      &:after {\n        right: 12px;\n        background-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\n          \"#FFFFFF\" // theme.palette.getContrastText(color)\n        )}\" d=\"M19,13H5V11H19V13Z\" /></svg>'); \n      },\n  },\n  & .MuiSwitch-thumb {\n    box-shadow: none;\n    border: 1px solid rgba(0, 0, 0, 0.15);\n    width: 16px;\n    height: 16px;\n    margin: 1px 2px 4px 1px;\n  }\n  `;\n}\n\nexport function iosSwitchStyle(props) {\n  if (props.switchStyle !== SWITCH_STYLES.IOS) return css``;\n\n  const { theme, color } = props;\n\n  return css`\n    width: 42px;\n    height: 26px;\n    padding: 0;\n    & .MuiSwitch-switchBase {\n      padding: 0;\n      margin: 2px;\n      transition-duration: 300ms;\n      &.Mui-checked {\n        transform: translateX(16px);\n        color: #fff;\n        & + .MuiSwitch-track {\n          background-color: ${color};\n          opacity: 1;\n          border: 0;\n        }\n        &.Mui-disabled + .MuiSwitch-track {\n          opacity: 0.5;\n        }\n      }\n      &.Mui-focusVisible .MuiSwitch-thumb {\n        color: ${color};\n        border: 6px solid #fff;\n      }\n      &.Mui-disabled .MuiSwitch-thumb {\n        color: ${theme.palette.mode === \"light\"\n          ? theme.palette.grey[100]\n          : theme.palette.grey[600]};\n      }\n      ,\n      &.Mui-disabled + .MuiSwitch-track {\n        opacity: ${theme.palette.mode === \"light\" ? 0.7 : 0.3};\n      }\n    }\n    & .MuiSwitch-thumb {\n      box-sizing: border-box;\n      width: 22px;\n      height: 22px;\n    }\n    & .MuiSwitch-track {\n      border-radius: 20px;\n      background-color: ${theme.palette.mode === \"light\"\n        ? \"#E9E9EA\"\n        : \"#39393D\"};\n      opacity: 1;\n      transition: ${theme.transitions.create([\"background-color\"], {\n        duration: 500,\n      })};\n    }\n  `;\n}\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport {\n  FormControlLabel,\n  FormHelperText as MuiFormHelperText,\n  Switch as MuiSwitch,\n  Stack as MuiStack,\n  Typography as MuiTypography,\n} from \"@mui/material\";\nimport { SWITCH_STYLES } from \"./Switch.consts\";\nimport {\n  customColor,\n  antSwitchStyle,\n  androidSwitchStyle,\n  iosSwitchStyle,\n} from \"./Switch.styles\";\n\nexport const FormHelperText = MuiFormHelperText;\nexport const Switch = styled(\n  ({ switchStyle, checked, color, scale, ...props }) => (\n    <MuiSwitch\n      {...props}\n      checked={checked}\n      focusVisibleClassName={\n        switchStyle === SWITCH_STYLES.IOS ? \".Mui-focusVisible\" : \"\"\n      }\n      sx={{ ...props.sx }}\n    />\n  ),\n  {\n    shouldForwardProp: (prop) =>\n      ![\n        \"textColor\",\n        \"fontSize\",\n        \"helperText\",\n        \"switchStyle\",\n        \"labelPlacement\",\n      ].includes(prop),\n  }\n)`\n  ${(props) => customColor(props)}\n  ${(props) => antSwitchStyle(props)}\n  ${(props) => androidSwitchStyle(props)}\n  ${(props) => iosSwitchStyle(props)}\n  &.MuiSwitch-root {\n    scale: ${(props) => props.scale};\n  }\n`;\n\nexport const SwitchOnOff = styled(\n  ({ onLabel = \"on\", offLabel = \"off\", ...props }) => (\n    <MuiStack direction=\"row\" spacing={0} alignItems=\"center\">\n      <MuiTypography>{offLabel}</MuiTypography>\n      <Switch {...props} />\n      <MuiTypography>{onLabel}</MuiTypography>\n    </MuiStack>\n  ),\n  {\n    shouldForwardProp: (prop) =>\n      ![\"textColor\", \"muiColor\", \"fontSize\", \"helperText\"].includes(prop),\n  }\n)``;\n\nexport const SwitchControlled = styled(\n  ({\n    required,\n    fontSize,\n    disabled,\n    labelPlacement,\n    color,\n    labelPadding,\n    label = \"\",\n    ...props\n  }) => (\n    <FormControlLabel\n      required={required}\n      disabled={disabled}\n      labelPlacement={labelPlacement}\n      sx={{\n        m: 0,\n        userSelect: \"none\",\n        \".MuiFormControlLabel-label\": {\n          color,\n          fontSize,\n          ...(labelPadding !== undefined && { paddingLeft: labelPadding }),\n        },\n      }}\n      label={label}\n      {...props}\n    />\n  ),\n  {\n    shouldForwardProp: (prop) =>\n      ![\"textColor\", \"muiColor\", \"fontSize\"].includes(prop),\n  }\n)``;\n"],"names":[],"sourceRoot":""}