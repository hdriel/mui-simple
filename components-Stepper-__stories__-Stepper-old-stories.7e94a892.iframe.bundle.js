"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[2072],{"./node_modules/@mui/material/Paper/Paper.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>Paper_Paper});var objectWithoutPropertiesLoose=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"),esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),react=__webpack_require__("./node_modules/react/index.js"),clsx_m=__webpack_require__("./node_modules/clsx/dist/clsx.m.js"),composeClasses=__webpack_require__("./node_modules/@mui/utils/esm/composeClasses/composeClasses.js"),colorManipulator=__webpack_require__("./node_modules/@mui/system/esm/colorManipulator.js"),styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js");const styles_getOverlayAlpha=elevation=>{let alphaValue;return alphaValue=elevation<1?5.11916*elevation**2:4.5*Math.log(elevation+1)+2,(alphaValue/100).toFixed(2)};var useThemeProps=__webpack_require__("./node_modules/@mui/material/styles/useThemeProps.js"),generateUtilityClasses=__webpack_require__("./node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js"),generateUtilityClass=__webpack_require__("./node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js");function getPaperUtilityClass(slot){return(0,generateUtilityClass.Z)("MuiPaper",slot)}(0,generateUtilityClasses.Z)("MuiPaper",["root","rounded","outlined","elevation","elevation0","elevation1","elevation2","elevation3","elevation4","elevation5","elevation6","elevation7","elevation8","elevation9","elevation10","elevation11","elevation12","elevation13","elevation14","elevation15","elevation16","elevation17","elevation18","elevation19","elevation20","elevation21","elevation22","elevation23","elevation24"]);var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const _excluded=["className","component","elevation","square","variant"],PaperRoot=(0,styled.ZP)("div",{name:"MuiPaper",slot:"Root",overridesResolver:(props,styles)=>{const{ownerState}=props;return[styles.root,styles[ownerState.variant],!ownerState.square&&styles.rounded,"elevation"===ownerState.variant&&styles[`elevation${ownerState.elevation}`]]}})((({theme,ownerState})=>{var _theme$vars$overlays;return(0,esm_extends.Z)({backgroundColor:(theme.vars||theme).palette.background.paper,color:(theme.vars||theme).palette.text.primary,transition:theme.transitions.create("box-shadow")},!ownerState.square&&{borderRadius:theme.shape.borderRadius},"outlined"===ownerState.variant&&{border:`1px solid ${(theme.vars||theme).palette.divider}`},"elevation"===ownerState.variant&&(0,esm_extends.Z)({boxShadow:(theme.vars||theme).shadows[ownerState.elevation]},!theme.vars&&"dark"===theme.palette.mode&&{backgroundImage:`linear-gradient(${(0,colorManipulator.Fq)("#fff",styles_getOverlayAlpha(ownerState.elevation))}, ${(0,colorManipulator.Fq)("#fff",styles_getOverlayAlpha(ownerState.elevation))})`},theme.vars&&{backgroundImage:null==(_theme$vars$overlays=theme.vars.overlays)?void 0:_theme$vars$overlays[ownerState.elevation]}))})),Paper_Paper=react.forwardRef((function Paper(inProps,ref){const props=(0,useThemeProps.Z)({props:inProps,name:"MuiPaper"}),{className,component="div",elevation=1,square=!1,variant="elevation"}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,_excluded),ownerState=(0,esm_extends.Z)({},props,{component,elevation,square,variant}),classes=(ownerState=>{const{square,elevation,variant,classes}=ownerState,slots={root:["root",variant,!square&&"rounded","elevation"===variant&&`elevation${elevation}`]};return(0,composeClasses.Z)(slots,getPaperUtilityClass,classes)})(ownerState);return(0,jsx_runtime.jsx)(PaperRoot,(0,esm_extends.Z)({as:component,ownerState,className:(0,clsx_m.default)(classes.root,className),ref},other))}))},"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{aD:()=>chunk_AY7I2SME.aD});var chunk_AY7I2SME=__webpack_require__("./node_modules/@storybook/addon-actions/dist/chunk-AY7I2SME.mjs")},"./src/components/Stepper/__stories__/Stepper-old.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomStepper:()=>CustomStepper,Default:()=>Default,QontoCustomStepper:()=>QontoCustomStepper,QontoStepper:()=>QontoStepper,SimpleStepper:()=>SimpleStepper,StepsBottomLabelStepper:()=>StepsBottomLabelStepper,VerticalStepper:()=>VerticalStepper,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v,_w,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),_mui_icons_material__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@mui/icons-material/esm/AddLocation.js"),_mui_icons_material__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@mui/icons-material/esm/Send.js"),_Stepper__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Stepper/Stepper.tsx"),_Stepper_styled__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Stepper/Stepper.styled.tsx"),_Stepper_utils__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Stepper/Stepper.utils.tsx"),_FIXED_ToggleButtonGroup_ToggleButtonGroup__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.tsx"),_FIXED_ToggleButtonGroup_ToggleButtonGroups__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroups.tsx"),__spreadArray=function(to,from,pack){if(pack||2===arguments.length)for(var ar,i=0,l=from.length;i<l;i++)!ar&&i in from||(ar||(ar=Array.prototype.slice.call(from,0,i)),ar[i]=from[i]);return to.concat(ar||Array.prototype.slice.call(from))};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const __WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:"import React, { useState } from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { AddLocation as AddLocationIcon, Send as SendIcon } from '@mui/icons-material';\nimport Stepper from '../Stepper';\nimport { Typography } from '../Stepper.styled';\nimport { useSimpleStepper } from '../Stepper.utils';\nimport ToggleButtonGroup from '../../_FIXED/ToggleButtonGroup/ToggleButtonGroup';\nimport ToggleButtonGroups from '../../_FIXED/ToggleButtonGroup/ToggleButtonGroups';\nexport default {\n  title: 'Navigation/StepperOld',\n  component: Stepper,\n  decorators: [Story => <div style={{\n    height: '750px',\n    width: '750px',\n    backgroundColor: 'rgba(255,255,255,0.8)',\n    border: '1px solid black',\n    padding: '1em'\n  }}>\n                <Story />\n            </div>]\n};\nconst actions = {\n  onClick: action('onClick')\n};\nconst steps = [{\n  label: 'Select campaign settings',\n  optional: true,\n  error: true\n}, {\n  label: 'Create an ad group',\n  color: 'secondary'\n}, 'Create an ad'];\nexport const Default = () => {\n  return <Stepper {...actions} />;\n};\nexport const SimpleStepper = () => {\n  const stepperProps = useSimpleStepper();\n  const steps = [{\n    label: 'Select campaign settings',\n    optional: true\n  }, {\n    label: 'Create an ad group',\n    color: 'secondary'\n  }, 'Create an ad'];\n  return <Stepper {...actions} {...stepperProps} steps={steps} onDone={stepperProps.onReset} allCompletedCmp={<Typography sx={{\n    mt: 2,\n    mb: 1\n  }}>All steps completed - you&apos;re finished</Typography>}>\n            <div>Step A</div>\n            <div>Step B</div>\n            <div>Step C</div>\n        </Stepper>;\n};\nexport const StepsBottomLabelStepper = () => {\n  const [activeStep, setActiveStep] = useState(0);\n  const [skipSteps, setSkipSteps] = useState([]);\n  return <Stepper {...actions} steps={steps} stepIndex={activeStep} onReset={index => {\n    setSkipSteps([]);\n    setActiveStep(0);\n  }} onNext={index => {\n    setSkipSteps(a => a.filter(i => i !== index));\n    setActiveStep(index + 1);\n  }} onBack={index => setActiveStep(index - 1)} onSkip={index => {\n    setSkipSteps(a => a.includes(index) ? a : [...a, index]);\n    setActiveStep(index + 1);\n  }} onDone={() => {}} stepsIndexSkipped={skipSteps} stepsBottomLabel allCompletedCmp={<Typography sx={{\n    mt: 2,\n    mb: 1\n  }}>All steps completed - you&apos;re finished</Typography>}>\n            <div>Step A</div>\n            <div>Step B</div>\n            <div>Step C</div>\n        </Stepper>;\n};\nexport const VerticalStepper = () => {\n  const stepperProps = useSimpleStepper();\n  const steps = [{\n    label: 'Select campaign settings',\n    optional: true\n  }, {\n    label: 'Create an ad group',\n    color: 'secondary'\n  }, 'Create an ad'];\n  return <Stepper {...actions} {...stepperProps} steps={steps} customStyleProps={{\n    fontSize: 25,\n    background: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    lineColor: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    padding: 3,\n    lineWidth: 5,\n    marginContent: 26\n  }} orientation=\"vertical\" allCompletedCmp={<Typography sx={{\n    mt: 2,\n    mb: 1\n  }}>All steps completed - you&apos;re finished</Typography>}>\n            <div>\n                For each ad campaign that you create, you can control how much you're willing to spend on clicks and\n                conversions, which networks and geographical locations you want your ads to show on, and more.\n            </div>\n            <div>An ad group contains one or more ads which target a shared set of keywords.</div>\n            <div>\n                Try out different ad text to see what brings in the most customers, and learn how to enhance your ads\n                using features like ad extensions. If you run into any problems with your ads, find out how to tell if\n                they're running and how to resolve approval issues.\n            </div>\n        </Stepper>;\n};\nexport const CustomStepper = () => {\n  const data1 = [{\n    value: 'horizontal',\n    component: 'horizontal'\n  }, {\n    value: 'vertical',\n    component: 'vertical'\n  }];\n  const [orientation, setOrientation] = useState('horizontal');\n  const data2 = [{\n    value: true,\n    component: 'alternative labels'\n  }];\n  const [stepsBottomLabel, setStepsBottomLabel] = useState(true);\n  const stepperProps = useSimpleStepper();\n  const steps = [{\n    label: 'Select campaign settings',\n    optional: true,\n    icon: <AddLocationIcon />\n  }, {\n    label: 'Create an ad group',\n    color: 'secondary',\n    icon: <SendIcon />\n  }, 'Create an ad'];\n  const customStyleProps = {\n    fontSize: 25,\n    background: '#D0DD0D',\n    lineColor: '#124962',\n    padding: 3,\n    lineWidth: 5\n  };\n  return <>\n            <ToggleButtonGroups sx={{\n      mb: 4\n    }}>\n                <ToggleButtonGroup value={orientation} exclusive onChange={(event, value) => setOrientation(value)} data={data1} />\n                <ToggleButtonGroup value={stepsBottomLabel} exclusive onChange={(event, value) => setStepsBottomLabel(value)} data={data2} />\n            </ToggleButtonGroups>\n\n            <Stepper {...actions} {...stepperProps} steps={steps} stepsBottomLabel={stepsBottomLabel} customStyleProps={customStyleProps} orientation={orientation} allCompletedCmp={<Typography sx={{\n      mt: 2,\n      mb: 1\n    }}>All steps completed - you&apos;re finished</Typography>}>\n                <div>\n                    For each ad campaign that you create, you can control how much you're willing to spend on clicks and\n                    conversions, which networks and geographical locations you want your ads to show on, and more.\n                </div>\n                <div>An ad group contains one or more ads which target a shared set of keywords.</div>\n                <div>\n                    Try out different ad text to see what brings in the most customers, and learn how to enhance your\n                    ads using features like ad extensions. If you run into any problems with your ads, find out how to\n                    tell if they're running and how to resolve approval issues.\n                </div>\n            </Stepper>\n        </>;\n};\nexport const QontoStepper = () => {\n  const data1 = [{\n    value: 'horizontal',\n    component: 'horizontal'\n  }, {\n    value: 'vertical',\n    component: 'vertical'\n  }];\n  const [orientation, setOrientation] = useState('horizontal');\n  const data2 = [{\n    value: true,\n    component: 'alternative labels'\n  }];\n  const [stepsBottomLabel, setStepsBottomLabel] = useState(true);\n  const stepperProps = useSimpleStepper();\n  const steps = [{\n    label: 'Select campaign settings',\n    optional: true,\n    icon: <AddLocationIcon />\n  }, {\n    label: 'Create an ad group',\n    color: 'secondary',\n    icon: <SendIcon />\n  }, 'Create an ad'];\n  return <>\n            <ToggleButtonGroups sx={{\n      mb: 4\n    }}>\n                <ToggleButtonGroup value={orientation} exclusive onChange={value => setOrientation(value)} data={data1} />\n                <ToggleButtonGroup value={stepsBottomLabel} exclusive onChange={value => setStepsBottomLabel(value)} data={data2} />\n            </ToggleButtonGroups>\n\n            <Stepper {...actions} {...stepperProps} qontoStyle color=\"secondary\" steps={steps} stepsBottomLabel={stepsBottomLabel} orientation={orientation} allCompletedCmp={<Typography sx={{\n      mt: 2,\n      mb: 1\n    }}>All steps completed - you&apos;re finished</Typography>}>\n                <div>\n                    For each ad campaign that you create, you can control how much you're willing to spend on clicks and\n                    conversions, which networks and geographical locations you want your ads to show on, and more.\n                </div>\n                <div>An ad group contains one or more ads which target a shared set of keywords.</div>\n                <div>\n                    Try out different ad text to see what brings in the most customers, and learn how to enhance your\n                    ads using features like ad extensions. If you run into any problems with your ads, find out how to\n                    tell if they're running and how to resolve approval issues.\n                </div>\n            </Stepper>\n        </>;\n};\nexport const QontoCustomStepper = () => {\n  const data1 = [{\n    value: 'horizontal',\n    component: 'horizontal'\n  }, {\n    value: 'vertical',\n    component: 'vertical'\n  }];\n  const [orientation, setOrientation] = useState('horizontal');\n  const data2 = [{\n    value: true,\n    component: 'alternative labels'\n  }];\n  const [stepsBottomLabel, setStepsBottomLabel] = useState(true);\n  const stepperProps = useSimpleStepper();\n  const steps = [{\n    label: 'Select campaign settings',\n    optional: true,\n    icon: <AddLocationIcon />\n  }, {\n    label: 'Create an ad group',\n    color: 'secondary',\n    icon: <SendIcon />\n  }, 'Create an ad'];\n  const customStyleProps = {\n    fontSize: 35,\n    background: '#D0DD0D',\n    lineColor: '#124962',\n    lineWidth: 6,\n    padding: 10,\n    checkIcon: <SendIcon sx={{\n      fontSize: 35\n    }} />,\n    dotIcon: <AddLocationIcon sx={{\n      fontSize: 35\n    }} />\n  };\n  return <>\n            <ToggleButtonGroups sx={{\n      mb: 4\n    }}>\n                <ToggleButtonGroup value={orientation} exclusive onChange={value => setOrientation(value)} data={data1} />\n                <ToggleButtonGroup value={stepsBottomLabel} exclusive onChange={value => setStepsBottomLabel(value)} data={data2} />\n            </ToggleButtonGroups>\n\n            <Stepper {...actions} {...stepperProps} qontoStyle steps={steps} stepsBottomLabel={stepsBottomLabel} customStyleProps={customStyleProps} orientation={orientation} allCompletedCmp={<Typography sx={{\n      mt: 2,\n      mb: 1\n    }}>All steps completed - you&apos;re finished</Typography>}>\n                <div>\n                    For each ad campaign that you create, you can control how much you're willing to spend on clicks and\n                    conversions, which networks and geographical locations you want your ads to show on, and more.\n                </div>\n                <div>An ad group contains one or more ads which target a shared set of keywords.</div>\n                <div>\n                    Try out different ad text to see what brings in the most customers, and learn how to enhance your\n                    ads using features like ad extensions. If you run into any problems with your ads, find out how to\n                    tell if they're running and how to resolve approval issues.\n                </div>\n            </Stepper>\n        </>;\n};\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...Default.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <Stepper {...actions} />;\\n}\",\n      ...Default.parameters?.docs?.source\n    }\n  }\n};\nSimpleStepper.parameters = {\n  ...SimpleStepper.parameters,\n  docs: {\n    ...SimpleStepper.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  const stepperProps = useSimpleStepper();\\n  const steps = [{\\n    label: 'Select campaign settings',\\n    optional: true\\n  }, {\\n    label: 'Create an ad group',\\n    color: 'secondary'\\n  }, 'Create an ad'];\\n  return <Stepper {...actions} {...stepperProps} steps={steps} onDone={stepperProps.onReset} allCompletedCmp={<Typography sx={{\\n    mt: 2,\\n    mb: 1\\n  }}>All steps completed - you&apos;re finished</Typography>}>\\n            <div>Step A</div>\\n            <div>Step B</div>\\n            <div>Step C</div>\\n        </Stepper>;\\n}\",\n      ...SimpleStepper.parameters?.docs?.source\n    }\n  }\n};\nStepsBottomLabelStepper.parameters = {\n  ...StepsBottomLabelStepper.parameters,\n  docs: {\n    ...StepsBottomLabelStepper.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  const [activeStep, setActiveStep] = useState(0);\\n  const [skipSteps, setSkipSteps] = useState([]);\\n  return <Stepper {...actions} steps={steps} stepIndex={activeStep} onReset={index => {\\n    setSkipSteps([]);\\n    setActiveStep(0);\\n  }} onNext={index => {\\n    setSkipSteps(a => a.filter(i => i !== index));\\n    setActiveStep(index + 1);\\n  }} onBack={index => setActiveStep(index - 1)} onSkip={index => {\\n    setSkipSteps(a => a.includes(index) ? a : [...a, index]);\\n    setActiveStep(index + 1);\\n  }} onDone={() => {}} stepsIndexSkipped={skipSteps} stepsBottomLabel allCompletedCmp={<Typography sx={{\\n    mt: 2,\\n    mb: 1\\n  }}>All steps completed - you&apos;re finished</Typography>}>\\n            <div>Step A</div>\\n            <div>Step B</div>\\n            <div>Step C</div>\\n        </Stepper>;\\n}\",\n      ...StepsBottomLabelStepper.parameters?.docs?.source\n    }\n  }\n};\nVerticalStepper.parameters = {\n  ...VerticalStepper.parameters,\n  docs: {\n    ...VerticalStepper.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  const stepperProps = useSimpleStepper();\\n  const steps = [{\\n    label: 'Select campaign settings',\\n    optional: true\\n  }, {\\n    label: 'Create an ad group',\\n    color: 'secondary'\\n  }, 'Create an ad'];\\n  return <Stepper {...actions} {...stepperProps} steps={steps} customStyleProps={{\\n    fontSize: 25,\\n    background: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\\n    lineColor: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\\n    padding: 3,\\n    lineWidth: 5,\\n    marginContent: 26\\n  }} orientation=\\\"vertical\\\" allCompletedCmp={<Typography sx={{\\n    mt: 2,\\n    mb: 1\\n  }}>All steps completed - you&apos;re finished</Typography>}>\\n            <div>\\n                For each ad campaign that you create, you can control how much you're willing to spend on clicks and\\n                conversions, which networks and geographical locations you want your ads to show on, and more.\\n            </div>\\n            <div>An ad group contains one or more ads which target a shared set of keywords.</div>\\n            <div>\\n                Try out different ad text to see what brings in the most customers, and learn how to enhance your ads\\n                using features like ad extensions. If you run into any problems with your ads, find out how to tell if\\n                they're running and how to resolve approval issues.\\n            </div>\\n        </Stepper>;\\n}\",\n      ...VerticalStepper.parameters?.docs?.source\n    }\n  }\n};\nCustomStepper.parameters = {\n  ...CustomStepper.parameters,\n  docs: {\n    ...CustomStepper.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  const data1 = [{\\n    value: 'horizontal',\\n    component: 'horizontal'\\n  }, {\\n    value: 'vertical',\\n    component: 'vertical'\\n  }];\\n  const [orientation, setOrientation] = useState('horizontal');\\n  const data2 = [{\\n    value: true,\\n    component: 'alternative labels'\\n  }];\\n  const [stepsBottomLabel, setStepsBottomLabel] = useState(true);\\n  const stepperProps = useSimpleStepper();\\n  const steps = [{\\n    label: 'Select campaign settings',\\n    optional: true,\\n    icon: <AddLocationIcon />\\n  }, {\\n    label: 'Create an ad group',\\n    color: 'secondary',\\n    icon: <SendIcon />\\n  }, 'Create an ad'];\\n  const customStyleProps = {\\n    fontSize: 25,\\n    background: '#D0DD0D',\\n    lineColor: '#124962',\\n    padding: 3,\\n    lineWidth: 5\\n  };\\n  return <>\\n            <ToggleButtonGroups sx={{\\n      mb: 4\\n    }}>\\n                <ToggleButtonGroup value={orientation} exclusive onChange={(event, value) => setOrientation(value)} data={data1} />\\n                <ToggleButtonGroup value={stepsBottomLabel} exclusive onChange={(event, value) => setStepsBottomLabel(value)} data={data2} />\\n            </ToggleButtonGroups>\\n\\n            <Stepper {...actions} {...stepperProps} steps={steps} stepsBottomLabel={stepsBottomLabel} customStyleProps={customStyleProps} orientation={orientation} allCompletedCmp={<Typography sx={{\\n      mt: 2,\\n      mb: 1\\n    }}>All steps completed - you&apos;re finished</Typography>}>\\n                <div>\\n                    For each ad campaign that you create, you can control how much you're willing to spend on clicks and\\n                    conversions, which networks and geographical locations you want your ads to show on, and more.\\n                </div>\\n                <div>An ad group contains one or more ads which target a shared set of keywords.</div>\\n                <div>\\n                    Try out different ad text to see what brings in the most customers, and learn how to enhance your\\n                    ads using features like ad extensions. If you run into any problems with your ads, find out how to\\n                    tell if they're running and how to resolve approval issues.\\n                </div>\\n            </Stepper>\\n        </>;\\n}\",\n      ...CustomStepper.parameters?.docs?.source\n    }\n  }\n};\nQontoStepper.parameters = {\n  ...QontoStepper.parameters,\n  docs: {\n    ...QontoStepper.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  const data1 = [{\\n    value: 'horizontal',\\n    component: 'horizontal'\\n  }, {\\n    value: 'vertical',\\n    component: 'vertical'\\n  }];\\n  const [orientation, setOrientation] = useState('horizontal');\\n  const data2 = [{\\n    value: true,\\n    component: 'alternative labels'\\n  }];\\n  const [stepsBottomLabel, setStepsBottomLabel] = useState(true);\\n  const stepperProps = useSimpleStepper();\\n  const steps = [{\\n    label: 'Select campaign settings',\\n    optional: true,\\n    icon: <AddLocationIcon />\\n  }, {\\n    label: 'Create an ad group',\\n    color: 'secondary',\\n    icon: <SendIcon />\\n  }, 'Create an ad'];\\n  return <>\\n            <ToggleButtonGroups sx={{\\n      mb: 4\\n    }}>\\n                <ToggleButtonGroup value={orientation} exclusive onChange={value => setOrientation(value)} data={data1} />\\n                <ToggleButtonGroup value={stepsBottomLabel} exclusive onChange={value => setStepsBottomLabel(value)} data={data2} />\\n            </ToggleButtonGroups>\\n\\n            <Stepper {...actions} {...stepperProps} qontoStyle color=\\\"secondary\\\" steps={steps} stepsBottomLabel={stepsBottomLabel} orientation={orientation} allCompletedCmp={<Typography sx={{\\n      mt: 2,\\n      mb: 1\\n    }}>All steps completed - you&apos;re finished</Typography>}>\\n                <div>\\n                    For each ad campaign that you create, you can control how much you're willing to spend on clicks and\\n                    conversions, which networks and geographical locations you want your ads to show on, and more.\\n                </div>\\n                <div>An ad group contains one or more ads which target a shared set of keywords.</div>\\n                <div>\\n                    Try out different ad text to see what brings in the most customers, and learn how to enhance your\\n                    ads using features like ad extensions. If you run into any problems with your ads, find out how to\\n                    tell if they're running and how to resolve approval issues.\\n                </div>\\n            </Stepper>\\n        </>;\\n}\",\n      ...QontoStepper.parameters?.docs?.source\n    }\n  }\n};\nQontoCustomStepper.parameters = {\n  ...QontoCustomStepper.parameters,\n  docs: {\n    ...QontoCustomStepper.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  const data1 = [{\\n    value: 'horizontal',\\n    component: 'horizontal'\\n  }, {\\n    value: 'vertical',\\n    component: 'vertical'\\n  }];\\n  const [orientation, setOrientation] = useState('horizontal');\\n  const data2 = [{\\n    value: true,\\n    component: 'alternative labels'\\n  }];\\n  const [stepsBottomLabel, setStepsBottomLabel] = useState(true);\\n  const stepperProps = useSimpleStepper();\\n  const steps = [{\\n    label: 'Select campaign settings',\\n    optional: true,\\n    icon: <AddLocationIcon />\\n  }, {\\n    label: 'Create an ad group',\\n    color: 'secondary',\\n    icon: <SendIcon />\\n  }, 'Create an ad'];\\n  const customStyleProps = {\\n    fontSize: 35,\\n    background: '#D0DD0D',\\n    lineColor: '#124962',\\n    lineWidth: 6,\\n    padding: 10,\\n    checkIcon: <SendIcon sx={{\\n      fontSize: 35\\n    }} />,\\n    dotIcon: <AddLocationIcon sx={{\\n      fontSize: 35\\n    }} />\\n  };\\n  return <>\\n            <ToggleButtonGroups sx={{\\n      mb: 4\\n    }}>\\n                <ToggleButtonGroup value={orientation} exclusive onChange={value => setOrientation(value)} data={data1} />\\n                <ToggleButtonGroup value={stepsBottomLabel} exclusive onChange={value => setStepsBottomLabel(value)} data={data2} />\\n            </ToggleButtonGroups>\\n\\n            <Stepper {...actions} {...stepperProps} qontoStyle steps={steps} stepsBottomLabel={stepsBottomLabel} customStyleProps={customStyleProps} orientation={orientation} allCompletedCmp={<Typography sx={{\\n      mt: 2,\\n      mb: 1\\n    }}>All steps completed - you&apos;re finished</Typography>}>\\n                <div>\\n                    For each ad campaign that you create, you can control how much you're willing to spend on clicks and\\n                    conversions, which networks and geographical locations you want your ads to show on, and more.\\n                </div>\\n                <div>An ad group contains one or more ads which target a shared set of keywords.</div>\\n                <div>\\n                    Try out different ad text to see what brings in the most customers, and learn how to enhance your\\n                    ads using features like ad extensions. If you run into any problems with your ads, find out how to\\n                    tell if they're running and how to resolve approval issues.\\n                </div>\\n            </Stepper>\\n        </>;\\n}\",\n      ...QontoCustomStepper.parameters?.docs?.source\n    }\n  }\n};",locationsMap:{default:{startLoc:{col:23,line:33},endLoc:{col:1,line:35},startBody:{col:23,line:33},endBody:{col:1,line:35}},"simple-stepper":{startLoc:{col:29,line:36},endLoc:{col:1,line:53},startBody:{col:29,line:36},endBody:{col:1,line:53}},"steps-bottom-label-stepper":{startLoc:{col:39,line:54},endLoc:{col:1,line:74},startBody:{col:39,line:54},endBody:{col:1,line:74}},"vertical-stepper":{startLoc:{col:31,line:75},endLoc:{col:1,line:106},startBody:{col:31,line:75},endBody:{col:1,line:106}},"custom-stepper":{startLoc:{col:29,line:107},endLoc:{col:1,line:162},startBody:{col:29,line:107},endBody:{col:1,line:162}},"qonto-stepper":{startLoc:{col:28,line:163},endLoc:{col:1,line:211},startBody:{col:28,line:163},endBody:{col:1,line:211}},"qonto-custom-stepper":{startLoc:{col:34,line:212},endLoc:{col:1,line:273},startBody:{col:34,line:212},endBody:{col:1,line:273}}}}},title:"Navigation/StepperOld",component:_Stepper__WEBPACK_IMPORTED_MODULE_2__.Z,decorators:[function(Story){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{height:"750px",width:"750px",backgroundColor:"rgba(255,255,255,0.8)",border:"1px solid black",padding:"1em"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))}]};var actions={onClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("onClick")},steps=[{label:"Select campaign settings",optional:!0,error:!0},{label:"Create an ad group",color:"secondary"},"Create an ad"],Default=function(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Stepper__WEBPACK_IMPORTED_MODULE_2__.Z,actions)};Default.displayName="Default";var SimpleStepper=function(){var stepperProps=(0,_Stepper_utils__WEBPACK_IMPORTED_MODULE_4__.X)();return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Stepper__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},actions,stepperProps,{steps:[{label:"Select campaign settings",optional:!0},{label:"Create an ad group",color:"secondary"},"Create an ad"],onDone:stepperProps.onReset,allCompletedCmp:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Stepper_styled__WEBPACK_IMPORTED_MODULE_3__.ZT,{sx:{mt:2,mb:1}},"All steps completed - you're finished")}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"Step A"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"Step B"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"Step C"))};SimpleStepper.displayName="SimpleStepper";var StepsBottomLabelStepper=function(){var _a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0),activeStep=_a[0],setActiveStep=_a[1],_b=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),skipSteps=_b[0],setSkipSteps=_b[1];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Stepper__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},actions,{steps,stepIndex:activeStep,onReset:function(index){setSkipSteps([]),setActiveStep(0)},onNext:function(index){setSkipSteps((function(a){return a.filter((function(i){return i!==index}))})),setActiveStep(index+1)},onBack:function(index){return setActiveStep(index-1)},onSkip:function(index){setSkipSteps((function(a){return a.includes(index)?a:__spreadArray(__spreadArray([],a,!0),[index],!1)})),setActiveStep(index+1)},onDone:function(){},stepsIndexSkipped:skipSteps,stepsBottomLabel:!0,allCompletedCmp:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Stepper_styled__WEBPACK_IMPORTED_MODULE_3__.ZT,{sx:{mt:2,mb:1}},"All steps completed - you're finished")}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"Step A"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"Step B"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"Step C"))};StepsBottomLabelStepper.displayName="StepsBottomLabelStepper";var VerticalStepper=function(){var stepperProps=(0,_Stepper_utils__WEBPACK_IMPORTED_MODULE_4__.X)();return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Stepper__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},actions,stepperProps,{steps:[{label:"Select campaign settings",optional:!0},{label:"Create an ad group",color:"secondary"},"Create an ad"],customStyleProps:{fontSize:25,background:"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)",lineColor:"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)",padding:3,lineWidth:5,marginContent:26},orientation:"vertical",allCompletedCmp:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Stepper_styled__WEBPACK_IMPORTED_MODULE_3__.ZT,{sx:{mt:2,mb:1}},"All steps completed - you're finished")}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"For each ad campaign that you create, you can control how much you're willing to spend on clicks and conversions, which networks and geographical locations you want your ads to show on, and more."),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"An ad group contains one or more ads which target a shared set of keywords."),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"Try out different ad text to see what brings in the most customers, and learn how to enhance your ads using features like ad extensions. If you run into any problems with your ads, find out how to tell if they're running and how to resolve approval issues."))};VerticalStepper.displayName="VerticalStepper";var CustomStepper=function(){var _a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("horizontal"),orientation=_a[0],setOrientation=_a[1],_b=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!0),stepsBottomLabel=_b[0],setStepsBottomLabel=_b[1],stepperProps=(0,_Stepper_utils__WEBPACK_IMPORTED_MODULE_4__.X)(),steps=[{label:"Select campaign settings",optional:!0,icon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_7__.Z,null)},{label:"Create an ad group",color:"secondary",icon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_8__.Z,null)},"Create an ad"];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FIXED_ToggleButtonGroup_ToggleButtonGroups__WEBPACK_IMPORTED_MODULE_6__.Z,{sx:{mb:4}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FIXED_ToggleButtonGroup_ToggleButtonGroup__WEBPACK_IMPORTED_MODULE_5__.Z,{value:orientation,exclusive:!0,onChange:function(event,value){return setOrientation(value)},data:[{value:"horizontal",component:"horizontal"},{value:"vertical",component:"vertical"}]}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FIXED_ToggleButtonGroup_ToggleButtonGroup__WEBPACK_IMPORTED_MODULE_5__.Z,{value:stepsBottomLabel,exclusive:!0,onChange:function(event,value){return setStepsBottomLabel(value)},data:[{value:!0,component:"alternative labels"}]})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Stepper__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},actions,stepperProps,{steps,stepsBottomLabel,customStyleProps:{fontSize:25,background:"#D0DD0D",lineColor:"#124962",padding:3,lineWidth:5},orientation,allCompletedCmp:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Stepper_styled__WEBPACK_IMPORTED_MODULE_3__.ZT,{sx:{mt:2,mb:1}},"All steps completed - you're finished")}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"For each ad campaign that you create, you can control how much you're willing to spend on clicks and conversions, which networks and geographical locations you want your ads to show on, and more."),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"An ad group contains one or more ads which target a shared set of keywords."),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"Try out different ad text to see what brings in the most customers, and learn how to enhance your ads using features like ad extensions. If you run into any problems with your ads, find out how to tell if they're running and how to resolve approval issues.")))},QontoStepper=function(){var _a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("horizontal"),orientation=_a[0],setOrientation=_a[1],_b=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!0),stepsBottomLabel=_b[0],setStepsBottomLabel=_b[1],stepperProps=(0,_Stepper_utils__WEBPACK_IMPORTED_MODULE_4__.X)(),steps=[{label:"Select campaign settings",optional:!0,icon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_7__.Z,null)},{label:"Create an ad group",color:"secondary",icon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_8__.Z,null)},"Create an ad"];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FIXED_ToggleButtonGroup_ToggleButtonGroups__WEBPACK_IMPORTED_MODULE_6__.Z,{sx:{mb:4}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FIXED_ToggleButtonGroup_ToggleButtonGroup__WEBPACK_IMPORTED_MODULE_5__.Z,{value:orientation,exclusive:!0,onChange:function(value){return setOrientation(value)},data:[{value:"horizontal",component:"horizontal"},{value:"vertical",component:"vertical"}]}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FIXED_ToggleButtonGroup_ToggleButtonGroup__WEBPACK_IMPORTED_MODULE_5__.Z,{value:stepsBottomLabel,exclusive:!0,onChange:function(value){return setStepsBottomLabel(value)},data:[{value:!0,component:"alternative labels"}]})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Stepper__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},actions,stepperProps,{qontoStyle:!0,color:"secondary",steps,stepsBottomLabel,orientation,allCompletedCmp:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Stepper_styled__WEBPACK_IMPORTED_MODULE_3__.ZT,{sx:{mt:2,mb:1}},"All steps completed - you're finished")}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"For each ad campaign that you create, you can control how much you're willing to spend on clicks and conversions, which networks and geographical locations you want your ads to show on, and more."),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"An ad group contains one or more ads which target a shared set of keywords."),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"Try out different ad text to see what brings in the most customers, and learn how to enhance your ads using features like ad extensions. If you run into any problems with your ads, find out how to tell if they're running and how to resolve approval issues.")))},QontoCustomStepper=function(){var _a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("horizontal"),orientation=_a[0],setOrientation=_a[1],_b=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!0),stepsBottomLabel=_b[0],setStepsBottomLabel=_b[1],stepperProps=(0,_Stepper_utils__WEBPACK_IMPORTED_MODULE_4__.X)(),steps=[{label:"Select campaign settings",optional:!0,icon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_7__.Z,null)},{label:"Create an ad group",color:"secondary",icon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_8__.Z,null)},"Create an ad"],customStyleProps={fontSize:35,background:"#D0DD0D",lineColor:"#124962",lineWidth:6,padding:10,checkIcon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_8__.Z,{sx:{fontSize:35}}),dotIcon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_7__.Z,{sx:{fontSize:35}})};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FIXED_ToggleButtonGroup_ToggleButtonGroups__WEBPACK_IMPORTED_MODULE_6__.Z,{sx:{mb:4}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FIXED_ToggleButtonGroup_ToggleButtonGroup__WEBPACK_IMPORTED_MODULE_5__.Z,{value:orientation,exclusive:!0,onChange:function(value){return setOrientation(value)},data:[{value:"horizontal",component:"horizontal"},{value:"vertical",component:"vertical"}]}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FIXED_ToggleButtonGroup_ToggleButtonGroup__WEBPACK_IMPORTED_MODULE_5__.Z,{value:stepsBottomLabel,exclusive:!0,onChange:function(value){return setStepsBottomLabel(value)},data:[{value:!0,component:"alternative labels"}]})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Stepper__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},actions,stepperProps,{qontoStyle:!0,steps,stepsBottomLabel,customStyleProps,orientation,allCompletedCmp:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Stepper_styled__WEBPACK_IMPORTED_MODULE_3__.ZT,{sx:{mt:2,mb:1}},"All steps completed - you're finished")}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"For each ad campaign that you create, you can control how much you're willing to spend on clicks and conversions, which networks and geographical locations you want your ads to show on, and more."),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"An ad group contains one or more ads which target a shared set of keywords."),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"Try out different ad text to see what brings in the most customers, and learn how to enhance your ads using features like ad extensions. If you run into any problems with your ads, find out how to tell if they're running and how to resolve approval issues.")))};Default.parameters=_objectSpread(_objectSpread({},Default.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_a=Default.parameters)||void 0===_a?void 0:_a.docs),{},{source:_objectSpread({originalSource:"() => {\n  return <Stepper {...actions} />;\n}"},null===(_c=null===(_b=Default.parameters)||void 0===_b?void 0:_b.docs)||void 0===_c?void 0:_c.source)})}),SimpleStepper.parameters=_objectSpread(_objectSpread({},SimpleStepper.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_d=SimpleStepper.parameters)||void 0===_d?void 0:_d.docs),{},{source:_objectSpread({originalSource:"() => {\n  const stepperProps = useSimpleStepper();\n  const steps = [{\n    label: 'Select campaign settings',\n    optional: true\n  }, {\n    label: 'Create an ad group',\n    color: 'secondary'\n  }, 'Create an ad'];\n  return <Stepper {...actions} {...stepperProps} steps={steps} onDone={stepperProps.onReset} allCompletedCmp={<Typography sx={{\n    mt: 2,\n    mb: 1\n  }}>All steps completed - you&apos;re finished</Typography>}>\n            <div>Step A</div>\n            <div>Step B</div>\n            <div>Step C</div>\n        </Stepper>;\n}"},null===(_f=null===(_e=SimpleStepper.parameters)||void 0===_e?void 0:_e.docs)||void 0===_f?void 0:_f.source)})}),StepsBottomLabelStepper.parameters=_objectSpread(_objectSpread({},StepsBottomLabelStepper.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_g=StepsBottomLabelStepper.parameters)||void 0===_g?void 0:_g.docs),{},{source:_objectSpread({originalSource:"() => {\n  const [activeStep, setActiveStep] = useState(0);\n  const [skipSteps, setSkipSteps] = useState([]);\n  return <Stepper {...actions} steps={steps} stepIndex={activeStep} onReset={index => {\n    setSkipSteps([]);\n    setActiveStep(0);\n  }} onNext={index => {\n    setSkipSteps(a => a.filter(i => i !== index));\n    setActiveStep(index + 1);\n  }} onBack={index => setActiveStep(index - 1)} onSkip={index => {\n    setSkipSteps(a => a.includes(index) ? a : [...a, index]);\n    setActiveStep(index + 1);\n  }} onDone={() => {}} stepsIndexSkipped={skipSteps} stepsBottomLabel allCompletedCmp={<Typography sx={{\n    mt: 2,\n    mb: 1\n  }}>All steps completed - you&apos;re finished</Typography>}>\n            <div>Step A</div>\n            <div>Step B</div>\n            <div>Step C</div>\n        </Stepper>;\n}"},null===(_j=null===(_h=StepsBottomLabelStepper.parameters)||void 0===_h?void 0:_h.docs)||void 0===_j?void 0:_j.source)})}),VerticalStepper.parameters=_objectSpread(_objectSpread({},VerticalStepper.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_k=VerticalStepper.parameters)||void 0===_k?void 0:_k.docs),{},{source:_objectSpread({originalSource:"() => {\n  const stepperProps = useSimpleStepper();\n  const steps = [{\n    label: 'Select campaign settings',\n    optional: true\n  }, {\n    label: 'Create an ad group',\n    color: 'secondary'\n  }, 'Create an ad'];\n  return <Stepper {...actions} {...stepperProps} steps={steps} customStyleProps={{\n    fontSize: 25,\n    background: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    lineColor: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    padding: 3,\n    lineWidth: 5,\n    marginContent: 26\n  }} orientation=\"vertical\" allCompletedCmp={<Typography sx={{\n    mt: 2,\n    mb: 1\n  }}>All steps completed - you&apos;re finished</Typography>}>\n            <div>\n                For each ad campaign that you create, you can control how much you're willing to spend on clicks and\n                conversions, which networks and geographical locations you want your ads to show on, and more.\n            </div>\n            <div>An ad group contains one or more ads which target a shared set of keywords.</div>\n            <div>\n                Try out different ad text to see what brings in the most customers, and learn how to enhance your ads\n                using features like ad extensions. If you run into any problems with your ads, find out how to tell if\n                they're running and how to resolve approval issues.\n            </div>\n        </Stepper>;\n}"},null===(_m=null===(_l=VerticalStepper.parameters)||void 0===_l?void 0:_l.docs)||void 0===_m?void 0:_m.source)})}),CustomStepper.parameters=_objectSpread(_objectSpread({},CustomStepper.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_o=CustomStepper.parameters)||void 0===_o?void 0:_o.docs),{},{source:_objectSpread({originalSource:"() => {\n  const data1 = [{\n    value: 'horizontal',\n    component: 'horizontal'\n  }, {\n    value: 'vertical',\n    component: 'vertical'\n  }];\n  const [orientation, setOrientation] = useState('horizontal');\n  const data2 = [{\n    value: true,\n    component: 'alternative labels'\n  }];\n  const [stepsBottomLabel, setStepsBottomLabel] = useState(true);\n  const stepperProps = useSimpleStepper();\n  const steps = [{\n    label: 'Select campaign settings',\n    optional: true,\n    icon: <AddLocationIcon />\n  }, {\n    label: 'Create an ad group',\n    color: 'secondary',\n    icon: <SendIcon />\n  }, 'Create an ad'];\n  const customStyleProps = {\n    fontSize: 25,\n    background: '#D0DD0D',\n    lineColor: '#124962',\n    padding: 3,\n    lineWidth: 5\n  };\n  return <>\n            <ToggleButtonGroups sx={{\n      mb: 4\n    }}>\n                <ToggleButtonGroup value={orientation} exclusive onChange={(event, value) => setOrientation(value)} data={data1} />\n                <ToggleButtonGroup value={stepsBottomLabel} exclusive onChange={(event, value) => setStepsBottomLabel(value)} data={data2} />\n            </ToggleButtonGroups>\n\n            <Stepper {...actions} {...stepperProps} steps={steps} stepsBottomLabel={stepsBottomLabel} customStyleProps={customStyleProps} orientation={orientation} allCompletedCmp={<Typography sx={{\n      mt: 2,\n      mb: 1\n    }}>All steps completed - you&apos;re finished</Typography>}>\n                <div>\n                    For each ad campaign that you create, you can control how much you're willing to spend on clicks and\n                    conversions, which networks and geographical locations you want your ads to show on, and more.\n                </div>\n                <div>An ad group contains one or more ads which target a shared set of keywords.</div>\n                <div>\n                    Try out different ad text to see what brings in the most customers, and learn how to enhance your\n                    ads using features like ad extensions. If you run into any problems with your ads, find out how to\n                    tell if they're running and how to resolve approval issues.\n                </div>\n            </Stepper>\n        </>;\n}"},null===(_q=null===(_p=CustomStepper.parameters)||void 0===_p?void 0:_p.docs)||void 0===_q?void 0:_q.source)})}),QontoStepper.parameters=_objectSpread(_objectSpread({},QontoStepper.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_r=QontoStepper.parameters)||void 0===_r?void 0:_r.docs),{},{source:_objectSpread({originalSource:"() => {\n  const data1 = [{\n    value: 'horizontal',\n    component: 'horizontal'\n  }, {\n    value: 'vertical',\n    component: 'vertical'\n  }];\n  const [orientation, setOrientation] = useState('horizontal');\n  const data2 = [{\n    value: true,\n    component: 'alternative labels'\n  }];\n  const [stepsBottomLabel, setStepsBottomLabel] = useState(true);\n  const stepperProps = useSimpleStepper();\n  const steps = [{\n    label: 'Select campaign settings',\n    optional: true,\n    icon: <AddLocationIcon />\n  }, {\n    label: 'Create an ad group',\n    color: 'secondary',\n    icon: <SendIcon />\n  }, 'Create an ad'];\n  return <>\n            <ToggleButtonGroups sx={{\n      mb: 4\n    }}>\n                <ToggleButtonGroup value={orientation} exclusive onChange={value => setOrientation(value)} data={data1} />\n                <ToggleButtonGroup value={stepsBottomLabel} exclusive onChange={value => setStepsBottomLabel(value)} data={data2} />\n            </ToggleButtonGroups>\n\n            <Stepper {...actions} {...stepperProps} qontoStyle color=\"secondary\" steps={steps} stepsBottomLabel={stepsBottomLabel} orientation={orientation} allCompletedCmp={<Typography sx={{\n      mt: 2,\n      mb: 1\n    }}>All steps completed - you&apos;re finished</Typography>}>\n                <div>\n                    For each ad campaign that you create, you can control how much you're willing to spend on clicks and\n                    conversions, which networks and geographical locations you want your ads to show on, and more.\n                </div>\n                <div>An ad group contains one or more ads which target a shared set of keywords.</div>\n                <div>\n                    Try out different ad text to see what brings in the most customers, and learn how to enhance your\n                    ads using features like ad extensions. If you run into any problems with your ads, find out how to\n                    tell if they're running and how to resolve approval issues.\n                </div>\n            </Stepper>\n        </>;\n}"},null===(_t=null===(_s=QontoStepper.parameters)||void 0===_s?void 0:_s.docs)||void 0===_t?void 0:_t.source)})}),QontoCustomStepper.parameters=_objectSpread(_objectSpread({},QontoCustomStepper.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_u=QontoCustomStepper.parameters)||void 0===_u?void 0:_u.docs),{},{source:_objectSpread({originalSource:"() => {\n  const data1 = [{\n    value: 'horizontal',\n    component: 'horizontal'\n  }, {\n    value: 'vertical',\n    component: 'vertical'\n  }];\n  const [orientation, setOrientation] = useState('horizontal');\n  const data2 = [{\n    value: true,\n    component: 'alternative labels'\n  }];\n  const [stepsBottomLabel, setStepsBottomLabel] = useState(true);\n  const stepperProps = useSimpleStepper();\n  const steps = [{\n    label: 'Select campaign settings',\n    optional: true,\n    icon: <AddLocationIcon />\n  }, {\n    label: 'Create an ad group',\n    color: 'secondary',\n    icon: <SendIcon />\n  }, 'Create an ad'];\n  const customStyleProps = {\n    fontSize: 35,\n    background: '#D0DD0D',\n    lineColor: '#124962',\n    lineWidth: 6,\n    padding: 10,\n    checkIcon: <SendIcon sx={{\n      fontSize: 35\n    }} />,\n    dotIcon: <AddLocationIcon sx={{\n      fontSize: 35\n    }} />\n  };\n  return <>\n            <ToggleButtonGroups sx={{\n      mb: 4\n    }}>\n                <ToggleButtonGroup value={orientation} exclusive onChange={value => setOrientation(value)} data={data1} />\n                <ToggleButtonGroup value={stepsBottomLabel} exclusive onChange={value => setStepsBottomLabel(value)} data={data2} />\n            </ToggleButtonGroups>\n\n            <Stepper {...actions} {...stepperProps} qontoStyle steps={steps} stepsBottomLabel={stepsBottomLabel} customStyleProps={customStyleProps} orientation={orientation} allCompletedCmp={<Typography sx={{\n      mt: 2,\n      mb: 1\n    }}>All steps completed - you&apos;re finished</Typography>}>\n                <div>\n                    For each ad campaign that you create, you can control how much you're willing to spend on clicks and\n                    conversions, which networks and geographical locations you want your ads to show on, and more.\n                </div>\n                <div>An ad group contains one or more ads which target a shared set of keywords.</div>\n                <div>\n                    Try out different ad text to see what brings in the most customers, and learn how to enhance your\n                    ads using features like ad extensions. If you run into any problems with your ads, find out how to\n                    tell if they're running and how to resolve approval issues.\n                </div>\n            </Stepper>\n        </>;\n}"},null===(_w=null===(_v=QontoCustomStepper.parameters)||void 0===_v?void 0:_v.docs)||void 0===_w?void 0:_w.source)})});var __namedExportsOrder=["Default","SimpleStepper","StepsBottomLabelStepper","VerticalStepper","CustomStepper","QontoStepper","QontoCustomStepper"]},"./src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.styled.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{CO:()=>ToggleButton,iz:()=>Divider,th:()=>ToggleButtonGroup,vv:()=>ToggleButtonGroups});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js"),_mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mui/material/Divider/Divider.js"),_mui_material__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/Paper/Paper.js"),_mui_material__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroup.js"),_mui_material__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@mui/system/esm/colorManipulator.js"),_mui_material__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@mui/material/ToggleButton/ToggleButton.js"),__makeTemplateObject=function(cooked,raw){return Object.defineProperty?Object.defineProperty(cooked,"raw",{value:raw}):cooked.raw=raw,cooked};function _objectDestructuringEmpty(obj){if(null==obj)throw new TypeError("Cannot destructure "+obj)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var templateObject_1,templateObject_2,templateObject_3,templateObject_4,templateObject_5,Divider=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_1__.ZP)((function(_ref){var props=_extends({},(_objectDestructuringEmpty(_ref),_ref));return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({flexItem:!0,orientation:"vertical"},props))}))(templateObject_1||(templateObject_1=__makeTemplateObject(["\n    margin: ",";\n"],["\n    margin: ",";\n"])),(function(props){return props.theme.spacing(1,.5)})),ToggleButtonGroups=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_1__.ZP)((function(_ref2){var props=_extends({},(_objectDestructuringEmpty(_ref2),_ref2));return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__.Z,_extends({elevation:0},props))}),{shouldForwardProp:function(propName){return!["fullWidth"].includes(propName)}})(templateObject_2||(templateObject_2=__makeTemplateObject(["\n    width: ",";\n    display: flex;\n    border: ",";\n    flex-wrap: wrap;\n\n    & .MuiToggleButtonGroup-grouped {\n        margin: ",";\n        border: 0;\n        &.Mui-disabled {\n            border: 0;\n        }\n        &:not(:first-of-type) {\n            border-radius: ",";\n        }\n        &:first-of-type {\n            border-radius: ",";\n        }\n    }\n"],["\n    width: ",";\n    display: flex;\n    border: ",";\n    flex-wrap: wrap;\n\n    & .MuiToggleButtonGroup-grouped {\n        margin: ",";\n        border: 0;\n        &.Mui-disabled {\n            border: 0;\n        }\n        &:not(:first-of-type) {\n            border-radius: ",";\n        }\n        &:first-of-type {\n            border-radius: ",";\n        }\n    }\n"])),(function(props){return props.fullWidth?"100%":"max-content"}),(function(_a){var theme=_a.theme;return"1px solid ".concat(theme.palette.divider)}),(function(props){return props.theme.spacing(.5)}),(function(props){return props.theme.shape.borderRadius}),(function(props){return props.theme.shape.borderRadius})),ToggleButtonGroup=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_1__.ZP)((function(_ref3){var props=_extends({},(_objectDestructuringEmpty(_ref3),_ref3));return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__.Z,props)}),{shouldForwardProp:function(propName){return!["customColor"].includes(propName)}})(templateObject_4||(templateObject_4=__makeTemplateObject(["\n    & .Mui-selected // , & .MuiTouchRipple-root\n    {\n        color: ",";\n    }\n\n    & .Mui-selected {\n        ","\n    }\n"],["\n    & .Mui-selected // , & .MuiTouchRipple-root\n    {\n        color: ",";\n    }\n\n    & .Mui-selected {\n        ","\n    }\n"])),(function(props){return props.customColor}),(function(props){var color=props.customColor&&(0,_mui_material__WEBPACK_IMPORTED_MODULE_5__.Fq)(props.customColor,.2);return(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.iv)(templateObject_3||(templateObject_3=__makeTemplateObject(["\n                background-color: ",";\n            "],["\n                background-color: ",";\n            "])),color?"".concat(color," !important"):"")})),ToggleButton=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_1__.ZP)(_mui_material__WEBPACK_IMPORTED_MODULE_7__.Z)(templateObject_5||(templateObject_5=__makeTemplateObject(["\n    width: max-content;\n"],["\n    width: max-content;\n"])));try{Divider.displayName="Divider",Divider.__docgenInfo={description:"",displayName:"Divider",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.styled.tsx#Divider"]={docgenInfo:Divider.__docgenInfo,name:"Divider",path:"src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.styled.tsx#Divider"})}catch(__react_docgen_typescript_loader_error){}try{ToggleButtonGroups.displayName="ToggleButtonGroups",ToggleButtonGroups.__docgenInfo={description:"",displayName:"ToggleButtonGroups",props:{fullWidth:{defaultValue:null,description:"",name:"fullWidth",required:!1,type:{name:"boolean"}},disableRipple:{defaultValue:null,description:"",name:"disableRipple",required:!1,type:{name:"boolean"}},justifyContent:{defaultValue:null,description:"",name:"justifyContent",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.styled.tsx#ToggleButtonGroups"]={docgenInfo:ToggleButtonGroups.__docgenInfo,name:"ToggleButtonGroups",path:"src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.styled.tsx#ToggleButtonGroups"})}catch(__react_docgen_typescript_loader_error){}try{ToggleButtonGroup.displayName="ToggleButtonGroup",ToggleButtonGroup.__docgenInfo={description:"",displayName:"ToggleButtonGroup",props:{orientation:{defaultValue:null,description:"",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}},exclusive:{defaultValue:null,description:"",name:"exclusive",required:!1,type:{name:"boolean"}},fullWidth:{defaultValue:null,description:"",name:"fullWidth",required:!1,type:{name:"boolean"}},disableRipple:{defaultValue:null,description:"",name:"disableRipple",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"(event: any, newValues: string | string[]) => void"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}},enforceValueSet:{defaultValue:null,description:"",name:"enforceValueSet",required:!1,type:{name:"boolean"}},data:{defaultValue:null,description:"",name:"data",required:!1,type:{name:"{ value: string; disabled?: boolean; component: ReactNode | ReactElement<any, string | JSXElementConstructor<any>>; }[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.styled.tsx#ToggleButtonGroup"]={docgenInfo:ToggleButtonGroup.__docgenInfo,name:"ToggleButtonGroup",path:"src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.styled.tsx#ToggleButtonGroup"})}catch(__react_docgen_typescript_loader_error){}try{ToggleButton.displayName="ToggleButton",ToggleButton.__docgenInfo={description:"",displayName:"ToggleButton",props:{children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<ToggleButtonClasses> & Partial<ClassNameMap<never>>"}},color:{defaultValue:{value:"'standard'"},description:"The color of the button when it is in an active state.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).",name:"color",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"standard"'},{value:'"success"'},{value:'"warning"'},{value:'"info"'},{value:'"primary"'},{value:'"secondary"'}]}},disabled:{defaultValue:{value:"false\nfalse"},description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},disableFocusRipple:{defaultValue:{value:"false"},description:"If `true`, the  keyboard focus ripple is disabled.",name:"disableFocusRipple",required:!1,type:{name:"boolean"}},fullWidth:{defaultValue:{value:"false"},description:"If `true`, the button will take up the full width of its container.",name:"fullWidth",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Callback fired when the state changes.\n@param event The event source of the callback.\n@param value of the selected button.",name:"onChange",required:!1,type:{name:"(event: MouseEvent<HTMLElement, MouseEvent>, value: any) => void"}},onClick:{defaultValue:null,description:"Callback fired when the button is clicked.\n@param event The event source of the callback.\n@param value of the selected button.",name:"onClick",required:!1,type:{name:"(event: MouseEvent<HTMLElement, MouseEvent>, value: any) => void"}},selected:{defaultValue:null,description:"If `true`, the button is rendered in an active state.",name:"selected",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"'medium'"},description:"The size of the component.\nThe prop defaults to the value inherited from the parent ToggleButtonGroup component.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},value:{defaultValue:null,description:"The value to associate with the button when selected in a\nToggleButtonGroup.",name:"value",required:!0,type:{name:"{}"}},disableRipple:{defaultValue:{value:"false"},description:"If `true`, the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the `.Mui-focusVisible` class.",name:"disableRipple",required:!1,type:{name:"boolean"}},tabIndex:{defaultValue:{value:"0"},description:"",name:"tabIndex",required:!1,type:{name:"number"}},action:{defaultValue:null,description:"A ref for imperative actions.\nIt currently only supports `focusVisible()` action.",name:"action",required:!1,type:{name:"Ref<ButtonBaseActions>"}},centerRipple:{defaultValue:{value:"false"},description:"If `true`, the ripples are centered.\nThey won't start at the cursor interaction position.",name:"centerRipple",required:!1,type:{name:"boolean"}},disableTouchRipple:{defaultValue:{value:"false"},description:"If `true`, the touch ripple effect is disabled.",name:"disableTouchRipple",required:!1,type:{name:"boolean"}},focusRipple:{defaultValue:{value:"false"},description:"If `true`, the base button will have a keyboard focus ripple.",name:"focusRipple",required:!1,type:{name:"boolean"}},focusVisibleClassName:{defaultValue:null,description:"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\nif needed.",name:"focusVisibleClassName",required:!1,type:{name:"string"}},LinkComponent:{defaultValue:{value:"'a'"},description:"The component used to render a link when the `href` prop is provided.",name:"LinkComponent",required:!1,type:{name:"ElementType<any>"}},onFocusVisible:{defaultValue:null,description:"Callback fired when the component is focused with a keyboard.\nWe trigger a `onFocus` callback too.",name:"onFocusVisible",required:!1,type:{name:"FocusEventHandler<any>"}},TouchRippleProps:{defaultValue:null,description:"Props applied to the `TouchRipple` element.",name:"TouchRippleProps",required:!1,type:{name:"Partial<TouchRippleProps>"}},touchRippleRef:{defaultValue:null,description:"A ref that points to the `TouchRipple` element.",name:"touchRippleRef",required:!1,type:{name:"Ref<TouchRippleActions>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLButtonElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.styled.tsx#ToggleButton"]={docgenInfo:ToggleButton.__docgenInfo,name:"ToggleButton",path:"src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.styled.tsx#ToggleButton"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_ToggleButtonGroup_styled__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.styled.tsx"),_utils_helpers__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/utils/helpers.ts"),_SVGIcon_SVGIcon__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/SVGIcon/SVGIcon.tsx"),_excluded=["value","onChange","size","exclusive","orientation","disableRipple","enforceValueSet","data","color","fullWidth"],_excluded2=["value","disabled","component"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var ToggleButtonGroup=function(_ref){var selectedValue=_ref.value,onChange=_ref.onChange,size=_ref.size,exclusive=_ref.exclusive,orientation=_ref.orientation,disableRipple=_ref.disableRipple,enforceValueSet=_ref.enforceValueSet,data=_ref.data,color=_ref.color,fullWidth=_ref.fullWidth,props=_objectWithoutProperties(_ref,_excluded),_a=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_2__.Ek)(color),customColor=_a[0],muiColor=_a[1],commonsValues=[].concat(selectedValue);function onChangeHandler(event,newValues){onChange&&(enforceValueSet?(exclusive&&null!==newValues&&onChange(event,newValues),!exclusive&&(null==newValues?void 0:newValues.length)&&onChange(event,newValues)):onChange(event,newValues))}function onButtonClickHandler(value,event){event.target.value||(event.stopPropagation(),null==onChangeHandler||onChangeHandler(event,exclusive?null:commonsValues.filter((function(cv){return cv!==value}))))}return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ToggleButtonGroup_styled__WEBPACK_IMPORTED_MODULE_1__.th,_extends({color:muiColor,customColor:muiColor?void 0:customColor,orientation,value:exclusive?selectedValue:commonsValues,exclusive,size,onChange:onChangeHandler,fullWidth},props),data?[].concat(data).filter(Boolean).map((function(_ref2,index){var value=_ref2.value,disabled=_ref2.disabled,component=_ref2.component,toggleProps=_objectWithoutProperties(_ref2,_excluded2);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ToggleButtonGroup_styled__WEBPACK_IMPORTED_MODULE_1__.CO,_extends({key:index,name:value,disableRipple,value,disabled,onClick:onButtonClickHandler.bind(null,value),sx:_objectSpread(_objectSpread({},fullWidth&&{flex:"1 1 auto"}),toggleProps.sx)},toggleProps),"string"==typeof component?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SVGIcon_SVGIcon__WEBPACK_IMPORTED_MODULE_3__.Z,null,component):component)})):null)};ToggleButtonGroup.displayName="ToggleButtonGroup",ToggleButtonGroup.displayName="ToggleButtonGroup",ToggleButtonGroup.defaultProps={color:void 0,orientation:void 0,size:void 0,exclusive:void 0,fullWidth:void 0,disableRipple:void 0,onChange:void 0,enforceValueSet:void 0,data:[]};const __WEBPACK_DEFAULT_EXPORT__=ToggleButtonGroup;try{ToggleButtonGroup.displayName="ToggleButtonGroup",ToggleButtonGroup.__docgenInfo={description:"",displayName:"ToggleButtonGroup",props:{orientation:{defaultValue:{value:"undefined"},description:"",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},size:{defaultValue:{value:"undefined"},description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}},exclusive:{defaultValue:{value:"undefined"},description:"",name:"exclusive",required:!1,type:{name:"boolean"}},fullWidth:{defaultValue:{value:"undefined"},description:"",name:"fullWidth",required:!1,type:{name:"boolean"}},disableRipple:{defaultValue:{value:"undefined"},description:"",name:"disableRipple",required:!1,type:{name:"boolean"}},onChange:{defaultValue:{value:"undefined"},description:"",name:"onChange",required:!1,type:{name:"(event: any, newValues: string | string[]) => void"}},color:{defaultValue:{value:"undefined"},description:"",name:"color",required:!1,type:{name:"string"}},enforceValueSet:{defaultValue:{value:"undefined"},description:"",name:"enforceValueSet",required:!1,type:{name:"boolean"}},data:{defaultValue:{value:"[]"},description:"",name:"data",required:!1,type:{name:"{ value: string; disabled?: boolean; component: ReactNode | ReactElement<any, string | JSXElementConstructor<any>>; }[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.tsx#ToggleButtonGroup"]={docgenInfo:ToggleButtonGroup.__docgenInfo,name:"ToggleButtonGroup",path:"src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.tsx#ToggleButtonGroup"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroups.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_ToggleButtonGroup_styled__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.styled.tsx"),_ToggleButtonGroup__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.tsx"),_excluded=["fullWidth","disableRipple","justifyContent","children"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var ToggleButtonGroups=function(_ref){var fullWidth=_ref.fullWidth,disableRipple=_ref.disableRipple,justifyContent=_ref.justifyContent,children=_ref.children,props=_objectWithoutProperties(_ref,_excluded),groups=[].concat(children).filter((function(child){var _a;return(null===(_a=null==child?void 0:child.type)||void 0===_a?void 0:_a.name)===_ToggleButtonGroup__WEBPACK_IMPORTED_MODULE_2__.Z.displayName})).map((function(child,index,arr){return[react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child,{key:"TB".concat(index),disableRipple}),index!==arr.length-1?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ToggleButtonGroup_styled__WEBPACK_IMPORTED_MODULE_1__.iz,{key:"D".concat(index)}):null]})).flat().filter(Boolean);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ToggleButtonGroup_styled__WEBPACK_IMPORTED_MODULE_1__.vv,_extends({fullWidth,sx:{justifyContent}},props),groups)};ToggleButtonGroups.displayName="ToggleButtonGroups",ToggleButtonGroups.defaultProps={fullWidth:void 0,disableRipple:void 0,justifyContent:void 0};const __WEBPACK_DEFAULT_EXPORT__=ToggleButtonGroups;try{ToggleButtonGroups.displayName="ToggleButtonGroups",ToggleButtonGroups.__docgenInfo={description:"",displayName:"ToggleButtonGroups",props:{fullWidth:{defaultValue:{value:"undefined"},description:"",name:"fullWidth",required:!1,type:{name:"boolean"}},disableRipple:{defaultValue:{value:"undefined"},description:"",name:"disableRipple",required:!1,type:{name:"boolean"}},justifyContent:{defaultValue:{value:"undefined"},description:"",name:"justifyContent",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroups.tsx#ToggleButtonGroups"]={docgenInfo:ToggleButtonGroups.__docgenInfo,name:"ToggleButtonGroups",path:"src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroups.tsx#ToggleButtonGroups"})}catch(__react_docgen_typescript_loader_error){}}}]);