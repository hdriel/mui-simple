"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[3231],{"./src/components/_FIXED/TreeView/__stories__/TreeView.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicTreeView:()=>BasicTreeView,CustomItem:()=>CustomItem,Default:()=>Default,GmailCloneStyles:()=>GmailCloneStyles,IndentBorderStyles:()=>IndentBorderStyles,MultiSelection:()=>MultiSelection,__namedExportsOrder:()=>__namedExportsOrder,default:()=>TreeView_stories});var react=__webpack_require__("./node_modules/react/index.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),colorManipulator=__webpack_require__("./node_modules/@mui/material/node_modules/@mui/system/esm/colorManipulator.js"),SimpleTreeView=__webpack_require__("./node_modules/@mui/x-tree-view/esm/SimpleTreeView/SimpleTreeView.js"),TreeItem=__webpack_require__("./node_modules/@mui/x-tree-view/esm/TreeItem/TreeItem.js"),treeItemClasses=__webpack_require__("./node_modules/@mui/x-tree-view/esm/TreeItem/treeItemClasses.js"),emotion_react_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");var helpers=__webpack_require__("./src/utils/helpers.ts");const TreeView=(0,styled.Ay)(SimpleTreeView.G,{shouldForwardProp:propName=>!["maxWidth","height"].includes(propName)})`
    height: ${props=>(0,helpers.vb)(props.height)};
    flex-grow: 1;
    max-width: ${props=>props.maxWidth?(0,helpers.vb)(props.maxWidth):void 0};
    overflow-y: auto;
    overflow-x: hidden;
`,TreeView_styled_TreeItem=TreeItem.yh,LabelIconTreeItemStyled=(0,styled.Ay)(TreeItem.yh)((({theme})=>({color:theme.palette.text.secondary,[`& .${treeItemClasses.m.content}`]:{width:"auto",color:theme.palette.text.secondary,borderTopRightRadius:theme.spacing(2),borderBottomRightRadius:theme.spacing(2),paddingRight:theme.spacing(1),fontWeight:theme.typography.fontWeightMedium,"&.Mui-expanded":{fontWeight:theme.typography.fontWeightRegular},"&:hover":{backgroundColor:theme.palette.action.hover},"&.Mui-focused, &.Mui-selected, &.Mui-selected.Mui-focused":{backgroundColor:`var(--tree-view-bg-color, ${theme.palette.action.selected})`,color:"var(--tree-view-color)"},[`& .${treeItemClasses.m.label}`]:{fontWeight:"inherit",color:"inherit"}},[`& .${treeItemClasses.m.groupTransition}`]:{marginLeft:0,[`& .${treeItemClasses.m.content}`]:{paddingLeft:theme.spacing(2)}}}))),IndentBorderTreeItemStyled=(0,styled.Ay)(TreeItem.yh)((({theme})=>({[`& .${treeItemClasses.m.content}`]:{padding:theme.spacing(.5,1),margin:theme.spacing(.2,0)},[`& .${treeItemClasses.m.iconContainer}`]:{"& .close":{opacity:.3}},[`& .${treeItemClasses.m.groupTransition}`]:{marginLeft:15,paddingLeft:18,borderLeft:`1px dashed ${(0,colorManipulator.X4)(theme.palette.text.primary,.4)}`}}))),TreeItemStyled=(0,styled.Ay)(TreeItem.yh,{shouldForwardProp:propName=>!["bordered","closeIconFade"].includes(propName)})`
    ${function closeIconFade(props){return props.closeIconFade?emotion_react_browser_esm.AH`
        & .${treeItemClasses.m.iconContainer} {
            & .close {
                opacity: 0.3;
            }
        }
    `:emotion_react_browser_esm.AH``}};
    ${function borderedStyles(props){return props.bordered?emotion_react_browser_esm.AH`
        & .${treeItemClasses.m.groupTransition} {
            margin-left: 15px;
            padding-left: 18px;
            border-left: 1px dashed ${(0,colorManipulator.X4)(props.theme.palette.text.primary,.4)};
        }
    `:emotion_react_browser_esm.AH``}};
    ${function selectedColor(props){return emotion_react_browser_esm.AH`
        color: ${props.theme.palette.text.secondary};
        & .${treeItemClasses.m.content} {
            color: ${props.theme.palette.text.secondary};

            &.Mui-focused,
            &.Mui-selected,
            &.Mui-selected.Mui-focused {
                color: var(--tree-view-color);
                background-color: var(--tree-view-bg-color, ${props.theme.palette.action.selected}});
            }

            &:hover {
                background-color: ${props.theme.palette.action.hover};
            }
        }
    `}};
    ${function edgeCorners(props){return props.edgeCorners?emotion_react_browser_esm.AH`
        & .${treeItemClasses.m.content} {
            border-top-right-radius: ${props.theme.spacing(2)};
            border-bottom-right-radius: ${props.theme.spacing(2)};
        }
    `:emotion_react_browser_esm.AH``}};

    & .${treeItemClasses.m.content} {
        width: auto;

        padding-right: ${props=>props.theme.spacing(1)};
        font-weight: ${props=>props.theme.typography.fontWeightMedium};

        &.Mui-expanded {
            font-weight: ${props=>props.theme.typography.fontWeightRegular};
        }

        & .${treeItemClasses.m.label} {
            font-weight: inherit;
            color: inherit;
        }
    }

    & .${treeItemClasses.m.groupTransition} {
        margin-left: 0;

        & .${treeItemClasses.m.content} {
            padding-left: ${props=>props.theme.spacing(2)};
        }
    }
`;var Typography=__webpack_require__("./src/components/_FIXED/Typography/Typography.tsx"),SVGIcon=__webpack_require__("./src/components/_FIXED/SVGIcon/SVGIcon.tsx"),ArrowDropDown=__webpack_require__("./node_modules/@mui/icons-material/esm/ArrowDropDown.js"),ArrowRight=__webpack_require__("./node_modules/@mui/icons-material/esm/ArrowRight.js");const _excluded=["nodeId","id","fieldId","bgColor","color","icon","info","label"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const LabelIconTreeItem=(0,react.forwardRef)(((props,ref)=>{const _ref=null!=props?props:{},{nodeId,id,fieldId,bgColor,color,icon:_labelIcon,info:labelInfo,label:labelText}=_ref,other=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.includes(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.includes(o)||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded),labelIcon="string"==typeof _labelIcon?react.createElement(SVGIcon.A,null,_labelIcon):_labelIcon;return props&&react.createElement(LabelIconTreeItemStyled,_extends({ref},other,{nodeId:props[fieldId]||nodeId||id,label:react.createElement(Box.A,{sx:{display:"flex",alignItems:"center",p:.5,pr:0}},labelIcon&&react.createElement(Box.A,{color:"inherit",sx:{mr:1,display:"flex",alignItems:"center"}},labelIcon),labelText&&react.createElement(Typography.A,{variant:"body2",sx:{fontWeight:"inherit",flexGrow:1}},labelText),labelInfo&&react.createElement(Typography.A,{variant:"caption",color:"inherit"},labelInfo)),style:{"--tree-view-color":color,"--tree-view-bg-color":bgColor}}))})),TreeItemComponents_LabelIconTreeItem=LabelIconTreeItem,LabelIconTreeItemIcons={collapseIcon:react.createElement(ArrowDropDown.A,null),expandIcon:react.createElement(ArrowRight.A,null),endIcon:react.createElement("div",{style:{width:24}})};LabelIconTreeItem.__docgenInfo={description:"",methods:[],displayName:"LabelIconTreeItem"};var SvgIcon=__webpack_require__("./node_modules/@mui/material/SvgIcon/SvgIcon.js");function TreeView_icons_extends(){return TreeView_icons_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},TreeView_icons_extends.apply(null,arguments)}function PlusSquare(props){return react.createElement(SvgIcon.A,TreeView_icons_extends({fontSize:"inherit",style:{width:14,height:14}},props),react.createElement("path",{d:"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z"}))}function CloseSquare(props){return react.createElement(SvgIcon.A,TreeView_icons_extends({className:"close",fontSize:"inherit",style:{width:14,height:14}},props),react.createElement("path",{d:"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z"}))}PlusSquare.__docgenInfo={description:"",methods:[],displayName:"PlusSquare"},CloseSquare.__docgenInfo={description:"",methods:[],displayName:"CloseSquare"};const IndentBorderTreeItem_excluded=["bgColor","color","icon","label"];function IndentBorderTreeItem_extends(){return IndentBorderTreeItem_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},IndentBorderTreeItem_extends.apply(null,arguments)}const IndentBorderTreeItem=(0,react.forwardRef)(((props,ref)=>{const _ref=null!=props?props:{},{bgColor,color,icon,label}=_ref,other=function IndentBorderTreeItem_objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function IndentBorderTreeItem_objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.includes(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.includes(o)||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,IndentBorderTreeItem_excluded);return props&&react.createElement(IndentBorderTreeItemStyled,IndentBorderTreeItem_extends({ref},other,{label,style:{"--tree-view-color":color,"--tree-view-bg-color":bgColor}}))})),TreeItemComponents_IndentBorderTreeItem=IndentBorderTreeItem,IndentBorderTreeItemIcons={collapseIcon:"Email",expandIcon:react.createElement(PlusSquare,null),endIcon:react.createElement(CloseSquare,null)};IndentBorderTreeItem.__docgenInfo={description:"",methods:[],displayName:"IndentBorderTreeItem"};var Button=__webpack_require__("./src/components/_FIXED/Button/Button.tsx"),uuid=__webpack_require__("./node_modules/react-uuid/uuid.js"),uuid_default=__webpack_require__.n(uuid),get=__webpack_require__("./node_modules/lodash-es/get.js"),Collapse=__webpack_require__("./node_modules/@mui/material/Collapse/Collapse.js"),react_spring_web_modern=__webpack_require__("./node_modules/@react-spring/web/dist/react-spring_web.modern.mjs");function TransitionComponent(props){const style=(0,react_spring_web_modern.zh)({from:{opacity:0,transform:"translate3d(0,-20px,0)"},to:{opacity:props.in?1:0,transform:`translate3d(0,${props.in?0:20}px,0)`}});return react.createElement(react_spring_web_modern.CS.div,{style},react.createElement(Collapse.A,props))}const TreeView_transition=TransitionComponent;TransitionComponent.__docgenInfo={description:"",methods:[],displayName:"TransitionComponent"};var useTreeItemUtils=__webpack_require__("./node_modules/@mui/x-tree-view/esm/hooks/useTreeItemUtils/useTreeItemUtils.js");const withTreeViewItem_excluded=["nodeId","fieldId","TransitionComponent","children","closeIconFade","closeIconFadeStyles","borderedStyles","edgeCornersStyles"],_excluded2=["children"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function withTreeViewItem_extends(){return withTreeViewItem_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},withTreeViewItem_extends.apply(null,arguments)}function withTreeViewItem_objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function withTreeViewItem_objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.includes(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.includes(o)||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}const TreeView_excluded=["borderedStyles","closeIconFadeStyles","collapseIcon","CustomComponent","edgeCornersStyles","endIcon","expandedIds","expandIcon","externalItemProps","fieldId","fieldLabel","maxWidth","multiSelect","nodes","onExpanded","onSelected","selectedIds","TransitionComponent","TreeItemComponent","useStyle"],TreeView_excluded2=["id","label"];function TreeView_extends(){return TreeView_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},TreeView_extends.apply(null,arguments)}function TreeView_ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function TreeView_objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?TreeView_ownKeys(Object(t),!0).forEach((function(r){TreeView_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):TreeView_ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function TreeView_defineProperty(e,r,t){return(r=function TreeView_toPropertyKey(t){var i=function TreeView_toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function TreeView_objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function TreeView_objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.includes(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.includes(o)||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}function removeDuplicates(arr){const countMap=arr.reduce(((acc,val)=>(acc[val]=(acc[val]||0)+1,acc)),{});return arr.filter((val=>1===countMap[val]))}const TreeView_TreeView=_ref=>{var _externalItemProps$fi;let{borderedStyles=!1,closeIconFadeStyles=!1,collapseIcon:_collapseIcon="ExpandMore",CustomComponent,edgeCornersStyles=!1,endIcon:_endIcon,expandedIds,expandIcon:_expandIcon="ChevronRight",externalItemProps={},fieldId,fieldLabel,maxWidth,multiSelect,nodes=[],onExpanded,onSelected,selectedIds,TransitionComponent=TreeView_transition,TreeItemComponent=TreeView_styled_TreeItem,useStyle}=_ref,props=TreeView_objectWithoutProperties(_ref,TreeView_excluded);const collapseIcon="string"==typeof _collapseIcon?react.createElement(SVGIcon.A,null,_collapseIcon):_collapseIcon,expandIcon="string"==typeof _expandIcon?react.createElement(SVGIcon.A,null,_expandIcon):_expandIcon,endIcon="string"==typeof _endIcon?react.createElement(SVGIcon.A,null,_endIcon):_endIcon,handleToggle=onExpanded?(event,nodeIds)=>{event.stopPropagation();const expendedItems=removeDuplicates([].concat(expandedIds,nodeIds));onExpanded(expendedItems)}:void 0,handleSelect=onSelected?(event,nodeIds)=>{if(event.stopPropagation(),multiSelect){const selectedItems=removeDuplicates([].concat(selectedIds,nodeIds));onSelected(selectedItems)}else onSelected([].concat(nodeIds))}:void 0,CustomTreeItem=CustomComponent?function withTreeViewItem(Component,TreeItemComponent=TreeView_styled_TreeItem,externalItemProps={}){const CustomTreeItemChild=(0,react.forwardRef)(((props,ref)=>{var _ref2,_concat;const _ref=null!=props?props:{},{nodeId,fieldId,TransitionComponent,children,closeIconFade,closeIconFadeStyles,borderedStyles,edgeCornersStyles}=_ref,restProps=withTreeViewItem_objectWithoutProperties(_ref,withTreeViewItem_excluded),{status:{disabled,expanded,selected,focused,expandable}={},interactions:{handleExpansion,handleSelection}}=(0,useTreeItemUtils.W)({itemId:nodeId}),key=null!==(_ref2=fieldId&&restProps[fieldId])&&void 0!==_ref2?_ref2:restProps.id||uuid_default()();return props&&react.createElement(TreeItemComponent,{key,ref,id:key,nodeId:key,itemId:key,TransitionComponent,closeIconFade,bordered:borderedStyles,closeIconFadeStyles,borderedStyles,edgeCornersStyles,label:react.createElement(Component,withTreeViewItem_extends({},restProps,externalItemProps,{nodeId,itemDisabled:disabled,itemExpanded:expanded,itemSelected:selected,itemFocused:focused,onExpandedItem:event=>null==handleExpansion?void 0:handleExpansion(event),onSelectedItem:event=>null==handleSelection?void 0:handleSelection(event),preventSelectItem:!expandable})),style:_objectSpread(_objectSpread({},restProps.color&&{"--tree-view-color":restProps.color}),restProps.bgColor&&{"--tree-view-bg-color":restProps.bgColor})},null===(_concat=[].concat(null!=children?children:[]))||void 0===_concat?void 0:_concat.map((({props:treeItemProps},index)=>{var _treeItemProps$nodeId;return react.createElement(CustomTreeItemChild,withTreeViewItem_extends({key:null!==(_treeItemProps$nodeId=null==treeItemProps?void 0:treeItemProps.nodeId)&&void 0!==_treeItemProps$nodeId?_treeItemProps$nodeId:index},treeItemProps))})))}));return function renderTree(_ref3){var _concat2;let{children}=_ref3,props=withTreeViewItem_objectWithoutProperties(_ref3,_excluded2);return react.createElement(CustomTreeItemChild,props,null===(_concat2=[].concat(null!=children?children:[]))||void 0===_concat2?void 0:_concat2.map((({props:treeItemProps})=>renderTree(treeItemProps))))}}(CustomComponent,TreeItemStyled,TreeView_objectSpread(TreeView_objectSpread({},externalItemProps),{},{fieldId:null!==(_externalItemProps$fi=null==externalItemProps?void 0:externalItemProps.fieldId)&&void 0!==_externalItemProps$fi?_externalItemProps$fi:fieldId})):TreeItemComponent,renderTree=nodes=>null==nodes?void 0:nodes.map((_ref2=>{var _ref3;let{id,label}=_ref2,node=TreeView_objectWithoutProperties(_ref2,TreeView_excluded2);return react.createElement(CustomTreeItem,TreeView_extends({key:null!==(_ref3=fieldId&&node[fieldId])&&void 0!==_ref3?_ref3:id||uuid_default()(),label:"function"==typeof fieldLabel?fieldLabel(node):fieldLabel?(0,get.A)(node,fieldLabel,label):label,TransitionComponent},node,{id:fieldId&&node[fieldId]||id||uuid_default()(),nodeId:fieldId&&node[fieldId]||id||uuid_default()(),itemId:fieldId&&node[fieldId]||id||uuid_default()()}),renderTree(node.children))}));return react.createElement(Box.A,null,react.createElement(TreeView,TreeView_extends({slots:TreeView_objectSpread(TreeView_objectSpread(TreeView_objectSpread({},collapseIcon&&{collapseIcon:props=>react.cloneElement(collapseIcon,props)}),expandIcon&&{expandIcon:props=>react.cloneElement(expandIcon,props)}),endIcon&&{endIcon:props=>react.cloneElement(endIcon,props)}),expandedItems:expandedIds,onItemSelectionToggle:handleSelect,onItemExpansionToggle:handleToggle,maxWidth,selectedItems:selectedIds},multiSelect&&{multiSelect},props),CustomTreeItem&&renderTree(nodes)))},_FIXED_TreeView_TreeView=TreeView_TreeView;function TreeView_stories_extends(){return TreeView_stories_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},TreeView_stories_extends.apply(null,arguments)}TreeView_TreeView.__docgenInfo={description:"",methods:[],displayName:"TreeView",props:{borderedStyles:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},closeIconFadeStyles:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},collapseIcon:{required:!1,tsType:{name:"union",raw:"IconName | ReactNode | ReactElement | SvgIconComponent",elements:[{name:"IconName"},{name:"ReactNode"},{name:"ReactElement"},{name:"SvgIcon"}]},description:"",defaultValue:{value:"'ExpandMore'",computed:!1}},CustomComponent:{required:!1,tsType:{name:"union",raw:"ElementType | string",elements:[{name:"union",raw:"React.ForwardRefExoticComponent<any> | ReactElement | ReactNode",elements:[{name:"ReactForwardRefExoticComponent",raw:"React.ForwardRefExoticComponent<any>",elements:[{name:"any"}]},{name:"ReactElement"},{name:"ReactNode"}]},{name:"string"}]},description:""},edgeCornersStyles:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},endIcon:{required:!1,tsType:{name:"union",raw:"IconName | ReactNode | ReactElement | SvgIconComponent",elements:[{name:"IconName"},{name:"ReactNode"},{name:"ReactElement"},{name:"SvgIcon"}]},description:""},expandedIds:{required:!1,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:""},expandIcon:{required:!1,tsType:{name:"union",raw:"IconName | ReactNode | ReactElement | SvgIconComponent",elements:[{name:"IconName"},{name:"ReactNode"},{name:"ReactElement"},{name:"SvgIcon"}]},description:"",defaultValue:{value:"'ChevronRight'",computed:!1}},externalItemProps:{required:!1,tsType:{name:"Record",elements:[{name:"string"},{name:"any"}],raw:"Record<string, any>"},description:"",defaultValue:{value:"{}",computed:!1}},fieldId:{required:!1,tsType:{name:"string"},description:""},fieldLabel:{required:!1,tsType:{name:"union",raw:"string | ((node: any) => string)",elements:[{name:"string"},{name:"unknown"}]},description:""},maxWidth:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:""},multiSelect:{required:!1,tsType:{name:"boolean"},description:""},nodes:{required:!1,tsType:{name:"Array",elements:[{name:"TreeViewNodeProps"}],raw:"TreeViewNodeProps[]"},description:"",defaultValue:{value:"[]",computed:!1}},onExpanded:{required:!1,tsType:{name:"signature",type:"function",raw:"(expandedIds: string[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"string"}],raw:"string[]"},name:"expandedIds"}],return:{name:"void"}}},description:""},onSelected:{required:!1,tsType:{name:"signature",type:"function",raw:"(selectedItemIds: string[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"string"}],raw:"string[]"},name:"selectedItemIds"}],return:{name:"void"}}},description:""},selectedIds:{required:!1,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:""},TransitionComponent:{required:!1,tsType:{name:"union",raw:"ElementType | string",elements:[{name:"union",raw:"React.ForwardRefExoticComponent<any> | ReactElement | ReactNode",elements:[{name:"ReactForwardRefExoticComponent",raw:"React.ForwardRefExoticComponent<any>",elements:[{name:"any"}]},{name:"ReactElement"},{name:"ReactNode"}]},{name:"string"}]},description:"",defaultValue:{value:"function TransitionComponent(props): React.ReactNode | React.ReactElement {\n    const style = useSpring({\n        from: {\n            opacity: 0,\n            transform: 'translate3d(0,-20px,0)',\n        },\n        to: {\n            opacity: props.in ? 1 : 0,\n            transform: `translate3d(0,${props.in ? 0 : 20}px,0)`,\n        },\n    });\n\n    return (\n        <animated.div style={style}>\n            <Collapse {...props} />\n        </animated.div>\n    );\n}",computed:!1}},TreeItemComponent:{required:!1,tsType:{name:"union",raw:"ElementType | string",elements:[{name:"union",raw:"React.ForwardRefExoticComponent<any> | ReactElement | ReactNode",elements:[{name:"ReactForwardRefExoticComponent",raw:"React.ForwardRefExoticComponent<any>",elements:[{name:"any"}]},{name:"ReactElement"},{name:"ReactNode"}]},{name:"string"}]},description:"",defaultValue:{value:"TreeItem",computed:!0}},useStyle:{required:!1,tsType:{name:"union",raw:"'default' | 'LabelIcon' | 'IndentBorder'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'LabelIcon'"},{name:"literal",value:"'IndentBorder'"}]},description:""}}};const TreeView_stories={title:"Mui-X/TreeView",component:_FIXED_TreeView_TreeView,tags:["autodocs"]},Default={args:{}},BasicTreeView={args:{nodes:[{id:"1",label:"Applications",children:[{id:"2",label:"Calendar"}]},{id:"5",label:"Documents",children:[{id:"10",label:"OSS"},{id:"6",label:"MUI",children:[{id:"8",label:"index.js"}]}]}]}},MultiSelection={args:{expandedIds:["3"],selectedIds:[],multiSelect:!0,nodes:[{id:"1",label:"Applications",children:[{id:"2",label:"Calendar"},{id:"3",label:"Chrome"},{id:"4",label:"Webstorm"}]},{id:"5",label:"Documents",children:[{id:"6",label:"MUI",children:[{id:"7",label:"src",children:[{id:"8",label:"index.js"},{id:"9",label:"tree-view.js"}]}]}]}]},render:args=>{const[expanded,setExpanded]=(0,react.useState)(args.expandedIds),[selected,setSelected]=(0,react.useState)(args.selectedIds);return react.createElement(Box.A,{sx:{height:270,flexGrow:1,maxWidth:400,overflowY:"auto"}},react.createElement(Box.A,{sx:{mb:1}},react.createElement(Button.A,{onClick:()=>{setExpanded((oldExpanded=>0===(null==oldExpanded?void 0:oldExpanded.length)?["1","5","6","7"]:[]))}},0===(null==expanded?void 0:expanded.length)?"Expand all":"Collapse all"),react.createElement(Button.A,{onClick:()=>{setSelected((oldSelected=>0===(null==oldSelected?void 0:oldSelected.length)?["1","2","3","4","5","6","7","8","9"]:[]))}},0===(null==selected?void 0:selected.length)?"Select all":"Unselect all")),react.createElement(_FIXED_TreeView_TreeView,TreeView_stories_extends({},args,{expandedIds:expanded,selectedIds:selected,onExpanded:setExpanded,onSelected:setSelected,multiSelect:!0})))}},GmailCloneStyles={args:{expandedIds:["3"],selectedIds:[],nodes:[{id:"1",label:"All Mail",icon:"Mail"},{id:"2",label:"Trash",icon:"Delete"},{id:"3",label:"Categories",icon:"Label",children:[{id:"5",label:"Social",icon:"SupervisorAccount",info:"90",color:"#1a73e8",bgColor:"#e8f0fe"},{id:"6",label:"Updates",icon:"Info",info:"2,294",color:"#e3742f",bgColor:"#fcefe3"},{id:"7",label:"Forums",icon:"Forum",info:"3,566",color:"#a250f5",bgColor:"#f3e8fd"},{id:"8",label:"Promotions",icon:"LocalOffer",info:"733",color:"#3c8039",bgColor:"#e6f4ea"}]},{id:"4",label:"History",icon:"Label"}]},render:args=>{const[expanded,setExpanded]=(0,react.useState)(args.expandedIds),[selected,setSelected]=(0,react.useState)(args.selectedIds);return react.createElement(_FIXED_TreeView_TreeView,TreeView_stories_extends({},args,{expandedIds:expanded,selectedIds:selected,onExpanded:setExpanded,onSelected:setSelected,TreeItemComponent:TreeItemComponents_LabelIconTreeItem},LabelIconTreeItemIcons))}},IndentBorderStyles={args:{expandedIds:["1"],selectedIds:[],nodes:[{id:"1",label:"Main",children:[{id:"2",label:"Hello"},{id:"3",label:"Subtree with children",children:[{id:"6",label:"Hello"},{id:"7",label:"Sub-subtree with children",children:[{id:"9",label:"Child 1"},{id:"10",label:"Child 2"},{id:"11",label:"Child 3"}]},{id:"8",label:"Hello"}]},{id:"4",label:"World"},{id:"5",label:"Something something"}]}]},render:args=>{const[expanded,setExpanded]=(0,react.useState)(args.expandedIds),[selected,setSelected]=(0,react.useState)(args.selectedIds);return react.createElement(_FIXED_TreeView_TreeView,TreeView_stories_extends({},args,{expandedIds:expanded,selectedIds:selected,onExpanded:setExpanded,onSelected:setSelected,TreeItemComponent:TreeItemComponents_IndentBorderTreeItem},IndentBorderTreeItemIcons))}},StyledTreeItemContent=props=>{const{nodeId,icon:labelIcon,info:labelInfo,label:labelText,selected}=null!=props?props:{};return props&&react.createElement(Box.A,{sx:{display:"flex",alignItems:"center",p:.5,pr:0}},labelIcon&&react.createElement(Box.A,{color:"inherit",sx:{mr:1,display:"flex",alignItems:"center"}},react.createElement(SVGIcon.A,{muiIconName:labelIcon},labelIcon)),labelText&&react.createElement(Typography.A,{variant:"body2",sx:{fontWeight:"inherit",flexGrow:1,bgColor:selected?"red":void 0}},labelText," (",nodeId,")"),labelInfo&&react.createElement(Typography.A,{variant:"caption",color:"inherit"},labelInfo))},CustomItem={args:{expandedIds:["1"],selectedIds:[],nodes:[{id:"1",label:"Main",icon:"Home",info:"test",children:[{id:"2",label:"Hello"},{id:"3",label:"Subtree with children",children:[{id:"6",label:"Hello"},{id:"7",label:"Sub-subtree with children",children:[{id:"9",label:"Child 1"},{id:"10",label:"Child 2"},{id:"11",label:"Child 3"}]},{id:"8",label:"Hello"}]},{id:"4",label:"World"},{id:"5",label:"Something something"}]}]},render:args=>{const[expanded,setExpanded]=(0,react.useState)(args.expandedIds),[selected,setSelected]=(0,react.useState)(args.selectedIds);return react.createElement(_FIXED_TreeView_TreeView,TreeView_stories_extends({},args,{expandedIds:expanded,selectedIds:selected,onExpanded:setExpanded,onSelected:setSelected,TransitionComponent:null,ItemComponent:StyledTreeItemContent}))}},__namedExportsOrder=["Default","BasicTreeView","MultiSelection","GmailCloneStyles","IndentBorderStyles","CustomItem"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Default.parameters?.docs?.source}}},BasicTreeView.parameters={...BasicTreeView.parameters,docs:{...BasicTreeView.parameters?.docs,source:{originalSource:"{\n  args: {\n    nodes: [{\n      id: '1',\n      label: 'Applications',\n      children: [{\n        id: '2',\n        label: 'Calendar'\n      }]\n    }, {\n      id: '5',\n      label: 'Documents',\n      children: [{\n        id: '10',\n        label: 'OSS'\n      }, {\n        id: '6',\n        label: 'MUI',\n        children: [{\n          id: '8',\n          label: 'index.js'\n        }]\n      }]\n    }]\n  }\n}",...BasicTreeView.parameters?.docs?.source}}},MultiSelection.parameters={...MultiSelection.parameters,docs:{...MultiSelection.parameters?.docs,source:{originalSource:"{\n  args: {\n    expandedIds: ['3'],\n    selectedIds: [],\n    multiSelect: true,\n    nodes: [{\n      id: '1',\n      label: 'Applications',\n      children: [{\n        id: '2',\n        label: 'Calendar'\n      }, {\n        id: '3',\n        label: 'Chrome'\n      }, {\n        id: '4',\n        label: 'Webstorm'\n      }]\n    }, {\n      id: '5',\n      label: 'Documents',\n      children: [{\n        id: '6',\n        label: 'MUI',\n        children: [{\n          id: '7',\n          label: 'src',\n          children: [{\n            id: '8',\n            label: 'index.js'\n          }, {\n            id: '9',\n            label: 'tree-view.js'\n          }]\n        }]\n      }]\n    }]\n  },\n  render: args => {\n    const [expanded, setExpanded] = useState(args.expandedIds);\n    const [selected, setSelected] = useState(args.selectedIds);\n    const handleExpandClick = () => {\n      setExpanded(oldExpanded => oldExpanded?.length === 0 ? ['1', '5', '6', '7'] : []);\n    };\n    const handleSelectClick = () => {\n      setSelected(oldSelected => oldSelected?.length === 0 ? ['1', '2', '3', '4', '5', '6', '7', '8', '9'] : []);\n    };\n    return <Box sx={{\n      height: 270,\n      flexGrow: 1,\n      maxWidth: 400,\n      overflowY: 'auto'\n    }}>\n                <Box sx={{\n        mb: 1\n      }}>\n                    <Button onClick={handleExpandClick}>\n                        {expanded?.length === 0 ? 'Expand all' : 'Collapse all'}\n                    </Button>\n                    <Button onClick={handleSelectClick}>\n                        {selected?.length === 0 ? 'Select all' : 'Unselect all'}\n                    </Button>\n                </Box>\n\n                <TreeView {...args} expandedIds={expanded} selectedIds={selected} onExpanded={setExpanded} onSelected={setSelected} multiSelect />\n            </Box>;\n  }\n}",...MultiSelection.parameters?.docs?.source}}},GmailCloneStyles.parameters={...GmailCloneStyles.parameters,docs:{...GmailCloneStyles.parameters?.docs,source:{originalSource:"{\n  args: {\n    expandedIds: ['3'],\n    selectedIds: [],\n    nodes: [{\n      id: '1',\n      label: 'All Mail',\n      icon: 'Mail'\n    }, {\n      id: '2',\n      label: 'Trash',\n      icon: 'Delete'\n    }, {\n      id: '3',\n      label: 'Categories',\n      icon: 'Label',\n      children: [{\n        id: '5',\n        label: 'Social',\n        icon: 'SupervisorAccount',\n        info: '90',\n        color: '#1a73e8',\n        bgColor: '#e8f0fe'\n      }, {\n        id: '6',\n        label: 'Updates',\n        icon: 'Info',\n        info: '2,294',\n        color: '#e3742f',\n        bgColor: '#fcefe3'\n      }, {\n        id: '7',\n        label: 'Forums',\n        icon: 'Forum',\n        info: '3,566',\n        color: '#a250f5',\n        bgColor: '#f3e8fd'\n      }, {\n        id: '8',\n        label: 'Promotions',\n        icon: 'LocalOffer',\n        info: '733',\n        color: '#3c8039',\n        bgColor: '#e6f4ea'\n      }]\n    }, {\n      id: '4',\n      label: 'History',\n      icon: 'Label'\n    }]\n  },\n  render: args => {\n    const [expanded, setExpanded] = useState(args.expandedIds);\n    const [selected, setSelected] = useState(args.selectedIds);\n    return <TreeView {...args} expandedIds={expanded} selectedIds={selected} onExpanded={setExpanded} onSelected={setSelected} TreeItemComponent={LabelIconTreeItem} {...LabelIconTreeItemIcons} />;\n  }\n}",...GmailCloneStyles.parameters?.docs?.source}}},IndentBorderStyles.parameters={...IndentBorderStyles.parameters,docs:{...IndentBorderStyles.parameters?.docs,source:{originalSource:"{\n  args: {\n    expandedIds: ['1'],\n    selectedIds: [],\n    nodes: [{\n      id: '1',\n      label: 'Main',\n      children: [{\n        id: '2',\n        label: 'Hello'\n      }, {\n        id: '3',\n        label: 'Subtree with children',\n        children: [{\n          id: '6',\n          label: 'Hello'\n        }, {\n          id: '7',\n          label: 'Sub-subtree with children',\n          children: [{\n            id: '9',\n            label: 'Child 1'\n          }, {\n            id: '10',\n            label: 'Child 2'\n          }, {\n            id: '11',\n            label: 'Child 3'\n          }]\n        }, {\n          id: '8',\n          label: 'Hello'\n        }]\n      }, {\n        id: '4',\n        label: 'World'\n      }, {\n        id: '5',\n        label: 'Something something'\n      }]\n    }]\n  },\n  render: args => {\n    const [expanded, setExpanded] = useState(args.expandedIds);\n    const [selected, setSelected] = useState(args.selectedIds);\n    return <TreeView {...args} expandedIds={expanded} selectedIds={selected} onExpanded={setExpanded} onSelected={setSelected} TreeItemComponent={IndentBorderTreeItem} {...IndentBorderTreeItemIcons} />;\n  }\n}",...IndentBorderStyles.parameters?.docs?.source}}},CustomItem.parameters={...CustomItem.parameters,docs:{...CustomItem.parameters?.docs,source:{originalSource:"{\n  args: {\n    expandedIds: ['1'],\n    selectedIds: [],\n    nodes: [{\n      id: '1',\n      label: 'Main',\n      icon: 'Home',\n      info: 'test',\n      // color: \"red\",\n      // bgColor: \"yellow\",\n      children: [{\n        id: '2',\n        label: 'Hello'\n      }, {\n        id: '3',\n        label: 'Subtree with children',\n        children: [{\n          id: '6',\n          label: 'Hello'\n        }, {\n          id: '7',\n          label: 'Sub-subtree with children',\n          children: [{\n            id: '9',\n            label: 'Child 1'\n          }, {\n            id: '10',\n            label: 'Child 2'\n          }, {\n            id: '11',\n            label: 'Child 3'\n          }]\n        }, {\n          id: '8',\n          label: 'Hello'\n        }]\n      }, {\n        id: '4',\n        label: 'World'\n      }, {\n        id: '5',\n        label: 'Something something'\n      }]\n    }]\n  },\n  render: args => {\n    const [expanded, setExpanded] = useState(args.expandedIds);\n    const [selected, setSelected] = useState(args.selectedIds);\n    return <TreeView {...args} expandedIds={expanded} selectedIds={selected} onExpanded={setExpanded} onSelected={setSelected} TransitionComponent={null} ItemComponent={StyledTreeItemContent} />;\n  }\n}",...CustomItem.parameters?.docs?.source}}}}}]);
//# sourceMappingURL=components-_FIXED-TreeView-__stories__-TreeView-stories.c702e242.iframe.bundle.js.map