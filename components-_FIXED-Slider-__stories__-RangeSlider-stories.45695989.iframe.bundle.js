"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[8352],{"./src/components/_FIXED/Slider/__stories__/RangeSlider.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ChooseFromMarksList:()=>ChooseFromMarksList,Color_:()=>Color_,Default:()=>Default,DisablePadding:()=>DisablePadding,DisableSwap_:()=>DisableSwap_,Disabled:()=>Disabled,DisplayValue_:()=>DisplayValue_,Icons:()=>Icons,InputCmp:()=>InputCmp,Label:()=>Label,Marks:()=>Marks,MinDistance:()=>MinDistance,OnChangeEvent:()=>OnChangeEvent,OrientationVertical:()=>OrientationVertical,RangeMarks_:()=>RangeMarks_,Range_:()=>Range_,RemovePadding:()=>RemovePadding,Size_:()=>Size_,Styles_:()=>Styles_,TrackBarLinePosition_:()=>TrackBarLinePosition_,ValueLabelFormat:()=>ValueLabelFormat,__namedExportsOrder:()=>__namedExportsOrder,default:()=>RangeSlider_stories,onChangeCommitted:()=>onChangeCommitted});var react=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),Stack=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/Stack/Stack.js"),Box=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/Box/Box.js"),VolumeUp=__webpack_require__("./node_modules/.pnpm/@mui+icons-material@7.2.0_@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3._aadb1c40e883fdc91a9cc6aa8769f6fd/node_modules/@mui/icons-material/esm/VolumeUp.js"),Slider=__webpack_require__("./src/components/_FIXED/Slider/Slider.tsx"),helpers=__webpack_require__("./src/utils/helpers.ts");const _excluded=["disabled","disableSwap","displayValue","defaultValue","fromValue","minDistance","onChange","onChangeFromValue","onChangeToValue","range","toValue","value","valueLabelFormat","trackBarLinePosition"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}function onDiffTriggerCB(oldValue,newValue,cb){return oldValue!==newValue?null==cb?void 0:cb(newValue):void 0}const RangeSlider=_ref=>{var _locking$trailing$dis;let{disabled,disableSwap:_disableSwap,displayValue,defaultValue=[0,0],fromValue,minDistance,onChange,onChangeFromValue,onChangeToValue,range,toValue,value:_value,valueLabelFormat,trackBarLinePosition}=_ref,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(-1!==e.indexOf(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],-1===t.indexOf(o)&&{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);minDistance=minDistance||0;const value=(0,helpers.O9)(fromValue)||(0,helpers.O9)(toValue)?[fromValue,toValue]:Array.isArray(_value)?_value:(0,helpers.O9)(_value)&&"number"==typeof _value?[_value]:void 0,disableSwap=(0,helpers.O9)(_disableSwap)||minDistance>0?_disableSwap||"locking":void 0;return react.createElement(Slider.A,_extends({disabled,displayValue,range,trackBarLinePosition,valueLabelDisplay:null!=displayValue?displayValue:disabled?"on":"auto",track:"none"!==trackBarLinePosition&&trackBarLinePosition,disableSwap:void 0!==disableSwap||minDistance>0,value,defaultValue:(0,helpers.O9)(value)?void 0:defaultValue,valueLabelFormat:(val,pos=0)=>{const[from,to]=0===pos?[val,null==value?void 0:value[1]]:[null==value?void 0:value[0],val];return null==valueLabelFormat?void 0:valueLabelFormat(from,to)},onChange:null!==(_locking$trailing$dis={locking:(event,newValue,activeThumb)=>{if(!Array.isArray(newValue))return;const[fromNewValue,toNewValue]=newValue;0===activeThumb?(onDiffTriggerCB(null==value?void 0:value[0],Math.min(fromNewValue,toNewValue-minDistance),value=>null==onChangeFromValue?void 0:onChangeFromValue(event,value)),onDiffTriggerCB(null==value?void 0:value[1],toNewValue,value=>null==onChangeToValue?void 0:onChangeToValue(event,value))):(onDiffTriggerCB(null==value?void 0:value[0],fromNewValue,value=>null==onChangeFromValue?void 0:onChangeFromValue(event,value)),onDiffTriggerCB(null==value?void 0:value[1],Math.max(toNewValue,fromValue+minDistance),value=>null==onChangeToValue?void 0:onChangeToValue(event,value)))},trailing:(event,newValue,activeThumb)=>{var _ref2,_ref3;if(!Array.isArray(newValue))return;const[fromNewValue,toNewValue]=newValue,max=null!==(_ref2=null!==(_ref3=Array.isArray(range)?range[1]:null==range?void 0:range.max)&&void 0!==_ref3?_ref3:props.max)&&void 0!==_ref2?_ref2:100;if(toNewValue-fromNewValue<minDistance)if(0===activeThumb){const clamped=Math.min(fromNewValue,max-minDistance);onDiffTriggerCB(null==value?void 0:value[0],clamped,value=>null==onChangeFromValue?void 0:onChangeFromValue(event,value)),onDiffTriggerCB(null==value?void 0:value[1],clamped+minDistance,value=>null==onChangeToValue?void 0:onChangeToValue(event,value))}else{const clamped=Math.max(toNewValue,minDistance);onDiffTriggerCB(null==value?void 0:value[0],clamped-minDistance,value=>null==onChangeFromValue?void 0:onChangeFromValue(event,value)),onDiffTriggerCB(null==value?void 0:value[1],clamped,value=>null==onChangeToValue?void 0:onChangeToValue(event,value))}else onDiffTriggerCB(null==value?void 0:value[0],Math.min(...newValue),value=>null==onChangeFromValue?void 0:onChangeFromValue(event,value)),onDiffTriggerCB(null==value?void 0:value[1],Math.max(...newValue),value=>null==onChangeToValue?void 0:onChangeToValue(event,value))}}[disableSwap])&&void 0!==_locking$trailing$dis?_locking$trailing$dis:(event,newValue)=>{Array.isArray(newValue)&&(onDiffTriggerCB(null==value?void 0:value[0],Math.min(...newValue),value=>null==onChangeFromValue?void 0:onChangeFromValue(event,value)),onDiffTriggerCB(null==value?void 0:value[1],Math.max(...newValue),value=>null==onChangeToValue?void 0:onChangeToValue(event,value)),event.target.value=newValue,null==onChange||onChange(event,newValue))}},props))};RangeSlider.displayName="RangeSlider";const Slider_RangeSlider=RangeSlider;RangeSlider.__docgenInfo={description:"",methods:[],displayName:"RangeSlider",props:{disableSwap:{required:!1,tsType:{name:"union",raw:"'locking' | 'trailing'",elements:[{name:"literal",value:"'locking'"},{name:"literal",value:"'trailing'"}]},description:""},fromValue:{required:!1,tsType:{name:"number"},description:""},minDistance:{required:!1,tsType:{name:"number"},description:""},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: any, newValue?: number[]) => void",signature:{arguments:[{type:{name:"any"},name:"event"},{type:{name:"Array",elements:[{name:"number"}],raw:"number[]"},name:"newValue"}],return:{name:"void"}}},description:""},onChangeCommitted:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: any, newValue: number[]) => void",signature:{arguments:[{type:{name:"any"},name:"event"},{type:{name:"Array",elements:[{name:"number"}],raw:"number[]"},name:"newValue"}],return:{name:"void"}}},description:""},onChangeFromValue:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: any, fromValue: number) => void",signature:{arguments:[{type:{name:"any"},name:"event"},{type:{name:"number"},name:"fromValue"}],return:{name:"void"}}},description:""},onChangeToValue:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: any, toValue: number) => void",signature:{arguments:[{type:{name:"any"},name:"event"},{type:{name:"number"},name:"toValue"}],return:{name:"void"}}},description:""},toValue:{required:!1,tsType:{name:"number"},description:""},value:{required:!1,tsType:{name:"Array",elements:[{name:"number"}],raw:"number[]"},description:""},valueLabelFormat:{required:!1,tsType:{name:"signature",type:"function",raw:"(singleValue: number, fromIndex: number) => string",signature:{arguments:[{type:{name:"number"},name:"singleValue"},{type:{name:"number"},name:"fromIndex"}],return:{name:"string"}}},description:""},defaultValue:{defaultValue:{value:"[0, 0]",computed:!1},required:!1}}};var external_STORYBOOK_MODULE_ACTIONS_=__webpack_require__("storybook/actions"),TextField=__webpack_require__("./src/components/_FIXED/TextField/TextField.tsx");function RangeSlider_stories_extends(){return RangeSlider_stories_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},RangeSlider_stories_extends.apply(null,arguments)}const RangeSlider_stories={title:"Inputs/RangeSlider",component:Slider_RangeSlider,tags:["autodocs"]},Default={args:{defaultValue:[10,34]}},Color_=args=>react.createElement(Stack.A,null,["#10DDCC","primary","success.light",{track:"#D0CCC0",thumb:"#150CCC"},{track:"success.dark",thumb:"error"}].map((color,index)=>react.createElement(Slider_RangeSlider,{key:JSON.stringify(color),color,defaultValue:[40,40+10*(index+1)]}))),Disabled={args:{disabled:!0,defaultValue:[15,35]}},DisablePadding={args:{disablePadding:!0,label:"disable padding",defaultValue:[15,35]}},DisplayValue_=args=>react.createElement(Stack.A,null,["on","off","auto"].map(displayValue=>react.createElement(Slider_RangeSlider,{key:displayValue,displayValue,label:displayValue,defaultValue:[15,35]}))),Icons={args:{color:"secondary",endIcon:"VolumeDown",startIcon:react.createElement(VolumeUp.A,null),defaultValue:[15,35]}},Label={args:{label:"RangeSlider Label",defaultValue:[15,35]}},OrientationVertical={args:{label:"RangeSlider Vertical",orientation:"vertical",startIcon:"AcUnit",endIcon:"Whatshot",disablePadding:!0,marks:[{value:0,label:"0Â°C"},{value:20,label:"20Â°C"},{value:37,label:"37Â°C"},{value:100,label:"100Â°C"}],defaultValue:[20,37]},decorators:[Story=>react.createElement(Box.A,{sx:{height:300,px:3}},react.createElement(Story,null))]},Size_=args=>react.createElement(Stack.A,null,["small","medium"].map(size=>react.createElement(Slider_RangeSlider,{key:size,size,label:size,defaultValue:[15,35]}))),Styles_=args=>react.createElement(Stack.A,null,["ios","pretto","tooltip","airbnb"].map((sliderStyle,index)=>react.createElement(Slider_RangeSlider,{key:sliderStyle,sliderStyle,label:`'${sliderStyle}' styles`,defaultValue:[15,35+10*(index+1)]}))),OnChangeEvent={args:{value:[15,35]},render:args=>{const[value,setValue]=(0,react.useState)(args.value);return react.createElement(Slider_RangeSlider,RangeSlider_stories_extends({},args,{value,onChange:e=>setValue(e.target.value)}))}},onChangeCommitted={args:{label:"on Change Committed",min:0,max:50,step:2,defaultValue:[11,23],onChangeCommitted:(e,newValue)=>alert(JSON.stringify(null!=newValue?newValue:[]))}},ValueLabelFormat={args:{label:"Value Label Format",value:[15,35],valueLabelFormat:(from,to)=>`${from} <= x <= ${to}`},render:args=>{const[value,setValue]=(0,react.useState)(args.value);return react.createElement(Slider_RangeSlider,RangeSlider_stories_extends({},args,{value,onChange:e=>setValue(e.target.value)}))}},RemovePadding={args:{label:"RangeSlider Remove Padding",removePadding:!0,defaultValue:[15,35]}},TrackBarLinePosition_=args=>react.createElement(Stack.A,null,["normal","none","inverted"].map(trackBarLinePosition=>react.createElement(Slider_RangeSlider,{key:trackBarLinePosition,trackBarLinePosition,label:trackBarLinePosition,defaultValue:[15,35]}))),Range_=args=>react.createElement(Stack.A,null,[[150,200],{min:150,max:200},[-10,10,2],{min:-10,max:10,step:2}].map(range=>{var _range$,_range$2;return react.createElement(Slider_RangeSlider,{key:JSON.stringify(range),range,defaultValue:[(null!==(_range$=range[0])&&void 0!==_range$?_range$:range.min)+2,(null!==(_range$2=range[0])&&void 0!==_range$2?_range$2:range.min)+5]})})),RangeMarks_=args=>react.createElement(Stack.A,null,[[void 0,void 0,5],[150,200,2.5,!0],{min:150,max:200,step:2.5,marks:!0},[-10,10,2,[{label:"2L",value:2},{label:"6L",value:6},{label:"8M",value:8}]],{min:-10,max:10,step:2,marks:[{label:"2L",value:2},{label:"6L",value:6},{label:"8M",value:8}]}].map(range=>{var _range$3,_range$4;return react.createElement(Slider_RangeSlider,{key:JSON.stringify(range),range,defaultValue:[(null!==(_range$3=range[0])&&void 0!==_range$3?_range$3:range.min)+2,(null!==(_range$4=range[0])&&void 0!==_range$4?_range$4:range.min)+5]})})),Marks={args:{label:"Marks",range:[4,20],step:2,marks:[{label:"8L",value:12},{label:"12L",value:16},{label:"16M",value:18}],defaultValue:[5,10]}},ChooseFromMarksList={args:{label:"ChooseFromMarksList",chooseFromMarksList:!0,range:[5,20],marks:[{label:"5L",value:5},{label:"8L",value:12},{label:"12L",value:16},{label:"16M",value:18},{label:"20L",value:20}],defaultValue:[12,16]}},InputCmp={args:{},render:args=>{const[value,setValue]=(0,react.useState)([30,50]),handleInputChange=index=>event=>{const v=event.target.value;setValue(value=>{const newValue=[...value];return newValue[index]=v,newValue}),(0,external_STORYBOOK_MODULE_ACTIONS_.action)("onChangeInput")(v)},handleBlur=()=>{const v=[value[0]<0?0:value[0],value[1]>100?100:value[1]];setValue(v),(0,external_STORYBOOK_MODULE_ACTIONS_.action)("onChangeInput")(v)};return react.createElement(Slider_RangeSlider,RangeSlider_stories_extends({},args,{value,onChange:(event,newValue)=>{setValue(newValue),(0,external_STORYBOOK_MODULE_ACTIONS_.action)("onChangeInput")(newValue)},startIcon:react.createElement(TextField.A,{value:value[0],size:"small",onChange:handleInputChange(0),onBlur:handleBlur,inputProps:{step:10,min:0,max:100,type:"number"}}),endIcon:react.createElement(TextField.A,{value:value[1],size:"small",onChange:handleInputChange(1),onBlur:handleBlur,inputProps:{step:10,min:0,max:100,type:"number"}})}))}};function useValue(v1=0,v2=0){const[fromValue,setFromValue]=react.useState(v1),[toValue,setToValue]=react.useState(v2);return{fromValue,toValue,onChangeFromValue:(event,newValue)=>setFromValue(newValue),onChangeToValue:(event,newValue)=>setToValue(newValue)}}const DisableSwap_=()=>react.createElement(Stack.A,{spacing:3},react.createElement(Slider_RangeSlider,RangeSlider_stories_extends({label:"swap"},useValue(30,50),{minDistance:10})),react.createElement(Slider_RangeSlider,RangeSlider_stories_extends({label:"DisableSwap - locking",disableSwap:"locking"},useValue(30,50),{minDistance:10})),react.createElement(Slider_RangeSlider,RangeSlider_stories_extends({label:"DisableSwap - trailing",disableSwap:"trailing"},useValue(30,50),{minDistance:10}))),MinDistance={args:{label:"Min Distance",minDistance:10,max:50},render:args=>react.createElement(Slider_RangeSlider,RangeSlider_stories_extends({},args,useValue(12,26)))},__namedExportsOrder=["Default","Color_","Disabled","DisablePadding","DisplayValue_","Icons","Label","OrientationVertical","Size_","Styles_","OnChangeEvent","onChangeCommitted","ValueLabelFormat","RemovePadding","TrackBarLinePosition_","Range_","RangeMarks_","Marks","ChooseFromMarksList","InputCmp","DisableSwap_","MinDistance"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    defaultValue: [10, 34]\n  }\n}",...Default.parameters?.docs?.source}}},Color_.parameters={...Color_.parameters,docs:{...Color_.parameters?.docs,source:{originalSource:"args => <Stack>\n        {['#10DDCC', 'primary', 'success.light', {\n    track: '#D0CCC0',\n    thumb: '#150CCC'\n  }, {\n    track: 'success.dark',\n    thumb: 'error'\n  }].map((color, index) => <RangeSlider key={JSON.stringify(color)} color={color} defaultValue={[40, 40 + (index + 1) * 10]} />)}\n    </Stack>",...Color_.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    disabled: true,\n    defaultValue: [15, 35]\n  }\n}",...Disabled.parameters?.docs?.source}}},DisablePadding.parameters={...DisablePadding.parameters,docs:{...DisablePadding.parameters?.docs,source:{originalSource:"{\n  args: {\n    disablePadding: true,\n    label: 'disable padding',\n    defaultValue: [15, 35]\n  }\n}",...DisablePadding.parameters?.docs?.source}}},DisplayValue_.parameters={...DisplayValue_.parameters,docs:{...DisplayValue_.parameters?.docs,source:{originalSource:"args => <Stack>\n        {['on', 'off', 'auto'].map(displayValue => <RangeSlider key={displayValue} displayValue={displayValue} label={displayValue} defaultValue={[15, 35]} />)}\n    </Stack>",...DisplayValue_.parameters?.docs?.source}}},Icons.parameters={...Icons.parameters,docs:{...Icons.parameters?.docs,source:{originalSource:"{\n  args: {\n    color: 'secondary',\n    endIcon: 'VolumeDown',\n    startIcon: <VolumeUpIcon />,\n    defaultValue: [15, 35]\n  }\n}",...Icons.parameters?.docs?.source}}},Label.parameters={...Label.parameters,docs:{...Label.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'RangeSlider Label',\n    defaultValue: [15, 35]\n  }\n}",...Label.parameters?.docs?.source}}},OrientationVertical.parameters={...OrientationVertical.parameters,docs:{...OrientationVertical.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'RangeSlider Vertical',\n    orientation: 'vertical',\n    startIcon: 'AcUnit',\n    endIcon: 'Whatshot',\n    disablePadding: true,\n    marks: [{\n      value: 0,\n      label: '0Â°C'\n    }, {\n      value: 20,\n      label: '20Â°C'\n    }, {\n      value: 37,\n      label: '37Â°C'\n    }, {\n      value: 100,\n      label: '100Â°C'\n    }],\n    defaultValue: [20, 37]\n  },\n  decorators: [Story => <Box sx={{\n    height: 300,\n    px: 3\n  }}>\n                <Story />\n            </Box>]\n}",...OrientationVertical.parameters?.docs?.source}}},Size_.parameters={...Size_.parameters,docs:{...Size_.parameters?.docs,source:{originalSource:"args => <Stack>\n        {['small', 'medium'].map(size => <RangeSlider key={size} size={size} label={size} defaultValue={[15, 35]} />)}\n    </Stack>",...Size_.parameters?.docs?.source}}},Styles_.parameters={...Styles_.parameters,docs:{...Styles_.parameters?.docs,source:{originalSource:"args => <Stack>\n        {['ios', 'pretto', 'tooltip', 'airbnb'].map((sliderStyle, index) => <RangeSlider key={sliderStyle} sliderStyle={sliderStyle} label={`'${sliderStyle}' styles`} defaultValue={[15, 35 + (index + 1) * 10]} />)}\n    </Stack>",...Styles_.parameters?.docs?.source}}},OnChangeEvent.parameters={...OnChangeEvent.parameters,docs:{...OnChangeEvent.parameters?.docs,source:{originalSource:"{\n  args: {\n    value: [15, 35]\n  },\n  render: args => {\n    const [value, setValue] = useState(args.value);\n    return <RangeSlider {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...OnChangeEvent.parameters?.docs?.source}}},onChangeCommitted.parameters={...onChangeCommitted.parameters,docs:{...onChangeCommitted.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'on Change Committed',\n    min: 0,\n    max: 50,\n    step: 2,\n    defaultValue: [11, 23],\n    onChangeCommitted: (e, newValue) => alert(JSON.stringify(newValue ?? []))\n  }\n}",...onChangeCommitted.parameters?.docs?.source}}},ValueLabelFormat.parameters={...ValueLabelFormat.parameters,docs:{...ValueLabelFormat.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Value Label Format',\n    value: [15, 35],\n    valueLabelFormat: (from, to) => `${from} <= x <= ${to}`\n  },\n  render: args => {\n    const [value, setValue] = useState(args.value);\n    return <RangeSlider {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...ValueLabelFormat.parameters?.docs?.source}}},RemovePadding.parameters={...RemovePadding.parameters,docs:{...RemovePadding.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'RangeSlider Remove Padding',\n    removePadding: true,\n    defaultValue: [15, 35]\n  }\n}",...RemovePadding.parameters?.docs?.source}}},TrackBarLinePosition_.parameters={...TrackBarLinePosition_.parameters,docs:{...TrackBarLinePosition_.parameters?.docs,source:{originalSource:"args => <Stack>\n        {['normal', 'none', 'inverted'].map(trackBarLinePosition => <RangeSlider key={trackBarLinePosition} trackBarLinePosition={trackBarLinePosition} label={trackBarLinePosition} defaultValue={[15, 35]} />)}\n    </Stack>",...TrackBarLinePosition_.parameters?.docs?.source}}},Range_.parameters={...Range_.parameters,docs:{...Range_.parameters?.docs,source:{originalSource:"args => <Stack>\n        {[[150, 200], {\n    min: 150,\n    max: 200\n  }, [-10, 10, 2], {\n    min: -10,\n    max: 10,\n    step: 2\n  }].map(range => <RangeSlider key={JSON.stringify(range)} range={range} defaultValue={[(range[0] ?? (range as any).min) + 2, (range[0] ?? (range as any).min) + 5]} />)}\n    </Stack>",...Range_.parameters?.docs?.source}}},RangeMarks_.parameters={...RangeMarks_.parameters,docs:{...RangeMarks_.parameters?.docs,source:{originalSource:"args => <Stack>\n        {[[undefined, undefined, 5], [150, 200, 2.5, true], {\n    min: 150,\n    max: 200,\n    step: 2.5,\n    marks: true\n  }, [-10, 10, 2, [{\n    label: '2L',\n    value: 2\n  }, {\n    label: '6L',\n    value: 6\n  }, {\n    label: '8M',\n    value: 8\n  }]], {\n    min: -10,\n    max: 10,\n    step: 2,\n    marks: [{\n      label: '2L',\n      value: 2\n    }, {\n      label: '6L',\n      value: 6\n    }, {\n      label: '8M',\n      value: 8\n    }]\n  }].map(range => <RangeSlider key={JSON.stringify(range)} range={range} defaultValue={[(range[0] ?? (range as any).min) + 2, (range[0] ?? (range as any).min) + 5]} />)}\n    </Stack>",...RangeMarks_.parameters?.docs?.source}}},Marks.parameters={...Marks.parameters,docs:{...Marks.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Marks',\n    range: [4, 20],\n    step: 2,\n    marks: [{\n      label: '8L',\n      value: 12\n    }, {\n      label: '12L',\n      value: 16\n    }, {\n      label: '16M',\n      value: 18\n    }],\n    defaultValue: [5, 10]\n  }\n}",...Marks.parameters?.docs?.source}}},ChooseFromMarksList.parameters={...ChooseFromMarksList.parameters,docs:{...ChooseFromMarksList.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'ChooseFromMarksList',\n    chooseFromMarksList: true,\n    range: [5, 20],\n    marks: [{\n      label: '5L',\n      value: 5\n    }, {\n      label: '8L',\n      value: 12\n    }, {\n      label: '12L',\n      value: 16\n    }, {\n      label: '16M',\n      value: 18\n    }, {\n      label: '20L',\n      value: 20\n    }],\n    defaultValue: [12, 16]\n  }\n}",...ChooseFromMarksList.parameters?.docs?.source}}},InputCmp.parameters={...InputCmp.parameters,docs:{...InputCmp.parameters?.docs,source:{originalSource:"{\n  args: {},\n  render: args => {\n    const [value, setValue] = useState([30, 50]);\n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n      action('onChangeInput')(newValue);\n    };\n    const handleInputChange = index => event => {\n      const v = event.target.value;\n      setValue(value => {\n        const newValue = [...value];\n        newValue[index] = v;\n        return newValue;\n      });\n      action('onChangeInput')(v);\n    };\n    const handleBlur = () => {\n      let min = value[0] < 0 ? 0 : value[0];\n      let max = value[1] > 100 ? 100 : value[1];\n      const v = [min, max];\n      setValue(v);\n      action('onChangeInput')(v);\n    };\n    return <RangeSlider {...args} value={value} onChange={handleChange} startIcon={<TextField value={value[0]} size=\"small\" onChange={handleInputChange(0)} onBlur={handleBlur} inputProps={{\n      step: 10,\n      min: 0,\n      max: 100,\n      type: 'number'\n    }} />} endIcon={<TextField value={value[1]} size=\"small\" onChange={handleInputChange(1)} onBlur={handleBlur} inputProps={{\n      step: 10,\n      min: 0,\n      max: 100,\n      type: 'number'\n    }} />} />;\n  }\n}",...InputCmp.parameters?.docs?.source}}},DisableSwap_.parameters={...DisableSwap_.parameters,docs:{...DisableSwap_.parameters?.docs,source:{originalSource:'() => {\n  return <Stack spacing={3}>\n            <RangeSlider label="swap" {...useValue(30, 50)} minDistance={10} />\n            <RangeSlider label="DisableSwap - locking" disableSwap="locking" {...useValue(30, 50)} minDistance={10} />\n            <RangeSlider label="DisableSwap - trailing" disableSwap="trailing" {...useValue(30, 50)} minDistance={10} />\n        </Stack>;\n}',...DisableSwap_.parameters?.docs?.source}}},MinDistance.parameters={...MinDistance.parameters,docs:{...MinDistance.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Min Distance',\n    minDistance: 10,\n    max: 50\n  },\n  render: args => <RangeSlider {...args} {...useValue(12, 26)} />\n}",...MinDistance.parameters?.docs?.source}}}}}]);