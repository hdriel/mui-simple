"use strict";(self.webpackChunk_hdriel_mui_simple=self.webpackChunk_hdriel_mui_simple||[]).push([[2614],{"./src/components/Autocomplete/__stories__/InputAutocompleteAsync.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CountrySelect:()=>CountrySelect,Default:()=>Default,DisabledOptions:()=>DisabledOptions,FilmOptions:()=>FilmOptions,GroupedByCategories:()=>GroupedByCategories,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),_mui_material__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),_InputAutocompleteAsync__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Autocomplete/InputAutocompleteAsync.tsx"),_InputAutocomplete_mocks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Autocomplete/__stories__/InputAutocomplete.mocks.ts"),__awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};const __WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:'var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator["throw"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\nimport React, { useState } from "react";\nimport { Box, Stack } from "@mui/material";\nimport InputAutocompleteAsync from "../InputAutocompleteAsync";\nimport { countries, timeSlots, top100Films, top100FilmsWithFirstLetters } from "./InputAutocomplete.mocks";\nexport default {\n  title: "Inputs/Inputs/InputAutocompleteAsync",\n  component: InputAutocompleteAsync,\n  decorators: [Story => /*#__PURE__*/React.createElement("div", {\n    style: {\n      width: "450px",\n      padding: "1em",\n      border: "1px dashed black"\n    }\n  }, /*#__PURE__*/React.createElement(Story, null))]\n};\nexport const Default = () => {\n  return /*#__PURE__*/React.createElement(InputAutocompleteAsync, null);\n};\nexport const FilmOptions = () => {\n  const [selectedOption, setSelectedOption] = useState(null);\n  return /*#__PURE__*/React.createElement(Stack, {\n    spacing: 4\n  }, ["filled", "standard", "outlined"].map(variant => /*#__PURE__*/React.createElement(InputAutocompleteAsync, {\n    key: variant,\n    label: "Movie",\n    selectedOption: selectedOption,\n    setSelectedOption: (e, option) => setSelectedOption(option),\n    fetchOptionsOnFocus: true,\n    getOptionsPromise: () => __awaiter(void 0, void 0, void 0, function* () {\n      return top100Films;\n    }),\n    getOptionLabel: option => option.title,\n    variant: variant\n  })));\n};\nexport const CountrySelect = () => {\n  const [selectedOption, setSelectedOption] = useState(null);\n  return /*#__PURE__*/React.createElement(Stack, {\n    spacing: 4\n  }, ["filled", "standard", "outlined"].map((variant, index) => /*#__PURE__*/React.createElement(InputAutocompleteAsync, {\n    key: variant,\n    label: "Choose a country",\n    selectedOption: selectedOption,\n    setSelectedOption: (e, option) => setSelectedOption(option),\n    variant: variant,\n    fetchOptionsOnFocus: true,\n    getOptionsPromise: () => __awaiter(void 0, void 0, void 0, function* () {\n      return countries;\n    }),\n    autoHighlight: true,\n    getOptionLabel: option => option.label,\n    renderOption: (props, option) => /*#__PURE__*/React.createElement(Box, Object.assign({\n      component: "li",\n      sx: {\n        "& > img": {\n          mr: 2,\n          flexShrink: 0\n        }\n      }\n    }, props), /*#__PURE__*/React.createElement("img", {\n      loading: "lazy",\n      width: "20",\n      src: `https://flagcdn.com/w20/${option.code.toLowerCase()}.png`,\n      srcSet: `https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`,\n      alt: ""\n    }), option.label, " (", option.code, ") +", option.phone)\n  })));\n};\nexport const GroupedByCategories = () => {\n  const [selectedOption, setSelectedOption] = useState(null);\n  return /*#__PURE__*/React.createElement(Stack, {\n    spacing: 4\n  }, ["filled", "standard", "outlined"].map(variant => /*#__PURE__*/React.createElement(InputAutocompleteAsync, {\n    key: variant,\n    id: "grouped-demo",\n    label: "With categories",\n    selectedOption: selectedOption,\n    setSelectedOption: (e, option) => setSelectedOption(option),\n    fetchOptionsOnFocus: true,\n    getOptionsPromise: () => __awaiter(void 0, void 0, void 0, function* () {\n      return top100FilmsWithFirstLetters;\n    }),\n    groupBy: option => option.firstLetter,\n    sortBy: "title",\n    getOptionLabel: option => option.title,\n    width: 400\n  })));\n};\nexport const DisabledOptions = () => {\n  const [selectedOption, setSelectedOption] = useState(null);\n  const _options = timeSlots.slice(0).map((option, index) => ({\n    time: option,\n    disabled: index % 4 === 0\n  }));\n  return /*#__PURE__*/React.createElement(Stack, {\n    spacing: 4\n  }, ["filled", "standard", "outlined"].map(variant => /*#__PURE__*/React.createElement(InputAutocompleteAsync, {\n    key: variant,\n    variant: variant,\n    id: "grouped-demo",\n    label: "Disabled options",\n    selectedOption: selectedOption,\n    setSelectedOption: (e, option) => setSelectedOption(option),\n    fetchOptionsOnFocus: true,\n    getOptionsPromise: () => __awaiter(void 0, void 0, void 0, function* () {\n      return _options;\n    }),\n    getOptionLabel: option => option.time,\n    width: 200\n  })));\n};\nDefault.parameters = Object.assign(Object.assign({}, Default.parameters), {\n  docs: Object.assign(Object.assign({}, (_a = Default.parameters) === null || _a === void 0 ? void 0 : _a.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  return <InputAutocompleteAsync />;\\n}"\n    }, (_c = (_b = Default.parameters) === null || _b === void 0 ? void 0 : _b.docs) === null || _c === void 0 ? void 0 : _c.source)\n  })\n});\nFilmOptions.parameters = Object.assign(Object.assign({}, FilmOptions.parameters), {\n  docs: Object.assign(Object.assign({}, (_d = FilmOptions.parameters) === null || _d === void 0 ? void 0 : _d.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  const [selectedOption, setSelectedOption] = useState(null);\\n  return <Stack spacing={4}>\\n      {[\\"filled\\", \\"standard\\", \\"outlined\\"].map(variant => <InputAutocompleteAsync key={variant} label=\\"Movie\\" selectedOption={selectedOption} setSelectedOption={(e, option) => setSelectedOption(option)} fetchOptionsOnFocus getOptionsPromise={async () => top100Films} getOptionLabel={option => option.title} variant={variant} />)}\\n    </Stack>;\\n}"\n    }, (_f = (_e = FilmOptions.parameters) === null || _e === void 0 ? void 0 : _e.docs) === null || _f === void 0 ? void 0 : _f.source)\n  })\n});\nCountrySelect.parameters = Object.assign(Object.assign({}, CountrySelect.parameters), {\n  docs: Object.assign(Object.assign({}, (_g = CountrySelect.parameters) === null || _g === void 0 ? void 0 : _g.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  const [selectedOption, setSelectedOption] = useState(null);\\n  return <Stack spacing={4}>\\n      {[\\"filled\\", \\"standard\\", \\"outlined\\"].map((variant, index) => <InputAutocompleteAsync key={variant} label=\\"Choose a country\\" selectedOption={selectedOption} setSelectedOption={(e, option) => setSelectedOption(option)} variant={variant} fetchOptionsOnFocus getOptionsPromise={async () => countries} autoHighlight getOptionLabel={option => option.label} renderOption={(props, option) => <Box component=\\"li\\" sx={{\\n      \\"& > img\\": {\\n        mr: 2,\\n        flexShrink: 0\\n      }\\n    }} {...props}>\\n              <img loading=\\"lazy\\" width=\\"20\\" src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`} srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`} alt=\\"\\" />\\n              {option.label} ({option.code}) +{option.phone}\\n            </Box>} />)}\\n    </Stack>;\\n}"\n    }, (_j = (_h = CountrySelect.parameters) === null || _h === void 0 ? void 0 : _h.docs) === null || _j === void 0 ? void 0 : _j.source)\n  })\n});\nGroupedByCategories.parameters = Object.assign(Object.assign({}, GroupedByCategories.parameters), {\n  docs: Object.assign(Object.assign({}, (_k = GroupedByCategories.parameters) === null || _k === void 0 ? void 0 : _k.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  const [selectedOption, setSelectedOption] = useState(null);\\n  return <Stack spacing={4}>\\n      {[\\"filled\\", \\"standard\\", \\"outlined\\"].map(variant => <InputAutocompleteAsync key={variant} id=\\"grouped-demo\\" label=\\"With categories\\" selectedOption={selectedOption} setSelectedOption={(e, option) => setSelectedOption(option)} fetchOptionsOnFocus getOptionsPromise={async () => top100FilmsWithFirstLetters} groupBy={option => option.firstLetter} sortBy=\\"title\\" getOptionLabel={option => option.title} width={400} />)}\\n    </Stack>;\\n}"\n    }, (_m = (_l = GroupedByCategories.parameters) === null || _l === void 0 ? void 0 : _l.docs) === null || _m === void 0 ? void 0 : _m.source)\n  })\n});\nDisabledOptions.parameters = Object.assign(Object.assign({}, DisabledOptions.parameters), {\n  docs: Object.assign(Object.assign({}, (_o = DisabledOptions.parameters) === null || _o === void 0 ? void 0 : _o.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  const [selectedOption, setSelectedOption] = useState(null);\\n  const _options = timeSlots.slice(0).map((option, index) => ({\\n    time: option,\\n    disabled: index % 4 === 0\\n  }));\\n  return <Stack spacing={4}>\\n      {[\\"filled\\", \\"standard\\", \\"outlined\\"].map(variant => <InputAutocompleteAsync key={variant} variant={variant} id=\\"grouped-demo\\" label=\\"Disabled options\\" selectedOption={selectedOption} setSelectedOption={(e, option) => setSelectedOption(option)} fetchOptionsOnFocus getOptionsPromise={async () => _options} getOptionLabel={option => option.time} width={200} />)}\\n    </Stack>;\\n}"\n    }, (_q = (_p = DisabledOptions.parameters) === null || _p === void 0 ? void 0 : _p.docs) === null || _q === void 0 ? void 0 : _q.source)\n  })\n});',locationsMap:{default:{startLoc:{col:23,line:44},endLoc:{col:1,line:46},startBody:{col:23,line:44},endBody:{col:1,line:46}},"film-options":{startLoc:{col:27,line:47},endLoc:{col:1,line:63},startBody:{col:27,line:47},endBody:{col:1,line:63}},"country-select":{startLoc:{col:29,line:64},endLoc:{col:1,line:96},startBody:{col:29,line:64},endBody:{col:1,line:96}},"grouped-by-categories":{startLoc:{col:35,line:97},endLoc:{col:1,line:116},startBody:{col:35,line:97},endBody:{col:1,line:116}},"disabled-options":{startLoc:{col:31,line:117},endLoc:{col:1,line:139},startBody:{col:31,line:117},endBody:{col:1,line:139}}}}},title:"Inputs/Inputs/InputAutocompleteAsync",component:_InputAutocompleteAsync__WEBPACK_IMPORTED_MODULE_1__.Z,decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"450px",padding:"1em",border:"1px dashed black"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]},Default=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputAutocompleteAsync__WEBPACK_IMPORTED_MODULE_1__.Z,null),FilmOptions=()=>{const[selectedOption,setSelectedOption]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__.Z,{spacing:4},["filled","standard","outlined"].map((variant=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputAutocompleteAsync__WEBPACK_IMPORTED_MODULE_1__.Z,{key:variant,label:"Movie",selectedOption,setSelectedOption:(e,option)=>setSelectedOption(option),fetchOptionsOnFocus:!0,getOptionsPromise:()=>__awaiter(void 0,void 0,void 0,(function*(){return _InputAutocomplete_mocks__WEBPACK_IMPORTED_MODULE_2__.gE})),getOptionLabel:option=>option.title,variant}))))},CountrySelect=()=>{const[selectedOption,setSelectedOption]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__.Z,{spacing:4},["filled","standard","outlined"].map(((variant,index)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputAutocompleteAsync__WEBPACK_IMPORTED_MODULE_1__.Z,{key:variant,label:"Choose a country",selectedOption,setSelectedOption:(e,option)=>setSelectedOption(option),variant,fetchOptionsOnFocus:!0,getOptionsPromise:()=>__awaiter(void 0,void 0,void 0,(function*(){return _InputAutocomplete_mocks__WEBPACK_IMPORTED_MODULE_2__.hW})),autoHighlight:!0,getOptionLabel:option=>option.label,renderOption:(props,option)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__.Z,Object.assign({component:"li",sx:{"& > img":{mr:2,flexShrink:0}}},props),react__WEBPACK_IMPORTED_MODULE_0__.createElement("img",{loading:"lazy",width:"20",src:`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`,srcSet:`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`,alt:""}),option.label," (",option.code,") +",option.phone)}))))},GroupedByCategories=()=>{const[selectedOption,setSelectedOption]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__.Z,{spacing:4},["filled","standard","outlined"].map((variant=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputAutocompleteAsync__WEBPACK_IMPORTED_MODULE_1__.Z,{key:variant,id:"grouped-demo",label:"With categories",selectedOption,setSelectedOption:(e,option)=>setSelectedOption(option),fetchOptionsOnFocus:!0,getOptionsPromise:()=>__awaiter(void 0,void 0,void 0,(function*(){return _InputAutocomplete_mocks__WEBPACK_IMPORTED_MODULE_2__.K$})),groupBy:option=>option.firstLetter,sortBy:"title",getOptionLabel:option=>option.title,width:400}))))},DisabledOptions=()=>{const[selectedOption,setSelectedOption]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),_options=_InputAutocomplete_mocks__WEBPACK_IMPORTED_MODULE_2__.bp.slice(0).map(((option,index)=>({time:option,disabled:index%4==0})));return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__.Z,{spacing:4},["filled","standard","outlined"].map((variant=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputAutocompleteAsync__WEBPACK_IMPORTED_MODULE_1__.Z,{key:variant,variant,id:"grouped-demo",label:"Disabled options",selectedOption,setSelectedOption:(e,option)=>setSelectedOption(option),fetchOptionsOnFocus:!0,getOptionsPromise:()=>__awaiter(void 0,void 0,void 0,(function*(){return _options})),getOptionLabel:option=>option.time,width:200}))))};Default.parameters=Object.assign(Object.assign({},Default.parameters),{docs:Object.assign(Object.assign({},null===(_a=Default.parameters)||void 0===_a?void 0:_a.docs),{source:Object.assign({originalSource:"() => {\n  return <InputAutocompleteAsync />;\n}"},null===(_c=null===(_b=Default.parameters)||void 0===_b?void 0:_b.docs)||void 0===_c?void 0:_c.source)})}),FilmOptions.parameters=Object.assign(Object.assign({},FilmOptions.parameters),{docs:Object.assign(Object.assign({},null===(_d=FilmOptions.parameters)||void 0===_d?void 0:_d.docs),{source:Object.assign({originalSource:'() => {\n  const [selectedOption, setSelectedOption] = useState(null);\n  return <Stack spacing={4}>\n      {["filled", "standard", "outlined"].map(variant => <InputAutocompleteAsync key={variant} label="Movie" selectedOption={selectedOption} setSelectedOption={(e, option) => setSelectedOption(option)} fetchOptionsOnFocus getOptionsPromise={async () => top100Films} getOptionLabel={option => option.title} variant={variant} />)}\n    </Stack>;\n}'},null===(_f=null===(_e=FilmOptions.parameters)||void 0===_e?void 0:_e.docs)||void 0===_f?void 0:_f.source)})}),CountrySelect.parameters=Object.assign(Object.assign({},CountrySelect.parameters),{docs:Object.assign(Object.assign({},null===(_g=CountrySelect.parameters)||void 0===_g?void 0:_g.docs),{source:Object.assign({originalSource:'() => {\n  const [selectedOption, setSelectedOption] = useState(null);\n  return <Stack spacing={4}>\n      {["filled", "standard", "outlined"].map((variant, index) => <InputAutocompleteAsync key={variant} label="Choose a country" selectedOption={selectedOption} setSelectedOption={(e, option) => setSelectedOption(option)} variant={variant} fetchOptionsOnFocus getOptionsPromise={async () => countries} autoHighlight getOptionLabel={option => option.label} renderOption={(props, option) => <Box component="li" sx={{\n      "& > img": {\n        mr: 2,\n        flexShrink: 0\n      }\n    }} {...props}>\n              <img loading="lazy" width="20" src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`} srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`} alt="" />\n              {option.label} ({option.code}) +{option.phone}\n            </Box>} />)}\n    </Stack>;\n}'},null===(_j=null===(_h=CountrySelect.parameters)||void 0===_h?void 0:_h.docs)||void 0===_j?void 0:_j.source)})}),GroupedByCategories.parameters=Object.assign(Object.assign({},GroupedByCategories.parameters),{docs:Object.assign(Object.assign({},null===(_k=GroupedByCategories.parameters)||void 0===_k?void 0:_k.docs),{source:Object.assign({originalSource:'() => {\n  const [selectedOption, setSelectedOption] = useState(null);\n  return <Stack spacing={4}>\n      {["filled", "standard", "outlined"].map(variant => <InputAutocompleteAsync key={variant} id="grouped-demo" label="With categories" selectedOption={selectedOption} setSelectedOption={(e, option) => setSelectedOption(option)} fetchOptionsOnFocus getOptionsPromise={async () => top100FilmsWithFirstLetters} groupBy={option => option.firstLetter} sortBy="title" getOptionLabel={option => option.title} width={400} />)}\n    </Stack>;\n}'},null===(_m=null===(_l=GroupedByCategories.parameters)||void 0===_l?void 0:_l.docs)||void 0===_m?void 0:_m.source)})}),DisabledOptions.parameters=Object.assign(Object.assign({},DisabledOptions.parameters),{docs:Object.assign(Object.assign({},null===(_o=DisabledOptions.parameters)||void 0===_o?void 0:_o.docs),{source:Object.assign({originalSource:'() => {\n  const [selectedOption, setSelectedOption] = useState(null);\n  const _options = timeSlots.slice(0).map((option, index) => ({\n    time: option,\n    disabled: index % 4 === 0\n  }));\n  return <Stack spacing={4}>\n      {["filled", "standard", "outlined"].map(variant => <InputAutocompleteAsync key={variant} variant={variant} id="grouped-demo" label="Disabled options" selectedOption={selectedOption} setSelectedOption={(e, option) => setSelectedOption(option)} fetchOptionsOnFocus getOptionsPromise={async () => _options} getOptionLabel={option => option.time} width={200} />)}\n    </Stack>;\n}'},null===(_q=null===(_p=DisabledOptions.parameters)||void 0===_p?void 0:_p.docs)||void 0===_q?void 0:_q.source)})});const __namedExportsOrder=["Default","FilmOptions","CountrySelect","GroupedByCategories","DisabledOptions"]},"./src/components/Autocomplete/InputAutocompleteAsync.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>InputAutocompleteAsync,m:()=>useAutoCompleteAsync});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__),_InputAutocomplete__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Autocomplete/InputAutocomplete.tsx"),_Progress_CircularProgress_CircularProgress__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Progress/CircularProgress/CircularProgress.tsx"),_utils_helpers__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/utils/helpers.ts"),__awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))},__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};function useAutoCompleteAsync({getOptionsPromise,sleep:_sleep,getOptionsCallback,fetchOptionsOnFocus}){const[open,setOpen]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[options,setOptions]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),[loading,setLoading]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1);(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{let active=!0;if(open&&!options.length)return getOptionsPromise&&(setLoading(!0),getOptionsPromise().then((options=>__awaiter(this,void 0,void 0,(function*(){return yield(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__._v)(_sleep),options})))).then((options=>__awaiter(this,void 0,void 0,(function*(){var _a;return null!==(_a=null==getOptionsCallback?void 0:getOptionsCallback())&&void 0!==_a?_a:[...options]})))).then((options=>active&&setOptions(options))).finally((()=>setLoading(!1)))),()=>{active=!1}}),[open,getOptionsPromise]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{!open&&fetchOptionsOnFocus&&setOptions([])}),[open,fetchOptionsOnFocus]);const endCmp=loading?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Progress_CircularProgress_CircularProgress__WEBPACK_IMPORTED_MODULE_2__.Z,{color:"inherit",size:20}):null;return{onOpen:()=>setOpen(!0),onClose:()=>setOpen(!1),options,open,loading,endCmp}}function InputAutocompleteAsync(_a){var props=__rest(_a,[]);const asyncProps=useAutoCompleteAsync(props);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputAutocomplete__WEBPACK_IMPORTED_MODULE_1__.Z,Object.assign({},props,asyncProps))}InputAutocompleteAsync.propTypes={getOptionLabel:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func,getOptionsPromise:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func,sleep:prop_types__WEBPACK_IMPORTED_MODULE_4___default().number,fetchOptionsOnFocus:prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool},InputAutocompleteAsync.defaultProps={getOptionLabel:void 0,getOptionsPromise:void 0,sleep:1e3,fetchOptionsOnFocus:void 0};try{useAutoCompleteAsync.displayName="useAutoCompleteAsync",useAutoCompleteAsync.__docgenInfo={description:"",displayName:"useAutoCompleteAsync",props:{getOptionsPromise:{defaultValue:{value:"undefined"},description:"",name:"getOptionsPromise",required:!1,type:{name:"any"}},sleep:{defaultValue:{value:"1000"},description:"",name:"sleep",required:!1,type:{name:"any"}},getOptionsCallback:{defaultValue:null,description:"",name:"getOptionsCallback",required:!0,type:{name:"any"}},fetchOptionsOnFocus:{defaultValue:{value:"undefined"},description:"",name:"fetchOptionsOnFocus",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Autocomplete/InputAutocompleteAsync.tsx#useAutoCompleteAsync"]={docgenInfo:useAutoCompleteAsync.__docgenInfo,name:"useAutoCompleteAsync",path:"src/components/Autocomplete/InputAutocompleteAsync.tsx#useAutoCompleteAsync"})}catch(__react_docgen_typescript_loader_error){}try{InputAutocompleteAsync.displayName="InputAutocompleteAsync",InputAutocompleteAsync.__docgenInfo={description:"",displayName:"InputAutocompleteAsync",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Autocomplete/InputAutocompleteAsync.tsx#InputAutocompleteAsync"]={docgenInfo:InputAutocompleteAsync.__docgenInfo,name:"InputAutocompleteAsync",path:"src/components/Autocomplete/InputAutocompleteAsync.tsx#InputAutocompleteAsync"})}catch(__react_docgen_typescript_loader_error){}}}]);