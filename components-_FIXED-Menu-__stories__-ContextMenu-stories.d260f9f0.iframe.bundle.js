"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[350],{"./src/components/_FIXED/Menu/__stories__/ContextMenu.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AlternativeContent:()=>AlternativeContent,AnchorElementRef:()=>AnchorElementRef,AnchorPosition:()=>AnchorPosition,Arrow:()=>Arrow,Default:()=>Default,Dense:()=>Dense,DisableRipple:()=>DisableRipple,DisableScrollLock:()=>DisableScrollLock,Elevation:()=>Elevation,Height:()=>Height,MaxHeight:()=>MaxHeight,Options:()=>Options,OptionsDirectionRow:()=>OptionsDirectionRow,Reopen:()=>Reopen,Width:()=>Width,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ContextMenu_stories});var react=__webpack_require__("./node_modules/react/index.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),es=__webpack_require__("./node_modules/mui-image/es/index.js"),Menu=__webpack_require__("./src/components/_FIXED/Menu/Menu.tsx"),Menu_styled=__webpack_require__("./src/components/_FIXED/Menu/Menu.styled.tsx");const ContextMenu=({children,reopen,...props})=>{const[contextMenu,setContextMenu]=(0,react.useState)(null);return react.createElement(Menu_styled.y9,{onContextMenu:event=>{event.preventDefault();const{clientX:mouseX,clientY:mouseY}=event;setContextMenu(reopen||null===contextMenu?{mouseX,mouseY}:null)},style:{cursor:"context-menu"}},children,react.createElement(Menu.A,{...props,open:null!==contextMenu,contextMenu,onClose:()=>(props.onClose?.(),setContextMenu(null),!0)}))},Menu_ContextMenu=ContextMenu;ContextMenu.__docgenInfo={description:"",methods:[],displayName:"ContextMenu",props:{alternativeContent:{required:!1,tsType:{name:"any"},description:""},anchorElementRef:{required:!1,tsType:{name:"any"},description:""},anchorPosition:{required:!1,tsType:{name:"signature",type:"object",raw:"{ vertical?: 'top' | 'bottom'; horizontal?: 'left' | 'center' | 'right' }",signature:{properties:[{key:"vertical",value:{name:"union",raw:"'top' | 'bottom'",elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'bottom'"}],required:!1}},{key:"horizontal",value:{name:"union",raw:"'left' | 'center' | 'right'",elements:[{name:"literal",value:"'left'"},{name:"literal",value:"'center'"},{name:"literal",value:"'right'"}],required:!1}}]}},description:""},arrow:{required:!1,tsType:{name:"boolean"},description:""},boundChildrenId:{required:!1,tsType:{name:"string"},description:""},boundChildrenIndex:{required:!1,tsType:{name:"union",raw:"boolean | number",elements:[{name:"boolean"},{name:"number"}]},description:""},dense:{required:!1,tsType:{name:"boolean"},description:""},disableRipple:{required:!1,tsType:{name:"boolean"},description:""},disableScrollLock:{required:!1,tsType:{name:"boolean"},description:""},elevation:{required:!1,tsType:{name:"number"},description:""},fieldId:{required:!1,tsType:{name:"string"},description:""},height:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:""},id:{required:!1,tsType:{name:"string"},description:""},maxHeight:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:""},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(event?: any) => void",signature:{arguments:[{type:{name:"any"},name:"event"}],return:{name:"void"}}},description:""},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"(event?: any) => boolean",signature:{arguments:[{type:{name:"any"},name:"event"}],return:{name:"boolean"}}},description:""},open:{required:!1,tsType:{name:"boolean"},description:""},options:{required:!1,tsType:{name:"Array",elements:[{name:"union",raw:"string | MenuOptionItem | DividerProps",elements:[{name:"string"},{name:"MenuOptionItem"},{name:"DividerProps"}]}],raw:"MenuOption[]"},description:""},optionsDirection:{required:!1,tsType:{name:"union",raw:"'column' | 'row'",elements:[{name:"literal",value:"'column'"},{name:"literal",value:"'row'"}]},description:""},width:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:""},reopen:{required:!1,tsType:{name:"boolean"},description:""}}};var Button=__webpack_require__("./src/components/_FIXED/Button/Button.tsx"),Menu_mocks=__webpack_require__("./src/components/_FIXED/Menu/__stories__/Menu.mocks.tsx");const ContextMenu_stories={title:"Navigation/ContextMenu",component:Menu_ContextMenu},Default={args:{options:Menu_mocks.fF},render:args=>{const[open,setOpen]=(0,react.useState)(!1);return react.createElement(Menu_ContextMenu,{...args,open,onClose:()=>(setOpen(!1),!0)},react.createElement(Box.A,{style:{width:"100%",height:"150px",backgroundColor:"rgba(0,0,0,0.07)"}},"context menu - right click anywhere"))}},Reopen={args:{options:Menu_mocks.fF,reopen:!0},render:args=>{const[open,setOpen]=(0,react.useState)(!1);return react.createElement(Menu_ContextMenu,{...args,open,onClose:()=>(setOpen(!1),!0)},react.createElement(Box.A,{style:{width:"100%",height:"150px",backgroundColor:"rgba(0,0,0,0.07)"}},"context menu - right click anywhere and right click again anywhere"))}},AlternativeContent={args:{options:Menu_mocks.fF,alternativeContent:react.createElement(es._,{src:"1.jpg",width:400,height:400})},render:args=>{const[open,setOpen]=(0,react.useState)(!1);return react.createElement(Menu_ContextMenu,{...args,open,onClose:()=>(setOpen(!1),!0)},react.createElement(Button.A,{onClick:()=>setOpen(!0)},"Open ContextMenu"))}},AnchorElementRef={args:{options:Menu_mocks.fF},render:args=>{const[open,setOpen]=(0,react.useState)(!1),ref=(0,react.useRef)();return react.createElement(Box.A,{sx:{display:"flex",justifyContent:"space-between",alignItems:"center"}},react.createElement(Menu_ContextMenu,{...args,open,onClose:()=>(setOpen(!1),!0),anchorElementRef:ref},react.createElement(Button.A,{onClick:()=>setOpen(!0)},"Open ContextMenu")),react.createElement("span",{ref},"ContextMenu will popup here"))}},AnchorPosition={args:{options:Menu_mocks.fF,anchorPosition:{vertical:"top",horizontal:"right"}},render:args=>{const[open,setOpen]=(0,react.useState)(!1);return react.createElement(Menu_ContextMenu,{...args,open,onClose:()=>(setOpen(!1),!0)},react.createElement(Button.A,{onClick:()=>setOpen(!0)},"Open ContextMenu"))}},Arrow={args:{options:Menu_mocks.fF,arrow:!0},render:args=>{const[open,setOpen]=(0,react.useState)(!1);return react.createElement(Menu_ContextMenu,{...args,open,onClose:()=>(setOpen(!1),!0)},react.createElement(Button.A,{onClick:()=>setOpen(!0)},"Open ContextMenu"))}},Dense={args:{options:Menu_mocks.fF,dense:!0},render:args=>{const[open,setOpen]=(0,react.useState)(!1);return react.createElement(Menu_ContextMenu,{...args,open,onClose:()=>(setOpen(!1),!0)},react.createElement(Button.A,{onClick:()=>setOpen(!0)},"Open ContextMenu"))}},DisableRipple={args:{options:Menu_mocks.fF,disableRipple:!0},render:args=>{const[open,setOpen]=(0,react.useState)(!1);return react.createElement(Menu_ContextMenu,{...args,open,onClose:()=>(setOpen(!1),!0)},react.createElement(Button.A,{onClick:()=>setOpen(!0)},"Open ContextMenu"))}},Elevation={args:{options:Menu_mocks.fF,elevation:0},render:args=>{const[open,setOpen]=(0,react.useState)(!1);return react.createElement(Menu_ContextMenu,{...args,open,onClose:()=>(setOpen(!1),!0)},react.createElement(Button.A,{onClick:()=>setOpen(!0)},"Open ContextMenu"))}},Height={args:{options:Menu_mocks.sK,height:400},render:args=>{const[open,setOpen]=(0,react.useState)(!1);return react.createElement(Menu_ContextMenu,{...args,open,onClose:()=>(setOpen(!1),!0)},react.createElement(Button.A,{onClick:()=>setOpen(!0)},"Open ContextMenu"))}},MaxHeight={args:{options:Menu_mocks.sK,maxHeight:200},render:args=>{const[open,setOpen]=(0,react.useState)(!1);return react.createElement(Menu_ContextMenu,{...args,open,onClose:()=>(setOpen(!1),!0)},react.createElement(Button.A,{onClick:()=>setOpen(!0)},"Open ContextMenu"))}},DisableScrollLock={args:{options:Menu_mocks.DK,disableScrollLock:!0,children:react.createElement(Button.A,null,"Open ContextMenu")},render:args=>react.createElement(Menu_ContextMenu,{...args,open:!0},react.createElement(Button.A,null,"Open ContextMenu"))},Width={args:{options:Menu_mocks.DK,maxHeight:200,open:!0,width:300,children:react.createElement(Button.A,null,"Open ContextMenu")}},Options={args:{},render:args=>react.createElement(Box.A,{sx:{display:"flex",flexDirection:"row",alignItems:"center",justifyContent:"space-between"}},react.createElement(Menu_ContextMenu,{...args,open:!0,options:Menu_mocks.fF.map((option=>({...option,check:!0})))},react.createElement(Button.A,null,"Checked List")),react.createElement(Menu_ContextMenu,{...args,open:!0,options:Menu_mocks.sK},react.createElement(Button.A,null,"String List")),react.createElement(Menu_ContextMenu,{...args,open:!0,options:Menu_mocks.DK,width:200},react.createElement(Button.A,null,"Shortcut & icons")),react.createElement(Menu_ContextMenu,{...args,open:!0,alternativeContent:react.createElement(es._,{src:"1.jpg",width:200,height:300})},react.createElement(Button.A,null,"Alternative Content")))},OptionsDirectionRow={args:{},render:args=>react.createElement(Menu_ContextMenu,{...args,open:!0,options:Menu_mocks.sK,optionsDirection:"row"},react.createElement(Button.A,null,"String List"))},__namedExportsOrder=["Default","Reopen","AlternativeContent","AnchorElementRef","AnchorPosition","Arrow","Dense","DisableRipple","Elevation","Height","MaxHeight","DisableScrollLock","Width","Options","OptionsDirectionRow"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    options\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Box style={{\n        width: '100%',\n        height: '150px',\n        backgroundColor: 'rgba(0,0,0,0.07)'\n      }}>\n                    context menu - right click anywhere\n                </Box>\n            </ContextMenu>;\n  }\n}",...Default.parameters?.docs?.source}}},Reopen.parameters={...Reopen.parameters,docs:{...Reopen.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    reopen: true\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Box style={{\n        width: '100%',\n        height: '150px',\n        backgroundColor: 'rgba(0,0,0,0.07)'\n      }}>\n                    context menu - right click anywhere and right click again anywhere\n                </Box>\n            </ContextMenu>;\n  }\n}",...Reopen.parameters?.docs?.source}}},AlternativeContent.parameters={...AlternativeContent.parameters,docs:{...AlternativeContent.parameters?.docs,source:{originalSource:'{\n  args: {\n    options,\n    alternativeContent: <MuiImage src="1.jpg" width={400} height={400} />\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>;\n  }\n}',...AlternativeContent.parameters?.docs?.source}}},AnchorElementRef.parameters={...AnchorElementRef.parameters,docs:{...AnchorElementRef.parameters?.docs,source:{originalSource:"{\n  args: {\n    options\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const ref = useRef();\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Box sx={{\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    }}>\n                <ContextMenu {...args} open={open} onClose={onCloseHandler} anchorElementRef={ref}>\n                    <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n                </ContextMenu>\n                <span ref={ref}>ContextMenu will popup here</span>\n            </Box>;\n  }\n}",...AnchorElementRef.parameters?.docs?.source}}},AnchorPosition.parameters={...AnchorPosition.parameters,docs:{...AnchorPosition.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    anchorPosition: {\n      vertical: 'top',\n      horizontal: 'right'\n    }\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>;\n  }\n}",...AnchorPosition.parameters?.docs?.source}}},Arrow.parameters={...Arrow.parameters,docs:{...Arrow.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    arrow: true\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>;\n  }\n}",...Arrow.parameters?.docs?.source}}},Dense.parameters={...Dense.parameters,docs:{...Dense.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    dense: true\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>;\n  }\n}",...Dense.parameters?.docs?.source}}},DisableRipple.parameters={...DisableRipple.parameters,docs:{...DisableRipple.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    disableRipple: true\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>;\n  }\n}",...DisableRipple.parameters?.docs?.source}}},Elevation.parameters={...Elevation.parameters,docs:{...Elevation.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    elevation: 0\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>;\n  }\n}",...Elevation.parameters?.docs?.source}}},Height.parameters={...Height.parameters,docs:{...Height.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: optionLongList,\n    height: 400\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>;\n  }\n}",...Height.parameters?.docs?.source}}},MaxHeight.parameters={...MaxHeight.parameters,docs:{...MaxHeight.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: optionLongList,\n    maxHeight: 200\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>;\n  }\n}",...MaxHeight.parameters?.docs?.source}}},DisableScrollLock.parameters={...DisableScrollLock.parameters,docs:{...DisableScrollLock.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: shortcutOptions,\n    disableScrollLock: true,\n    children: <Button>Open ContextMenu</Button>\n  },\n  render: args => {\n    return <ContextMenu {...args} open>\n                <Button>Open ContextMenu</Button>\n            </ContextMenu>;\n  }\n}",...DisableScrollLock.parameters?.docs?.source}}},Width.parameters={...Width.parameters,docs:{...Width.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: shortcutOptions,\n    maxHeight: 200,\n    open: true,\n    width: 300,\n    children: <Button>Open ContextMenu</Button>\n  }\n}",...Width.parameters?.docs?.source}}},Options.parameters={...Options.parameters,docs:{...Options.parameters?.docs,source:{originalSource:"{\n  args: {},\n  render: args => {\n    return <Box sx={{\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    }}>\n                <ContextMenu {...args} open options={options.map(option => ({\n        ...option,\n        check: true\n      }))}>\n                    <Button>Checked List</Button>\n                </ContextMenu>\n                <ContextMenu {...args} open options={optionLongList}>\n                    <Button>String List</Button>\n                </ContextMenu>\n                <ContextMenu {...args} open options={shortcutOptions} width={200}>\n                    <Button>Shortcut & icons</Button>\n                </ContextMenu>\n                <ContextMenu {...args} open alternativeContent={<MuiImage src=\"1.jpg\" width={200} height={300} />}>\n                    <Button>Alternative Content</Button>\n                </ContextMenu>\n            </Box>;\n  }\n}",...Options.parameters?.docs?.source}}},OptionsDirectionRow.parameters={...OptionsDirectionRow.parameters,docs:{...OptionsDirectionRow.parameters?.docs,source:{originalSource:'{\n  args: {},\n  render: args => {\n    return <ContextMenu {...args} open options={optionLongList} optionsDirection="row">\n                <Button>String List</Button>\n            </ContextMenu>;\n  }\n}',...OptionsDirectionRow.parameters?.docs?.source}}}},"./src/components/_FIXED/Menu/__stories__/Menu.mocks.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{DK:()=>shortcutOptions,fF:()=>options,sK:()=>optionLongList});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const optionLongList=["Option 1","Option 2","Option 3","Option 4","Option 5","Option 6","Option 7","Option 8","Option 9","Option 10"],options=[{id:"o1",label:"Profile",onClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("onClickOption")},{id:"o2",label:"My account",onClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("onClickOption")},{id:"o3",label:"Logout",onClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("onClickOption")},{divider:!0},{id:"o3",label:"return true",onClick:()=>((0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("onClickOption"),!0)}],shortcutOptions=[{id:"o1",label:"Cut",icon:"ContentCut",onClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("onClickOption"),shortcut:"Ctrl+X"},{id:"o2",label:"Copy",icon:"ContentCopy",onClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("onClickOption"),shortcut:"Ctrl+C"},{id:"o3",label:"Logout",icon:"ContentPaste",onClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("onClickOption"),shortcut:"Ctrl+V"},{divider:!0},{id:"o4",label:"Paste",icon:"Cloud",onClick:()=>((0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("onClickOption"),!0)}]}}]);