"use strict";(self.webpackChunk_hdriel_mui_simple=self.webpackChunk_hdriel_mui_simple||[]).push([[8469],{"./src/components/TreeView/__stories__/TreeView.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicTreeView:()=>BasicTreeView,CustomItem:()=>CustomItem,Default:()=>Default,GmailCloneStyles:()=>GmailCloneStyles,IndentBorderStyles:()=>IndentBorderStyles,MultiSelection:()=>MultiSelection,__namedExportsOrder:()=>__namedExportsOrder,default:()=>TreeView_stories});var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,TreeView_styled_templateObject,TreeView_styled_templateObject2,react=__webpack_require__("./node_modules/react/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),ExpandMore=__webpack_require__("./node_modules/@mui/icons-material/ExpandMore.js"),ChevronRight=__webpack_require__("./node_modules/@mui/icons-material/ChevronRight.js"),styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),colorManipulator=__webpack_require__("./node_modules/@mui/system/esm/colorManipulator.js"),TreeView=__webpack_require__("./node_modules/@mui/lab/TreeView/TreeView.js"),TreeItem=__webpack_require__("./node_modules/@mui/lab/TreeItem/TreeItem.js"),treeItemClasses=__webpack_require__("./node_modules/@mui/lab/TreeItem/treeItemClasses.js"),emotion_react_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");function _taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function borderedStyles(props){return props.bordered?(0,emotion_react_browser_esm.iv)(_templateObject2||(_templateObject2=_taggedTemplateLiteral(["\n    & ."," {\n      margin-left: 15px;\n      padding-left: 18px;\n      border-left: 1px dashed ",";\n    }\n  "])),treeItemClasses.Z.group,(0,colorManipulator.Fq)(props.theme.palette.text.primary,.4)):(0,emotion_react_browser_esm.iv)(_templateObject||(_templateObject=_taggedTemplateLiteral([""])))}function closeIconFade(props){return props.closeIconFade?(0,emotion_react_browser_esm.iv)(_templateObject4||(_templateObject4=_taggedTemplateLiteral(["\n    & ."," {\n      & .close {\n        opacity: 0.3;\n      }\n    }\n  "])),treeItemClasses.Z.iconContainer):(0,emotion_react_browser_esm.iv)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([""])))}function selectedColor(props){return(0,emotion_react_browser_esm.iv)(_templateObject5||(_templateObject5=_taggedTemplateLiteral(["\n    color: ",";\n    & ."," {\n      color: ",";\n\n      &.Mui-focused,\n      &.Mui-selected,\n      &.Mui-selected.Mui-focused {\n        color: var(--tree-view-color);\n        background-color: var(\n          --tree-view-bg-color,\n          ","}\n        );\n      }\n\n      &:hover {\n        background-color: ",";\n      }\n    }\n  "])),props.theme.palette.text.secondary,treeItemClasses.Z.content,props.theme.palette.text.secondary,props.theme.palette.action.selected,props.theme.palette.action.hover)}function edgeCorners(props){return props.edgeCorners?(0,emotion_react_browser_esm.iv)(_templateObject7||(_templateObject7=_taggedTemplateLiteral(["\n    & ."," {\n      border-top-right-radius: ",";\n      border-bottom-right-radius: ",";\n    }\n  "])),treeItemClasses.Z.content,props.theme.spacing(2),props.theme.spacing(2)):(0,emotion_react_browser_esm.iv)(_templateObject6||(_templateObject6=_taggedTemplateLiteral([""])))}try{borderedStyles.displayName="borderedStyles",borderedStyles.__docgenInfo={description:"",displayName:"borderedStyles",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.styles.tsx#borderedStyles"]={docgenInfo:borderedStyles.__docgenInfo,name:"borderedStyles",path:"src/components/TreeView/TreeView.styles.tsx#borderedStyles"})}catch(__react_docgen_typescript_loader_error){}try{closeIconFade.displayName="closeIconFade",closeIconFade.__docgenInfo={description:"",displayName:"closeIconFade",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.styles.tsx#closeIconFade"]={docgenInfo:closeIconFade.__docgenInfo,name:"closeIconFade",path:"src/components/TreeView/TreeView.styles.tsx#closeIconFade"})}catch(__react_docgen_typescript_loader_error){}try{selectedColor.displayName="selectedColor",selectedColor.__docgenInfo={description:"",displayName:"selectedColor",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.styles.tsx#selectedColor"]={docgenInfo:selectedColor.__docgenInfo,name:"selectedColor",path:"src/components/TreeView/TreeView.styles.tsx#selectedColor"})}catch(__react_docgen_typescript_loader_error){}try{edgeCorners.displayName="edgeCorners",edgeCorners.__docgenInfo={description:"",displayName:"edgeCorners",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.styles.tsx#edgeCorners"]={docgenInfo:edgeCorners.__docgenInfo,name:"edgeCorners",path:"src/components/TreeView/TreeView.styles.tsx#edgeCorners"})}catch(__react_docgen_typescript_loader_error){}function TreeView_styled_taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}var TreeView_styled_TreeView=(0,styled.ZP)(TreeView.Z,{shouldForwardProp:propName=>!["maxWidth","height"].includes(propName)})(TreeView_styled_templateObject||(TreeView_styled_templateObject=TreeView_styled_taggedTemplateLiteral(["\n  height: ",";\n  flex-grow: 1;\n  max-width: ",";\n  overflow-y: auto;\n  overflow-x: hidden;\n"])),(props=>props.height),(props=>props.maxWidth?"".concat(props.maxWidth,"px"):void 0)),TreeView_styled_TreeItem=TreeItem.Z,LabelIconTreeItemStyled=(0,styled.ZP)(TreeItem.Z)((_ref=>{var{theme}=_ref;return{color:theme.palette.text.secondary,["& .".concat(treeItemClasses.Z.content)]:{width:"auto",color:theme.palette.text.secondary,borderTopRightRadius:theme.spacing(2),borderBottomRightRadius:theme.spacing(2),paddingRight:theme.spacing(1),fontWeight:theme.typography.fontWeightMedium,"&.Mui-expanded":{fontWeight:theme.typography.fontWeightRegular},"&:hover":{backgroundColor:theme.palette.action.hover},"&.Mui-focused, &.Mui-selected, &.Mui-selected.Mui-focused":{backgroundColor:"var(--tree-view-bg-color, ".concat(theme.palette.action.selected,")"),color:"var(--tree-view-color)"},["& .".concat(treeItemClasses.Z.label)]:{fontWeight:"inherit",color:"inherit"}},["& .".concat(treeItemClasses.Z.group)]:{marginLeft:0,["& .".concat(treeItemClasses.Z.content)]:{paddingLeft:theme.spacing(2)}}}})),IndentBorderTreeItemStyled=(0,styled.ZP)(TreeItem.Z)((_ref2=>{var{theme}=_ref2;return{["& .".concat(treeItemClasses.Z.iconContainer)]:{"& .close":{opacity:.3}},["& .".concat(treeItemClasses.Z.group)]:{marginLeft:15,paddingLeft:18,borderLeft:"1px dashed ".concat((0,colorManipulator.Fq)(theme.palette.text.primary,.4))}}})),TreeItemStyled=(0,styled.ZP)(TreeItem.Z,{shouldForwardProp:propName=>!["bordered","closeIconFade"].includes(propName)})(TreeView_styled_templateObject2||(TreeView_styled_templateObject2=TreeView_styled_taggedTemplateLiteral(["\n  ","\n  ","\n  ","\n  ","\n\n  & ."," {\n    width: auto;\n\n    padding-right: ",";\n    font-weight: ",";\n\n    &.Mui-expanded {\n      font-weight: ",";\n    }\n\n    & ."," {\n      font-weight: inherit;\n      color: inherit;\n    }\n  }\n\n  & ."," {\n    margin-left: 0;\n\n    & ."," {\n      padding-left: ",";\n    }\n  }\n"])),closeIconFade,borderedStyles,selectedColor,edgeCorners,treeItemClasses.Z.content,(props=>props.theme.spacing(1)),(props=>props.theme.typography.fontWeightMedium),(props=>props.theme.typography.fontWeightRegular),treeItemClasses.Z.label,treeItemClasses.Z.group,treeItemClasses.Z.content,(props=>props.theme.spacing(2)));try{TreeView_styled_TreeView.displayName="TreeView",TreeView_styled_TreeView.__docgenInfo={description:"",displayName:"TreeView",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.styled.tsx#TreeView"]={docgenInfo:TreeView_styled_TreeView.__docgenInfo,name:"TreeView",path:"src/components/TreeView/TreeView.styled.tsx#TreeView"})}catch(__react_docgen_typescript_loader_error){}try{TreeView_styled_TreeItem.displayName="TreeItem",TreeView_styled_TreeItem.__docgenInfo={description:"",displayName:"TreeItem",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.styled.tsx#TreeItem"]={docgenInfo:TreeView_styled_TreeItem.__docgenInfo,name:"TreeItem",path:"src/components/TreeView/TreeView.styled.tsx#TreeItem"})}catch(__react_docgen_typescript_loader_error){}try{LabelIconTreeItemStyled.displayName="LabelIconTreeItemStyled",LabelIconTreeItemStyled.__docgenInfo={description:"",displayName:"LabelIconTreeItemStyled",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.styled.tsx#LabelIconTreeItemStyled"]={docgenInfo:LabelIconTreeItemStyled.__docgenInfo,name:"LabelIconTreeItemStyled",path:"src/components/TreeView/TreeView.styled.tsx#LabelIconTreeItemStyled"})}catch(__react_docgen_typescript_loader_error){}try{IndentBorderTreeItemStyled.displayName="IndentBorderTreeItemStyled",IndentBorderTreeItemStyled.__docgenInfo={description:"",displayName:"IndentBorderTreeItemStyled",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.styled.tsx#IndentBorderTreeItemStyled"]={docgenInfo:IndentBorderTreeItemStyled.__docgenInfo,name:"IndentBorderTreeItemStyled",path:"src/components/TreeView/TreeView.styled.tsx#IndentBorderTreeItemStyled"})}catch(__react_docgen_typescript_loader_error){}try{TreeItemStyled.displayName="TreeItemStyled",TreeItemStyled.__docgenInfo={description:"",displayName:"TreeItemStyled",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.styled.tsx#TreeItemStyled"]={docgenInfo:TreeItemStyled.__docgenInfo,name:"TreeItemStyled",path:"src/components/TreeView/TreeView.styled.tsx#TreeItemStyled"})}catch(__react_docgen_typescript_loader_error){}var Collapse=__webpack_require__("./node_modules/@mui/material/Collapse/Collapse.js"),esm=__webpack_require__("./node_modules/@react-spring/web/dist/esm/index.js");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TransitionComponent(props){var style=(0,esm.q_)({from:{opacity:0,transform:"translate3d(0,-20px,0)"},to:{opacity:props.in?1:0,transform:"translate3d(0,".concat(props.in?0:20,"px,0)")}});return react.createElement(esm.q.div,{style},react.createElement(Collapse.Z,function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},props)))}TransitionComponent.propTypes={in:prop_types_default().bool};try{TreeViewtransition.displayName="TreeViewtransition",TreeViewtransition.__docgenInfo={description:"",displayName:"TreeViewtransition",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.transition.tsx#TreeViewtransition"]={docgenInfo:TreeViewtransition.__docgenInfo,name:"TreeViewtransition",path:"src/components/TreeView/TreeView.transition.tsx#TreeViewtransition"})}catch(__react_docgen_typescript_loader_error){}var useTreeItem=__webpack_require__("./node_modules/@mui/lab/TreeItem/useTreeItem.js"),_excluded=["nodeId","TransitionComponent","children","closeIconFade","closeIconFadeStyles","borderedStyles","edgeCornersStyles"],_excluded2=["children"];function withTreeViewItem_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function withTreeViewItem_objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?withTreeViewItem_ownKeys(Object(source),!0).forEach((function(key){withTreeViewItem_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):withTreeViewItem_ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function withTreeViewItem_defineProperty(obj,key,value){return(key=function withTreeViewItem_toPropertyKey(arg){var key=function withTreeViewItem_toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var TreeView_excluded=["nodes","collapseIcon","expandIcon","endIcon","multiSelect","expandedIds","onExpended","selectedIds","onSelected","useStyle","LabelComponent","TreeItemComponent","TransitionComponent","closeIconFadeStyles","borderedStyles","edgeCornersStyles"],TreeView_excluded2=["id","label"];function TreeView_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function TreeView_objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?TreeView_ownKeys(Object(source),!0).forEach((function(key){TreeView_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TreeView_ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function TreeView_defineProperty(obj,key,value){return(key=function TreeView_toPropertyKey(arg){var key=function TreeView_toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TreeView_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function TreeView_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function TreeView_TreeView(_ref){var{nodes,collapseIcon,expandIcon,endIcon,multiSelect,expandedIds,onExpended,selectedIds,onSelected,useStyle,LabelComponent,TreeItemComponent,TransitionComponent,closeIconFadeStyles,borderedStyles,edgeCornersStyles}=_ref,props=TreeView_objectWithoutProperties(_ref,TreeView_excluded),handleToggle=onExpended?(event,nodeIds)=>{onExpended([].concat(nodeIds))}:void 0,handleSelect=onSelected?(event,nodeIds)=>{onSelected([].concat(nodeIds))}:void 0,CustomTreeItem=LabelComponent?function withTreeViewItem(Component){var TreeItemComponent=arguments.length>1&&void 0!==arguments[1]?arguments[1]:TreeView_styled_TreeItem,CustomTreeItemChild=(0,react.forwardRef)(((props,ref)=>{var _concat,_ref=null!=props?props:{},{nodeId,TransitionComponent,children,closeIconFade,closeIconFadeStyles,borderedStyles,edgeCornersStyles}=_ref,restProps=_objectWithoutProperties(_ref,_excluded),{disabled,expanded,selected,focused,handleExpansion,handleSelection,preventSelection}=(0,useTreeItem.Z)(nodeId);return props&&react.createElement(TreeItemComponent,{key:nodeId,ref,nodeId,TransitionComponent,closeIconFade,bordered:borderedStyles,closeIconFadeStyles,borderedStyles,edgeCornersStyles,label:react.createElement(Component,withTreeViewItem_objectSpread(withTreeViewItem_objectSpread({},restProps),{},{nodeId,itemDisabled:disabled,itemExpanded:expanded,itemSelected:selected,itemFocused:focused,onExpandedItem:event=>null==handleExpansion?void 0:handleExpansion(event),onSelectedItem:event=>null==handleSelection?void 0:handleSelection(event),preventSelectItem:preventSelection})),style:{"--tree-view-color":restProps.color,"--tree-view-bg-color":restProps.bgColor}},null===(_concat=[].concat(null!=children?children:[]))||void 0===_concat?void 0:_concat.map(((_ref2,index)=>{var _treeItemProps$nodeId,{props:treeItemProps}=_ref2;return react.createElement(CustomTreeItemChild,withTreeViewItem_objectSpread({key:null!==(_treeItemProps$nodeId=null==treeItemProps?void 0:treeItemProps.nodeId)&&void 0!==_treeItemProps$nodeId?_treeItemProps$nodeId:index},treeItemProps))})))}));return function renderTree(_ref3){var _concat2,{children}=_ref3,props=_objectWithoutProperties(_ref3,_excluded2);return react.createElement(CustomTreeItemChild,withTreeViewItem_objectSpread({},props),null===(_concat2=[].concat(null!=children?children:[]))||void 0===_concat2?void 0:_concat2.map((_ref4=>{var{props:treeItemProps}=_ref4;return renderTree(treeItemProps)})))}}(LabelComponent,TreeItemStyled):TreeItemComponent,renderTree=nodes=>null==nodes?void 0:nodes.map((_ref2=>{var{id,label}=_ref2,node=TreeView_objectWithoutProperties(_ref2,TreeView_excluded2);return react.createElement(CustomTreeItem,TreeView_objectSpread({key:id,id,nodeId:id,label,TransitionComponent},node),renderTree(node.children))}));return react.createElement(Box.Z,null,react.createElement(TreeView_styled_TreeView,TreeView_objectSpread({defaultCollapseIcon:collapseIcon,defaultExpandIcon:expandIcon,defaultEndIcon:endIcon,multiSelect,expanded:expandedIds,selected:selectedIds,onNodeToggle:handleToggle,onNodeSelect:handleSelect,maxWidth:400},props),CustomTreeItem&&renderTree(nodes)))}var nodePropTypes=prop_types_default().arrayOf(prop_types_default().shape({id:prop_types_default().string,label:prop_types_default().string,children:prop_types_default().array}));TreeView_TreeView.propTypes={nodes:nodePropTypes,collapseIcon:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().node]),expandIcon:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().node]),multiSelect:prop_types_default().bool,expandedIds:prop_types_default().arrayOf(prop_types_default().string),onExpended:prop_types_default().func,selectedIds:prop_types_default().arrayOf(prop_types_default().string),onSelected:prop_types_default().func,useStyle:prop_types_default().oneOf(["default","LabelIcon","IndentBorder"]),LabelComponent:prop_types_default().any,TreeItemComponent:prop_types_default().any,closeIconFadeStyles:prop_types_default().bool,borderedStyles:prop_types_default().bool,edgeCornersStyles:prop_types_default().bool},TreeView_TreeView.defaultProps={nodes:[],collapseIcon:react.createElement(ExpandMore.Z,null),expandIcon:react.createElement(ChevronRight.Z,null),endIcon:void 0,multiSelect:void 0,expandedIds:void 0,onExpended:void 0,selectedIds:void 0,onSelected:void 0,LabelComponent:void 0,TreeItemComponent:TreeView_styled_TreeItem,TransitionComponent,closeIconFadeStyles:!1,borderedStyles:!1,edgeCornersStyles:!1};try{TreeView_TreeView.displayName="TreeView",TreeView_TreeView.__docgenInfo={description:"",displayName:"TreeView",props:{nodes:{defaultValue:{value:"[]"},description:"",name:"nodes",required:!1,type:{name:"any"}},collapseIcon:{defaultValue:{value:"<ExpandMoreIcon />"},description:"",name:"collapseIcon",required:!1,type:{name:"any"}},expandIcon:{defaultValue:{value:"<ChevronRightIcon />"},description:"",name:"expandIcon",required:!1,type:{name:"any"}},endIcon:{defaultValue:{value:"undefined"},description:"",name:"endIcon",required:!1,type:{name:"any"}},multiSelect:{defaultValue:{value:"undefined"},description:"",name:"multiSelect",required:!1,type:{name:"any"}},expandedIds:{defaultValue:{value:"undefined"},description:"",name:"expandedIds",required:!1,type:{name:"any"}},onExpended:{defaultValue:{value:"undefined"},description:"",name:"onExpended",required:!1,type:{name:"any"}},selectedIds:{defaultValue:{value:"undefined"},description:"",name:"selectedIds",required:!1,type:{name:"any"}},onSelected:{defaultValue:{value:"undefined"},description:"",name:"onSelected",required:!1,type:{name:"any"}},useStyle:{defaultValue:null,description:"",name:"useStyle",required:!0,type:{name:"any"}},LabelComponent:{defaultValue:{value:"undefined"},description:"",name:"LabelComponent",required:!1,type:{name:"any"}},TreeItemComponent:{defaultValue:null,description:"",name:"TreeItemComponent",required:!0,type:{name:"any"}},TransitionComponent:{defaultValue:null,description:"",name:"TransitionComponent",required:!0,type:{name:"any"}},closeIconFadeStyles:{defaultValue:{value:"false"},description:"",name:"closeIconFadeStyles",required:!1,type:{name:"any"}},borderedStyles:{defaultValue:{value:"false"},description:"",name:"borderedStyles",required:!1,type:{name:"any"}},edgeCornersStyles:{defaultValue:{value:"false"},description:"",name:"edgeCornersStyles",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.tsx#TreeView"]={docgenInfo:TreeView_TreeView.__docgenInfo,name:"TreeView",path:"src/components/TreeView/TreeView.tsx#TreeView"})}catch(__react_docgen_typescript_loader_error){}var Button=__webpack_require__("./src/components/Button/Button.tsx"),Typography=__webpack_require__("./src/components/Typography/Typography.tsx"),SVGIcon=__webpack_require__("./src/components/SVGIcon/SVGIcon.tsx"),ArrowDropDown=__webpack_require__("./node_modules/@mui/icons-material/ArrowDropDown.js"),ArrowRight=__webpack_require__("./node_modules/@mui/icons-material/ArrowRight.js"),LabelIconTreeItem_excluded=["bgColor","color","icon","info","label"];function LabelIconTreeItem_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function LabelIconTreeItem_objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?LabelIconTreeItem_ownKeys(Object(source),!0).forEach((function(key){LabelIconTreeItem_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):LabelIconTreeItem_ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function LabelIconTreeItem_defineProperty(obj,key,value){return(key=function LabelIconTreeItem_toPropertyKey(arg){var key=function LabelIconTreeItem_toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function LabelIconTreeItem_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function LabelIconTreeItem_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var LabelIconTreeItem=(0,react.forwardRef)(((props,ref)=>{var _ref=null!=props?props:{},{bgColor,color,icon:labelIcon,info:labelInfo,label:labelText}=_ref,other=LabelIconTreeItem_objectWithoutProperties(_ref,LabelIconTreeItem_excluded);return props&&react.createElement(LabelIconTreeItemStyled,LabelIconTreeItem_objectSpread(LabelIconTreeItem_objectSpread({ref},other),{},{label:react.createElement(Box.Z,{sx:{display:"flex",alignItems:"center",p:.5,pr:0}},labelIcon&&react.createElement(Box.Z,{color:"inherit",sx:{mr:1,display:"flex",alignItems:"center"}},react.createElement(SVGIcon.Z,{muiIconName:labelIcon},labelIcon)),labelText&&react.createElement(Typography.Z,{variant:"body2",sx:{fontWeight:"inherit",flexGrow:1}},labelText),labelInfo&&react.createElement(Typography.Z,{variant:"caption",color:"inherit"},labelInfo)),style:{"--tree-view-color":color,"--tree-view-bg-color":bgColor}}))}));LabelIconTreeItem.propTypes={bgColor:prop_types_default().string,color:prop_types_default().string,icon:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().node,prop_types_default().any]),info:prop_types_default().string,label:prop_types_default().string.isRequired},LabelIconTreeItem.defaultProps={bgColor:void 0,color:void 0,icon:void 0,info:void 0,label:void 0};const TreeItemComponents_LabelIconTreeItem=LabelIconTreeItem;var LabelIconTreeItemIcons={collapseIcon:react.createElement(ArrowDropDown.Z,null),expandIcon:react.createElement(ArrowRight.Z,null),endIcon:react.createElement("div",{style:{width:24}})};try{LabelIconTreeItem.displayName="LabelIconTreeItem",LabelIconTreeItem.__docgenInfo={description:"",displayName:"LabelIconTreeItem",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeItemComponents/LabelIconTreeItem.tsx#LabelIconTreeItem"]={docgenInfo:LabelIconTreeItem.__docgenInfo,name:"LabelIconTreeItem",path:"src/components/TreeView/TreeItemComponents/LabelIconTreeItem.tsx#LabelIconTreeItem"})}catch(__react_docgen_typescript_loader_error){}var SvgIcon=__webpack_require__("./node_modules/@mui/material/SvgIcon/SvgIcon.js");function TreeView_icons_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function TreeView_icons_objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?TreeView_icons_ownKeys(Object(source),!0).forEach((function(key){TreeView_icons_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TreeView_icons_ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function TreeView_icons_defineProperty(obj,key,value){return(key=function TreeView_icons_toPropertyKey(arg){var key=function TreeView_icons_toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function MinusSquare(props){return react.createElement(SvgIcon.Z,TreeView_icons_objectSpread({fontSize:"inherit",style:{width:14,height:14}},props),react.createElement("path",{d:"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z"}))}function PlusSquare(props){return react.createElement(SvgIcon.Z,TreeView_icons_objectSpread({fontSize:"inherit",style:{width:14,height:14}},props),react.createElement("path",{d:"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z"}))}function CloseSquare(props){return react.createElement(SvgIcon.Z,TreeView_icons_objectSpread({className:"close",fontSize:"inherit",style:{width:14,height:14}},props),react.createElement("path",{d:"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z"}))}try{MinusSquare.displayName="MinusSquare",MinusSquare.__docgenInfo={description:"",displayName:"MinusSquare",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.icons.tsx#MinusSquare"]={docgenInfo:MinusSquare.__docgenInfo,name:"MinusSquare",path:"src/components/TreeView/TreeView.icons.tsx#MinusSquare"})}catch(__react_docgen_typescript_loader_error){}try{PlusSquare.displayName="PlusSquare",PlusSquare.__docgenInfo={description:"",displayName:"PlusSquare",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.icons.tsx#PlusSquare"]={docgenInfo:PlusSquare.__docgenInfo,name:"PlusSquare",path:"src/components/TreeView/TreeView.icons.tsx#PlusSquare"})}catch(__react_docgen_typescript_loader_error){}try{CloseSquare.displayName="CloseSquare",CloseSquare.__docgenInfo={description:"",displayName:"CloseSquare",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeView.icons.tsx#CloseSquare"]={docgenInfo:CloseSquare.__docgenInfo,name:"CloseSquare",path:"src/components/TreeView/TreeView.icons.tsx#CloseSquare"})}catch(__react_docgen_typescript_loader_error){}var IndentBorderTreeItem_excluded=["bgColor","color","icon","label"];function IndentBorderTreeItem_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function IndentBorderTreeItem_objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?IndentBorderTreeItem_ownKeys(Object(source),!0).forEach((function(key){IndentBorderTreeItem_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):IndentBorderTreeItem_ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function IndentBorderTreeItem_defineProperty(obj,key,value){return(key=function IndentBorderTreeItem_toPropertyKey(arg){var key=function IndentBorderTreeItem_toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function IndentBorderTreeItem_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function IndentBorderTreeItem_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var IndentBorderTreeItem=(0,react.forwardRef)(((props,ref)=>{var _ref=null!=props?props:{},{bgColor,color,icon,label}=_ref,other=IndentBorderTreeItem_objectWithoutProperties(_ref,IndentBorderTreeItem_excluded);return props&&react.createElement(IndentBorderTreeItemStyled,IndentBorderTreeItem_objectSpread(IndentBorderTreeItem_objectSpread({ref},other),{},{label,style:{"--tree-view-color":color,"--tree-view-bg-color":bgColor}}))}));IndentBorderTreeItem.propTypes={bgColor:prop_types_default().string,color:prop_types_default().string,label:prop_types_default().string.isRequired},IndentBorderTreeItem.defaultProps={bgColor:void 0,color:void 0,label:void 0};const TreeItemComponents_IndentBorderTreeItem=IndentBorderTreeItem;var IndentBorderTreeItemIcons={collapseIcon:react.createElement(MinusSquare,null),expandIcon:react.createElement(PlusSquare,null),endIcon:react.createElement(CloseSquare,null)};try{IndentBorderTreeItem.displayName="IndentBorderTreeItem",IndentBorderTreeItem.__docgenInfo={description:"",displayName:"IndentBorderTreeItem",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TreeView/TreeItemComponents/IndentBorderTreeItem.tsx#IndentBorderTreeItem"]={docgenInfo:IndentBorderTreeItem.__docgenInfo,name:"IndentBorderTreeItem",path:"src/components/TreeView/TreeItemComponents/IndentBorderTreeItem.tsx#IndentBorderTreeItem"})}catch(__react_docgen_typescript_loader_error){}var _Default$parameters,_Default$parameters2,_Default$parameters2$,_BasicTreeView$parame,_BasicTreeView$parame2,_BasicTreeView$parame3,_MultiSelection$param,_MultiSelection$param2,_MultiSelection$param3,_GmailCloneStyles$par,_GmailCloneStyles$par2,_GmailCloneStyles$par3,_IndentBorderStyles$p,_IndentBorderStyles$p2,_IndentBorderStyles$p3,_CustomItem$parameter,_CustomItem$parameter2,_CustomItem$parameter3;function TreeView_stories_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function TreeView_stories_objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?TreeView_stories_ownKeys(Object(source),!0).forEach((function(key){TreeView_stories_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TreeView_stories_ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function TreeView_stories_defineProperty(obj,key,value){return(key=function TreeView_stories_toPropertyKey(arg){var key=function TreeView_stories_toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}const TreeView_stories={parameters:{storySource:{source:'var _Default$parameters, _Default$parameters2, _Default$parameters2$, _BasicTreeView$parame, _BasicTreeView$parame2, _BasicTreeView$parame3, _MultiSelection$param, _MultiSelection$param2, _MultiSelection$param3, _GmailCloneStyles$par, _GmailCloneStyles$par2, _GmailCloneStyles$par3, _IndentBorderStyles$p, _IndentBorderStyles$p2, _IndentBorderStyles$p3, _CustomItem$parameter, _CustomItem$parameter2, _CustomItem$parameter3;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nimport React from "react";\nimport { action } from "@storybook/addon-actions";\nimport TreeView from "../TreeView";\nimport { Box } from "@mui/material";\nimport Button from "../../Button/Button";\nimport LabelIconTreeItem, { LabelIconTreeItemIcons } from "../TreeItemComponents/LabelIconTreeItem";\nimport IndentBorderTreeItem, { IndentBorderTreeItemIcons } from "../TreeItemComponents/IndentBorderTreeItem";\nimport SVGIcon from "../../SVGIcon/SVGIcon";\nimport Typography from "../../Typography/Typography";\nexport default {\n  title: "Lab/TreeView",\n  component: TreeView\n};\nvar actions = {\n  onClick: action("onClick")\n};\nexport var Default = () => {\n  return /*#__PURE__*/React.createElement(TreeView, _objectSpread({}, actions));\n};\nexport var BasicTreeView = () => {\n  var nodes = [{\n    id: "1",\n    label: "Applications",\n    children: [{\n      id: "2",\n      label: "Calendar"\n    }]\n  }, {\n    id: "5",\n    label: "Documents",\n    children: [{\n      id: "10",\n      label: "OSS"\n    }, {\n      id: "6",\n      label: "MUI",\n      children: [{\n        id: "8",\n        label: "index.js"\n      }]\n    }]\n  }];\n  return /*#__PURE__*/React.createElement(TreeView, {\n    nodes: nodes\n  });\n};\nexport var MultiSelection = () => {\n  var nodes = [{\n    id: "1",\n    label: "Applications",\n    children: [{\n      id: "2",\n      label: "Calendar"\n    }, {\n      id: "3",\n      label: "Chrome"\n    }, {\n      id: "4",\n      label: "Webstorm"\n    }]\n  }, {\n    id: "5",\n    label: "Documents",\n    children: [{\n      id: "6",\n      label: "MUI",\n      children: [{\n        id: "7",\n        label: "src",\n        children: [{\n          id: "8",\n          label: "index.js"\n        }, {\n          id: "9",\n          label: "tree-view.js"\n        }]\n      }]\n    }]\n  }];\n  var [expanded, setExpanded] = React.useState([]);\n  var [selected, setSelected] = React.useState([]);\n  var handleExpandClick = () => {\n    setExpanded(oldExpanded => oldExpanded.length === 0 ? ["1", "5", "6", "7"] : []);\n  };\n  var handleSelectClick = () => {\n    setSelected(oldSelected => oldSelected.length === 0 ? ["1", "2", "3", "4", "5", "6", "7", "8", "9"] : []);\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      height: 270,\n      flexGrow: 1,\n      maxWidth: 400,\n      overflowY: "auto"\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      mb: 1\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleExpandClick\n  }, expanded.length === 0 ? "Expand all" : "Collapse all"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSelectClick\n  }, selected.length === 0 ? "Select all" : "Unselect all")), /*#__PURE__*/React.createElement(TreeView, {\n    nodes: nodes,\n    expandedIds: expanded,\n    selectedIds: selected,\n    onExpended: setExpanded,\n    onSelected: setSelected,\n    multiSelect: true\n  }));\n};\nexport var GmailCloneStyles = () => {\n  var nodes = [{\n    id: "1",\n    label: "All Mail",\n    icon: "Mail"\n  }, {\n    id: "2",\n    label: "Trash",\n    icon: "Delete"\n  }, {\n    id: "3",\n    label: "Categories",\n    icon: "Label",\n    children: [{\n      id: "5",\n      label: "Social",\n      icon: "SupervisorAccount",\n      info: "90",\n      color: "#1a73e8",\n      bgColor: "#e8f0fe"\n    }, {\n      id: "6",\n      label: "Updates",\n      icon: "Info",\n      info: "2,294",\n      color: "#e3742f",\n      bgColor: "#fcefe3"\n    }, {\n      id: "7",\n      label: "Forums",\n      icon: "Forum",\n      info: "3,566",\n      color: "#a250f5",\n      bgColor: "#f3e8fd"\n    }, {\n      id: "8",\n      label: "Promotions",\n      icon: "LocalOffer",\n      info: "733",\n      color: "#3c8039",\n      bgColor: "#e6f4ea"\n    }]\n  }, {\n    id: "4",\n    label: "History",\n    icon: "Label"\n  }];\n  var [expanded, setExpanded] = React.useState(["3"]);\n  var [selected, setSelected] = React.useState([]);\n  return /*#__PURE__*/React.createElement(TreeView, _objectSpread({\n    nodes: nodes,\n    expandedIds: expanded,\n    selectedIds: selected,\n    onExpended: setExpanded,\n    onSelected: setSelected,\n    TreeItemComponent: LabelIconTreeItem\n  }, LabelIconTreeItemIcons));\n};\nexport var IndentBorderStyles = () => {\n  var nodes = [{\n    id: "1",\n    label: "Main",\n    children: [{\n      id: "2",\n      label: "Hello"\n    }, {\n      id: "3",\n      label: "Subtree with children",\n      children: [{\n        id: "6",\n        label: "Hello"\n      }, {\n        id: "7",\n        label: "Sub-subtree with children",\n        children: [{\n          id: "9",\n          label: "Child 1"\n        }, {\n          id: "10",\n          label: "Child 2"\n        }, {\n          id: "11",\n          label: "Child 3"\n        }]\n      }, {\n        id: "8",\n        label: "Hello"\n      }]\n    }, {\n      id: "4",\n      label: "World"\n    }, {\n      id: "5",\n      label: "Something something"\n    }]\n  }];\n  var [expanded, setExpanded] = React.useState(["1"]);\n  var [selected, setSelected] = React.useState([]);\n  return /*#__PURE__*/React.createElement(TreeView, _objectSpread({\n    nodes: nodes,\n    expandedIds: expanded,\n    selectedIds: selected,\n    onExpended: setExpanded,\n    onSelected: setSelected,\n    TreeItemComponent: IndentBorderTreeItem\n  }, IndentBorderTreeItemIcons));\n};\nvar StyledTreeItemContent = props => {\n  var {\n    nodeId,\n    icon: labelIcon,\n    info: labelInfo,\n    label: labelText,\n    selected\n  } = props !== null && props !== void 0 ? props : {};\n  return props && /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: "flex",\n      alignItems: "center",\n      p: 0.5,\n      pr: 0\n    }\n  }, labelIcon && /*#__PURE__*/React.createElement(Box, {\n    color: "inherit",\n    sx: {\n      mr: 1,\n      display: "flex",\n      alignItems: "center"\n    }\n  }, /*#__PURE__*/React.createElement(SVGIcon, {\n    muiIconName: labelIcon\n  }, labelIcon)), labelText && /*#__PURE__*/React.createElement(Typography, {\n    variant: "body2",\n    sx: {\n      fontWeight: "inherit",\n      flexGrow: 1,\n      bgColor: selected ? "red" : undefined\n    }\n  }, labelText, " (", nodeId, ")"), labelInfo && /*#__PURE__*/React.createElement(Typography, {\n    variant: "caption",\n    color: "inherit"\n  }, labelInfo));\n};\nexport var CustomItem = () => {\n  var nodes = [{\n    id: "1",\n    label: "Main",\n    icon: "Home",\n    info: "test",\n    // color: "red",\n    // bgColor: "yellow",\n    children: [{\n      id: "2",\n      label: "Hello"\n    }, {\n      id: "3",\n      label: "Subtree with children",\n      children: [{\n        id: "6",\n        label: "Hello"\n      }, {\n        id: "7",\n        label: "Sub-subtree with children",\n        children: [{\n          id: "9",\n          label: "Child 1"\n        }, {\n          id: "10",\n          label: "Child 2"\n        }, {\n          id: "11",\n          label: "Child 3"\n        }]\n      }, {\n        id: "8",\n        label: "Hello"\n      }]\n    }, {\n      id: "4",\n      label: "World"\n    }, {\n      id: "5",\n      label: "Something something"\n    }]\n  }];\n  var [expanded, setExpanded] = React.useState(["1"]);\n  var [selected, setSelected] = React.useState([]);\n  return /*#__PURE__*/React.createElement(TreeView, {\n    nodes: nodes,\n    expandedIds: expanded,\n    selectedIds: selected,\n    onExpended: setExpanded,\n    onSelected: setSelected,\n    TransitionComponent: null,\n    LabelComponent: StyledTreeItemContent\n  });\n};\nDefault.parameters = _objectSpread(_objectSpread({}, Default.parameters), {}, {\n  docs: _objectSpread(_objectSpread({}, (_Default$parameters = Default.parameters) === null || _Default$parameters === void 0 ? void 0 : _Default$parameters.docs), {}, {\n    source: _objectSpread({\n      originalSource: "() => {\\n  return <TreeView {...actions} />;\\n}"\n    }, (_Default$parameters2 = Default.parameters) === null || _Default$parameters2 === void 0 ? void 0 : (_Default$parameters2$ = _Default$parameters2.docs) === null || _Default$parameters2$ === void 0 ? void 0 : _Default$parameters2$.source)\n  })\n});\nBasicTreeView.parameters = _objectSpread(_objectSpread({}, BasicTreeView.parameters), {}, {\n  docs: _objectSpread(_objectSpread({}, (_BasicTreeView$parame = BasicTreeView.parameters) === null || _BasicTreeView$parame === void 0 ? void 0 : _BasicTreeView$parame.docs), {}, {\n    source: _objectSpread({\n      originalSource: "() => {\\n  const nodes = [{\\n    id: \\"1\\",\\n    label: \\"Applications\\",\\n    children: [{\\n      id: \\"2\\",\\n      label: \\"Calendar\\"\\n    }]\\n  }, {\\n    id: \\"5\\",\\n    label: \\"Documents\\",\\n    children: [{\\n      id: \\"10\\",\\n      label: \\"OSS\\"\\n    }, {\\n      id: \\"6\\",\\n      label: \\"MUI\\",\\n      children: [{\\n        id: \\"8\\",\\n        label: \\"index.js\\"\\n      }]\\n    }]\\n  }];\\n  return <TreeView nodes={nodes} />;\\n}"\n    }, (_BasicTreeView$parame2 = BasicTreeView.parameters) === null || _BasicTreeView$parame2 === void 0 ? void 0 : (_BasicTreeView$parame3 = _BasicTreeView$parame2.docs) === null || _BasicTreeView$parame3 === void 0 ? void 0 : _BasicTreeView$parame3.source)\n  })\n});\nMultiSelection.parameters = _objectSpread(_objectSpread({}, MultiSelection.parameters), {}, {\n  docs: _objectSpread(_objectSpread({}, (_MultiSelection$param = MultiSelection.parameters) === null || _MultiSelection$param === void 0 ? void 0 : _MultiSelection$param.docs), {}, {\n    source: _objectSpread({\n      originalSource: "() => {\\n  const nodes = [{\\n    id: \\"1\\",\\n    label: \\"Applications\\",\\n    children: [{\\n      id: \\"2\\",\\n      label: \\"Calendar\\"\\n    }, {\\n      id: \\"3\\",\\n      label: \\"Chrome\\"\\n    }, {\\n      id: \\"4\\",\\n      label: \\"Webstorm\\"\\n    }]\\n  }, {\\n    id: \\"5\\",\\n    label: \\"Documents\\",\\n    children: [{\\n      id: \\"6\\",\\n      label: \\"MUI\\",\\n      children: [{\\n        id: \\"7\\",\\n        label: \\"src\\",\\n        children: [{\\n          id: \\"8\\",\\n          label: \\"index.js\\"\\n        }, {\\n          id: \\"9\\",\\n          label: \\"tree-view.js\\"\\n        }]\\n      }]\\n    }]\\n  }];\\n  const [expanded, setExpanded] = React.useState([]);\\n  const [selected, setSelected] = React.useState([]);\\n  const handleExpandClick = () => {\\n    setExpanded(oldExpanded => oldExpanded.length === 0 ? [\\"1\\", \\"5\\", \\"6\\", \\"7\\"] : []);\\n  };\\n  const handleSelectClick = () => {\\n    setSelected(oldSelected => oldSelected.length === 0 ? [\\"1\\", \\"2\\", \\"3\\", \\"4\\", \\"5\\", \\"6\\", \\"7\\", \\"8\\", \\"9\\"] : []);\\n  };\\n  return <Box sx={{\\n    height: 270,\\n    flexGrow: 1,\\n    maxWidth: 400,\\n    overflowY: \\"auto\\"\\n  }}>\\n      <Box sx={{\\n      mb: 1\\n    }}>\\n        <Button onClick={handleExpandClick}>\\n          {expanded.length === 0 ? \\"Expand all\\" : \\"Collapse all\\"}\\n        </Button>\\n        <Button onClick={handleSelectClick}>\\n          {selected.length === 0 ? \\"Select all\\" : \\"Unselect all\\"}\\n        </Button>\\n      </Box>\\n\\n      <TreeView nodes={nodes} expandedIds={expanded} selectedIds={selected} onExpended={setExpanded} onSelected={setSelected} multiSelect />\\n    </Box>;\\n}"\n    }, (_MultiSelection$param2 = MultiSelection.parameters) === null || _MultiSelection$param2 === void 0 ? void 0 : (_MultiSelection$param3 = _MultiSelection$param2.docs) === null || _MultiSelection$param3 === void 0 ? void 0 : _MultiSelection$param3.source)\n  })\n});\nGmailCloneStyles.parameters = _objectSpread(_objectSpread({}, GmailCloneStyles.parameters), {}, {\n  docs: _objectSpread(_objectSpread({}, (_GmailCloneStyles$par = GmailCloneStyles.parameters) === null || _GmailCloneStyles$par === void 0 ? void 0 : _GmailCloneStyles$par.docs), {}, {\n    source: _objectSpread({\n      originalSource: "() => {\\n  const nodes = [{\\n    id: \\"1\\",\\n    label: \\"All Mail\\",\\n    icon: \\"Mail\\"\\n  }, {\\n    id: \\"2\\",\\n    label: \\"Trash\\",\\n    icon: \\"Delete\\"\\n  }, {\\n    id: \\"3\\",\\n    label: \\"Categories\\",\\n    icon: \\"Label\\",\\n    children: [{\\n      id: \\"5\\",\\n      label: \\"Social\\",\\n      icon: \\"SupervisorAccount\\",\\n      info: \\"90\\",\\n      color: \\"#1a73e8\\",\\n      bgColor: \\"#e8f0fe\\"\\n    }, {\\n      id: \\"6\\",\\n      label: \\"Updates\\",\\n      icon: \\"Info\\",\\n      info: \\"2,294\\",\\n      color: \\"#e3742f\\",\\n      bgColor: \\"#fcefe3\\"\\n    }, {\\n      id: \\"7\\",\\n      label: \\"Forums\\",\\n      icon: \\"Forum\\",\\n      info: \\"3,566\\",\\n      color: \\"#a250f5\\",\\n      bgColor: \\"#f3e8fd\\"\\n    }, {\\n      id: \\"8\\",\\n      label: \\"Promotions\\",\\n      icon: \\"LocalOffer\\",\\n      info: \\"733\\",\\n      color: \\"#3c8039\\",\\n      bgColor: \\"#e6f4ea\\"\\n    }]\\n  }, {\\n    id: \\"4\\",\\n    label: \\"History\\",\\n    icon: \\"Label\\"\\n  }];\\n  const [expanded, setExpanded] = React.useState([\\"3\\"]);\\n  const [selected, setSelected] = React.useState([]);\\n  return <TreeView nodes={nodes} expandedIds={expanded} selectedIds={selected} onExpended={setExpanded} onSelected={setSelected} TreeItemComponent={LabelIconTreeItem} {...LabelIconTreeItemIcons} />;\\n}"\n    }, (_GmailCloneStyles$par2 = GmailCloneStyles.parameters) === null || _GmailCloneStyles$par2 === void 0 ? void 0 : (_GmailCloneStyles$par3 = _GmailCloneStyles$par2.docs) === null || _GmailCloneStyles$par3 === void 0 ? void 0 : _GmailCloneStyles$par3.source)\n  })\n});\nIndentBorderStyles.parameters = _objectSpread(_objectSpread({}, IndentBorderStyles.parameters), {}, {\n  docs: _objectSpread(_objectSpread({}, (_IndentBorderStyles$p = IndentBorderStyles.parameters) === null || _IndentBorderStyles$p === void 0 ? void 0 : _IndentBorderStyles$p.docs), {}, {\n    source: _objectSpread({\n      originalSource: "() => {\\n  const nodes = [{\\n    id: \\"1\\",\\n    label: \\"Main\\",\\n    children: [{\\n      id: \\"2\\",\\n      label: \\"Hello\\"\\n    }, {\\n      id: \\"3\\",\\n      label: \\"Subtree with children\\",\\n      children: [{\\n        id: \\"6\\",\\n        label: \\"Hello\\"\\n      }, {\\n        id: \\"7\\",\\n        label: \\"Sub-subtree with children\\",\\n        children: [{\\n          id: \\"9\\",\\n          label: \\"Child 1\\"\\n        }, {\\n          id: \\"10\\",\\n          label: \\"Child 2\\"\\n        }, {\\n          id: \\"11\\",\\n          label: \\"Child 3\\"\\n        }]\\n      }, {\\n        id: \\"8\\",\\n        label: \\"Hello\\"\\n      }]\\n    }, {\\n      id: \\"4\\",\\n      label: \\"World\\"\\n    }, {\\n      id: \\"5\\",\\n      label: \\"Something something\\"\\n    }]\\n  }];\\n  const [expanded, setExpanded] = React.useState([\\"1\\"]);\\n  const [selected, setSelected] = React.useState([]);\\n  return <TreeView nodes={nodes} expandedIds={expanded} selectedIds={selected} onExpended={setExpanded} onSelected={setSelected} TreeItemComponent={IndentBorderTreeItem} {...IndentBorderTreeItemIcons} />;\\n}"\n    }, (_IndentBorderStyles$p2 = IndentBorderStyles.parameters) === null || _IndentBorderStyles$p2 === void 0 ? void 0 : (_IndentBorderStyles$p3 = _IndentBorderStyles$p2.docs) === null || _IndentBorderStyles$p3 === void 0 ? void 0 : _IndentBorderStyles$p3.source)\n  })\n});\nCustomItem.parameters = _objectSpread(_objectSpread({}, CustomItem.parameters), {}, {\n  docs: _objectSpread(_objectSpread({}, (_CustomItem$parameter = CustomItem.parameters) === null || _CustomItem$parameter === void 0 ? void 0 : _CustomItem$parameter.docs), {}, {\n    source: _objectSpread({\n      originalSource: "() => {\\n  const nodes = [{\\n    id: \\"1\\",\\n    label: \\"Main\\",\\n    icon: \\"Home\\",\\n    info: \\"test\\",\\n    // color: \\"red\\",\\n    // bgColor: \\"yellow\\",\\n    children: [{\\n      id: \\"2\\",\\n      label: \\"Hello\\"\\n    }, {\\n      id: \\"3\\",\\n      label: \\"Subtree with children\\",\\n      children: [{\\n        id: \\"6\\",\\n        label: \\"Hello\\"\\n      }, {\\n        id: \\"7\\",\\n        label: \\"Sub-subtree with children\\",\\n        children: [{\\n          id: \\"9\\",\\n          label: \\"Child 1\\"\\n        }, {\\n          id: \\"10\\",\\n          label: \\"Child 2\\"\\n        }, {\\n          id: \\"11\\",\\n          label: \\"Child 3\\"\\n        }]\\n      }, {\\n        id: \\"8\\",\\n        label: \\"Hello\\"\\n      }]\\n    }, {\\n      id: \\"4\\",\\n      label: \\"World\\"\\n    }, {\\n      id: \\"5\\",\\n      label: \\"Something something\\"\\n    }]\\n  }];\\n  const [expanded, setExpanded] = React.useState([\\"1\\"]);\\n  const [selected, setSelected] = React.useState([]);\\n  return <TreeView nodes={nodes} expandedIds={expanded} selectedIds={selected} onExpended={setExpanded} onSelected={setSelected} TransitionComponent={null} LabelComponent={StyledTreeItemContent} />;\\n}"\n    }, (_CustomItem$parameter2 = CustomItem.parameters) === null || _CustomItem$parameter2 === void 0 ? void 0 : (_CustomItem$parameter3 = _CustomItem$parameter2.docs) === null || _CustomItem$parameter3 === void 0 ? void 0 : _CustomItem$parameter3.source)\n  })\n});',locationsMap:{default:{startLoc:{col:21,line:23},endLoc:{col:1,line:25},startBody:{col:21,line:23},endBody:{col:1,line:25}},"basic-tree-view":{startLoc:{col:27,line:26},endLoc:{col:1,line:52},startBody:{col:27,line:26},endBody:{col:1,line:52}},"multi-selection":{startLoc:{col:28,line:53},endLoc:{col:1,line:117},startBody:{col:28,line:53},endBody:{col:1,line:117}},"gmail-clone-styles":{startLoc:{col:30,line:118},endLoc:{col:1,line:175},startBody:{col:30,line:118},endBody:{col:1,line:175}},"indent-border-styles":{startLoc:{col:32,line:176},endLoc:{col:1,line:224},startBody:{col:32,line:176},endBody:{col:1,line:224}},"custom-item":{startLoc:{col:24,line:261},endLoc:{col:1,line:314},startBody:{col:24,line:261},endBody:{col:1,line:314}}}}},title:"Lab/TreeView",component:TreeView_TreeView};var actions={onClick:(0,dist.aD)("onClick")},Default=()=>react.createElement(TreeView_TreeView,TreeView_stories_objectSpread({},actions)),BasicTreeView=()=>react.createElement(TreeView_TreeView,{nodes:[{id:"1",label:"Applications",children:[{id:"2",label:"Calendar"}]},{id:"5",label:"Documents",children:[{id:"10",label:"OSS"},{id:"6",label:"MUI",children:[{id:"8",label:"index.js"}]}]}]}),MultiSelection=()=>{var[expanded,setExpanded]=react.useState([]),[selected,setSelected]=react.useState([]);return react.createElement(Box.Z,{sx:{height:270,flexGrow:1,maxWidth:400,overflowY:"auto"}},react.createElement(Box.Z,{sx:{mb:1}},react.createElement(Button.Z,{onClick:()=>{setExpanded((oldExpanded=>0===oldExpanded.length?["1","5","6","7"]:[]))}},0===expanded.length?"Expand all":"Collapse all"),react.createElement(Button.Z,{onClick:()=>{setSelected((oldSelected=>0===oldSelected.length?["1","2","3","4","5","6","7","8","9"]:[]))}},0===selected.length?"Select all":"Unselect all")),react.createElement(TreeView_TreeView,{nodes:[{id:"1",label:"Applications",children:[{id:"2",label:"Calendar"},{id:"3",label:"Chrome"},{id:"4",label:"Webstorm"}]},{id:"5",label:"Documents",children:[{id:"6",label:"MUI",children:[{id:"7",label:"src",children:[{id:"8",label:"index.js"},{id:"9",label:"tree-view.js"}]}]}]}],expandedIds:expanded,selectedIds:selected,onExpended:setExpanded,onSelected:setSelected,multiSelect:!0}))},GmailCloneStyles=()=>{var[expanded,setExpanded]=react.useState(["3"]),[selected,setSelected]=react.useState([]);return react.createElement(TreeView_TreeView,TreeView_stories_objectSpread({nodes:[{id:"1",label:"All Mail",icon:"Mail"},{id:"2",label:"Trash",icon:"Delete"},{id:"3",label:"Categories",icon:"Label",children:[{id:"5",label:"Social",icon:"SupervisorAccount",info:"90",color:"#1a73e8",bgColor:"#e8f0fe"},{id:"6",label:"Updates",icon:"Info",info:"2,294",color:"#e3742f",bgColor:"#fcefe3"},{id:"7",label:"Forums",icon:"Forum",info:"3,566",color:"#a250f5",bgColor:"#f3e8fd"},{id:"8",label:"Promotions",icon:"LocalOffer",info:"733",color:"#3c8039",bgColor:"#e6f4ea"}]},{id:"4",label:"History",icon:"Label"}],expandedIds:expanded,selectedIds:selected,onExpended:setExpanded,onSelected:setSelected,TreeItemComponent:TreeItemComponents_LabelIconTreeItem},LabelIconTreeItemIcons))},IndentBorderStyles=()=>{var[expanded,setExpanded]=react.useState(["1"]),[selected,setSelected]=react.useState([]);return react.createElement(TreeView_TreeView,TreeView_stories_objectSpread({nodes:[{id:"1",label:"Main",children:[{id:"2",label:"Hello"},{id:"3",label:"Subtree with children",children:[{id:"6",label:"Hello"},{id:"7",label:"Sub-subtree with children",children:[{id:"9",label:"Child 1"},{id:"10",label:"Child 2"},{id:"11",label:"Child 3"}]},{id:"8",label:"Hello"}]},{id:"4",label:"World"},{id:"5",label:"Something something"}]}],expandedIds:expanded,selectedIds:selected,onExpended:setExpanded,onSelected:setSelected,TreeItemComponent:TreeItemComponents_IndentBorderTreeItem},IndentBorderTreeItemIcons))},StyledTreeItemContent=props=>{var{nodeId,icon:labelIcon,info:labelInfo,label:labelText,selected}=null!=props?props:{};return props&&react.createElement(Box.Z,{sx:{display:"flex",alignItems:"center",p:.5,pr:0}},labelIcon&&react.createElement(Box.Z,{color:"inherit",sx:{mr:1,display:"flex",alignItems:"center"}},react.createElement(SVGIcon.Z,{muiIconName:labelIcon},labelIcon)),labelText&&react.createElement(Typography.Z,{variant:"body2",sx:{fontWeight:"inherit",flexGrow:1,bgColor:selected?"red":void 0}},labelText," (",nodeId,")"),labelInfo&&react.createElement(Typography.Z,{variant:"caption",color:"inherit"},labelInfo))},CustomItem=()=>{var[expanded,setExpanded]=react.useState(["1"]),[selected,setSelected]=react.useState([]);return react.createElement(TreeView_TreeView,{nodes:[{id:"1",label:"Main",icon:"Home",info:"test",children:[{id:"2",label:"Hello"},{id:"3",label:"Subtree with children",children:[{id:"6",label:"Hello"},{id:"7",label:"Sub-subtree with children",children:[{id:"9",label:"Child 1"},{id:"10",label:"Child 2"},{id:"11",label:"Child 3"}]},{id:"8",label:"Hello"}]},{id:"4",label:"World"},{id:"5",label:"Something something"}]}],expandedIds:expanded,selectedIds:selected,onExpended:setExpanded,onSelected:setSelected,TransitionComponent:null,LabelComponent:StyledTreeItemContent})};Default.parameters=TreeView_stories_objectSpread(TreeView_stories_objectSpread({},Default.parameters),{},{docs:TreeView_stories_objectSpread(TreeView_stories_objectSpread({},null===(_Default$parameters=Default.parameters)||void 0===_Default$parameters?void 0:_Default$parameters.docs),{},{source:TreeView_stories_objectSpread({originalSource:"() => {\n  return <TreeView {...actions} />;\n}"},null===(_Default$parameters2=Default.parameters)||void 0===_Default$parameters2||null===(_Default$parameters2$=_Default$parameters2.docs)||void 0===_Default$parameters2$?void 0:_Default$parameters2$.source)})}),BasicTreeView.parameters=TreeView_stories_objectSpread(TreeView_stories_objectSpread({},BasicTreeView.parameters),{},{docs:TreeView_stories_objectSpread(TreeView_stories_objectSpread({},null===(_BasicTreeView$parame=BasicTreeView.parameters)||void 0===_BasicTreeView$parame?void 0:_BasicTreeView$parame.docs),{},{source:TreeView_stories_objectSpread({originalSource:'() => {\n  const nodes = [{\n    id: "1",\n    label: "Applications",\n    children: [{\n      id: "2",\n      label: "Calendar"\n    }]\n  }, {\n    id: "5",\n    label: "Documents",\n    children: [{\n      id: "10",\n      label: "OSS"\n    }, {\n      id: "6",\n      label: "MUI",\n      children: [{\n        id: "8",\n        label: "index.js"\n      }]\n    }]\n  }];\n  return <TreeView nodes={nodes} />;\n}'},null===(_BasicTreeView$parame2=BasicTreeView.parameters)||void 0===_BasicTreeView$parame2||null===(_BasicTreeView$parame3=_BasicTreeView$parame2.docs)||void 0===_BasicTreeView$parame3?void 0:_BasicTreeView$parame3.source)})}),MultiSelection.parameters=TreeView_stories_objectSpread(TreeView_stories_objectSpread({},MultiSelection.parameters),{},{docs:TreeView_stories_objectSpread(TreeView_stories_objectSpread({},null===(_MultiSelection$param=MultiSelection.parameters)||void 0===_MultiSelection$param?void 0:_MultiSelection$param.docs),{},{source:TreeView_stories_objectSpread({originalSource:'() => {\n  const nodes = [{\n    id: "1",\n    label: "Applications",\n    children: [{\n      id: "2",\n      label: "Calendar"\n    }, {\n      id: "3",\n      label: "Chrome"\n    }, {\n      id: "4",\n      label: "Webstorm"\n    }]\n  }, {\n    id: "5",\n    label: "Documents",\n    children: [{\n      id: "6",\n      label: "MUI",\n      children: [{\n        id: "7",\n        label: "src",\n        children: [{\n          id: "8",\n          label: "index.js"\n        }, {\n          id: "9",\n          label: "tree-view.js"\n        }]\n      }]\n    }]\n  }];\n  const [expanded, setExpanded] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const handleExpandClick = () => {\n    setExpanded(oldExpanded => oldExpanded.length === 0 ? ["1", "5", "6", "7"] : []);\n  };\n  const handleSelectClick = () => {\n    setSelected(oldSelected => oldSelected.length === 0 ? ["1", "2", "3", "4", "5", "6", "7", "8", "9"] : []);\n  };\n  return <Box sx={{\n    height: 270,\n    flexGrow: 1,\n    maxWidth: 400,\n    overflowY: "auto"\n  }}>\n      <Box sx={{\n      mb: 1\n    }}>\n        <Button onClick={handleExpandClick}>\n          {expanded.length === 0 ? "Expand all" : "Collapse all"}\n        </Button>\n        <Button onClick={handleSelectClick}>\n          {selected.length === 0 ? "Select all" : "Unselect all"}\n        </Button>\n      </Box>\n\n      <TreeView nodes={nodes} expandedIds={expanded} selectedIds={selected} onExpended={setExpanded} onSelected={setSelected} multiSelect />\n    </Box>;\n}'},null===(_MultiSelection$param2=MultiSelection.parameters)||void 0===_MultiSelection$param2||null===(_MultiSelection$param3=_MultiSelection$param2.docs)||void 0===_MultiSelection$param3?void 0:_MultiSelection$param3.source)})}),GmailCloneStyles.parameters=TreeView_stories_objectSpread(TreeView_stories_objectSpread({},GmailCloneStyles.parameters),{},{docs:TreeView_stories_objectSpread(TreeView_stories_objectSpread({},null===(_GmailCloneStyles$par=GmailCloneStyles.parameters)||void 0===_GmailCloneStyles$par?void 0:_GmailCloneStyles$par.docs),{},{source:TreeView_stories_objectSpread({originalSource:'() => {\n  const nodes = [{\n    id: "1",\n    label: "All Mail",\n    icon: "Mail"\n  }, {\n    id: "2",\n    label: "Trash",\n    icon: "Delete"\n  }, {\n    id: "3",\n    label: "Categories",\n    icon: "Label",\n    children: [{\n      id: "5",\n      label: "Social",\n      icon: "SupervisorAccount",\n      info: "90",\n      color: "#1a73e8",\n      bgColor: "#e8f0fe"\n    }, {\n      id: "6",\n      label: "Updates",\n      icon: "Info",\n      info: "2,294",\n      color: "#e3742f",\n      bgColor: "#fcefe3"\n    }, {\n      id: "7",\n      label: "Forums",\n      icon: "Forum",\n      info: "3,566",\n      color: "#a250f5",\n      bgColor: "#f3e8fd"\n    }, {\n      id: "8",\n      label: "Promotions",\n      icon: "LocalOffer",\n      info: "733",\n      color: "#3c8039",\n      bgColor: "#e6f4ea"\n    }]\n  }, {\n    id: "4",\n    label: "History",\n    icon: "Label"\n  }];\n  const [expanded, setExpanded] = React.useState(["3"]);\n  const [selected, setSelected] = React.useState([]);\n  return <TreeView nodes={nodes} expandedIds={expanded} selectedIds={selected} onExpended={setExpanded} onSelected={setSelected} TreeItemComponent={LabelIconTreeItem} {...LabelIconTreeItemIcons} />;\n}'},null===(_GmailCloneStyles$par2=GmailCloneStyles.parameters)||void 0===_GmailCloneStyles$par2||null===(_GmailCloneStyles$par3=_GmailCloneStyles$par2.docs)||void 0===_GmailCloneStyles$par3?void 0:_GmailCloneStyles$par3.source)})}),IndentBorderStyles.parameters=TreeView_stories_objectSpread(TreeView_stories_objectSpread({},IndentBorderStyles.parameters),{},{docs:TreeView_stories_objectSpread(TreeView_stories_objectSpread({},null===(_IndentBorderStyles$p=IndentBorderStyles.parameters)||void 0===_IndentBorderStyles$p?void 0:_IndentBorderStyles$p.docs),{},{source:TreeView_stories_objectSpread({originalSource:'() => {\n  const nodes = [{\n    id: "1",\n    label: "Main",\n    children: [{\n      id: "2",\n      label: "Hello"\n    }, {\n      id: "3",\n      label: "Subtree with children",\n      children: [{\n        id: "6",\n        label: "Hello"\n      }, {\n        id: "7",\n        label: "Sub-subtree with children",\n        children: [{\n          id: "9",\n          label: "Child 1"\n        }, {\n          id: "10",\n          label: "Child 2"\n        }, {\n          id: "11",\n          label: "Child 3"\n        }]\n      }, {\n        id: "8",\n        label: "Hello"\n      }]\n    }, {\n      id: "4",\n      label: "World"\n    }, {\n      id: "5",\n      label: "Something something"\n    }]\n  }];\n  const [expanded, setExpanded] = React.useState(["1"]);\n  const [selected, setSelected] = React.useState([]);\n  return <TreeView nodes={nodes} expandedIds={expanded} selectedIds={selected} onExpended={setExpanded} onSelected={setSelected} TreeItemComponent={IndentBorderTreeItem} {...IndentBorderTreeItemIcons} />;\n}'},null===(_IndentBorderStyles$p2=IndentBorderStyles.parameters)||void 0===_IndentBorderStyles$p2||null===(_IndentBorderStyles$p3=_IndentBorderStyles$p2.docs)||void 0===_IndentBorderStyles$p3?void 0:_IndentBorderStyles$p3.source)})}),CustomItem.parameters=TreeView_stories_objectSpread(TreeView_stories_objectSpread({},CustomItem.parameters),{},{docs:TreeView_stories_objectSpread(TreeView_stories_objectSpread({},null===(_CustomItem$parameter=CustomItem.parameters)||void 0===_CustomItem$parameter?void 0:_CustomItem$parameter.docs),{},{source:TreeView_stories_objectSpread({originalSource:'() => {\n  const nodes = [{\n    id: "1",\n    label: "Main",\n    icon: "Home",\n    info: "test",\n    // color: "red",\n    // bgColor: "yellow",\n    children: [{\n      id: "2",\n      label: "Hello"\n    }, {\n      id: "3",\n      label: "Subtree with children",\n      children: [{\n        id: "6",\n        label: "Hello"\n      }, {\n        id: "7",\n        label: "Sub-subtree with children",\n        children: [{\n          id: "9",\n          label: "Child 1"\n        }, {\n          id: "10",\n          label: "Child 2"\n        }, {\n          id: "11",\n          label: "Child 3"\n        }]\n      }, {\n        id: "8",\n        label: "Hello"\n      }]\n    }, {\n      id: "4",\n      label: "World"\n    }, {\n      id: "5",\n      label: "Something something"\n    }]\n  }];\n  const [expanded, setExpanded] = React.useState(["1"]);\n  const [selected, setSelected] = React.useState([]);\n  return <TreeView nodes={nodes} expandedIds={expanded} selectedIds={selected} onExpended={setExpanded} onSelected={setSelected} TransitionComponent={null} LabelComponent={StyledTreeItemContent} />;\n}'},null===(_CustomItem$parameter2=CustomItem.parameters)||void 0===_CustomItem$parameter2||null===(_CustomItem$parameter3=_CustomItem$parameter2.docs)||void 0===_CustomItem$parameter3?void 0:_CustomItem$parameter3.source)})});var __namedExportsOrder=["Default","BasicTreeView","MultiSelection","GmailCloneStyles","IndentBorderStyles","CustomItem"]}}]);