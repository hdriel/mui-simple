"use strict";(self.webpackChunk_hdriel_mui_simple=self.webpackChunk_hdriel_mui_simple||[]).push([[2354],{"./src/components/List/__stories__/CheckList.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CheckboxListAlignEnd:()=>CheckboxListAlignEnd,CheckboxListAlignStart:()=>CheckboxListAlignStart,Default:()=>Default,SwitchListAlignEnd:()=>SwitchListAlignEnd,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_icons_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mui/icons-material/esm/Wifi.js"),_mui_icons_material__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/icons-material/esm/Bluetooth.js"),_CheckList__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/List/CheckList.tsx");const __WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:'var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\nimport React from "react";\nimport { Wifi as WifiIcon, Bluetooth as BluetoothIcon } from "@mui/icons-material";\nimport CheckList from "../CheckList";\nexport default {\n  title: "Data-Display/CheckList",\n  component: CheckList,\n  decorators: [Story => /*#__PURE__*/React.createElement("div", {\n    style: {\n      width: "400px",\n      height: "500px",\n      padding: "0.5em",\n      backgroundColor: "#E7EBF0"\n    }\n  }, /*#__PURE__*/React.createElement(Story, null))]\n};\nexport var Default = () => {\n  return /*#__PURE__*/React.createElement(CheckList, null);\n};\nexport var CheckboxListAlignStart = () => {\n  var items = [{\n    title: "Line item 1",\n    checked: true\n  }, {\n    title: "Line item 2",\n    checked: false\n  }, {\n    divider: true\n  }, {\n    title: "Line item 3"\n  }, "Line item 4"];\n  return /*#__PURE__*/React.createElement(CheckList, {\n    items: items,\n    alignCheck: "start",\n    controlType: "checkbox",\n    sx: {\n      minWidth: 35\n    }\n  });\n};\nexport var CheckboxListAlignEnd = () => {\n  var items = [{\n    checked: true,\n    avatar: {\n      image: "1.jpg"\n    },\n    title: "Line item 1"\n  }, {\n    checked: false,\n    avatar: {\n      image: "2.jpg"\n    },\n    title: "Line item 2"\n  }, {\n    avatar: {\n      image: "3.jpg"\n    },\n    title: "Line item 3"\n  }, {\n    divider: true\n  }, "Line item 4", {\n    title: "Line item 5",\n    subtitle: "inset title",\n    inset: true\n  }];\n  return /*#__PURE__*/React.createElement(CheckList, {\n    items: items,\n    alignCheck: "end",\n    controlType: "checkbox"\n  });\n};\nexport var SwitchListAlignEnd = () => {\n  var items = [{\n    checked: true,\n    startIcon: /*#__PURE__*/React.createElement(WifiIcon, null),\n    title: "Wi-Fi"\n  }, {\n    startIcon: /*#__PURE__*/React.createElement(BluetoothIcon, null),\n    title: "Bluetooth"\n  }];\n  return /*#__PURE__*/React.createElement(CheckList, {\n    buttonItems: false,\n    disablePaddingItems: false,\n    title: "Setting",\n    items: items,\n    alignCheck: "end",\n    controlType: "switch"\n  });\n};\nDefault.parameters = Object.assign(Object.assign({}, Default.parameters), {\n  docs: Object.assign(Object.assign({}, (_a = Default.parameters) === null || _a === void 0 ? void 0 : _a.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  return <CheckList />;\\n}"\n    }, (_c = (_b = Default.parameters) === null || _b === void 0 ? void 0 : _b.docs) === null || _c === void 0 ? void 0 : _c.source)\n  })\n});\nCheckboxListAlignStart.parameters = Object.assign(Object.assign({}, CheckboxListAlignStart.parameters), {\n  docs: Object.assign(Object.assign({}, (_d = CheckboxListAlignStart.parameters) === null || _d === void 0 ? void 0 : _d.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  const items = [{\\n    title: \\"Line item 1\\",\\n    checked: true\\n  }, {\\n    title: \\"Line item 2\\",\\n    checked: false\\n  }, {\\n    divider: true\\n  }, {\\n    title: \\"Line item 3\\"\\n  }, \\"Line item 4\\"];\\n  return <CheckList items={items} alignCheck=\\"start\\" controlType=\\"checkbox\\" sx={{\\n    minWidth: 35\\n  }} />;\\n}"\n    }, (_f = (_e = CheckboxListAlignStart.parameters) === null || _e === void 0 ? void 0 : _e.docs) === null || _f === void 0 ? void 0 : _f.source)\n  })\n});\nCheckboxListAlignEnd.parameters = Object.assign(Object.assign({}, CheckboxListAlignEnd.parameters), {\n  docs: Object.assign(Object.assign({}, (_g = CheckboxListAlignEnd.parameters) === null || _g === void 0 ? void 0 : _g.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  const items = [{\\n    checked: true,\\n    avatar: {\\n      image: \\"1.jpg\\"\\n    },\\n    title: \\"Line item 1\\"\\n  }, {\\n    checked: false,\\n    avatar: {\\n      image: \\"2.jpg\\"\\n    },\\n    title: \\"Line item 2\\"\\n  }, {\\n    avatar: {\\n      image: \\"3.jpg\\"\\n    },\\n    title: \\"Line item 3\\"\\n  }, {\\n    divider: true\\n  }, \\"Line item 4\\", {\\n    title: \\"Line item 5\\",\\n    subtitle: \\"inset title\\",\\n    inset: true\\n  }];\\n  return <CheckList items={items} alignCheck=\\"end\\" controlType=\\"checkbox\\" />;\\n}"\n    }, (_j = (_h = CheckboxListAlignEnd.parameters) === null || _h === void 0 ? void 0 : _h.docs) === null || _j === void 0 ? void 0 : _j.source)\n  })\n});\nSwitchListAlignEnd.parameters = Object.assign(Object.assign({}, SwitchListAlignEnd.parameters), {\n  docs: Object.assign(Object.assign({}, (_k = SwitchListAlignEnd.parameters) === null || _k === void 0 ? void 0 : _k.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  const items = [{\\n    checked: true,\\n    startIcon: <WifiIcon />,\\n    title: \\"Wi-Fi\\"\\n  }, {\\n    startIcon: <BluetoothIcon />,\\n    title: \\"Bluetooth\\"\\n  }];\\n  return <CheckList buttonItems={false} disablePaddingItems={false} title=\\"Setting\\" items={items} alignCheck=\\"end\\" controlType=\\"switch\\" />;\\n}"\n    }, (_m = (_l = SwitchListAlignEnd.parameters) === null || _l === void 0 ? void 0 : _l.docs) === null || _m === void 0 ? void 0 : _m.source)\n  })\n});',locationsMap:{default:{startLoc:{col:21,line:17},endLoc:{col:1,line:19},startBody:{col:21,line:17},endBody:{col:1,line:19}},"checkbox-list-align-start":{startLoc:{col:36,line:20},endLoc:{col:1,line:40},startBody:{col:36,line:20},endBody:{col:1,line:40}},"checkbox-list-align-end":{startLoc:{col:34,line:41},endLoc:{col:1,line:71},startBody:{col:34,line:41},endBody:{col:1,line:71}},"switch-list-align-end":{startLoc:{col:32,line:72},endLoc:{col:1,line:89},startBody:{col:32,line:72},endBody:{col:1,line:89}}}}},title:"Data-Display/CheckList",component:_CheckList__WEBPACK_IMPORTED_MODULE_1__.Z,decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"400px",height:"500px",padding:"0.5em",backgroundColor:"#E7EBF0"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]};var Default=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CheckList__WEBPACK_IMPORTED_MODULE_1__.Z,null),CheckboxListAlignStart=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CheckList__WEBPACK_IMPORTED_MODULE_1__.Z,{items:[{title:"Line item 1",checked:!0},{title:"Line item 2",checked:!1},{divider:!0},{title:"Line item 3"},"Line item 4"],alignCheck:"start",controlType:"checkbox",sx:{minWidth:35}}),CheckboxListAlignEnd=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CheckList__WEBPACK_IMPORTED_MODULE_1__.Z,{items:[{checked:!0,avatar:{image:"1.jpg"},title:"Line item 1"},{checked:!1,avatar:{image:"2.jpg"},title:"Line item 2"},{avatar:{image:"3.jpg"},title:"Line item 3"},{divider:!0},"Line item 4",{title:"Line item 5",subtitle:"inset title",inset:!0}],alignCheck:"end",controlType:"checkbox"}),SwitchListAlignEnd=()=>{var items=[{checked:!0,startIcon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_2__.Z,null),title:"Wi-Fi"},{startIcon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_3__.Z,null),title:"Bluetooth"}];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CheckList__WEBPACK_IMPORTED_MODULE_1__.Z,{buttonItems:!1,disablePaddingItems:!1,title:"Setting",items,alignCheck:"end",controlType:"switch"})};Default.parameters=Object.assign(Object.assign({},Default.parameters),{docs:Object.assign(Object.assign({},null===(_a=Default.parameters)||void 0===_a?void 0:_a.docs),{source:Object.assign({originalSource:"() => {\n  return <CheckList />;\n}"},null===(_c=null===(_b=Default.parameters)||void 0===_b?void 0:_b.docs)||void 0===_c?void 0:_c.source)})}),CheckboxListAlignStart.parameters=Object.assign(Object.assign({},CheckboxListAlignStart.parameters),{docs:Object.assign(Object.assign({},null===(_d=CheckboxListAlignStart.parameters)||void 0===_d?void 0:_d.docs),{source:Object.assign({originalSource:'() => {\n  const items = [{\n    title: "Line item 1",\n    checked: true\n  }, {\n    title: "Line item 2",\n    checked: false\n  }, {\n    divider: true\n  }, {\n    title: "Line item 3"\n  }, "Line item 4"];\n  return <CheckList items={items} alignCheck="start" controlType="checkbox" sx={{\n    minWidth: 35\n  }} />;\n}'},null===(_f=null===(_e=CheckboxListAlignStart.parameters)||void 0===_e?void 0:_e.docs)||void 0===_f?void 0:_f.source)})}),CheckboxListAlignEnd.parameters=Object.assign(Object.assign({},CheckboxListAlignEnd.parameters),{docs:Object.assign(Object.assign({},null===(_g=CheckboxListAlignEnd.parameters)||void 0===_g?void 0:_g.docs),{source:Object.assign({originalSource:'() => {\n  const items = [{\n    checked: true,\n    avatar: {\n      image: "1.jpg"\n    },\n    title: "Line item 1"\n  }, {\n    checked: false,\n    avatar: {\n      image: "2.jpg"\n    },\n    title: "Line item 2"\n  }, {\n    avatar: {\n      image: "3.jpg"\n    },\n    title: "Line item 3"\n  }, {\n    divider: true\n  }, "Line item 4", {\n    title: "Line item 5",\n    subtitle: "inset title",\n    inset: true\n  }];\n  return <CheckList items={items} alignCheck="end" controlType="checkbox" />;\n}'},null===(_j=null===(_h=CheckboxListAlignEnd.parameters)||void 0===_h?void 0:_h.docs)||void 0===_j?void 0:_j.source)})}),SwitchListAlignEnd.parameters=Object.assign(Object.assign({},SwitchListAlignEnd.parameters),{docs:Object.assign(Object.assign({},null===(_k=SwitchListAlignEnd.parameters)||void 0===_k?void 0:_k.docs),{source:Object.assign({originalSource:'() => {\n  const items = [{\n    checked: true,\n    startIcon: <WifiIcon />,\n    title: "Wi-Fi"\n  }, {\n    startIcon: <BluetoothIcon />,\n    title: "Bluetooth"\n  }];\n  return <CheckList buttonItems={false} disablePaddingItems={false} title="Setting" items={items} alignCheck="end" controlType="switch" />;\n}'},null===(_m=null===(_l=SwitchListAlignEnd.parameters)||void 0===_l?void 0:_l.docs)||void 0===_m?void 0:_m.source)})});var __namedExportsOrder=["Default","CheckboxListAlignStart","CheckboxListAlignEnd","SwitchListAlignEnd"]}}]);