"use strict";(self.webpackChunk_hdriel_mui_simple=self.webpackChunk_hdriel_mui_simple||[]).push([[8015],{"./node_modules/@mui/icons-material/AlternateEmail.js":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");exports.Z=void 0;var _createSvgIcon=_interopRequireDefault(__webpack_require__("./node_modules/@mui/icons-material/utils/createSvgIcon.js")),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_default=(0,_createSvgIcon.default)((0,_jsxRuntime.jsx)("path",{d:"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10h5v-2h-5c-4.34 0-8-3.66-8-8s3.66-8 8-8 8 3.66 8 8v1.43c0 .79-.71 1.57-1.5 1.57s-1.5-.78-1.5-1.57V12c0-2.76-2.24-5-5-5s-5 2.24-5 5 2.24 5 5 5c1.38 0 2.64-.56 3.54-1.47.65.89 1.77 1.47 2.96 1.47 1.97 0 3.5-1.6 3.5-3.57V12c0-5.52-4.48-10-10-10zm0 13c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"}),"AlternateEmail");exports.Z=_default},"./node_modules/@mui/icons-material/MarkEmailRead.js":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");exports.Z=void 0;var _createSvgIcon=_interopRequireDefault(__webpack_require__("./node_modules/@mui/icons-material/utils/createSvgIcon.js")),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_default=(0,_createSvgIcon.default)((0,_jsxRuntime.jsx)("path",{d:"M12 19c0-3.87 3.13-7 7-7 1.08 0 2.09.25 3 .68V6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h8.08c-.05-.33-.08-.66-.08-1zM4 6l8 5 8-5v2l-8 5-8-5V6zm13.34 16-3.54-3.54 1.41-1.41 2.12 2.12 4.24-4.24L23 16.34 17.34 22z"}),"MarkEmailRead");exports.Z=_default},"./src/components/TextField/__stories__/InputEmail.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CmpEmail:()=>CmpEmail,Default:()=>Default,Email:()=>Email,__namedExportsOrder:()=>__namedExportsOrder,default:()=>InputEmail_stories});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),TextField=__webpack_require__("./src/components/TextField/TextField.tsx"),__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};function InputEmail(_a){var{value,hideCmpOnEmpty,startCmp,endCmp}=_a,props=__rest(_a,["value","hideCmpOnEmpty","startCmp","endCmp"]);return react.createElement(TextField.Z,Object.assign({},props,{value,startCmp:hideCmpOnEmpty&&!value?"":startCmp,endCmp:hideCmpOnEmpty&&!value?"":endCmp,type:"email"}))}InputEmail.propTypes={value:prop_types_default().string,placeholder:prop_types_default().string,hideCmpOnEmpty:prop_types_default().bool},InputEmail.defaultProps={value:void 0,placeholder:"Email",hideCmpOnEmpty:!0};try{InputEmail.displayName="InputEmail",InputEmail.__docgenInfo={description:"",displayName:"InputEmail",props:{value:{defaultValue:{value:"undefined"},description:"",name:"value",required:!1,type:{name:"any"}},hideCmpOnEmpty:{defaultValue:{value:"true"},description:"",name:"hideCmpOnEmpty",required:!1,type:{name:"any"}},startCmp:{defaultValue:null,description:"",name:"startCmp",required:!0,type:{name:"any"}},endCmp:{defaultValue:null,description:"",name:"endCmp",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TextField/InputEmail.tsx#InputEmail"]={docgenInfo:InputEmail.__docgenInfo,name:"InputEmail",path:"src/components/TextField/InputEmail.tsx#InputEmail"})}catch(__react_docgen_typescript_loader_error){}var _a,_b,_c,_d,_e,_f,_g,_h,_j,Stack=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),AlternateEmail=__webpack_require__("./node_modules/@mui/icons-material/AlternateEmail.js"),MarkEmailRead=__webpack_require__("./node_modules/@mui/icons-material/MarkEmailRead.js");const InputEmail_stories={parameters:{storySource:{source:'var _a, _b, _c, _d, _e, _f, _g, _h, _j;\nimport React, { useState } from "react";\nimport InputEmail from "../InputEmail";\nimport { Stack } from "@mui/material";\nimport AlternateEmailIcon from "@mui/icons-material/AlternateEmail";\nimport MarkEmailReadIcon from "@mui/icons-material/MarkEmailRead";\nexport default {\n  title: "Inputs/Inputs/InputEmail",\n  component: InputEmail,\n  decorators: [Story => /*#__PURE__*/React.createElement("div", {\n    style: {\n      width: "450px",\n      padding: "1em",\n      border: "1px dashed black"\n    }\n  }, /*#__PURE__*/React.createElement(Story, null))]\n};\nexport const Default = () => {\n  return /*#__PURE__*/React.createElement(InputEmail, null);\n};\nexport const Email = () => {\n  const [value, setValue] = useState("test@test.com");\n  return /*#__PURE__*/React.createElement(Stack, {\n    spacing: 4\n  }, ["filled", "standard", "outlined"].map(variant => /*#__PURE__*/React.createElement(InputEmail, {\n    key: variant,\n    label: "Email",\n    value: value,\n    onChange: e => setValue(e.target.value),\n    variant: variant,\n    helperText: "please enter a valid email."\n  })));\n};\nexport const CmpEmail = () => {\n  const [value, setValue] = useState();\n  return /*#__PURE__*/React.createElement(Stack, {\n    spacing: 4\n  }, ["filled", "standard", "outlined"].map(variant => /*#__PURE__*/React.createElement(InputEmail, {\n    key: variant,\n    label: "Email",\n    value: value,\n    onChange: e => setValue(e.target.value),\n    variant: variant,\n    helperText: "please enter a valid email.",\n    startCmpExternal: /*#__PURE__*/React.createElement(AlternateEmailIcon, null),\n    endCmpExternal: /*#__PURE__*/React.createElement(MarkEmailReadIcon, null)\n  })), ["filled", "standard", "outlined"].map(variant => /*#__PURE__*/React.createElement(InputEmail, {\n    key: variant,\n    label: "Email",\n    value: value,\n    onChange: e => setValue(e.target.value),\n    variant: variant,\n    helperText: "please enter a valid email.",\n    startCmp: /*#__PURE__*/React.createElement(AlternateEmailIcon, null),\n    endCmp: /*#__PURE__*/React.createElement(MarkEmailReadIcon, null)\n  })));\n};\nDefault.parameters = Object.assign(Object.assign({}, Default.parameters), {\n  docs: Object.assign(Object.assign({}, (_a = Default.parameters) === null || _a === void 0 ? void 0 : _a.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  return <InputEmail />;\\n}"\n    }, (_c = (_b = Default.parameters) === null || _b === void 0 ? void 0 : _b.docs) === null || _c === void 0 ? void 0 : _c.source)\n  })\n});\nEmail.parameters = Object.assign(Object.assign({}, Email.parameters), {\n  docs: Object.assign(Object.assign({}, (_d = Email.parameters) === null || _d === void 0 ? void 0 : _d.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  const [value, setValue] = useState(\\"test@test.com\\");\\n  return <Stack spacing={4}>\\n      {[\\"filled\\", \\"standard\\", \\"outlined\\"].map(variant => <InputEmail key={variant} label=\\"Email\\" value={value} onChange={e => setValue(e.target.value)} variant={variant} helperText=\\"please enter a valid email.\\" />)}\\n    </Stack>;\\n}"\n    }, (_f = (_e = Email.parameters) === null || _e === void 0 ? void 0 : _e.docs) === null || _f === void 0 ? void 0 : _f.source)\n  })\n});\nCmpEmail.parameters = Object.assign(Object.assign({}, CmpEmail.parameters), {\n  docs: Object.assign(Object.assign({}, (_g = CmpEmail.parameters) === null || _g === void 0 ? void 0 : _g.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  const [value, setValue] = useState();\\n  return <Stack spacing={4}>\\n      {[\\"filled\\", \\"standard\\", \\"outlined\\"].map(variant => <InputEmail key={variant} label=\\"Email\\" value={value} onChange={e => setValue(e.target.value)} variant={variant} helperText=\\"please enter a valid email.\\" startCmpExternal={<AlternateEmailIcon />} endCmpExternal={<MarkEmailReadIcon />} />)}\\n      {[\\"filled\\", \\"standard\\", \\"outlined\\"].map(variant => <InputEmail key={variant} label=\\"Email\\" value={value} onChange={e => setValue(e.target.value)} variant={variant} helperText=\\"please enter a valid email.\\" startCmp={<AlternateEmailIcon />} endCmp={<MarkEmailReadIcon />} />)}\\n    </Stack>;\\n}"\n    }, (_j = (_h = CmpEmail.parameters) === null || _h === void 0 ? void 0 : _h.docs) === null || _j === void 0 ? void 0 : _j.source)\n  })\n});',locationsMap:{default:{startLoc:{col:23,line:18},endLoc:{col:1,line:20},startBody:{col:23,line:18},endBody:{col:1,line:20}},email:{startLoc:{col:21,line:21},endLoc:{col:1,line:33},startBody:{col:21,line:21},endBody:{col:1,line:33}},"cmp-email":{startLoc:{col:24,line:34},endLoc:{col:1,line:57},startBody:{col:24,line:34},endBody:{col:1,line:57}}}}},title:"Inputs/Inputs/InputEmail",component:InputEmail,decorators:[Story=>react.createElement("div",{style:{width:"450px",padding:"1em",border:"1px dashed black"}},react.createElement(Story,null))]},Default=()=>react.createElement(InputEmail,null),Email=()=>{const[value,setValue]=(0,react.useState)("test@test.com");return react.createElement(Stack.Z,{spacing:4},["filled","standard","outlined"].map((variant=>react.createElement(InputEmail,{key:variant,label:"Email",value,onChange:e=>setValue(e.target.value),variant,helperText:"please enter a valid email."}))))},CmpEmail=()=>{const[value,setValue]=(0,react.useState)();return react.createElement(Stack.Z,{spacing:4},["filled","standard","outlined"].map((variant=>react.createElement(InputEmail,{key:variant,label:"Email",value,onChange:e=>setValue(e.target.value),variant,helperText:"please enter a valid email.",startCmpExternal:react.createElement(AlternateEmail.Z,null),endCmpExternal:react.createElement(MarkEmailRead.Z,null)}))),["filled","standard","outlined"].map((variant=>react.createElement(InputEmail,{key:variant,label:"Email",value,onChange:e=>setValue(e.target.value),variant,helperText:"please enter a valid email.",startCmp:react.createElement(AlternateEmail.Z,null),endCmp:react.createElement(MarkEmailRead.Z,null)}))))};Default.parameters=Object.assign(Object.assign({},Default.parameters),{docs:Object.assign(Object.assign({},null===(_a=Default.parameters)||void 0===_a?void 0:_a.docs),{source:Object.assign({originalSource:"() => {\n  return <InputEmail />;\n}"},null===(_c=null===(_b=Default.parameters)||void 0===_b?void 0:_b.docs)||void 0===_c?void 0:_c.source)})}),Email.parameters=Object.assign(Object.assign({},Email.parameters),{docs:Object.assign(Object.assign({},null===(_d=Email.parameters)||void 0===_d?void 0:_d.docs),{source:Object.assign({originalSource:'() => {\n  const [value, setValue] = useState("test@test.com");\n  return <Stack spacing={4}>\n      {["filled", "standard", "outlined"].map(variant => <InputEmail key={variant} label="Email" value={value} onChange={e => setValue(e.target.value)} variant={variant} helperText="please enter a valid email." />)}\n    </Stack>;\n}'},null===(_f=null===(_e=Email.parameters)||void 0===_e?void 0:_e.docs)||void 0===_f?void 0:_f.source)})}),CmpEmail.parameters=Object.assign(Object.assign({},CmpEmail.parameters),{docs:Object.assign(Object.assign({},null===(_g=CmpEmail.parameters)||void 0===_g?void 0:_g.docs),{source:Object.assign({originalSource:'() => {\n  const [value, setValue] = useState();\n  return <Stack spacing={4}>\n      {["filled", "standard", "outlined"].map(variant => <InputEmail key={variant} label="Email" value={value} onChange={e => setValue(e.target.value)} variant={variant} helperText="please enter a valid email." startCmpExternal={<AlternateEmailIcon />} endCmpExternal={<MarkEmailReadIcon />} />)}\n      {["filled", "standard", "outlined"].map(variant => <InputEmail key={variant} label="Email" value={value} onChange={e => setValue(e.target.value)} variant={variant} helperText="please enter a valid email." startCmp={<AlternateEmailIcon />} endCmp={<MarkEmailReadIcon />} />)}\n    </Stack>;\n}'},null===(_j=null===(_h=CmpEmail.parameters)||void 0===_h?void 0:_h.docs)||void 0===_j?void 0:_j.source)})});const __namedExportsOrder=["Default","Email","CmpEmail"]}}]);