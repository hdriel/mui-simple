"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[2749],{"./src/components/_FIXED/Dialog/__stories__/Dialog.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Actioned:()=>Actioned,AutoContentPadding:()=>AutoContentPadding,Default:()=>Default,Dividers:()=>Dividers,Draggable:()=>Draggable,FullScreen:()=>FullScreen,FullWidth:()=>FullWidth,Info:()=>Info,MaxWidth_:()=>MaxWidth_,SelectedValue_:()=>SelectedValue_,Title:()=>Title,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Dialog_stories});var react=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),TextField=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/TextField/TextField.js"),Box=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/Box/Box.js"),FormControl=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/FormControl/FormControl.js"),InputLabel=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/InputLabel/InputLabel.js"),Select=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/Select/Select.js"),MenuItem=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/MenuItem/MenuItem.js"),FormControlLabel=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/FormControlLabel/FormControlLabel.js"),Switch=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/Switch/Switch.js"),Typography=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/Typography/Typography.js"),List=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/List/List.js"),ListItem=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/ListItem/ListItem.js"),ListItemButton=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/ListItemButton/ListItemButton.js"),ListItemAvatar=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/ListItemAvatar/ListItemAvatar.js"),Avatar=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/Avatar/Avatar.js"),ListItemText=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/ListItemText/ListItemText.js"),useMediaQuery=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/useMediaQuery/index.js"),Dialog=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/Dialog/Dialog.js"),DialogTitle=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/DialogTitle/DialogTitle.js"),DialogContent=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/DialogContent/DialogContent.js"),DialogContentText=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/DialogContentText/DialogContentText.js"),DialogActions=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/DialogActions/DialogActions.js"),useTheme=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/styles/useTheme.js"),Button=__webpack_require__("./src/components/_FIXED/Button/Button.tsx"),Slide=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/Slide/Slide.js"),Paper=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/Paper/Paper.js"),cjs=__webpack_require__("./node_modules/.pnpm/react-draggable@4.5.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-draggable/build/cjs/cjs.js"),cjs_default=__webpack_require__.n(cjs);const _excluded=["children"],_excluded2=["titleId"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(-1!==e.indexOf(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],-1===t.indexOf(o)&&{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}const Transition=(0,react.forwardRef)(function Transition(_ref,ref){let{children}=_ref,props=_objectWithoutProperties(_ref,_excluded);return react.createElement(Slide.A,_extends({direction:"up",ref},props),children)}),PaperComponent=_ref2=>{let{titleId}=_ref2,props=_objectWithoutProperties(_ref2,_excluded2);return react.createElement(cjs_default(),{bounds:"body",handle:`#${titleId}`,cancel:'[class*="MuiDialogContent-root"]'},react.createElement(Paper.A,props))};Transition.__docgenInfo={description:"",methods:[],displayName:"Transition"},PaperComponent.__docgenInfo={description:"",methods:[],displayName:"PaperComponent",props:{titleId:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:""}}};const Dialog_excluded=["actions","autoContentPadding","children","contentId","dividers","draggable","fullScreen","maxWidth","onClose","open","selectedValue","title","titleId"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function Dialog_extends(){return Dialog_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},Dialog_extends.apply(null,arguments)}const Dialog_Dialog=props=>{const{actions=[],autoContentPadding=!0,children,contentId,dividers=!1,draggable=!1,fullScreen=!1,maxWidth=!1,onClose,open=!0,selectedValue,title="",titleId="dialog-title-id"}=props,rest=function Dialog_objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function Dialog_objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(-1!==e.indexOf(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],-1===t.indexOf(o)&&{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(props,Dialog_excluded),theme=(0,useTheme.A)(),fullScreenBreakPoint=(0,useMediaQuery.A)(theme.breakpoints.down(fullScreen));return react.createElement(Dialog.A,Dialog_extends({sx:{backgroundColor:"background.dialog"},onClose:()=>null==onClose?void 0:onClose(selectedValue),open,TransitionComponent:Transition,keepMounted:!0,scroll:"paper","aria-labelledby":titleId,"aria-describedby":contentId,PaperComponent:draggable?props=>react.createElement(PaperComponent,Dialog_extends({titleId},rest)):void 0,fullScreen:"boolean"==typeof fullScreen?fullScreen:fullScreenBreakPoint,maxWidth},rest),title&&react.createElement(DialogTitle.A,{style:_objectSpread({},draggable&&{cursor:"move"}),id:titleId,title}),react.createElement(DialogContent.A,{sx:_objectSpread({},!autoContentPadding&&{padding:0}),dividers},"string"==typeof children?react.createElement(DialogContentText.A,{id:contentId},children):children),null!=actions&&actions.length?react.createElement(DialogActions.A,null,actions.map((action,index)=>{var _action$variant;return react.createElement(Button.A,Dialog_extends({key:index},action,{onClick:action.onClick,autoFocus:action.autoFocus,variant:null!==(_action$variant=action.variant)&&void 0!==_action$variant?_action$variant:"text"}),action.label)})):null)};Dialog_Dialog.displayName="Dialog";const Dialog_DialogContentText=DialogContentText.A,_FIXED_Dialog_Dialog=Dialog_Dialog;Dialog_Dialog.__docgenInfo={description:"",methods:[],displayName:"Dialog",props:{open:{required:!0,tsType:{name:"boolean"},description:""},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:""},selectedValue:{required:!1,tsType:{name:"string"},description:""},title:{required:!1,tsType:{name:"union",raw:"string | ElementType",elements:[{name:"string"},{name:"union",raw:"React.ForwardRefExoticComponent<any> | ReactElement | ReactNode",elements:[{name:"ReactForwardRefExoticComponent",raw:"React.ForwardRefExoticComponent<any>",elements:[{name:"any"}]},{name:"ReactElement"},{name:"ReactNode"}]}]},description:""},titleId:{required:!1,tsType:{name:"string"},description:""},contentId:{required:!1,tsType:{name:"string"},description:""},fullWidth:{required:!1,tsType:{name:"boolean"},description:""},dividers:{required:!1,tsType:{name:"boolean"},description:""},autoContentPadding:{required:!1,tsType:{name:"boolean"},description:""},draggable:{required:!1,tsType:{name:"boolean"},description:""},maxWidth:{required:!1,tsType:{name:"union",raw:"false | 'xs' | 'sm' | 'md' | 'lg' | 'xl'",elements:[{name:"literal",value:"false"},{name:"literal",value:"'xs'"},{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"},{name:"literal",value:"'xl'"}]},description:""},fullScreen:{required:!1,tsType:{name:"union",raw:"false | true | 'xs' | 'sm' | 'md' | 'lg' | 'xl'",elements:[{name:"literal",value:"false"},{name:"literal",value:"true"},{name:"literal",value:"'xs'"},{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"},{name:"literal",value:"'xl'"}]},description:""},actions:{required:!1,tsType:{name:"Array",elements:[{name:"ButtonProps"}],raw:"ButtonProps[]"},description:""}}};var blue=__webpack_require__("./node_modules/.pnpm/@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3.23_react@18.3.1__@emotion+_9f975e8e80c2b0a1b34df72474ac4f4b/node_modules/@mui/material/esm/colors/blue.js"),Person=__webpack_require__("./node_modules/.pnpm/@mui+icons-material@7.2.0_@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3._aadb1c40e883fdc91a9cc6aa8769f6fd/node_modules/@mui/icons-material/esm/Person.js"),Add=__webpack_require__("./node_modules/.pnpm/@mui+icons-material@7.2.0_@mui+material@7.2.0_@emotion+react@11.14.0_@types+react@18.3._aadb1c40e883fdc91a9cc6aa8769f6fd/node_modules/@mui/icons-material/esm/Add.js");function Dialog_stories_extends(){return Dialog_stories_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},Dialog_stories_extends.apply(null,arguments)}const Dialog_stories={title:"Feedback/Dialog",component:_FIXED_Dialog_Dialog},Default={args:{}},Actioned={args:{title:"Subscribe actions",children:react.createElement(react.Fragment,null,react.createElement(Dialog_DialogContentText,null,"To subscribe to this website, please enter your email address here. We will send updates occasionally."),react.createElement(TextField.A,{autoFocus:!0,margin:"dense",id:"name",label:"Email Address",type:"email",fullWidth:!0,variant:"standard"}))},render:args=>{const[open,setOpen]=(0,react.useState)(!1),handleClose=()=>setOpen(!1);return react.createElement(react.Fragment,null,react.createElement(Button.A,{variant:"outlined",onClick:()=>setOpen(!0),label:"Open form dialog"}),react.createElement(_FIXED_Dialog_Dialog,Dialog_stories_extends({},args,{title:"Subscribe",open,onClose:handleClose,actions:[{label:"Cancel",onClick:()=>handleClose()},{label:"Subscribe",onClick:()=>handleClose()}]})))}},Draggable={args:{title:"Draggable title section",titleId:"my-dialog-id",contentId:"my-content-id",children:"To draggable dialog component click on title section and drag to anywhere",draggable:!0},render:args=>{const[open,setOpen]=(0,react.useState)(!1);return react.createElement(react.Fragment,null,react.createElement(Button.A,{variant:"outlined",onClick:()=>setOpen(!0),label:"Open Dialog"}),react.createElement(_FIXED_Dialog_Dialog,Dialog_stories_extends({},args,{open,onClose:()=>setOpen(!1)})))}},Dividers={args:{title:"Dividers between header, content and footer",children:react.createElement(Dialog_DialogContentText,null,"See, there are dividers between title, content and actions"),dividers:!0,actions:[{label:"OK"}]},render:args=>{const[open,setOpen]=(0,react.useState)(!1);return react.createElement(react.Fragment,null,react.createElement(Button.A,{variant:"outlined",onClick:()=>setOpen(!0),label:"Open Dialog"}),react.createElement(_FIXED_Dialog_Dialog,Dialog_stories_extends({},args,{open,onClose:()=>setOpen(!1)})))}},FullWidth={args:{title:"FullWidth",children:react.createElement(Dialog_DialogContentText,null,"fullWidth"),fullWidth:!0},render:args=>{const[open,setOpen]=(0,react.useState)(!1);return react.createElement(react.Fragment,null,react.createElement(Button.A,{variant:"outlined",onClick:()=>setOpen(!0),label:"Open Dialog"}),react.createElement(_FIXED_Dialog_Dialog,Dialog_stories_extends({},args,{open,onClose:()=>setOpen(!1)})))}},Info={args:{titleId:"alert-dialog-title",contentId:"alert-dialog-description",title:"Use Google's location service?",autoContentPadding:!0,children:"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running."},render:args=>{const[open,setOpen]=(0,react.useState)(!1);return react.createElement(react.Fragment,null,react.createElement(Button.A,{variant:"outlined",onClick:()=>setOpen(!0),label:"Open Dialog"}),react.createElement(_FIXED_Dialog_Dialog,Dialog_stories_extends({},args,{open,onClose:()=>setOpen(!1)})))}},AutoContentPadding={args:{titleId:"alert-dialog-title",contentId:"alert-dialog-description",title:"Set backup account",autoContentPadding:!1,children:"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running."},render:args=>{const[open,setOpen]=(0,react.useState)(!1);return react.createElement(react.Fragment,null,react.createElement(Button.A,{variant:"outlined",onClick:()=>setOpen(!0),label:"Open Dialog"}),react.createElement(_FIXED_Dialog_Dialog,Dialog_stories_extends({},args,{open,onClose:()=>setOpen(!1)})))}},MaxWidth_=()=>{const[open,setOpen]=(0,react.useState)(!1),[fullWidth,setFullWidth]=(0,react.useState)(!0),[maxWidth,setMaxWidth]=(0,react.useState)("sm");return react.createElement(react.Fragment,null,react.createElement(Button.A,{variant:"outlined",onClick:()=>setOpen(!0),label:"Open max-width dialog"}),react.createElement(_FIXED_Dialog_Dialog,{title:"Optional sizes",fullWidth,maxWidth,open,onClose:()=>setOpen(!1)},react.createElement(Dialog_DialogContentText,null,"You can set my maximum width and whether to adapt or not."),react.createElement(Box.A,{noValidate:!0,component:"form",sx:{display:"flex",flexDirection:"column",m:"auto",width:"fit-content"}},react.createElement(FormControl.A,{sx:{mt:2,minWidth:120}},react.createElement(InputLabel.A,{htmlFor:"max-width"},"maxWidth"),react.createElement(Select.A,{autoFocus:!0,value:maxWidth,onChange:event=>setMaxWidth(event.target.value),label:"maxWidth",inputProps:{name:"max-width",id:"max-width"}},react.createElement(MenuItem.A,{value:!1},"false"),react.createElement(MenuItem.A,{value:"xs"},"xs"),react.createElement(MenuItem.A,{value:"sm"},"sm"),react.createElement(MenuItem.A,{value:"md"},"md"),react.createElement(MenuItem.A,{value:"lg"},"lg"),react.createElement(MenuItem.A,{value:"xl"},"xl"))),react.createElement(FormControlLabel.A,{sx:{mt:1},control:react.createElement(Switch.A,{checked:fullWidth,onChange:event=>setFullWidth(event.target.checked)}),label:"Full width"}))))},FullScreen={args:{title:"Set backup account",fullScreen:"sm",children:"to see it in fullscreen you need to rich to sm size, you can change this breakpoint. small you screen to see this effect"},render:args=>{const[open,setOpen]=(0,react.useState)(!1);return react.createElement(react.Fragment,null,react.createElement(Button.A,{variant:"outlined",onClick:()=>setOpen(!0),label:"Open Dialog"}),react.createElement(_FIXED_Dialog_Dialog,Dialog_stories_extends({},args,{open,onClose:()=>setOpen(!1)})))}},Title={args:{title:void 0,children:"to see it in fullscreen you need to rich to sm size, you can change this breakpoint. small you screen to see this effect"},render:args=>{const[open,setOpen]=(0,react.useState)(!1);return react.createElement(react.Fragment,null,react.createElement(Button.A,{variant:"outlined",onClick:()=>setOpen(!0),label:"Open Dialog"}),react.createElement(_FIXED_Dialog_Dialog,Dialog_stories_extends({},args,{open,onClose:()=>setOpen(!1)})))}},SelectedValue_=args=>{const emails=["username@gmail.com","user02@gmail.com"],[open,setOpen]=(0,react.useState)(!1),[selectedValue,setSelectedValue]=(0,react.useState)(emails[1]),handleClose=value=>{setOpen(!1),setSelectedValue(value)};return react.createElement(Box.A,null,react.createElement(Typography.A,{variant:"subtitle1",component:"div"},"Selected: ",selectedValue),react.createElement("br",null),react.createElement(Button.A,{variant:"outlined",onClick:()=>setOpen(!0),label:"Open simple dialog"}),react.createElement(_FIXED_Dialog_Dialog,Dialog_stories_extends({},args,{selectedValue,open,onClose:handleClose,title:"Set backup account",autoContentPadding:!1}),react.createElement(List.A,{sx:{pt:0}},emails.map(email=>react.createElement(ListItem.Ay,{key:email,disableGutters:!0},react.createElement(ListItemButton.A,{onClick:()=>handleClose(email),key:email},react.createElement(ListItemAvatar.A,null,react.createElement(Avatar.A,{sx:{bgcolor:blue.A[100],color:blue.A[600]}},react.createElement(Person.A,null))),react.createElement(ListItemText.A,{primary:email})))),react.createElement(ListItem.Ay,{disableGutters:!0},react.createElement(ListItemButton.A,{autoFocus:!0,onClick:()=>handleClose("addAccount")},react.createElement(ListItemAvatar.A,null,react.createElement(Avatar.A,null,react.createElement(Add.A,null))),react.createElement(ListItemText.A,{primary:"Add account"}))))))},__namedExportsOrder=["Default","Actioned","Draggable","Dividers","FullWidth","Info","AutoContentPadding","MaxWidth_","FullScreen","Title","SelectedValue_"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Default.parameters?.docs?.source}}},Actioned.parameters={...Actioned.parameters,docs:{...Actioned.parameters?.docs,source:{originalSource:'{\n  args: {\n    title: \'Subscribe actions\',\n    children: <>\n                <DialogContentText>\n                    To subscribe to this website, please enter your email address here. We will send updates\n                    occasionally.\n                </DialogContentText>\n                <TextField autoFocus margin="dense" id="name" label="Email Address" type="email" fullWidth variant="standard" />\n            </>\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const handleClickOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    return <>\n                <Button variant="outlined" onClick={handleClickOpen} label="Open form dialog" />\n                <Dialog {...args} title="Subscribe" open={open} onClose={handleClose} actions={[{\n        label: \'Cancel\',\n        onClick: () => handleClose()\n      }, {\n        label: \'Subscribe\',\n        onClick: () => handleClose()\n      }]} />\n            </>;\n  }\n}',...Actioned.parameters?.docs?.source}}},Draggable.parameters={...Draggable.parameters,docs:{...Draggable.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Draggable title section',\n    titleId: 'my-dialog-id',\n    contentId: 'my-content-id',\n    children: 'To draggable dialog component click on title section and drag to anywhere',\n    draggable: true\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const handleClickOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    return <>\n                <Button variant=\"outlined\" onClick={handleClickOpen} label=\"Open Dialog\" />\n                <Dialog {...args} open={open} onClose={handleClose} />\n            </>;\n  }\n}",...Draggable.parameters?.docs?.source}}},Dividers.parameters={...Dividers.parameters,docs:{...Dividers.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Dividers between header, content and footer',\n    children: <DialogContentText>See, there are dividers between title, content and actions</DialogContentText>,\n    dividers: true,\n    actions: [{\n      label: 'OK'\n    }]\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const handleClickOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    return <>\n                <Button variant=\"outlined\" onClick={handleClickOpen} label=\"Open Dialog\" />\n                <Dialog {...args} open={open} onClose={handleClose} />\n            </>;\n  }\n}",...Dividers.parameters?.docs?.source}}},FullWidth.parameters={...FullWidth.parameters,docs:{...FullWidth.parameters?.docs,source:{originalSource:'{\n  args: {\n    title: \'FullWidth\',\n    children: <DialogContentText>fullWidth</DialogContentText>,\n    fullWidth: true\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const handleClickOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    return <>\n                <Button variant="outlined" onClick={handleClickOpen} label="Open Dialog" />\n                <Dialog {...args} open={open} onClose={handleClose} />\n            </>;\n  }\n}',...FullWidth.parameters?.docs?.source}}},Info.parameters={...Info.parameters,docs:{...Info.parameters?.docs,source:{originalSource:"{\n  args: {\n    titleId: 'alert-dialog-title',\n    contentId: 'alert-dialog-description',\n    title: \"Use Google's location service?\",\n    autoContentPadding: true,\n    children: 'Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.'\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const handleClickOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    return <>\n                <Button variant=\"outlined\" onClick={handleClickOpen} label=\"Open Dialog\" />\n                <Dialog {...args} open={open} onClose={handleClose} />\n            </>;\n  }\n}",...Info.parameters?.docs?.source}}},AutoContentPadding.parameters={...AutoContentPadding.parameters,docs:{...AutoContentPadding.parameters?.docs,source:{originalSource:"{\n  args: {\n    titleId: 'alert-dialog-title',\n    contentId: 'alert-dialog-description',\n    title: 'Set backup account',\n    autoContentPadding: false,\n    children: 'Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.'\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const handleClickOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    return <>\n                <Button variant=\"outlined\" onClick={handleClickOpen} label=\"Open Dialog\" />\n                <Dialog {...args} open={open} onClose={handleClose} />\n            </>;\n  }\n}",...AutoContentPadding.parameters?.docs?.source}}},MaxWidth_.parameters={...MaxWidth_.parameters,docs:{...MaxWidth_.parameters?.docs,source:{originalSource:"() => {\n  const [open, setOpen] = useState(false);\n  const [fullWidth, setFullWidth] = useState(true);\n  const [maxWidth, setMaxWidth] = useState<false | 'xs' | 'sm' | 'md' | 'lg' | 'xl'>('sm');\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleMaxWidthChange = event => setMaxWidth(event.target.value);\n  const handleFullWidthChange = event => setFullWidth(event.target.checked);\n  return <>\n            <Button variant=\"outlined\" onClick={handleClickOpen} label=\"Open max-width dialog\" />\n            <Dialog title=\"Optional sizes\" fullWidth={fullWidth} maxWidth={maxWidth} open={open} onClose={handleClose}>\n                <DialogContentText>You can set my maximum width and whether to adapt or not.</DialogContentText>\n                <Box noValidate component=\"form\" sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        m: 'auto',\n        width: 'fit-content'\n      }}>\n                    <FormControl sx={{\n          mt: 2,\n          minWidth: 120\n        }}>\n                        <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\n                        <Select autoFocus value={maxWidth as any} onChange={handleMaxWidthChange} label=\"maxWidth\" inputProps={{\n            name: 'max-width',\n            id: 'max-width'\n          }}>\n                            <MenuItem value={false as unknown as string}>false</MenuItem>\n                            <MenuItem value=\"xs\">xs</MenuItem>\n                            <MenuItem value=\"sm\">sm</MenuItem>\n                            <MenuItem value=\"md\">md</MenuItem>\n                            <MenuItem value=\"lg\">lg</MenuItem>\n                            <MenuItem value=\"xl\">xl</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControlLabel sx={{\n          mt: 1\n        }} control={<Switch checked={fullWidth} onChange={handleFullWidthChange} />} label=\"Full width\" />\n                </Box>\n            </Dialog>\n        </>;\n}",...MaxWidth_.parameters?.docs?.source}}},FullScreen.parameters={...FullScreen.parameters,docs:{...FullScreen.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Set backup account',\n    fullScreen: 'sm',\n    children: 'to see it in fullscreen you need to rich to sm size, you can change this breakpoint. small you screen to see this effect'\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const handleClickOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    return <>\n                <Button variant=\"outlined\" onClick={handleClickOpen} label=\"Open Dialog\" />\n                <Dialog {...args} open={open} onClose={handleClose} />\n            </>;\n  }\n}",...FullScreen.parameters?.docs?.source}}},Title.parameters={...Title.parameters,docs:{...Title.parameters?.docs,source:{originalSource:'{\n  args: {\n    title: undefined,\n    children: \'to see it in fullscreen you need to rich to sm size, you can change this breakpoint. small you screen to see this effect\'\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const handleClickOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    return <>\n                <Button variant="outlined" onClick={handleClickOpen} label="Open Dialog" />\n                <Dialog {...args} open={open} onClose={handleClose} />\n            </>;\n  }\n}',...Title.parameters?.docs?.source}}},SelectedValue_.parameters={...SelectedValue_.parameters,docs:{...SelectedValue_.parameters?.docs,source:{originalSource:'args => {\n  const emails = [\'username@gmail.com\', \'user02@gmail.com\'];\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(emails[1]);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n  return <Box>\n            <Typography variant="subtitle1" component="div">\n                Selected: {selectedValue}\n            </Typography>\n            <br />\n            <Button variant="outlined" onClick={handleClickOpen} label="Open simple dialog" />\n            <Dialog {...args} selectedValue={selectedValue} open={open} onClose={handleClose} title="Set backup account" autoContentPadding={false}>\n                <List sx={{\n        pt: 0\n      }}>\n                    {emails.map(email => <ListItem key={email} disableGutters>\n                            <ListItemButton onClick={() => handleClose(email)} key={email}>\n                                <ListItemAvatar>\n                                    <Avatar sx={{\n                bgcolor: colors.blue[100],\n                color: colors.blue[600]\n              }}>\n                                        <PersonIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={email} />\n                            </ListItemButton>\n                        </ListItem>)}\n\n                    <ListItem disableGutters>\n                        <ListItemButton autoFocus onClick={() => handleClose(\'addAccount\')}>\n                            <ListItemAvatar>\n                                <Avatar>\n                                    <AddIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary="Add account" />\n                        </ListItemButton>\n                    </ListItem>\n                </List>\n            </Dialog>\n        </Box>;\n}',...SelectedValue_.parameters?.docs?.source}}}}}]);