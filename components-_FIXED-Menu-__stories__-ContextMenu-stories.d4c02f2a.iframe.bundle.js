"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[3550],{"./src/components/_FIXED/Menu/__stories__/ContextMenu.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AlternativeContent:()=>AlternativeContent,AnchorElementRef:()=>AnchorElementRef,AnchorPosition:()=>AnchorPosition,Arrow:()=>Arrow,Default:()=>Default,Dense:()=>Dense,DisableRipple:()=>DisableRipple,DisableScrollLock:()=>DisableScrollLock,Elevation:()=>Elevation,Height:()=>Height,MaxHeight:()=>MaxHeight,Options:()=>Options,OptionsDirectionRow:()=>OptionsDirectionRow,Reopen:()=>Reopen,Width:()=>Width,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ContextMenu_stories});var react=__webpack_require__("./node_modules/react/index.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),es=__webpack_require__("./node_modules/mui-image/es/index.js"),Menu=__webpack_require__("./src/components/_FIXED/Menu/Menu.tsx"),Menu_styled=__webpack_require__("./src/components/_FIXED/Menu/Menu.styled.tsx"),_excluded=["children","reopen"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var ContextMenu=function(_ref){var children=_ref.children,reopen=_ref.reopen,props=_objectWithoutProperties(_ref,_excluded),_a=(0,react.useState)(null),contextMenu=_a[0],setContextMenu=_a[1];return react.createElement(Menu_styled.X9,{onContextMenu:function(event){event.preventDefault();var mouseX=event.clientX,mouseY=event.clientY;setContextMenu(reopen||null===contextMenu?{mouseX,mouseY}:null)},style:{cursor:"context-menu"}},children,react.createElement(Menu.Z,_extends({},props,{open:null!==contextMenu,contextMenu,onClose:function(){var _a;return null===(_a=props.onClose)||void 0===_a||_a.call(props),setContextMenu(null),!0}})))};ContextMenu.displayName="ContextMenu",ContextMenu.defaultProps={reopen:void 0};const Menu_ContextMenu=ContextMenu;try{ContextMenu.displayName="ContextMenu",ContextMenu.__docgenInfo={description:"",displayName:"ContextMenu",props:{alternativeContent:{defaultValue:null,description:"",name:"alternativeContent",required:!1,type:{name:"any"}},anchorElementRef:{defaultValue:null,description:"",name:"anchorElementRef",required:!1,type:{name:"any"}},anchorPosition:{defaultValue:null,description:"",name:"anchorPosition",required:!1,type:{name:'{ vertical?: "bottom" | "top"; horizontal?: "left" | "right" | "center"; }'}},arrow:{defaultValue:null,description:"",name:"arrow",required:!1,type:{name:"boolean"}},boundChildrenId:{defaultValue:null,description:"",name:"boundChildrenId",required:!1,type:{name:"string"}},boundChildrenIndex:{defaultValue:null,description:"",name:"boundChildrenIndex",required:!1,type:{name:"number | boolean"}},dense:{defaultValue:null,description:"",name:"dense",required:!1,type:{name:"boolean"}},disableRipple:{defaultValue:null,description:"",name:"disableRipple",required:!1,type:{name:"boolean"}},disableScrollLock:{defaultValue:null,description:"",name:"disableScrollLock",required:!1,type:{name:"boolean"}},elevation:{defaultValue:null,description:"",name:"elevation",required:!1,type:{name:"number"}},fieldId:{defaultValue:null,description:"",name:"fieldId",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"string | number"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},maxHeight:{defaultValue:null,description:"",name:"maxHeight",required:!1,type:{name:"string | number"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(event?: any) => void"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!1,type:{name:"(event?: any) => boolean"}},open:{defaultValue:null,description:"",name:"open",required:!1,type:{name:"boolean"}},options:{defaultValue:null,description:"",name:"options",required:!1,type:{name:"MenuOption[]"}},optionsDirection:{defaultValue:null,description:"",name:"optionsDirection",required:!1,type:{name:"enum",value:[{value:'"row"'},{value:'"column"'}]}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"string | number"}},reopen:{defaultValue:{value:"undefined"},description:"",name:"reopen",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Menu/ContextMenu.tsx#ContextMenu"]={docgenInfo:ContextMenu.__docgenInfo,name:"ContextMenu",path:"src/components/_FIXED/Menu/ContextMenu.tsx#ContextMenu"})}catch(__react_docgen_typescript_loader_error){}var Button=__webpack_require__("./src/components/_FIXED/Button/Button.tsx"),Menu_mocks=__webpack_require__("./src/components/_FIXED/Menu/__stories__/Menu.mocks.tsx");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:String(i)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function ContextMenu_stories_extends(){return ContextMenu_stories_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},ContextMenu_stories_extends.apply(this,arguments)}const ContextMenu_stories={parameters:{storySource:{source:"import React, { useRef, useState } from 'react';\nimport { Box } from '@mui/material';\nimport { Image as MuiImage } from 'mui-image';\nimport ContextMenu from '../ContextMenu';\nimport { Meta, StoryObj } from '@storybook/react';\nimport Button from '../../Button/Button';\nimport { shortcutOptions, optionLongList, options } from './Menu.mocks';\n\nconst meta: Meta<typeof ContextMenu> = {\n    title: 'Navigation/ContextMenu',\n    component: ContextMenu,\n    tags: ['autodocs'],\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof ContextMenu>;\n\nexport const Default: Story = {\n    args: {\n        options,\n    },\n    render: (args) => {\n        const [open, setOpen] = useState(false);\n        const onCloseHandler = () => {\n            setOpen(false);\n            return true;\n        };\n        return (\n            <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Box style={{ width: '100%', height: '150px', backgroundColor: 'rgba(0,0,0,0.07)' }}>\n                    context menu - right click anywhere\n                </Box>\n            </ContextMenu>\n        );\n    },\n};\n\nexport const Reopen: Story = {\n    args: {\n        options,\n        reopen: true,\n    },\n    render: (args) => {\n        const [open, setOpen] = useState(false);\n        const onCloseHandler = () => {\n            setOpen(false);\n            return true;\n        };\n        return (\n            <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Box style={{ width: '100%', height: '150px', backgroundColor: 'rgba(0,0,0,0.07)' }}>\n                    context menu - right click anywhere and right click again anywhere\n                </Box>\n            </ContextMenu>\n        );\n    },\n};\n\nexport const AlternativeContent: Story = {\n    args: {\n        options,\n        alternativeContent: <MuiImage src=\"1.jpg\" width={400} height={400} />,\n    },\n    render: (args) => {\n        const [open, setOpen] = useState(false);\n        const onCloseHandler = () => {\n            setOpen(false);\n            return true;\n        };\n        return (\n            <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>\n        );\n    },\n};\n\nexport const AnchorElementRef: Story = {\n    args: {\n        options,\n    },\n    render: (args) => {\n        const [open, setOpen] = useState(false);\n        const ref = useRef();\n        const onCloseHandler = () => {\n            setOpen(false);\n            return true;\n        };\n\n        return (\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <ContextMenu {...args} open={open} onClose={onCloseHandler} anchorElementRef={ref}>\n                    <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n                </ContextMenu>\n                <span ref={ref}>ContextMenu will popup here</span>\n            </Box>\n        );\n    },\n};\n\nexport const AnchorPosition: Story = {\n    args: {\n        options,\n        anchorPosition: { vertical: 'top', horizontal: 'right' },\n    },\n    render: (args) => {\n        const [open, setOpen] = useState(false);\n        const onCloseHandler = () => {\n            setOpen(false);\n            return true;\n        };\n        return (\n            <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>\n        );\n    },\n};\n\nexport const Arrow: Story = {\n    args: {\n        options,\n        arrow: true,\n    },\n    render: (args) => {\n        const [open, setOpen] = useState(false);\n        const onCloseHandler = () => {\n            setOpen(false);\n            return true;\n        };\n        return (\n            <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>\n        );\n    },\n};\n\nexport const Dense: Story = {\n    args: {\n        options,\n        dense: true,\n    },\n    render: (args) => {\n        const [open, setOpen] = useState(false);\n        const onCloseHandler = () => {\n            setOpen(false);\n            return true;\n        };\n        return (\n            <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>\n        );\n    },\n};\n\nexport const DisableRipple: Story = {\n    args: {\n        options,\n        disableRipple: true,\n    },\n    render: (args) => {\n        const [open, setOpen] = useState(false);\n        const onCloseHandler = () => {\n            setOpen(false);\n            return true;\n        };\n        return (\n            <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>\n        );\n    },\n};\n\nexport const Elevation: Story = {\n    args: {\n        options,\n        elevation: 0,\n    },\n    render: (args) => {\n        const [open, setOpen] = useState(false);\n        const onCloseHandler = () => {\n            setOpen(false);\n            return true;\n        };\n        return (\n            <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>\n        );\n    },\n};\n\nexport const Height: Story = {\n    args: {\n        options: optionLongList,\n        height: 400,\n    },\n    render: (args) => {\n        const [open, setOpen] = useState(false);\n        const onCloseHandler = () => {\n            setOpen(false);\n            return true;\n        };\n        return (\n            <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>\n        );\n    },\n};\n\nexport const MaxHeight: Story = {\n    args: {\n        options: optionLongList,\n        maxHeight: 200,\n    },\n    render: (args) => {\n        const [open, setOpen] = useState(false);\n        const onCloseHandler = () => {\n            setOpen(false);\n            return true;\n        };\n        return (\n            <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>\n        );\n    },\n};\n\nexport const DisableScrollLock: Story = {\n    args: {\n        options: shortcutOptions,\n        disableScrollLock: true,\n        children: <Button>Open ContextMenu</Button>,\n    },\n    render: (args) => {\n        return (\n            <ContextMenu {...args} open>\n                <Button>Open ContextMenu</Button>\n            </ContextMenu>\n        );\n    },\n};\n\nexport const Width: Story = {\n    args: {\n        options: shortcutOptions,\n        maxHeight: 200,\n        open: true,\n        width: 300,\n        children: <Button>Open ContextMenu</Button>,\n    },\n};\n\nexport const Options: Story = {\n    args: {},\n    render: (args) => {\n        return (\n            <Box sx={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between' }}>\n                <ContextMenu {...args} open options={options.map((option) => ({ ...option, check: true }))}>\n                    <Button>Checked List</Button>\n                </ContextMenu>\n                <ContextMenu {...args} open options={optionLongList}>\n                    <Button>String List</Button>\n                </ContextMenu>\n                <ContextMenu {...args} open options={shortcutOptions} width={200}>\n                    <Button>Shortcut & icons</Button>\n                </ContextMenu>\n                <ContextMenu {...args} open alternativeContent={<MuiImage src=\"1.jpg\" width={200} height={300} />}>\n                    <Button>Alternative Content</Button>\n                </ContextMenu>\n            </Box>\n        );\n    },\n};\n\nexport const OptionsDirectionRow: Story = {\n    args: {},\n    render: (args) => {\n        return (\n            <ContextMenu {...args} open options={optionLongList} optionsDirection=\"row\">\n                <Button>String List</Button>\n            </ContextMenu>\n        );\n    },\n};\n",locationsMap:{default:{startLoc:{col:30,line:19},endLoc:{col:1,line:37},startBody:{col:30,line:19},endBody:{col:1,line:37}},reopen:{startLoc:{col:29,line:39},endLoc:{col:1,line:58},startBody:{col:29,line:39},endBody:{col:1,line:58}},"alternative-content":{startLoc:{col:41,line:60},endLoc:{col:1,line:77},startBody:{col:41,line:60},endBody:{col:1,line:77}},"anchor-element-ref":{startLoc:{col:39,line:79},endLoc:{col:1,line:100},startBody:{col:39,line:79},endBody:{col:1,line:100}},"anchor-position":{startLoc:{col:37,line:102},endLoc:{col:1,line:119},startBody:{col:37,line:102},endBody:{col:1,line:119}},arrow:{startLoc:{col:28,line:121},endLoc:{col:1,line:138},startBody:{col:28,line:121},endBody:{col:1,line:138}},dense:{startLoc:{col:28,line:140},endLoc:{col:1,line:157},startBody:{col:28,line:140},endBody:{col:1,line:157}},"disable-ripple":{startLoc:{col:36,line:159},endLoc:{col:1,line:176},startBody:{col:36,line:159},endBody:{col:1,line:176}},elevation:{startLoc:{col:32,line:178},endLoc:{col:1,line:195},startBody:{col:32,line:178},endBody:{col:1,line:195}},height:{startLoc:{col:29,line:197},endLoc:{col:1,line:214},startBody:{col:29,line:197},endBody:{col:1,line:214}},"max-height":{startLoc:{col:32,line:216},endLoc:{col:1,line:233},startBody:{col:32,line:216},endBody:{col:1,line:233}},"disable-scroll-lock":{startLoc:{col:40,line:235},endLoc:{col:1,line:248},startBody:{col:40,line:235},endBody:{col:1,line:248}},width:{startLoc:{col:28,line:250},endLoc:{col:1,line:258},startBody:{col:28,line:250},endBody:{col:1,line:258}},options:{startLoc:{col:30,line:260},endLoc:{col:1,line:280},startBody:{col:30,line:260},endBody:{col:1,line:280}},"options-direction-row":{startLoc:{col:42,line:282},endLoc:{col:1,line:291},startBody:{col:42,line:282},endBody:{col:1,line:291}}}}},title:"Navigation/ContextMenu",component:Menu_ContextMenu,tags:["autodocs"]};var Default={args:{options:Menu_mocks.YM},render:function(args){var _a=(0,react.useState)(!1),open=_a[0],setOpen=_a[1];return react.createElement(Menu_ContextMenu,ContextMenu_stories_extends({},args,{open,onClose:function(){return setOpen(!1),!0}}),react.createElement(Box.Z,{style:{width:"100%",height:"150px",backgroundColor:"rgba(0,0,0,0.07)"}},"context menu - right click anywhere"))}},Reopen={args:{options:Menu_mocks.YM,reopen:!0},render:function(args){var _a=(0,react.useState)(!1),open=_a[0],setOpen=_a[1];return react.createElement(Menu_ContextMenu,ContextMenu_stories_extends({},args,{open,onClose:function(){return setOpen(!1),!0}}),react.createElement(Box.Z,{style:{width:"100%",height:"150px",backgroundColor:"rgba(0,0,0,0.07)"}},"context menu - right click anywhere and right click again anywhere"))}},AlternativeContent={args:{options:Menu_mocks.YM,alternativeContent:react.createElement(es.E,{src:"1.jpg",width:400,height:400})},render:function(args){var _a=(0,react.useState)(!1),open=_a[0],setOpen=_a[1];return react.createElement(Menu_ContextMenu,ContextMenu_stories_extends({},args,{open,onClose:function(){return setOpen(!1),!0}}),react.createElement(Button.Z,{onClick:function(){return setOpen(!0)}},"Open ContextMenu"))}},AnchorElementRef={args:{options:Menu_mocks.YM},render:function(args){var _a=(0,react.useState)(!1),open=_a[0],setOpen=_a[1],ref=(0,react.useRef)();return react.createElement(Box.Z,{sx:{display:"flex",justifyContent:"space-between",alignItems:"center"}},react.createElement(Menu_ContextMenu,ContextMenu_stories_extends({},args,{open,onClose:function(){return setOpen(!1),!0},anchorElementRef:ref}),react.createElement(Button.Z,{onClick:function(){return setOpen(!0)}},"Open ContextMenu")),react.createElement("span",{ref},"ContextMenu will popup here"))}},AnchorPosition={args:{options:Menu_mocks.YM,anchorPosition:{vertical:"top",horizontal:"right"}},render:function(args){var _a=(0,react.useState)(!1),open=_a[0],setOpen=_a[1];return react.createElement(Menu_ContextMenu,ContextMenu_stories_extends({},args,{open,onClose:function(){return setOpen(!1),!0}}),react.createElement(Button.Z,{onClick:function(){return setOpen(!0)}},"Open ContextMenu"))}},Arrow={args:{options:Menu_mocks.YM,arrow:!0},render:function(args){var _a=(0,react.useState)(!1),open=_a[0],setOpen=_a[1];return react.createElement(Menu_ContextMenu,ContextMenu_stories_extends({},args,{open,onClose:function(){return setOpen(!1),!0}}),react.createElement(Button.Z,{onClick:function(){return setOpen(!0)}},"Open ContextMenu"))}},Dense={args:{options:Menu_mocks.YM,dense:!0},render:function(args){var _a=(0,react.useState)(!1),open=_a[0],setOpen=_a[1];return react.createElement(Menu_ContextMenu,ContextMenu_stories_extends({},args,{open,onClose:function(){return setOpen(!1),!0}}),react.createElement(Button.Z,{onClick:function(){return setOpen(!0)}},"Open ContextMenu"))}},DisableRipple={args:{options:Menu_mocks.YM,disableRipple:!0},render:function(args){var _a=(0,react.useState)(!1),open=_a[0],setOpen=_a[1];return react.createElement(Menu_ContextMenu,ContextMenu_stories_extends({},args,{open,onClose:function(){return setOpen(!1),!0}}),react.createElement(Button.Z,{onClick:function(){return setOpen(!0)}},"Open ContextMenu"))}},Elevation={args:{options:Menu_mocks.YM,elevation:0},render:function(args){var _a=(0,react.useState)(!1),open=_a[0],setOpen=_a[1];return react.createElement(Menu_ContextMenu,ContextMenu_stories_extends({},args,{open,onClose:function(){return setOpen(!1),!0}}),react.createElement(Button.Z,{onClick:function(){return setOpen(!0)}},"Open ContextMenu"))}},Height={args:{options:Menu_mocks.E9,height:400},render:function(args){var _a=(0,react.useState)(!1),open=_a[0],setOpen=_a[1];return react.createElement(Menu_ContextMenu,ContextMenu_stories_extends({},args,{open,onClose:function(){return setOpen(!1),!0}}),react.createElement(Button.Z,{onClick:function(){return setOpen(!0)}},"Open ContextMenu"))}},MaxHeight={args:{options:Menu_mocks.E9,maxHeight:200},render:function(args){var _a=(0,react.useState)(!1),open=_a[0],setOpen=_a[1];return react.createElement(Menu_ContextMenu,ContextMenu_stories_extends({},args,{open,onClose:function(){return setOpen(!1),!0}}),react.createElement(Button.Z,{onClick:function(){return setOpen(!0)}},"Open ContextMenu"))}},DisableScrollLock={args:{options:Menu_mocks.JV,disableScrollLock:!0,children:react.createElement(Button.Z,null,"Open ContextMenu")},render:function(args){return react.createElement(Menu_ContextMenu,ContextMenu_stories_extends({},args,{open:!0}),react.createElement(Button.Z,null,"Open ContextMenu"))}},Width={args:{options:Menu_mocks.JV,maxHeight:200,open:!0,width:300,children:react.createElement(Button.Z,null,"Open ContextMenu")}},Options={args:{},render:function(args){return react.createElement(Box.Z,{sx:{display:"flex",flexDirection:"row",alignItems:"center",justifyContent:"space-between"}},react.createElement(Menu_ContextMenu,ContextMenu_stories_extends({},args,{open:!0,options:Menu_mocks.YM.map((function(option){return _objectSpread(_objectSpread({},option),{},{check:!0})}))}),react.createElement(Button.Z,null,"Checked List")),react.createElement(Menu_ContextMenu,ContextMenu_stories_extends({},args,{open:!0,options:Menu_mocks.E9}),react.createElement(Button.Z,null,"String List")),react.createElement(Menu_ContextMenu,ContextMenu_stories_extends({},args,{open:!0,options:Menu_mocks.JV,width:200}),react.createElement(Button.Z,null,"Shortcut & icons")),react.createElement(Menu_ContextMenu,ContextMenu_stories_extends({},args,{open:!0,alternativeContent:react.createElement(es.E,{src:"1.jpg",width:200,height:300})}),react.createElement(Button.Z,null,"Alternative Content")))}},OptionsDirectionRow={args:{},render:function(args){return react.createElement(Menu_ContextMenu,ContextMenu_stories_extends({},args,{open:!0,options:Menu_mocks.E9,optionsDirection:"row"}),react.createElement(Button.Z,null,"String List"))}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    options\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Box style={{\n        width: '100%',\n        height: '150px',\n        backgroundColor: 'rgba(0,0,0,0.07)'\n      }}>\n                    context menu - right click anywhere\n                </Box>\n            </ContextMenu>;\n  }\n}",...Default.parameters?.docs?.source}}},Reopen.parameters={...Reopen.parameters,docs:{...Reopen.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    reopen: true\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Box style={{\n        width: '100%',\n        height: '150px',\n        backgroundColor: 'rgba(0,0,0,0.07)'\n      }}>\n                    context menu - right click anywhere and right click again anywhere\n                </Box>\n            </ContextMenu>;\n  }\n}",...Reopen.parameters?.docs?.source}}},AlternativeContent.parameters={...AlternativeContent.parameters,docs:{...AlternativeContent.parameters?.docs,source:{originalSource:'{\n  args: {\n    options,\n    alternativeContent: <MuiImage src="1.jpg" width={400} height={400} />\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>;\n  }\n}',...AlternativeContent.parameters?.docs?.source}}},AnchorElementRef.parameters={...AnchorElementRef.parameters,docs:{...AnchorElementRef.parameters?.docs,source:{originalSource:"{\n  args: {\n    options\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const ref = useRef();\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Box sx={{\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    }}>\n                <ContextMenu {...args} open={open} onClose={onCloseHandler} anchorElementRef={ref}>\n                    <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n                </ContextMenu>\n                <span ref={ref}>ContextMenu will popup here</span>\n            </Box>;\n  }\n}",...AnchorElementRef.parameters?.docs?.source}}},AnchorPosition.parameters={...AnchorPosition.parameters,docs:{...AnchorPosition.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    anchorPosition: {\n      vertical: 'top',\n      horizontal: 'right'\n    }\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>;\n  }\n}",...AnchorPosition.parameters?.docs?.source}}},Arrow.parameters={...Arrow.parameters,docs:{...Arrow.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    arrow: true\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>;\n  }\n}",...Arrow.parameters?.docs?.source}}},Dense.parameters={...Dense.parameters,docs:{...Dense.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    dense: true\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>;\n  }\n}",...Dense.parameters?.docs?.source}}},DisableRipple.parameters={...DisableRipple.parameters,docs:{...DisableRipple.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    disableRipple: true\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>;\n  }\n}",...DisableRipple.parameters?.docs?.source}}},Elevation.parameters={...Elevation.parameters,docs:{...Elevation.parameters?.docs,source:{originalSource:"{\n  args: {\n    options,\n    elevation: 0\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>;\n  }\n}",...Elevation.parameters?.docs?.source}}},Height.parameters={...Height.parameters,docs:{...Height.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: optionLongList,\n    height: 400\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>;\n  }\n}",...Height.parameters?.docs?.source}}},MaxHeight.parameters={...MaxHeight.parameters,docs:{...MaxHeight.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: optionLongList,\n    maxHeight: 200\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <ContextMenu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open ContextMenu</Button>\n            </ContextMenu>;\n  }\n}",...MaxHeight.parameters?.docs?.source}}},DisableScrollLock.parameters={...DisableScrollLock.parameters,docs:{...DisableScrollLock.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: shortcutOptions,\n    disableScrollLock: true,\n    children: <Button>Open ContextMenu</Button>\n  },\n  render: args => {\n    return <ContextMenu {...args} open>\n                <Button>Open ContextMenu</Button>\n            </ContextMenu>;\n  }\n}",...DisableScrollLock.parameters?.docs?.source}}},Width.parameters={...Width.parameters,docs:{...Width.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: shortcutOptions,\n    maxHeight: 200,\n    open: true,\n    width: 300,\n    children: <Button>Open ContextMenu</Button>\n  }\n}",...Width.parameters?.docs?.source}}},Options.parameters={...Options.parameters,docs:{...Options.parameters?.docs,source:{originalSource:"{\n  args: {},\n  render: args => {\n    return <Box sx={{\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    }}>\n                <ContextMenu {...args} open options={options.map(option => ({\n        ...option,\n        check: true\n      }))}>\n                    <Button>Checked List</Button>\n                </ContextMenu>\n                <ContextMenu {...args} open options={optionLongList}>\n                    <Button>String List</Button>\n                </ContextMenu>\n                <ContextMenu {...args} open options={shortcutOptions} width={200}>\n                    <Button>Shortcut & icons</Button>\n                </ContextMenu>\n                <ContextMenu {...args} open alternativeContent={<MuiImage src=\"1.jpg\" width={200} height={300} />}>\n                    <Button>Alternative Content</Button>\n                </ContextMenu>\n            </Box>;\n  }\n}",...Options.parameters?.docs?.source}}},OptionsDirectionRow.parameters={...OptionsDirectionRow.parameters,docs:{...OptionsDirectionRow.parameters?.docs,source:{originalSource:'{\n  args: {},\n  render: args => {\n    return <ContextMenu {...args} open options={optionLongList} optionsDirection="row">\n                <Button>String List</Button>\n            </ContextMenu>;\n  }\n}',...OptionsDirectionRow.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Reopen","AlternativeContent","AnchorElementRef","AnchorPosition","Arrow","Dense","DisableRipple","Elevation","Height","MaxHeight","DisableScrollLock","Width","Options","OptionsDirectionRow"]}}]);