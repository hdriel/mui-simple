"use strict";(self.webpackChunk_hdriel_mui_simple=self.webpackChunk_hdriel_mui_simple||[]).push([[2614],{"./src/components/Autocomplete/__stories__/InputAutocompleteAsync.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CountrySelect:()=>CountrySelect,Default:()=>Default,DisabledOptions:()=>DisabledOptions,FilmOptions:()=>FilmOptions,GroupedByCategories:()=>GroupedByCategories,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _Default$parameters,_Default$parameters2,_Default$parameters2$,_FilmOptions$paramete,_FilmOptions$paramete2,_FilmOptions$paramete3,_CountrySelect$parame,_CountrySelect$parame2,_CountrySelect$parame3,_GroupedByCategories$,_GroupedByCategories$2,_GroupedByCategories$3,_DisabledOptions$para,_DisabledOptions$para2,_DisabledOptions$para3,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),_mui_material__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),_InputAutocompleteAsync__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Autocomplete/InputAutocompleteAsync.tsx"),_InputAutocomplete_mocks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Autocomplete/__stories__/InputAutocomplete.mocks.ts");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}const __WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:'var _Default$parameters, _Default$parameters2, _Default$parameters2$, _FilmOptions$paramete, _FilmOptions$paramete2, _FilmOptions$paramete3, _CountrySelect$parame, _CountrySelect$parame2, _CountrySelect$parame3, _GroupedByCategories$, _GroupedByCategories$2, _GroupedByCategories$3, _DisabledOptions$para, _DisabledOptions$para2, _DisabledOptions$para3;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\nimport React, { useState } from "react";\nimport { Box, Stack } from "@mui/material";\nimport InputAutocompleteAsync from "../InputAutocompleteAsync";\nimport { countries, timeSlots, top100Films, top100FilmsWithFirstLetters } from "./InputAutocomplete.mocks";\nexport default {\n  title: "Inputs/Inputs/InputAutocompleteAsync",\n  component: InputAutocompleteAsync,\n  decorators: [Story => /*#__PURE__*/React.createElement("div", {\n    style: {\n      width: "450px",\n      padding: "1em",\n      border: "1px dashed black"\n    }\n  }, /*#__PURE__*/React.createElement(Story, null))]\n};\nexport var Default = () => {\n  return /*#__PURE__*/React.createElement(InputAutocompleteAsync, null);\n};\nexport var FilmOptions = () => {\n  var [selectedOption, _setSelectedOption] = useState(null);\n  return /*#__PURE__*/React.createElement(Stack, {\n    spacing: 4\n  }, ["filled", "standard", "outlined"].map(variant => /*#__PURE__*/React.createElement(InputAutocompleteAsync, {\n    key: variant,\n    label: "Movie",\n    selectedOption: selectedOption,\n    setSelectedOption: (e, option) => _setSelectedOption(option),\n    fetchOptionsOnFocus: true,\n    getOptionsPromise: function () {\n      var _getOptionsPromise = _asyncToGenerator(function* () {\n        return top100Films;\n      });\n      function getOptionsPromise() {\n        return _getOptionsPromise.apply(this, arguments);\n      }\n      return getOptionsPromise;\n    }(),\n    getOptionLabel: option => option.title,\n    variant: variant\n  })));\n};\nexport var CountrySelect = () => {\n  var [selectedOption, _setSelectedOption2] = useState(null);\n  return /*#__PURE__*/React.createElement(Stack, {\n    spacing: 4\n  }, ["filled", "standard", "outlined"].map((variant, index) => /*#__PURE__*/React.createElement(InputAutocompleteAsync, {\n    key: variant,\n    label: "Choose a country",\n    selectedOption: selectedOption,\n    setSelectedOption: (e, option) => _setSelectedOption2(option),\n    variant: variant,\n    fetchOptionsOnFocus: true,\n    getOptionsPromise: function () {\n      var _getOptionsPromise2 = _asyncToGenerator(function* () {\n        return countries;\n      });\n      function getOptionsPromise() {\n        return _getOptionsPromise2.apply(this, arguments);\n      }\n      return getOptionsPromise;\n    }(),\n    autoHighlight: true,\n    getOptionLabel: option => option.label,\n    renderOption: (props, option) => /*#__PURE__*/React.createElement(Box, _objectSpread({\n      component: "li",\n      sx: {\n        "& > img": {\n          mr: 2,\n          flexShrink: 0\n        }\n      }\n    }, props), /*#__PURE__*/React.createElement("img", {\n      loading: "lazy",\n      width: "20",\n      src: "https://flagcdn.com/w20/".concat(option.code.toLowerCase(), ".png"),\n      srcSet: "https://flagcdn.com/w40/".concat(option.code.toLowerCase(), ".png 2x"),\n      alt: ""\n    }), option.label, " (", option.code, ") +", option.phone)\n  })));\n};\nexport var GroupedByCategories = () => {\n  var [selectedOption, _setSelectedOption3] = useState(null);\n  return /*#__PURE__*/React.createElement(Stack, {\n    spacing: 4\n  }, ["filled", "standard", "outlined"].map(variant => /*#__PURE__*/React.createElement(InputAutocompleteAsync, {\n    key: variant,\n    id: "grouped-demo",\n    label: "With categories",\n    selectedOption: selectedOption,\n    setSelectedOption: (e, option) => _setSelectedOption3(option),\n    fetchOptionsOnFocus: true,\n    getOptionsPromise: function () {\n      var _getOptionsPromise3 = _asyncToGenerator(function* () {\n        return top100FilmsWithFirstLetters;\n      });\n      function getOptionsPromise() {\n        return _getOptionsPromise3.apply(this, arguments);\n      }\n      return getOptionsPromise;\n    }(),\n    groupBy: option => option.firstLetter,\n    sortBy: "title",\n    getOptionLabel: option => option.title,\n    width: 400\n  })));\n};\nexport var DisabledOptions = () => {\n  var [selectedOption, _setSelectedOption4] = useState(null);\n  var _options = timeSlots.slice(0).map((option, index) => ({\n    time: option,\n    disabled: index % 4 === 0\n  }));\n  return /*#__PURE__*/React.createElement(Stack, {\n    spacing: 4\n  }, ["filled", "standard", "outlined"].map(variant => /*#__PURE__*/React.createElement(InputAutocompleteAsync, {\n    key: variant,\n    variant: variant,\n    id: "grouped-demo",\n    label: "Disabled options",\n    selectedOption: selectedOption,\n    setSelectedOption: (e, option) => _setSelectedOption4(option),\n    fetchOptionsOnFocus: true,\n    getOptionsPromise: function () {\n      var _getOptionsPromise4 = _asyncToGenerator(function* () {\n        return _options;\n      });\n      function getOptionsPromise() {\n        return _getOptionsPromise4.apply(this, arguments);\n      }\n      return getOptionsPromise;\n    }(),\n    getOptionLabel: option => option.time,\n    width: 200\n  })));\n};\nDefault.parameters = _objectSpread(_objectSpread({}, Default.parameters), {}, {\n  docs: _objectSpread(_objectSpread({}, (_Default$parameters = Default.parameters) === null || _Default$parameters === void 0 ? void 0 : _Default$parameters.docs), {}, {\n    source: _objectSpread({\n      originalSource: "() => {\\n  return <InputAutocompleteAsync />;\\n}"\n    }, (_Default$parameters2 = Default.parameters) === null || _Default$parameters2 === void 0 ? void 0 : (_Default$parameters2$ = _Default$parameters2.docs) === null || _Default$parameters2$ === void 0 ? void 0 : _Default$parameters2$.source)\n  })\n});\nFilmOptions.parameters = _objectSpread(_objectSpread({}, FilmOptions.parameters), {}, {\n  docs: _objectSpread(_objectSpread({}, (_FilmOptions$paramete = FilmOptions.parameters) === null || _FilmOptions$paramete === void 0 ? void 0 : _FilmOptions$paramete.docs), {}, {\n    source: _objectSpread({\n      originalSource: "() => {\\n  const [selectedOption, setSelectedOption] = useState(null);\\n  return <Stack spacing={4}>\\n      {[\\"filled\\", \\"standard\\", \\"outlined\\"].map(variant => <InputAutocompleteAsync key={variant} label=\\"Movie\\" selectedOption={selectedOption} setSelectedOption={(e, option) => setSelectedOption(option)} fetchOptionsOnFocus getOptionsPromise={async () => top100Films} getOptionLabel={option => option.title} variant={variant} />)}\\n    </Stack>;\\n}"\n    }, (_FilmOptions$paramete2 = FilmOptions.parameters) === null || _FilmOptions$paramete2 === void 0 ? void 0 : (_FilmOptions$paramete3 = _FilmOptions$paramete2.docs) === null || _FilmOptions$paramete3 === void 0 ? void 0 : _FilmOptions$paramete3.source)\n  })\n});\nCountrySelect.parameters = _objectSpread(_objectSpread({}, CountrySelect.parameters), {}, {\n  docs: _objectSpread(_objectSpread({}, (_CountrySelect$parame = CountrySelect.parameters) === null || _CountrySelect$parame === void 0 ? void 0 : _CountrySelect$parame.docs), {}, {\n    source: _objectSpread({\n      originalSource: "() => {\\n  const [selectedOption, setSelectedOption] = useState(null);\\n  return <Stack spacing={4}>\\n      {[\\"filled\\", \\"standard\\", \\"outlined\\"].map((variant, index) => <InputAutocompleteAsync key={variant} label=\\"Choose a country\\" selectedOption={selectedOption} setSelectedOption={(e, option) => setSelectedOption(option)} variant={variant} fetchOptionsOnFocus getOptionsPromise={async () => countries} autoHighlight getOptionLabel={option => option.label} renderOption={(props, option) => <Box component=\\"li\\" sx={{\\n      \\"& > img\\": {\\n        mr: 2,\\n        flexShrink: 0\\n      }\\n    }} {...props}>\\n              <img loading=\\"lazy\\" width=\\"20\\" src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`} srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`} alt=\\"\\" />\\n              {option.label} ({option.code}) +{option.phone}\\n            </Box>} />)}\\n    </Stack>;\\n}"\n    }, (_CountrySelect$parame2 = CountrySelect.parameters) === null || _CountrySelect$parame2 === void 0 ? void 0 : (_CountrySelect$parame3 = _CountrySelect$parame2.docs) === null || _CountrySelect$parame3 === void 0 ? void 0 : _CountrySelect$parame3.source)\n  })\n});\nGroupedByCategories.parameters = _objectSpread(_objectSpread({}, GroupedByCategories.parameters), {}, {\n  docs: _objectSpread(_objectSpread({}, (_GroupedByCategories$ = GroupedByCategories.parameters) === null || _GroupedByCategories$ === void 0 ? void 0 : _GroupedByCategories$.docs), {}, {\n    source: _objectSpread({\n      originalSource: "() => {\\n  const [selectedOption, setSelectedOption] = useState(null);\\n  return <Stack spacing={4}>\\n      {[\\"filled\\", \\"standard\\", \\"outlined\\"].map(variant => <InputAutocompleteAsync key={variant} id=\\"grouped-demo\\" label=\\"With categories\\" selectedOption={selectedOption} setSelectedOption={(e, option) => setSelectedOption(option)} fetchOptionsOnFocus getOptionsPromise={async () => top100FilmsWithFirstLetters} groupBy={option => option.firstLetter} sortBy=\\"title\\" getOptionLabel={option => option.title} width={400} />)}\\n    </Stack>;\\n}"\n    }, (_GroupedByCategories$2 = GroupedByCategories.parameters) === null || _GroupedByCategories$2 === void 0 ? void 0 : (_GroupedByCategories$3 = _GroupedByCategories$2.docs) === null || _GroupedByCategories$3 === void 0 ? void 0 : _GroupedByCategories$3.source)\n  })\n});\nDisabledOptions.parameters = _objectSpread(_objectSpread({}, DisabledOptions.parameters), {}, {\n  docs: _objectSpread(_objectSpread({}, (_DisabledOptions$para = DisabledOptions.parameters) === null || _DisabledOptions$para === void 0 ? void 0 : _DisabledOptions$para.docs), {}, {\n    source: _objectSpread({\n      originalSource: "() => {\\n  const [selectedOption, setSelectedOption] = useState(null);\\n  const _options = timeSlots.slice(0).map((option, index) => ({\\n    time: option,\\n    disabled: index % 4 === 0\\n  }));\\n  return <Stack spacing={4}>\\n      {[\\"filled\\", \\"standard\\", \\"outlined\\"].map(variant => <InputAutocompleteAsync key={variant} variant={variant} id=\\"grouped-demo\\" label=\\"Disabled options\\" selectedOption={selectedOption} setSelectedOption={(e, option) => setSelectedOption(option)} fetchOptionsOnFocus getOptionsPromise={async () => _options} getOptionLabel={option => option.time} width={200} />)}\\n    </Stack>;\\n}"\n    }, (_DisabledOptions$para2 = DisabledOptions.parameters) === null || _DisabledOptions$para2 === void 0 ? void 0 : (_DisabledOptions$para3 = _DisabledOptions$para2.docs) === null || _DisabledOptions$para3 === void 0 ? void 0 : _DisabledOptions$para3.source)\n  })\n});',locationsMap:{default:{startLoc:{col:21,line:24},endLoc:{col:1,line:26},startBody:{col:21,line:24},endBody:{col:1,line:26}},"film-options":{startLoc:{col:25,line:27},endLoc:{col:1,line:49},startBody:{col:25,line:27},endBody:{col:1,line:49}},"country-select":{startLoc:{col:27,line:50},endLoc:{col:1,line:88},startBody:{col:27,line:50},endBody:{col:1,line:88}},"grouped-by-categories":{startLoc:{col:33,line:89},endLoc:{col:1,line:114},startBody:{col:33,line:89},endBody:{col:1,line:114}},"disabled-options":{startLoc:{col:29,line:115},endLoc:{col:1,line:143},startBody:{col:29,line:115},endBody:{col:1,line:143}}}}},title:"Inputs/Inputs/InputAutocompleteAsync",component:_InputAutocompleteAsync__WEBPACK_IMPORTED_MODULE_1__.Z,decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"450px",padding:"1em",border:"1px dashed black"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]};var Default=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputAutocompleteAsync__WEBPACK_IMPORTED_MODULE_1__.Z,null),FilmOptions=()=>{var[selectedOption,_setSelectedOption]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__.Z,{spacing:4},["filled","standard","outlined"].map((variant=>{return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputAutocompleteAsync__WEBPACK_IMPORTED_MODULE_1__.Z,{key:variant,label:"Movie",selectedOption,setSelectedOption:(e,option)=>_setSelectedOption(option),fetchOptionsOnFocus:!0,getOptionsPromise:(_getOptionsPromise=_asyncToGenerator((function*(){return _InputAutocomplete_mocks__WEBPACK_IMPORTED_MODULE_2__.gE})),function getOptionsPromise(){return _getOptionsPromise.apply(this,arguments)}),getOptionLabel:option=>option.title,variant});var _getOptionsPromise})))},CountrySelect=()=>{var[selectedOption,_setSelectedOption2]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__.Z,{spacing:4},["filled","standard","outlined"].map(((variant,index)=>{return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputAutocompleteAsync__WEBPACK_IMPORTED_MODULE_1__.Z,{key:variant,label:"Choose a country",selectedOption,setSelectedOption:(e,option)=>_setSelectedOption2(option),variant,fetchOptionsOnFocus:!0,getOptionsPromise:(_getOptionsPromise2=_asyncToGenerator((function*(){return _InputAutocomplete_mocks__WEBPACK_IMPORTED_MODULE_2__.hW})),function getOptionsPromise(){return _getOptionsPromise2.apply(this,arguments)}),autoHighlight:!0,getOptionLabel:option=>option.label,renderOption:(props,option)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__.Z,_objectSpread({component:"li",sx:{"& > img":{mr:2,flexShrink:0}}},props),react__WEBPACK_IMPORTED_MODULE_0__.createElement("img",{loading:"lazy",width:"20",src:"https://flagcdn.com/w20/".concat(option.code.toLowerCase(),".png"),srcSet:"https://flagcdn.com/w40/".concat(option.code.toLowerCase(),".png 2x"),alt:""}),option.label," (",option.code,") +",option.phone)});var _getOptionsPromise2})))},GroupedByCategories=()=>{var[selectedOption,_setSelectedOption3]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__.Z,{spacing:4},["filled","standard","outlined"].map((variant=>{return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputAutocompleteAsync__WEBPACK_IMPORTED_MODULE_1__.Z,{key:variant,id:"grouped-demo",label:"With categories",selectedOption,setSelectedOption:(e,option)=>_setSelectedOption3(option),fetchOptionsOnFocus:!0,getOptionsPromise:(_getOptionsPromise3=_asyncToGenerator((function*(){return _InputAutocomplete_mocks__WEBPACK_IMPORTED_MODULE_2__.K$})),function getOptionsPromise(){return _getOptionsPromise3.apply(this,arguments)}),groupBy:option=>option.firstLetter,sortBy:"title",getOptionLabel:option=>option.title,width:400});var _getOptionsPromise3})))},DisabledOptions=()=>{var[selectedOption,_setSelectedOption4]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),_options=_InputAutocomplete_mocks__WEBPACK_IMPORTED_MODULE_2__.bp.slice(0).map(((option,index)=>({time:option,disabled:index%4==0})));return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__.Z,{spacing:4},["filled","standard","outlined"].map((variant=>{return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputAutocompleteAsync__WEBPACK_IMPORTED_MODULE_1__.Z,{key:variant,variant,id:"grouped-demo",label:"Disabled options",selectedOption,setSelectedOption:(e,option)=>_setSelectedOption4(option),fetchOptionsOnFocus:!0,getOptionsPromise:(_getOptionsPromise4=_asyncToGenerator((function*(){return _options})),function getOptionsPromise(){return _getOptionsPromise4.apply(this,arguments)}),getOptionLabel:option=>option.time,width:200});var _getOptionsPromise4})))};Default.parameters=_objectSpread(_objectSpread({},Default.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_Default$parameters=Default.parameters)||void 0===_Default$parameters?void 0:_Default$parameters.docs),{},{source:_objectSpread({originalSource:"() => {\n  return <InputAutocompleteAsync />;\n}"},null===(_Default$parameters2=Default.parameters)||void 0===_Default$parameters2||null===(_Default$parameters2$=_Default$parameters2.docs)||void 0===_Default$parameters2$?void 0:_Default$parameters2$.source)})}),FilmOptions.parameters=_objectSpread(_objectSpread({},FilmOptions.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_FilmOptions$paramete=FilmOptions.parameters)||void 0===_FilmOptions$paramete?void 0:_FilmOptions$paramete.docs),{},{source:_objectSpread({originalSource:'() => {\n  const [selectedOption, setSelectedOption] = useState(null);\n  return <Stack spacing={4}>\n      {["filled", "standard", "outlined"].map(variant => <InputAutocompleteAsync key={variant} label="Movie" selectedOption={selectedOption} setSelectedOption={(e, option) => setSelectedOption(option)} fetchOptionsOnFocus getOptionsPromise={async () => top100Films} getOptionLabel={option => option.title} variant={variant} />)}\n    </Stack>;\n}'},null===(_FilmOptions$paramete2=FilmOptions.parameters)||void 0===_FilmOptions$paramete2||null===(_FilmOptions$paramete3=_FilmOptions$paramete2.docs)||void 0===_FilmOptions$paramete3?void 0:_FilmOptions$paramete3.source)})}),CountrySelect.parameters=_objectSpread(_objectSpread({},CountrySelect.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_CountrySelect$parame=CountrySelect.parameters)||void 0===_CountrySelect$parame?void 0:_CountrySelect$parame.docs),{},{source:_objectSpread({originalSource:'() => {\n  const [selectedOption, setSelectedOption] = useState(null);\n  return <Stack spacing={4}>\n      {["filled", "standard", "outlined"].map((variant, index) => <InputAutocompleteAsync key={variant} label="Choose a country" selectedOption={selectedOption} setSelectedOption={(e, option) => setSelectedOption(option)} variant={variant} fetchOptionsOnFocus getOptionsPromise={async () => countries} autoHighlight getOptionLabel={option => option.label} renderOption={(props, option) => <Box component="li" sx={{\n      "& > img": {\n        mr: 2,\n        flexShrink: 0\n      }\n    }} {...props}>\n              <img loading="lazy" width="20" src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`} srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`} alt="" />\n              {option.label} ({option.code}) +{option.phone}\n            </Box>} />)}\n    </Stack>;\n}'},null===(_CountrySelect$parame2=CountrySelect.parameters)||void 0===_CountrySelect$parame2||null===(_CountrySelect$parame3=_CountrySelect$parame2.docs)||void 0===_CountrySelect$parame3?void 0:_CountrySelect$parame3.source)})}),GroupedByCategories.parameters=_objectSpread(_objectSpread({},GroupedByCategories.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_GroupedByCategories$=GroupedByCategories.parameters)||void 0===_GroupedByCategories$?void 0:_GroupedByCategories$.docs),{},{source:_objectSpread({originalSource:'() => {\n  const [selectedOption, setSelectedOption] = useState(null);\n  return <Stack spacing={4}>\n      {["filled", "standard", "outlined"].map(variant => <InputAutocompleteAsync key={variant} id="grouped-demo" label="With categories" selectedOption={selectedOption} setSelectedOption={(e, option) => setSelectedOption(option)} fetchOptionsOnFocus getOptionsPromise={async () => top100FilmsWithFirstLetters} groupBy={option => option.firstLetter} sortBy="title" getOptionLabel={option => option.title} width={400} />)}\n    </Stack>;\n}'},null===(_GroupedByCategories$2=GroupedByCategories.parameters)||void 0===_GroupedByCategories$2||null===(_GroupedByCategories$3=_GroupedByCategories$2.docs)||void 0===_GroupedByCategories$3?void 0:_GroupedByCategories$3.source)})}),DisabledOptions.parameters=_objectSpread(_objectSpread({},DisabledOptions.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_DisabledOptions$para=DisabledOptions.parameters)||void 0===_DisabledOptions$para?void 0:_DisabledOptions$para.docs),{},{source:_objectSpread({originalSource:'() => {\n  const [selectedOption, setSelectedOption] = useState(null);\n  const _options = timeSlots.slice(0).map((option, index) => ({\n    time: option,\n    disabled: index % 4 === 0\n  }));\n  return <Stack spacing={4}>\n      {["filled", "standard", "outlined"].map(variant => <InputAutocompleteAsync key={variant} variant={variant} id="grouped-demo" label="Disabled options" selectedOption={selectedOption} setSelectedOption={(e, option) => setSelectedOption(option)} fetchOptionsOnFocus getOptionsPromise={async () => _options} getOptionLabel={option => option.time} width={200} />)}\n    </Stack>;\n}'},null===(_DisabledOptions$para2=DisabledOptions.parameters)||void 0===_DisabledOptions$para2||null===(_DisabledOptions$para3=_DisabledOptions$para2.docs)||void 0===_DisabledOptions$para3?void 0:_DisabledOptions$para3.source)})});var __namedExportsOrder=["Default","FilmOptions","CountrySelect","GroupedByCategories","DisabledOptions"]},"./src/components/Autocomplete/InputAutocompleteAsync.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>InputAutocompleteAsync,m:()=>useAutoCompleteAsync});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__),_InputAutocomplete__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Autocomplete/InputAutocomplete.tsx"),_Progress_CircularProgress_CircularProgress__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Progress/CircularProgress/CircularProgress.tsx"),_utils_helpers__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/utils/helpers.ts");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}function useAutoCompleteAsync(_ref){var{getOptionsPromise,sleep:_sleep,getOptionsCallback,fetchOptionsOnFocus}=_ref,[open,setOpen]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[options,setOptions]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),[loading,setLoading]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1);(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{var active=!0;if(open&&!options.length)return getOptionsPromise&&(setLoading(!0),getOptionsPromise().then(function(){var _ref2=_asyncToGenerator((function*(options){return yield(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_3__._v)(_sleep),options}));return function(_x){return _ref2.apply(this,arguments)}}()).then(function(){var _ref3=_asyncToGenerator((function*(options){var _getOptionsCallback;return null!==(_getOptionsCallback=null==getOptionsCallback?void 0:getOptionsCallback())&&void 0!==_getOptionsCallback?_getOptionsCallback:[...options]}));return function(_x2){return _ref3.apply(this,arguments)}}()).then((options=>active&&setOptions(options))).finally((()=>setLoading(!1)))),()=>{active=!1}}),[open,getOptionsPromise]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{!open&&fetchOptionsOnFocus&&setOptions([])}),[open,fetchOptionsOnFocus]);var endCmp=loading?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Progress_CircularProgress_CircularProgress__WEBPACK_IMPORTED_MODULE_2__.Z,{color:"inherit",size:20}):null;return{onOpen:()=>setOpen(!0),onClose:()=>setOpen(!1),options,open,loading,endCmp}}function InputAutocompleteAsync(_ref4){var props=_extends({},(function _objectDestructuringEmpty(obj){if(null==obj)throw new TypeError("Cannot destructure "+obj)}(_ref4),_ref4)),asyncProps=useAutoCompleteAsync(props);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputAutocomplete__WEBPACK_IMPORTED_MODULE_1__.Z,_objectSpread(_objectSpread({},props),asyncProps))}InputAutocompleteAsync.propTypes={getOptionLabel:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func,getOptionsPromise:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func,sleep:prop_types__WEBPACK_IMPORTED_MODULE_4___default().number,fetchOptionsOnFocus:prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool},InputAutocompleteAsync.defaultProps={getOptionLabel:void 0,getOptionsPromise:void 0,sleep:1e3,fetchOptionsOnFocus:void 0};try{useAutoCompleteAsync.displayName="useAutoCompleteAsync",useAutoCompleteAsync.__docgenInfo={description:"",displayName:"useAutoCompleteAsync",props:{getOptionsPromise:{defaultValue:{value:"undefined"},description:"",name:"getOptionsPromise",required:!1,type:{name:"any"}},sleep:{defaultValue:{value:"1000"},description:"",name:"sleep",required:!1,type:{name:"any"}},getOptionsCallback:{defaultValue:null,description:"",name:"getOptionsCallback",required:!0,type:{name:"any"}},fetchOptionsOnFocus:{defaultValue:{value:"undefined"},description:"",name:"fetchOptionsOnFocus",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Autocomplete/InputAutocompleteAsync.tsx#useAutoCompleteAsync"]={docgenInfo:useAutoCompleteAsync.__docgenInfo,name:"useAutoCompleteAsync",path:"src/components/Autocomplete/InputAutocompleteAsync.tsx#useAutoCompleteAsync"})}catch(__react_docgen_typescript_loader_error){}try{InputAutocompleteAsync.displayName="InputAutocompleteAsync",InputAutocompleteAsync.__docgenInfo={description:"",displayName:"InputAutocompleteAsync",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Autocomplete/InputAutocompleteAsync.tsx#InputAutocompleteAsync"]={docgenInfo:InputAutocompleteAsync.__docgenInfo,name:"InputAutocompleteAsync",path:"src/components/Autocomplete/InputAutocompleteAsync.tsx#InputAutocompleteAsync"})}catch(__react_docgen_typescript_loader_error){}}}]);