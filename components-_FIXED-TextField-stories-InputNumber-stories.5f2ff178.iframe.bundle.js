"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[3346],{"./src/components/_FIXED/TextField/stories/InputNumber.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AlignActions:()=>AlignActions,AlignActionsExternal:()=>AlignActionsExternal,AllowEmptyFormatting:()=>AllowEmptyFormatting,CmpSpacing:()=>CmpSpacing,ColorActive:()=>ColorActive,ColorLabel:()=>ColorLabel,ColorText:()=>ColorText,DecimalSeparator_:()=>DecimalSeparator_,Decimal_:()=>Decimal_,Default:()=>Default,Direction:()=>Direction,Disabled:()=>Disabled,EmptyFormatPlaceholder:()=>EmptyFormatPlaceholder,EndCmpExternal_:()=>EndCmpExternal_,EndCmp_:()=>EndCmp_,Error:()=>Error,FixedDecimalScale:()=>FixedDecimalScale,Focused:()=>Focused,Format:()=>Format,FullWidth:()=>FullWidth,HelperText:()=>HelperText,HideStartActionsOnEmpty_:()=>HideStartActionsOnEmpty_,Label:()=>Label,LetterSpacing:()=>LetterSpacing,Margin_:()=>Margin_,Mask:()=>Mask,Max:()=>Max,Min:()=>Min,OnChangeText:()=>OnChangeText,PatternChar:()=>PatternChar,Prefix:()=>Prefix,Range:()=>Range,ReadOnly:()=>ReadOnly,Required:()=>Required,SelectAllOnFocus:()=>SelectAllOnFocus,Slider:()=>InputNumber_stories_Slider,SliderLabel:()=>SliderLabel,SliderTooltip:()=>SliderTooltip,StartCmpExternal_:()=>StartCmpExternal_,StartCmp_:()=>StartCmp_,StepRange:()=>StepRange,Suffix:()=>Suffix,TextAlign:()=>TextAlign,ThousandSeparator_:()=>ThousandSeparator_,Type:()=>Type,Value:()=>Value,ValueIsNumericString:()=>ValueIsNumericString,Variant_:()=>Variant_,__namedExportsOrder:()=>__namedExportsOrder,default:()=>InputNumber_stories});var react=__webpack_require__("./node_modules/react/index.js"),react_number_format_es=__webpack_require__("./node_modules/react-number-format/dist/react-number-format.es.js"),ClickAwayListener=__webpack_require__("./node_modules/@mui/material/node_modules/@mui/base/ClickAwayListener/ClickAwayListener.js"),styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),useTheme=__webpack_require__("./node_modules/@mui/material/styles/useTheme.js"),debounce=__webpack_require__("./node_modules/lodash-es/debounce.js"),TextField=__webpack_require__("./src/components/_FIXED/TextField/TextField.tsx"),helpers=__webpack_require__("./src/utils/helpers.ts"),TextField_styled=__webpack_require__("./src/components/_FIXED/TextField/TextField.styled.tsx"),Slider=__webpack_require__("./src/components/_FIXED/Slider/Slider.tsx"),SVGIcon=__webpack_require__("./src/components/_FIXED/SVGIcon/SVGIcon.tsx"),__makeTemplateObject=function(cooked,raw){return Object.defineProperty?Object.defineProperty(cooked,"raw",{value:raw}):cooked.raw=raw,cooked},_excluded=["colorActive","debounceDelay","decimalSeparator","disabled","emptyFormatPlaceholder","endCmp","format","label","mask","max","min","name","onBlur","onChange","selectAllOnFocus","slider","sliderLabel","sliderTooltip","step","thousandSeparator","value","valueIsNumericString"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var InputNumber_TextField=(0,styled.ZP)((function(props){return react.createElement(TextField.Z,_extends({},props,{type:"text"}))}),{shouldForwardProp:function(propName){return!["patternChar","allowEmptyFormatting","thousandSeparator","fixedDecimalScale","decimalSeparator"].includes(propName)}})(templateObject_1||(templateObject_1=__makeTemplateObject([""],[""]))),InputNumber=function(_ref){var _a,_b,colorActive=_ref.colorActive,debounceDelay=_ref.debounceDelay,decimalSeparator=_ref.decimalSeparator,disabled=_ref.disabled,_endCmp=(_ref.emptyFormatPlaceholder,_ref.endCmp),format=_ref.format,label=_ref.label,mask=_ref.mask,max=_ref.max,min=_ref.min,name=_ref.name,onBlur=_ref.onBlur,onChange=_ref.onChange,selectAllOnFocus=_ref.selectAllOnFocus,slider=_ref.slider,sliderLabel=_ref.sliderLabel,sliderTooltip=_ref.sliderTooltip,step=_ref.step,thousandSeparator=_ref.thousandSeparator,value=_ref.value,props=(_ref.valueIsNumericString,_objectWithoutProperties(_ref,_excluded)),theme=(0,useTheme.Z)(),ref=(0,react.useRef)(null),_c=(0,react.useState)(!1),onFocus=_c[0],setOnFocus=_c[1],_d=(0,react.useState)(!1),showSlider=_d[0],setShowSlider=_d[1],showSliderAsEndCmp=(0,helpers.$K)(min)&&(0,helpers.$K)(max)&&slider,showSliderHandler=function(forceValue){setShowSlider((function(v){return null!=forceValue?forceValue:!v}))},endCmp="string"==typeof _endCmp?react.createElement(SVGIcon.Z,null,_endCmp):_endCmp,handleOnChange=debounceDelay?(0,debounce.Z)(onChange,debounceDelay):onChange,sliderLabelDebounce=(0,react.useState)((function(){return(0,debounce.Z)((function(v){if("function"!=typeof sliderLabel)return(0,helpers.$K)(sliderLabel)?sliderLabel:"".concat(label?"".concat(label,": "):"").concat(v);sliderLabel(v)}),100,{leading:!1,trailing:!0})}))[0],color=(0,helpers.q4)({theme,customColor:colorActive})[0],CMP=format?react_number_format_es.HH:react_number_format_es.h3;return react.createElement(ClickAwayListener.Z,{onClickAway:function(){showSliderHandler(!1),setOnFocus(!1)}},react.createElement(TextField_styled.xu,{sx:{position:"relative",width:"100%"},ref},react.createElement(CMP,_extends({},props,{label,value:String("boolean"!=typeof decimalSeparator||decimalSeparator?value:~~value),name,disabled,min,max,step,mask,format,colorActive,thousandSeparator:"string"==typeof thousandSeparator?thousandSeparator:thousandSeparator?",":void 0,decimalSeparator:"string"==typeof decimalSeparator?decimalSeparator:decimalSeparator?".":void 0,valueIsNumericString:"string"==typeof value,autoComplete:"off",onBlur:function(e){var _a,_b,_c,value=+(null!==(_c=null===(_b=null===(_a=e.target.value)||void 0===_a?void 0:_a.replaceAll)||void 0===_b?void 0:_b.call(_a,/,/gi,""))&&void 0!==_c?_c:0);""===e.target.value?null==onChange||onChange(e):(0,helpers.$K)(min)&&value<min?(e.target.value=min,null==onChange||onChange(e)):(0,helpers.$K)(max)&&value>max&&(e.target.value=max,null==onChange||onChange(e)),null==onBlur||onBlur(e)},customInput:InputNumber_TextField,type:"number",endCmp:react.createElement(react.Fragment,null,endCmp,showSliderAsEndCmp?react.createElement(TextField_styled.j9,{customColor:onFocus?color:void 0,onClick:showSliderHandler,tooltipProps:{title:sliderTooltip}}):void 0),onFocus:function(e){selectAllOnFocus&&e.target.select(),setOnFocus(!0)},onValueChange:function(values){var value=values.floatValue;null==handleOnChange||handleOnChange({target:{name,value}})}})),showSlider&&react.createElement(TextField_styled.xu,{sx:{position:"absolute",width:null!==(_b=null===(_a=ref.current)||void 0===_a?void 0:_a.clientWidth)&&void 0!==_b?_b:0,bottom:"-26px",left:"0px",zIndex:0,px:"5px",boxSizing:"border-box"}},react.createElement(Slider.Z,{customColor:color,value:+value,disabled,onChange:function(event,newValue){null==onChange||onChange({target:{name,value:newValue}})},valueLabelFormat:sliderLabelDebounce,min,max,step,startIcon:min,endIcon:max,disablePadding:!0}))))};InputNumber.displayName="InputNumber",InputNumber.defaultProps={allowEmptyFormatting:!0,colorActive:"primary",decimal:2,decimalSeparator:void 0,disabled:void 0,emptyFormatPlaceholder:void 0,fixedDecimalScale:!0,format:void 0,mask:"_",max:void 0,min:void 0,name:void 0,onBlur:void 0,onChange:void 0,patternChar:"#",prefix:void 0,selectAllOnFocus:!0,slider:!0,sliderLabel:void 0,sliderTooltip:"slider",step:void 0,suffix:void 0,thousandSeparator:!0,value:void 0,valueIsNumericString:!0};const TextField_InputNumber=InputNumber;var templateObject_1;try{InputNumber.displayName="InputNumber",InputNumber.__docgenInfo={description:"",displayName:"InputNumber",props:{alignActions:{defaultValue:null,description:"",name:"alignActions",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"start"'},{value:'"end"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"normal"'},{value:'"baseline"'},{value:'"first baseline"'},{value:'"last baseline"'},{value:'"space-between"'},{value:'"space-around"'},{value:'"space-evenly"'},{value:'"stretch"'},{value:'"safe center"'},{value:'"unsafe center"'},{value:'"inherit"'},{value:'"initial"'},{value:'"revert"'},{value:'"revert-layer"'},{value:'"unset"'}]}},alignActionsExternal:{defaultValue:null,description:"",name:"alignActionsExternal",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"start"'},{value:'"end"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"normal"'},{value:'"baseline"'},{value:'"first baseline"'},{value:'"last baseline"'},{value:'"space-between"'},{value:'"space-around"'},{value:'"space-evenly"'},{value:'"stretch"'},{value:'"safe center"'},{value:'"unsafe center"'},{value:'"inherit"'},{value:'"initial"'},{value:'"revert"'},{value:'"revert-layer"'},{value:'"unset"'}]}},autoComplete:{defaultValue:null,description:"",name:"autoComplete",required:!1,type:{name:"string"}},cmpSpacing:{defaultValue:null,description:"",name:"cmpSpacing",required:!1,type:{name:"number"}},colorActive:{defaultValue:{value:"primary"},description:"",name:"colorActive",required:!1,type:{name:"string"}},colorLabel:{defaultValue:null,description:"",name:"colorLabel",required:!1,type:{name:"string"}},colorText:{defaultValue:null,description:"",name:"colorText",required:!1,type:{name:"string"}},debounceDelay:{defaultValue:null,description:"",name:"debounceDelay",required:!1,type:{name:"number"}},direction:{defaultValue:null,description:"",name:"direction",required:!1,type:{name:"enum",value:[{value:'"ltr"'},{value:'"rtl"'}]}},disabled:{defaultValue:{value:"undefined"},description:"",name:"disabled",required:!1,type:{name:"boolean"}},endCmp:{defaultValue:null,description:"",name:"endCmp",required:!1,type:{name:"ReactNode"}},endCmpExternal:{defaultValue:null,description:"",name:"endCmpExternal",required:!1,type:{name:"ReactNode"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"boolean"}},focused:{defaultValue:null,description:"",name:"focused",required:!1,type:{name:"boolean"}},fullWidth:{defaultValue:null,description:"",name:"fullWidth",required:!1,type:{name:"boolean"}},helperText:{defaultValue:null,description:"",name:"helperText",required:!1,type:{name:"string"}},hideStartActionsOnEmpty:{defaultValue:null,description:"",name:"hideStartActionsOnEmpty",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},letterSpacing:{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"string | number"}},margin:{defaultValue:null,description:"",name:"margin",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"dense"'}]}},maxRows:{defaultValue:null,description:"",name:"maxRows",required:!1,type:{name:"number"}},multiline:{defaultValue:null,description:"",name:"multiline",required:!1,type:{name:"boolean"}},name:{defaultValue:{value:"undefined"},description:"",name:"name",required:!1,type:{name:"string"}},onBlur:{defaultValue:{value:"undefined"},description:"",name:"onBlur",required:!1,type:{name:"((Event: any) => void) & ((event: any) => void)"}},onChange:{defaultValue:{value:"undefined"},description:"",name:"onChange",required:!1,type:{name:"((Event: any) => void) & ((event: any) => void)"}},onEnterKeyPress:{defaultValue:null,description:"",name:"onEnterKeyPress",required:!1,type:{name:"(Event: any) => void"}},onKeyPress:{defaultValue:null,description:"",name:"onKeyPress",required:!1,type:{name:"(Event: any) => void"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"(Event: any) => void"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},rows:{defaultValue:null,description:"",name:"rows",required:!1,type:{name:"number"}},startCmp:{defaultValue:null,description:"",name:"startCmp",required:!1,type:{name:"ReactNode"}},startCmpExternal:{defaultValue:null,description:"",name:"startCmpExternal",required:!1,type:{name:"ReactNode"}},textAlign:{defaultValue:null,description:"",name:"textAlign",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"start"'},{value:'"end"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"normal"'},{value:'"baseline"'},{value:'"first baseline"'},{value:'"last baseline"'},{value:'"space-between"'},{value:'"space-around"'},{value:'"space-evenly"'},{value:'"stretch"'},{value:'"safe center"'},{value:'"unsafe center"'},{value:'"inherit"'},{value:'"initial"'},{value:'"revert"'},{value:'"revert-layer"'},{value:'"unset"'}]}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"string"}},value:{defaultValue:{value:"undefined"},description:"",name:"value",required:!1,type:{name:"any"}},variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"filled"'},{value:'"standard"'},{value:'"outlined"'}]}},allowEmptyFormatting:{defaultValue:{value:"true"},description:"",name:"allowEmptyFormatting",required:!1,type:{name:"boolean"}},decimal:{defaultValue:{value:"2"},description:"",name:"decimal",required:!1,type:{name:"number"}},decimalScale:{defaultValue:null,description:"",name:"decimalScale",required:!1,type:{name:"number"}},decimalSeparator:{defaultValue:{value:"undefined"},description:"",name:"decimalSeparator",required:!1,type:{name:"string | boolean"}},emptyFormatPlaceholder:{defaultValue:{value:"undefined"},description:"",name:"emptyFormatPlaceholder",required:!1,type:{name:"string"}},fixedDecimalScale:{defaultValue:{value:"true"},description:"",name:"fixedDecimalScale",required:!1,type:{name:"boolean"}},format:{defaultValue:{value:"undefined"},description:"",name:"format",required:!1,type:{name:"string"}},mask:{defaultValue:{value:"_"},description:"",name:"mask",required:!1,type:{name:"string"}},max:{defaultValue:{value:"undefined"},description:"",name:"max",required:!1,type:{name:"number"}},min:{defaultValue:{value:"undefined"},description:"",name:"min",required:!1,type:{name:"number"}},patternChar:{defaultValue:{value:"#"},description:"",name:"patternChar",required:!1,type:{name:"string"}},prefix:{defaultValue:{value:"undefined"},description:"",name:"prefix",required:!1,type:{name:"ReactNode"}},selectAllOnFocus:{defaultValue:{value:"true"},description:"",name:"selectAllOnFocus",required:!1,type:{name:"boolean"}},slider:{defaultValue:{value:"true"},description:"",name:"slider",required:!1,type:{name:"boolean"}},sliderLabel:{defaultValue:{value:"undefined"},description:"",name:"sliderLabel",required:!1,type:{name:"string | ((value: string | number) => string)"}},sliderTooltip:{defaultValue:{value:"slider"},description:"",name:"sliderTooltip",required:!1,type:{name:"string"}},step:{defaultValue:{value:"undefined"},description:"",name:"step",required:!1,type:{name:"number"}},suffix:{defaultValue:{value:"undefined"},description:"",name:"suffix",required:!1,type:{name:"ReactNode"}},thousandSeparator:{defaultValue:{value:"true"},description:"",name:"thousandSeparator",required:!1,type:{name:"string | boolean"}},valueIsNumericString:{defaultValue:{value:"true"},description:"",name:"valueIsNumericString",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TextField/InputNumber.tsx#InputNumber"]={docgenInfo:InputNumber.__docgenInfo,name:"InputNumber",path:"src/components/_FIXED/TextField/InputNumber.tsx#InputNumber"})}catch(__react_docgen_typescript_loader_error){}var Stack=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),Send=__webpack_require__("./node_modules/@mui/icons-material/esm/Send.js");function InputNumber_stories_extends(){return InputNumber_stories_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},InputNumber_stories_extends.apply(this,arguments)}const InputNumber_stories={parameters:{storySource:{source:"\nimport React, { useState } from 'react';\nimport type { ReactElement } from 'react';\nimport type { Meta, StoryObj } from '@storybook/react';\n\nimport InputNumber from '../InputNumber';\nimport { Stack } from '@mui/material';\nimport { Send as SendIcon } from '@mui/icons-material';\n\nconst meta: Meta<typeof InputNumber> = {\n    title: 'Inputs/Inputs/InputNumber',\n    component: InputNumber,\n    tags: ['autodocs'],\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof InputNumber>;\n\nexport const Default: Story = {\n    args: {},\n};\n\nexport const TextAlign: Story = {\n    args: {\n        label: 'Text Align',\n        textAlign: 'center',\n        value: 15453,\n    },\n};\n\nexport const Direction: Story = {\n    args: {\n        label: 'RTL Direction',\n        direction: 'rtl',\n        value: 15453,\n    },\n};\n\nexport const LetterSpacing: Story = {\n    args: {\n        label: 'Letter Spacing',\n        letterSpacing: '5px',\n        value: 111111,\n    },\n};\n\nexport const AlignActions: Story = {\n    args: {\n        alignActions: 'flex-start',\n        startCmp: 'Email',\n        endCmp: 'Fingerprint',\n        label: 'Align Actions',\n        value: 15548789,\n    },\n};\n\nexport const AlignActionsExternal: Story = {\n    args: {\n        alignActions: 'flex-start',\n        startCmpExternal: 'Email',\n        endCmpExternal: 'Fingerprint',\n        label: 'Align Actions External',\n        value: 5080484,\n    },\n};\n\nexport const CmpSpacing: Story = {\n    args: {\n        alignActions: 'flex-start',\n        startCmp: 'Email',\n        endCmp: 'Fingerprint',\n        cmpSpacing: 6,\n        label: 'Cmp Spacing',\n        value: 10550,\n    },\n};\n\nexport const ColorActive: Story = {\n    args: {\n        colorActive: 'warning',\n        label: 'Color Active',\n        value: 99708,\n    },\n};\n\nexport const ColorLabel: Story = {\n    args: {\n        colorLabel: 'success',\n        label: 'Color Label',\n        value: 880015,\n    },\n};\n\nexport const ColorText: Story = {\n    args: {\n        colorText: '#D10DAA',\n        label: 'Color Text',\n        value: 200303,\n    },\n};\n\nexport const Disabled: Story = {\n    args: {\n        colorText: '#D10DAA',\n        label: 'Disabled',\n        value: 6650480,\n        disabled: true,\n    },\n};\n\nexport const EndCmp_ = (args): ReactElement => (\n    <Stack spacing={3}>\n        <InputNumber endCmp=\"Send\" label=\"End Cmp\" value=\"endCmp with mui icon name or mui icon element\" />\n        <InputNumber endCmp={<SendIcon />} label=\"End Cmp\" value=\"endCmp with mui icon name or mui icon element\" />\n    </Stack>\n);\n\nexport const EndCmpExternal_ = (args): ReactElement => (\n    <Stack spacing={3}>\n        <InputNumber endCmpExternal=\"Send\" label=\"End Cmp External\" value={808080} />\n        <InputNumber endCmpExternal={<SendIcon />} label=\"End Cmp External\" value={840840} />\n    </Stack>\n);\n\nexport const Error: Story = {\n    args: {\n        error: true,\n        label: 'With Error',\n        value: 0,\n    },\n};\n\nexport const Focused: Story = {\n    args: {\n        focused: true,\n        label: 'Focused',\n        value: 58000,\n    },\n};\n\nexport const FullWidth: Story = {\n    args: {\n        fullWidth: false,\n        label: 'Not FullWidth',\n        value: 998989,\n    },\n};\n\nexport const HelperText: Story = {\n    args: {\n        helperText: 'some helperText',\n        label: 'HelperText',\n        value: 770807,\n    },\n};\n\nexport const HideStartActionsOnEmpty_ = (args): ReactElement => (\n    <Stack spacing={3}>\n        <InputNumber\n            hideStartActionsOnEmpty={true}\n            startCmp=\"Send\"\n            endCmp=\"Fingerprint\"\n            label=\"Hide Start Actions OnEmpty\"\n        />\n        <InputNumber\n            hideStartActionsOnEmpty={false}\n            startCmp=\"Send\"\n            endCmp=\"Fingerprint\"\n            label=\"Not Hide Start Actions OnEmpty\"\n        />\n    </Stack>\n);\n\nexport const Label: Story = {\n    args: {\n        label: 'Some Label Input',\n    },\n};\n\nexport const Margin_ = (args): ReactElement => (\n    <Stack>\n        <div style={{ backgroundColor: '#8d8773', textAlign: 'center' }}>some text for see the margin</div>\n        <InputNumber label=\"None Margin\" />\n        <div style={{ backgroundColor: '#8d8773', textAlign: 'center' }}>some text for see the margin</div>\n        <InputNumber margin=\"normal\" label=\"Normal Margin\" />\n        <div style={{ backgroundColor: '#8d8773', textAlign: 'center' }}>some text for see the margin</div>\n        <InputNumber margin=\"dense\" label=\"Dense Margin\" />\n        <div style={{ backgroundColor: '#8d8773', textAlign: 'center' }}>some text for see the margin</div>\n    </Stack>\n);\n\nexport const OnChangeText: Story = {\n    args: {\n        label: 'text field state',\n    },\n    render: (args) => {\n        const [value, setValue] = useState('');\n        return <InputNumber {...args} value={value} onChange={(e) => setValue(e.target.value)} />;\n    },\n};\n\nexport const ReadOnly: Story = {\n    args: {\n        readOnly: true,\n        label: 'Read Only',\n    },\n    render: (args) => {\n        const [value, setValue] = useState(15050);\n        return <InputNumber {...args} value={value} onChange={(e) => setValue(e.target.value)} />;\n    },\n};\n\nexport const Required: Story = {\n    args: {\n        required: true,\n        label: 'Required field',\n    },\n};\n\nexport const StartCmp_ = (args): ReactElement => (\n    <Stack spacing={3}>\n        <InputNumber startCmp=\"Send\" label=\"Start Cmp\" value={10005} />\n        <InputNumber startCmp={<SendIcon />} label=\"Start Cmp\" value={10005} />\n    </Stack>\n);\n\nexport const StartCmpExternal_ = (args): ReactElement => (\n    <Stack spacing={3}>\n        <InputNumber startCmpExternal=\"Send\" label=\"Start Cmp External\" value={4804} />\n        <InputNumber startCmpExternal={<SendIcon />} label=\"Start Cmp External\" value={4804} />\n    </Stack>\n);\n\nexport const Type: Story = {\n    args: {\n        type: 'number',\n        label: 'Type Password',\n        value: 50,\n    },\n};\n\nexport const Value: Story = {\n    args: {\n        value: 1e5,\n    },\n};\n\nexport const Variant_ = (args): ReactElement => {\n    const [value, setValue] = useState(1500);\n\n    return (\n        <Stack spacing={3}>\n            {['filled', 'outlined', 'standard'].map((variant) => (\n                <InputNumber\n                    key={variant}\n                    value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                    min={1000}\n                    max={2000}\n                    variant={variant as any}\n                    label={`${variant} variant`}\n                />\n            ))}\n        </Stack>\n    );\n};\n\nexport const Min: Story = {\n    args: {\n        label: 'min 100',\n        value: 150,\n        min: 100,\n    },\n    render: (args) => {\n        const [value, setValue] = useState(args.value);\n        return <InputNumber {...args} value={value} onChange={(e) => setValue(e.target.value)} />;\n    },\n};\n\nexport const Max: Story = {\n    args: {\n        label: 'max 200',\n        value: 150,\n        max: 200,\n    },\n    render: (args) => {\n        const [value, setValue] = useState(args.value);\n        return <InputNumber {...args} value={value} onChange={(e) => setValue(e.target.value)} />;\n    },\n};\n\nexport const Range: Story = {\n    args: {\n        label: '[100,200]',\n        value: 150,\n        min: 100,\n        max: 200,\n    },\n    render: (args) => {\n        const [value, setValue] = useState(args.value);\n        return <InputNumber {...args} value={value} onChange={(e) => setValue(e.target.value)} />;\n    },\n};\n\nexport const StepRange: Story = {\n    args: {\n        label: '[100,200] step: 20',\n        value: 150,\n        min: 100,\n        max: 200,\n        step: 20,\n    },\n    render: (args) => {\n        const [value, setValue] = useState(args.value);\n        return <InputNumber {...args} value={value} onChange={(e) => setValue(e.target.value)} />;\n    },\n};\n\nexport const Prefix: Story = {\n    args: {\n        label: 'USD',\n        prefix: '$',\n        value: 50,\n    },\n};\n\nexport const Suffix: Story = {\n    args: {\n        label: 'Weight',\n        suffix: ' KG',\n        value: 60,\n    },\n};\n\nexport const ThousandSeparator_ = (args) => (\n    <Stack spacing={3}>\n        <InputNumber label=\"without thousand separator\" thousandSeparator={false} value={4054407} />\n        <InputNumber label=\"with thousand separator\" thousandSeparator={true} value={4054407} />\n        <InputNumber label=\"space thousand separator\" thousandSeparator={' '} value={4054407} />\n        <InputNumber label=\"# thousand separator\" thousandSeparator={'#'} value={4054407} />\n    </Stack>\n);\n\nexport const DecimalSeparator_ = (args) => (\n    <Stack spacing={3}>\n        <InputNumber\n            label=\"without decimal separator\"\n            decimalSeparator={false}\n            value={'50407.458'}\n            valueIsNumericString\n        />\n        <InputNumber label=\"with decimal separator\" decimalSeparator={true} value={'50407.458'} valueIsNumericString />\n        <InputNumber label=\"space decimal separator\" decimalSeparator={' '} value={'50407.458'} valueIsNumericString />\n        <InputNumber label=\"# decimal separator\" decimalSeparator={'#'} value={'50407.458'} valueIsNumericString />\n    </Stack>\n);\n\nexport const Decimal_ = (args) => (\n    <Stack spacing={3}>\n        <InputNumber label=\"without decimal separator\" value={407.458897} decimal={5} />\n        <InputNumber label=\"with decimal separator\" value={407.458897} />\n        <InputNumber label=\"# decimal separator\" value={407.458897} decimal={0} />\n    </Stack>\n);\n\nexport const ValueIsNumericString: Story = {\n    args: {\n        label: 'String value',\n        value: '155',\n        valueIsNumericString: true,\n    },\n    render: (args) => {\n        const [value, setValue] = useState(args.value);\n        return <InputNumber {...args} value={value} onChange={(e) => setValue(e.target.value)} />;\n    },\n};\n\nexport const Mask: Story = {\n    args: {\n        label: 'Mask',\n        value: 122333,\n        mask: '#',\n        format: '# ## ### ####',\n    },\n    render: (args) => {\n        const [value, setValue] = useState(args.value);\n        return <InputNumber {...args} value={value} onChange={(e) => setValue(e.target.value)} />;\n    },\n};\n\nexport const Format: Story = {\n    args: {\n        label: 'Format',\n        value: 1555008877,\n        valueIsNumericString: true,\n        format: '#### #### #### ####',\n        mask: '_',\n    },\n    render: (args) => {\n        const [value, setValue] = useState(args.value);\n        return <InputNumber {...args} value={value} onChange={(e) => setValue(e.target.value)} />;\n    },\n};\n\nexport const PatternChar: Story = {\n    args: {\n        label: 'Format',\n        value: 1555008877,\n        format: '+1 (@@@) @@@-@@@@',\n        patternChar: '@',\n    },\n    render: (args) => {\n        const [value, setValue] = useState(args.value);\n        return <InputNumber {...args} value={value} onChange={(e) => setValue(e.target.value)} />;\n    },\n};\n\nexport const FixedDecimalScale: Story = {\n    args: {\n        label: 'Format',\n        value: 155.1051,\n        fixedDecimalScale: false,\n    },\n    render: (args) => {\n        const [value, setValue] = useState(args.value);\n        return <InputNumber {...args} value={value} onChange={(e) => setValue(e.target.value)} />;\n    },\n};\n\nexport const AllowEmptyFormatting: Story = {\n    args: {\n        label: 'Not Allow Empty Formatting',\n        value: 155.1051,\n        allowEmptyFormatting: false,\n    },\n    render: (args) => {\n        const [value, setValue] = useState(args.value);\n        return <InputNumber {...args} value={value} onChange={(e) => setValue(e.target.value)} />;\n    },\n};\n\nexport const EmptyFormatPlaceholder: Story = {\n    args: {\n        label: 'Format',\n        value: 1555008877,\n        format: '+1 (###) ###-####',\n        emptyFormatPlaceholder: 'phone number in format: +1 (###) ###-####',\n    },\n    render: (args) => {\n        const [value, setValue] = useState(args.value);\n        return <InputNumber {...args} value={value} onChange={(e) => setValue(e.target.value)} />;\n    },\n};\n\nexport const Slider: Story = {\n    args: {\n        label: 'without slider',\n        value: 150,\n        min: 100,\n        max: 200,\n        slider: false,\n    },\n    render: (args) => {\n        const [value, setValue] = useState(args.value);\n        return <InputNumber {...args} value={value} onChange={(e) => setValue(e.target.value)} />;\n    },\n};\n\nexport const SliderTooltip: Story = {\n    args: {\n        label: 'Slider label',\n        value: 150,\n        min: 100,\n        max: 200,\n        slider: true,\n        sliderTooltip: 'slider tooltip here',\n    },\n    render: (args) => {\n        const [value, setValue] = useState(args.value);\n        return <InputNumber {...args} value={value} onChange={(e) => setValue(e.target.value)} />;\n    },\n};\n\nexport const SliderLabel: Story = {\n    args: {\n        label: 'Slider label',\n        value: 150,\n        min: 100,\n        max: 200,\n        slider: true,\n        sliderLabel: (n) => `Slider Label '${n}' value`,\n    },\n    render: (args) => {\n        const [value, setValue] = useState(args.value);\n        return <InputNumber {...args} value={value} onChange={(e) => setValue(e.target.value)} />;\n    },\n};\n\nexport const SelectAllOnFocus: Story = {\n    args: {\n        label: 'not Select All On Focus',\n        value: 150,\n        selectAllOnFocus: false,\n    },\n    render: (args) => {\n        const [value, setValue] = useState(args.value);\n        return <InputNumber {...args} value={value} onChange={(e) => setValue(e.target.value)} />;\n    },\n};\n",locationsMap:{default:{startLoc:{col:30,line:20},endLoc:{col:1,line:22},startBody:{col:30,line:20},endBody:{col:1,line:22}},"text-align":{startLoc:{col:32,line:24},endLoc:{col:1,line:30},startBody:{col:32,line:24},endBody:{col:1,line:30}},direction:{startLoc:{col:32,line:32},endLoc:{col:1,line:38},startBody:{col:32,line:32},endBody:{col:1,line:38}},"letter-spacing":{startLoc:{col:36,line:40},endLoc:{col:1,line:46},startBody:{col:36,line:40},endBody:{col:1,line:46}},"align-actions":{startLoc:{col:35,line:48},endLoc:{col:1,line:56},startBody:{col:35,line:48},endBody:{col:1,line:56}},"align-actions-external":{startLoc:{col:43,line:58},endLoc:{col:1,line:66},startBody:{col:43,line:58},endBody:{col:1,line:66}},"cmp-spacing":{startLoc:{col:33,line:68},endLoc:{col:1,line:77},startBody:{col:33,line:68},endBody:{col:1,line:77}},"color-active":{startLoc:{col:34,line:79},endLoc:{col:1,line:85},startBody:{col:34,line:79},endBody:{col:1,line:85}},"color-label":{startLoc:{col:33,line:87},endLoc:{col:1,line:93},startBody:{col:33,line:87},endBody:{col:1,line:93}},"color-text":{startLoc:{col:32,line:95},endLoc:{col:1,line:101},startBody:{col:32,line:95},endBody:{col:1,line:101}},disabled:{startLoc:{col:31,line:103},endLoc:{col:1,line:110},startBody:{col:31,line:103},endBody:{col:1,line:110}},"end-cmp":{startLoc:{col:23,line:112},endLoc:{col:1,line:117},startBody:{col:23,line:112},endBody:{col:1,line:117}},"end-cmp-external":{startLoc:{col:31,line:119},endLoc:{col:1,line:124},startBody:{col:31,line:119},endBody:{col:1,line:124}},error:{startLoc:{col:28,line:126},endLoc:{col:1,line:132},startBody:{col:28,line:126},endBody:{col:1,line:132}},focused:{startLoc:{col:30,line:134},endLoc:{col:1,line:140},startBody:{col:30,line:134},endBody:{col:1,line:140}},"full-width":{startLoc:{col:32,line:142},endLoc:{col:1,line:148},startBody:{col:32,line:142},endBody:{col:1,line:148}},"helper-text":{startLoc:{col:33,line:150},endLoc:{col:1,line:156},startBody:{col:33,line:150},endBody:{col:1,line:156}},"hide-start-actions-on-empty":{startLoc:{col:40,line:158},endLoc:{col:1,line:173},startBody:{col:40,line:158},endBody:{col:1,line:173}},label:{startLoc:{col:28,line:175},endLoc:{col:1,line:179},startBody:{col:28,line:175},endBody:{col:1,line:179}},margin:{startLoc:{col:23,line:181},endLoc:{col:1,line:191},startBody:{col:23,line:181},endBody:{col:1,line:191}},"on-change-text":{startLoc:{col:35,line:193},endLoc:{col:1,line:201},startBody:{col:35,line:193},endBody:{col:1,line:201}},"read-only":{startLoc:{col:31,line:203},endLoc:{col:1,line:212},startBody:{col:31,line:203},endBody:{col:1,line:212}},required:{startLoc:{col:31,line:214},endLoc:{col:1,line:219},startBody:{col:31,line:214},endBody:{col:1,line:219}},"start-cmp":{startLoc:{col:25,line:221},endLoc:{col:1,line:226},startBody:{col:25,line:221},endBody:{col:1,line:226}},"start-cmp-external":{startLoc:{col:33,line:228},endLoc:{col:1,line:233},startBody:{col:33,line:228},endBody:{col:1,line:233}},type:{startLoc:{col:27,line:235},endLoc:{col:1,line:241},startBody:{col:27,line:235},endBody:{col:1,line:241}},value:{startLoc:{col:28,line:243},endLoc:{col:1,line:247},startBody:{col:28,line:243},endBody:{col:1,line:247}},variant:{startLoc:{col:24,line:249},endLoc:{col:1,line:267},startBody:{col:24,line:249},endBody:{col:1,line:267}},min:{startLoc:{col:26,line:269},endLoc:{col:1,line:279},startBody:{col:26,line:269},endBody:{col:1,line:279}},max:{startLoc:{col:26,line:281},endLoc:{col:1,line:291},startBody:{col:26,line:281},endBody:{col:1,line:291}},range:{startLoc:{col:28,line:293},endLoc:{col:1,line:304},startBody:{col:28,line:293},endBody:{col:1,line:304}},"step-range":{startLoc:{col:32,line:306},endLoc:{col:1,line:318},startBody:{col:32,line:306},endBody:{col:1,line:318}},prefix:{startLoc:{col:29,line:320},endLoc:{col:1,line:326},startBody:{col:29,line:320},endBody:{col:1,line:326}},suffix:{startLoc:{col:29,line:328},endLoc:{col:1,line:334},startBody:{col:29,line:328},endBody:{col:1,line:334}},"thousand-separator":{startLoc:{col:34,line:336},endLoc:{col:1,line:343},startBody:{col:34,line:336},endBody:{col:1,line:343}},"decimal-separator":{startLoc:{col:33,line:345},endLoc:{col:1,line:357},startBody:{col:33,line:345},endBody:{col:1,line:357}},decimal:{startLoc:{col:24,line:359},endLoc:{col:1,line:365},startBody:{col:24,line:359},endBody:{col:1,line:365}},"value-is-numeric-string":{startLoc:{col:43,line:367},endLoc:{col:1,line:377},startBody:{col:43,line:367},endBody:{col:1,line:377}},mask:{startLoc:{col:27,line:379},endLoc:{col:1,line:390},startBody:{col:27,line:379},endBody:{col:1,line:390}},format:{startLoc:{col:29,line:392},endLoc:{col:1,line:404},startBody:{col:29,line:392},endBody:{col:1,line:404}},"pattern-char":{startLoc:{col:34,line:406},endLoc:{col:1,line:417},startBody:{col:34,line:406},endBody:{col:1,line:417}},"fixed-decimal-scale":{startLoc:{col:40,line:419},endLoc:{col:1,line:429},startBody:{col:40,line:419},endBody:{col:1,line:429}},"allow-empty-formatting":{startLoc:{col:43,line:431},endLoc:{col:1,line:441},startBody:{col:43,line:431},endBody:{col:1,line:441}},"empty-format-placeholder":{startLoc:{col:45,line:443},endLoc:{col:1,line:454},startBody:{col:45,line:443},endBody:{col:1,line:454}},slider:{startLoc:{col:29,line:456},endLoc:{col:1,line:468},startBody:{col:29,line:456},endBody:{col:1,line:468}},"slider-tooltip":{startLoc:{col:36,line:470},endLoc:{col:1,line:483},startBody:{col:36,line:470},endBody:{col:1,line:483}},"slider-label":{startLoc:{col:34,line:485},endLoc:{col:1,line:498},startBody:{col:34,line:485},endBody:{col:1,line:498}},"select-all-on-focus":{startLoc:{col:39,line:500},endLoc:{col:1,line:510},startBody:{col:39,line:500},endBody:{col:1,line:510}}}}},title:"Inputs/Inputs/InputNumber",component:TextField_InputNumber,tags:["autodocs"]};var Default={args:{}},TextAlign={args:{label:"Text Align",textAlign:"center",value:15453}},Direction={args:{label:"RTL Direction",direction:"rtl",value:15453}},LetterSpacing={args:{label:"Letter Spacing",letterSpacing:"5px",value:111111}},AlignActions={args:{alignActions:"flex-start",startCmp:"Email",endCmp:"Fingerprint",label:"Align Actions",value:15548789}},AlignActionsExternal={args:{alignActions:"flex-start",startCmpExternal:"Email",endCmpExternal:"Fingerprint",label:"Align Actions External",value:5080484}},CmpSpacing={args:{alignActions:"flex-start",startCmp:"Email",endCmp:"Fingerprint",cmpSpacing:6,label:"Cmp Spacing",value:10550}},ColorActive={args:{colorActive:"warning",label:"Color Active",value:99708}},ColorLabel={args:{colorLabel:"success",label:"Color Label",value:880015}},ColorText={args:{colorText:"#D10DAA",label:"Color Text",value:200303}},Disabled={args:{colorText:"#D10DAA",label:"Disabled",value:6650480,disabled:!0}},EndCmp_=function(args){return react.createElement(Stack.Z,{spacing:3},react.createElement(TextField_InputNumber,{endCmp:"Send",label:"End Cmp",value:"endCmp with mui icon name or mui icon element"}),react.createElement(TextField_InputNumber,{endCmp:react.createElement(Send.Z,null),label:"End Cmp",value:"endCmp with mui icon name or mui icon element"}))};EndCmp_.displayName="EndCmp_";var EndCmpExternal_=function(args){return react.createElement(Stack.Z,{spacing:3},react.createElement(TextField_InputNumber,{endCmpExternal:"Send",label:"End Cmp External",value:808080}),react.createElement(TextField_InputNumber,{endCmpExternal:react.createElement(Send.Z,null),label:"End Cmp External",value:840840}))};EndCmpExternal_.displayName="EndCmpExternal_";var Error={args:{error:!0,label:"With Error",value:0}},Focused={args:{focused:!0,label:"Focused",value:58e3}},FullWidth={args:{fullWidth:!1,label:"Not FullWidth",value:998989}},HelperText={args:{helperText:"some helperText",label:"HelperText",value:770807}},HideStartActionsOnEmpty_=function(args){return react.createElement(Stack.Z,{spacing:3},react.createElement(TextField_InputNumber,{hideStartActionsOnEmpty:!0,startCmp:"Send",endCmp:"Fingerprint",label:"Hide Start Actions OnEmpty"}),react.createElement(TextField_InputNumber,{hideStartActionsOnEmpty:!1,startCmp:"Send",endCmp:"Fingerprint",label:"Not Hide Start Actions OnEmpty"}))};HideStartActionsOnEmpty_.displayName="HideStartActionsOnEmpty_";var Label={args:{label:"Some Label Input"}},Margin_=function(args){return react.createElement(Stack.Z,null,react.createElement("div",{style:{backgroundColor:"#8d8773",textAlign:"center"}},"some text for see the margin"),react.createElement(TextField_InputNumber,{label:"None Margin"}),react.createElement("div",{style:{backgroundColor:"#8d8773",textAlign:"center"}},"some text for see the margin"),react.createElement(TextField_InputNumber,{margin:"normal",label:"Normal Margin"}),react.createElement("div",{style:{backgroundColor:"#8d8773",textAlign:"center"}},"some text for see the margin"),react.createElement(TextField_InputNumber,{margin:"dense",label:"Dense Margin"}),react.createElement("div",{style:{backgroundColor:"#8d8773",textAlign:"center"}},"some text for see the margin"))};Margin_.displayName="Margin_";var OnChangeText={args:{label:"text field state"},render:function(args){var _a=(0,react.useState)(""),value=_a[0],setValue=_a[1];return react.createElement(TextField_InputNumber,InputNumber_stories_extends({},args,{value,onChange:function(e){return setValue(e.target.value)}}))}},ReadOnly={args:{readOnly:!0,label:"Read Only"},render:function(args){var _a=(0,react.useState)(15050),value=_a[0],setValue=_a[1];return react.createElement(TextField_InputNumber,InputNumber_stories_extends({},args,{value,onChange:function(e){return setValue(e.target.value)}}))}},Required={args:{required:!0,label:"Required field"}},StartCmp_=function(args){return react.createElement(Stack.Z,{spacing:3},react.createElement(TextField_InputNumber,{startCmp:"Send",label:"Start Cmp",value:10005}),react.createElement(TextField_InputNumber,{startCmp:react.createElement(Send.Z,null),label:"Start Cmp",value:10005}))};StartCmp_.displayName="StartCmp_";var StartCmpExternal_=function(args){return react.createElement(Stack.Z,{spacing:3},react.createElement(TextField_InputNumber,{startCmpExternal:"Send",label:"Start Cmp External",value:4804}),react.createElement(TextField_InputNumber,{startCmpExternal:react.createElement(Send.Z,null),label:"Start Cmp External",value:4804}))};StartCmpExternal_.displayName="StartCmpExternal_";var Type={args:{type:"number",label:"Type Password",value:50}},Value={args:{value:1e5}},Variant_=function(args){var _a=(0,react.useState)(1500),value=_a[0],setValue=_a[1];return react.createElement(Stack.Z,{spacing:3},["filled","outlined","standard"].map((function(variant){return react.createElement(TextField_InputNumber,{key:variant,value,onChange:function(e){return setValue(e.target.value)},min:1e3,max:2e3,variant,label:"".concat(variant," variant")})})))};Variant_.displayName="Variant_";var Min={args:{label:"min 100",value:150,min:100},render:function(args){var _a=(0,react.useState)(args.value),value=_a[0],setValue=_a[1];return react.createElement(TextField_InputNumber,InputNumber_stories_extends({},args,{value,onChange:function(e){return setValue(e.target.value)}}))}},Max={args:{label:"max 200",value:150,max:200},render:function(args){var _a=(0,react.useState)(args.value),value=_a[0],setValue=_a[1];return react.createElement(TextField_InputNumber,InputNumber_stories_extends({},args,{value,onChange:function(e){return setValue(e.target.value)}}))}},Range={args:{label:"[100,200]",value:150,min:100,max:200},render:function(args){var _a=(0,react.useState)(args.value),value=_a[0],setValue=_a[1];return react.createElement(TextField_InputNumber,InputNumber_stories_extends({},args,{value,onChange:function(e){return setValue(e.target.value)}}))}},StepRange={args:{label:"[100,200] step: 20",value:150,min:100,max:200,step:20},render:function(args){var _a=(0,react.useState)(args.value),value=_a[0],setValue=_a[1];return react.createElement(TextField_InputNumber,InputNumber_stories_extends({},args,{value,onChange:function(e){return setValue(e.target.value)}}))}},Prefix={args:{label:"USD",prefix:"$",value:50}},Suffix={args:{label:"Weight",suffix:" KG",value:60}},ThousandSeparator_=function(args){return react.createElement(Stack.Z,{spacing:3},react.createElement(TextField_InputNumber,{label:"without thousand separator",thousandSeparator:!1,value:4054407}),react.createElement(TextField_InputNumber,{label:"with thousand separator",thousandSeparator:!0,value:4054407}),react.createElement(TextField_InputNumber,{label:"space thousand separator",thousandSeparator:" ",value:4054407}),react.createElement(TextField_InputNumber,{label:"# thousand separator",thousandSeparator:"#",value:4054407}))};ThousandSeparator_.displayName="ThousandSeparator_";var DecimalSeparator_=function(args){return react.createElement(Stack.Z,{spacing:3},react.createElement(TextField_InputNumber,{label:"without decimal separator",decimalSeparator:!1,value:"50407.458",valueIsNumericString:!0}),react.createElement(TextField_InputNumber,{label:"with decimal separator",decimalSeparator:!0,value:"50407.458",valueIsNumericString:!0}),react.createElement(TextField_InputNumber,{label:"space decimal separator",decimalSeparator:" ",value:"50407.458",valueIsNumericString:!0}),react.createElement(TextField_InputNumber,{label:"# decimal separator",decimalSeparator:"#",value:"50407.458",valueIsNumericString:!0}))};DecimalSeparator_.displayName="DecimalSeparator_";var Decimal_=function(args){return react.createElement(Stack.Z,{spacing:3},react.createElement(TextField_InputNumber,{label:"without decimal separator",value:407.458897,decimal:5}),react.createElement(TextField_InputNumber,{label:"with decimal separator",value:407.458897}),react.createElement(TextField_InputNumber,{label:"# decimal separator",value:407.458897,decimal:0}))};Decimal_.displayName="Decimal_";var ValueIsNumericString={args:{label:"String value",value:"155",valueIsNumericString:!0},render:function(args){var _a=(0,react.useState)(args.value),value=_a[0],setValue=_a[1];return react.createElement(TextField_InputNumber,InputNumber_stories_extends({},args,{value,onChange:function(e){return setValue(e.target.value)}}))}},Mask={args:{label:"Mask",value:122333,mask:"#",format:"# ## ### ####"},render:function(args){var _a=(0,react.useState)(args.value),value=_a[0],setValue=_a[1];return react.createElement(TextField_InputNumber,InputNumber_stories_extends({},args,{value,onChange:function(e){return setValue(e.target.value)}}))}},Format={args:{label:"Format",value:1555008877,valueIsNumericString:!0,format:"#### #### #### ####",mask:"_"},render:function(args){var _a=(0,react.useState)(args.value),value=_a[0],setValue=_a[1];return react.createElement(TextField_InputNumber,InputNumber_stories_extends({},args,{value,onChange:function(e){return setValue(e.target.value)}}))}},PatternChar={args:{label:"Format",value:1555008877,format:"+1 (@@@) @@@-@@@@",patternChar:"@"},render:function(args){var _a=(0,react.useState)(args.value),value=_a[0],setValue=_a[1];return react.createElement(TextField_InputNumber,InputNumber_stories_extends({},args,{value,onChange:function(e){return setValue(e.target.value)}}))}},FixedDecimalScale={args:{label:"Format",value:155.1051,fixedDecimalScale:!1},render:function(args){var _a=(0,react.useState)(args.value),value=_a[0],setValue=_a[1];return react.createElement(TextField_InputNumber,InputNumber_stories_extends({},args,{value,onChange:function(e){return setValue(e.target.value)}}))}},AllowEmptyFormatting={args:{label:"Not Allow Empty Formatting",value:155.1051,allowEmptyFormatting:!1},render:function(args){var _a=(0,react.useState)(args.value),value=_a[0],setValue=_a[1];return react.createElement(TextField_InputNumber,InputNumber_stories_extends({},args,{value,onChange:function(e){return setValue(e.target.value)}}))}},EmptyFormatPlaceholder={args:{label:"Format",value:1555008877,format:"+1 (###) ###-####",emptyFormatPlaceholder:"phone number in format: +1 (###) ###-####"},render:function(args){var _a=(0,react.useState)(args.value),value=_a[0],setValue=_a[1];return react.createElement(TextField_InputNumber,InputNumber_stories_extends({},args,{value,onChange:function(e){return setValue(e.target.value)}}))}},InputNumber_stories_Slider={args:{label:"without slider",value:150,min:100,max:200,slider:!1},render:function(args){var _a=(0,react.useState)(args.value),value=_a[0],setValue=_a[1];return react.createElement(TextField_InputNumber,InputNumber_stories_extends({},args,{value,onChange:function(e){return setValue(e.target.value)}}))}},SliderTooltip={args:{label:"Slider label",value:150,min:100,max:200,slider:!0,sliderTooltip:"slider tooltip here"},render:function(args){var _a=(0,react.useState)(args.value),value=_a[0],setValue=_a[1];return react.createElement(TextField_InputNumber,InputNumber_stories_extends({},args,{value,onChange:function(e){return setValue(e.target.value)}}))}},SliderLabel={args:{label:"Slider label",value:150,min:100,max:200,slider:!0,sliderLabel:function(n){return"Slider Label '".concat(n,"' value")}},render:function(args){var _a=(0,react.useState)(args.value),value=_a[0],setValue=_a[1];return react.createElement(TextField_InputNumber,InputNumber_stories_extends({},args,{value,onChange:function(e){return setValue(e.target.value)}}))}},SelectAllOnFocus={args:{label:"not Select All On Focus",value:150,selectAllOnFocus:!1},render:function(args){var _a=(0,react.useState)(args.value),value=_a[0],setValue=_a[1];return react.createElement(TextField_InputNumber,InputNumber_stories_extends({},args,{value,onChange:function(e){return setValue(e.target.value)}}))}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Default.parameters?.docs?.source}}},TextAlign.parameters={...TextAlign.parameters,docs:{...TextAlign.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Text Align',\n    textAlign: 'center',\n    value: 15453\n  }\n}",...TextAlign.parameters?.docs?.source}}},Direction.parameters={...Direction.parameters,docs:{...Direction.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'RTL Direction',\n    direction: 'rtl',\n    value: 15453\n  }\n}",...Direction.parameters?.docs?.source}}},LetterSpacing.parameters={...LetterSpacing.parameters,docs:{...LetterSpacing.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Letter Spacing',\n    letterSpacing: '5px',\n    value: 111111\n  }\n}",...LetterSpacing.parameters?.docs?.source}}},AlignActions.parameters={...AlignActions.parameters,docs:{...AlignActions.parameters?.docs,source:{originalSource:"{\n  args: {\n    alignActions: 'flex-start',\n    startCmp: 'Email',\n    endCmp: 'Fingerprint',\n    label: 'Align Actions',\n    value: 15548789\n  }\n}",...AlignActions.parameters?.docs?.source}}},AlignActionsExternal.parameters={...AlignActionsExternal.parameters,docs:{...AlignActionsExternal.parameters?.docs,source:{originalSource:"{\n  args: {\n    alignActions: 'flex-start',\n    startCmpExternal: 'Email',\n    endCmpExternal: 'Fingerprint',\n    label: 'Align Actions External',\n    value: 5080484\n  }\n}",...AlignActionsExternal.parameters?.docs?.source}}},CmpSpacing.parameters={...CmpSpacing.parameters,docs:{...CmpSpacing.parameters?.docs,source:{originalSource:"{\n  args: {\n    alignActions: 'flex-start',\n    startCmp: 'Email',\n    endCmp: 'Fingerprint',\n    cmpSpacing: 6,\n    label: 'Cmp Spacing',\n    value: 10550\n  }\n}",...CmpSpacing.parameters?.docs?.source}}},ColorActive.parameters={...ColorActive.parameters,docs:{...ColorActive.parameters?.docs,source:{originalSource:"{\n  args: {\n    colorActive: 'warning',\n    label: 'Color Active',\n    value: 99708\n  }\n}",...ColorActive.parameters?.docs?.source}}},ColorLabel.parameters={...ColorLabel.parameters,docs:{...ColorLabel.parameters?.docs,source:{originalSource:"{\n  args: {\n    colorLabel: 'success',\n    label: 'Color Label',\n    value: 880015\n  }\n}",...ColorLabel.parameters?.docs?.source}}},ColorText.parameters={...ColorText.parameters,docs:{...ColorText.parameters?.docs,source:{originalSource:"{\n  args: {\n    colorText: '#D10DAA',\n    label: 'Color Text',\n    value: 200303\n  }\n}",...ColorText.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    colorText: '#D10DAA',\n    label: 'Disabled',\n    value: 6650480,\n    disabled: true\n  }\n}",...Disabled.parameters?.docs?.source}}},EndCmp_.parameters={...EndCmp_.parameters,docs:{...EndCmp_.parameters?.docs,source:{originalSource:'(args): ReactElement => <Stack spacing={3}>\n        <InputNumber endCmp="Send" label="End Cmp" value="endCmp with mui icon name or mui icon element" />\n        <InputNumber endCmp={<SendIcon />} label="End Cmp" value="endCmp with mui icon name or mui icon element" />\n    </Stack>',...EndCmp_.parameters?.docs?.source}}},EndCmpExternal_.parameters={...EndCmpExternal_.parameters,docs:{...EndCmpExternal_.parameters?.docs,source:{originalSource:'(args): ReactElement => <Stack spacing={3}>\n        <InputNumber endCmpExternal="Send" label="End Cmp External" value={808080} />\n        <InputNumber endCmpExternal={<SendIcon />} label="End Cmp External" value={840840} />\n    </Stack>',...EndCmpExternal_.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:"{\n  args: {\n    error: true,\n    label: 'With Error',\n    value: 0\n  }\n}",...Error.parameters?.docs?.source}}},Focused.parameters={...Focused.parameters,docs:{...Focused.parameters?.docs,source:{originalSource:"{\n  args: {\n    focused: true,\n    label: 'Focused',\n    value: 58000\n  }\n}",...Focused.parameters?.docs?.source}}},FullWidth.parameters={...FullWidth.parameters,docs:{...FullWidth.parameters?.docs,source:{originalSource:"{\n  args: {\n    fullWidth: false,\n    label: 'Not FullWidth',\n    value: 998989\n  }\n}",...FullWidth.parameters?.docs?.source}}},HelperText.parameters={...HelperText.parameters,docs:{...HelperText.parameters?.docs,source:{originalSource:"{\n  args: {\n    helperText: 'some helperText',\n    label: 'HelperText',\n    value: 770807\n  }\n}",...HelperText.parameters?.docs?.source}}},HideStartActionsOnEmpty_.parameters={...HideStartActionsOnEmpty_.parameters,docs:{...HideStartActionsOnEmpty_.parameters?.docs,source:{originalSource:'(args): ReactElement => <Stack spacing={3}>\n        <InputNumber hideStartActionsOnEmpty={true} startCmp="Send" endCmp="Fingerprint" label="Hide Start Actions OnEmpty" />\n        <InputNumber hideStartActionsOnEmpty={false} startCmp="Send" endCmp="Fingerprint" label="Not Hide Start Actions OnEmpty" />\n    </Stack>',...HideStartActionsOnEmpty_.parameters?.docs?.source}}},Label.parameters={...Label.parameters,docs:{...Label.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Some Label Input'\n  }\n}",...Label.parameters?.docs?.source}}},Margin_.parameters={...Margin_.parameters,docs:{...Margin_.parameters?.docs,source:{originalSource:"(args): ReactElement => <Stack>\n        <div style={{\n    backgroundColor: '#8d8773',\n    textAlign: 'center'\n  }}>some text for see the margin</div>\n        <InputNumber label=\"None Margin\" />\n        <div style={{\n    backgroundColor: '#8d8773',\n    textAlign: 'center'\n  }}>some text for see the margin</div>\n        <InputNumber margin=\"normal\" label=\"Normal Margin\" />\n        <div style={{\n    backgroundColor: '#8d8773',\n    textAlign: 'center'\n  }}>some text for see the margin</div>\n        <InputNumber margin=\"dense\" label=\"Dense Margin\" />\n        <div style={{\n    backgroundColor: '#8d8773',\n    textAlign: 'center'\n  }}>some text for see the margin</div>\n    </Stack>",...Margin_.parameters?.docs?.source}}},OnChangeText.parameters={...OnChangeText.parameters,docs:{...OnChangeText.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'text field state'\n  },\n  render: args => {\n    const [value, setValue] = useState('');\n    return <InputNumber {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...OnChangeText.parameters?.docs?.source}}},ReadOnly.parameters={...ReadOnly.parameters,docs:{...ReadOnly.parameters?.docs,source:{originalSource:"{\n  args: {\n    readOnly: true,\n    label: 'Read Only'\n  },\n  render: args => {\n    const [value, setValue] = useState(15050);\n    return <InputNumber {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...ReadOnly.parameters?.docs?.source}}},Required.parameters={...Required.parameters,docs:{...Required.parameters?.docs,source:{originalSource:"{\n  args: {\n    required: true,\n    label: 'Required field'\n  }\n}",...Required.parameters?.docs?.source}}},StartCmp_.parameters={...StartCmp_.parameters,docs:{...StartCmp_.parameters?.docs,source:{originalSource:'(args): ReactElement => <Stack spacing={3}>\n        <InputNumber startCmp="Send" label="Start Cmp" value={10005} />\n        <InputNumber startCmp={<SendIcon />} label="Start Cmp" value={10005} />\n    </Stack>',...StartCmp_.parameters?.docs?.source}}},StartCmpExternal_.parameters={...StartCmpExternal_.parameters,docs:{...StartCmpExternal_.parameters?.docs,source:{originalSource:'(args): ReactElement => <Stack spacing={3}>\n        <InputNumber startCmpExternal="Send" label="Start Cmp External" value={4804} />\n        <InputNumber startCmpExternal={<SendIcon />} label="Start Cmp External" value={4804} />\n    </Stack>',...StartCmpExternal_.parameters?.docs?.source}}},Type.parameters={...Type.parameters,docs:{...Type.parameters?.docs,source:{originalSource:"{\n  args: {\n    type: 'number',\n    label: 'Type Password',\n    value: 50\n  }\n}",...Type.parameters?.docs?.source}}},Value.parameters={...Value.parameters,docs:{...Value.parameters?.docs,source:{originalSource:"{\n  args: {\n    value: 1e5\n  }\n}",...Value.parameters?.docs?.source}}},Variant_.parameters={...Variant_.parameters,docs:{...Variant_.parameters?.docs,source:{originalSource:"(args): ReactElement => {\n  const [value, setValue] = useState(1500);\n  return <Stack spacing={3}>\n            {['filled', 'outlined', 'standard'].map(variant => <InputNumber key={variant} value={value} onChange={e => setValue(e.target.value)} min={1000} max={2000} variant={(variant as any)} label={`${variant} variant`} />)}\n        </Stack>;\n}",...Variant_.parameters?.docs?.source}}},Min.parameters={...Min.parameters,docs:{...Min.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'min 100',\n    value: 150,\n    min: 100\n  },\n  render: args => {\n    const [value, setValue] = useState(args.value);\n    return <InputNumber {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...Min.parameters?.docs?.source}}},Max.parameters={...Max.parameters,docs:{...Max.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'max 200',\n    value: 150,\n    max: 200\n  },\n  render: args => {\n    const [value, setValue] = useState(args.value);\n    return <InputNumber {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...Max.parameters?.docs?.source}}},Range.parameters={...Range.parameters,docs:{...Range.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: '[100,200]',\n    value: 150,\n    min: 100,\n    max: 200\n  },\n  render: args => {\n    const [value, setValue] = useState(args.value);\n    return <InputNumber {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...Range.parameters?.docs?.source}}},StepRange.parameters={...StepRange.parameters,docs:{...StepRange.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: '[100,200] step: 20',\n    value: 150,\n    min: 100,\n    max: 200,\n    step: 20\n  },\n  render: args => {\n    const [value, setValue] = useState(args.value);\n    return <InputNumber {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...StepRange.parameters?.docs?.source}}},Prefix.parameters={...Prefix.parameters,docs:{...Prefix.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'USD',\n    prefix: '$',\n    value: 50\n  }\n}",...Prefix.parameters?.docs?.source}}},Suffix.parameters={...Suffix.parameters,docs:{...Suffix.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Weight',\n    suffix: ' KG',\n    value: 60\n  }\n}",...Suffix.parameters?.docs?.source}}},ThousandSeparator_.parameters={...ThousandSeparator_.parameters,docs:{...ThousandSeparator_.parameters?.docs,source:{originalSource:'args => <Stack spacing={3}>\n        <InputNumber label="without thousand separator" thousandSeparator={false} value={4054407} />\n        <InputNumber label="with thousand separator" thousandSeparator={true} value={4054407} />\n        <InputNumber label="space thousand separator" thousandSeparator={\' \'} value={4054407} />\n        <InputNumber label="# thousand separator" thousandSeparator={\'#\'} value={4054407} />\n    </Stack>',...ThousandSeparator_.parameters?.docs?.source}}},DecimalSeparator_.parameters={...DecimalSeparator_.parameters,docs:{...DecimalSeparator_.parameters?.docs,source:{originalSource:"args => <Stack spacing={3}>\n        <InputNumber label=\"without decimal separator\" decimalSeparator={false} value={'50407.458'} valueIsNumericString />\n        <InputNumber label=\"with decimal separator\" decimalSeparator={true} value={'50407.458'} valueIsNumericString />\n        <InputNumber label=\"space decimal separator\" decimalSeparator={' '} value={'50407.458'} valueIsNumericString />\n        <InputNumber label=\"# decimal separator\" decimalSeparator={'#'} value={'50407.458'} valueIsNumericString />\n    </Stack>",...DecimalSeparator_.parameters?.docs?.source}}},Decimal_.parameters={...Decimal_.parameters,docs:{...Decimal_.parameters?.docs,source:{originalSource:'args => <Stack spacing={3}>\n        <InputNumber label="without decimal separator" value={407.458897} decimal={5} />\n        <InputNumber label="with decimal separator" value={407.458897} />\n        <InputNumber label="# decimal separator" value={407.458897} decimal={0} />\n    </Stack>',...Decimal_.parameters?.docs?.source}}},ValueIsNumericString.parameters={...ValueIsNumericString.parameters,docs:{...ValueIsNumericString.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'String value',\n    value: '155',\n    valueIsNumericString: true\n  },\n  render: args => {\n    const [value, setValue] = useState(args.value);\n    return <InputNumber {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...ValueIsNumericString.parameters?.docs?.source}}},Mask.parameters={...Mask.parameters,docs:{...Mask.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Mask',\n    value: 122333,\n    mask: '#',\n    format: '# ## ### ####'\n  },\n  render: args => {\n    const [value, setValue] = useState(args.value);\n    return <InputNumber {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...Mask.parameters?.docs?.source}}},Format.parameters={...Format.parameters,docs:{...Format.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Format',\n    value: 1555008877,\n    valueIsNumericString: true,\n    format: '#### #### #### ####',\n    mask: '_'\n  },\n  render: args => {\n    const [value, setValue] = useState(args.value);\n    return <InputNumber {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...Format.parameters?.docs?.source}}},PatternChar.parameters={...PatternChar.parameters,docs:{...PatternChar.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Format',\n    value: 1555008877,\n    format: '+1 (@@@) @@@-@@@@',\n    patternChar: '@'\n  },\n  render: args => {\n    const [value, setValue] = useState(args.value);\n    return <InputNumber {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...PatternChar.parameters?.docs?.source}}},FixedDecimalScale.parameters={...FixedDecimalScale.parameters,docs:{...FixedDecimalScale.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Format',\n    value: 155.1051,\n    fixedDecimalScale: false\n  },\n  render: args => {\n    const [value, setValue] = useState(args.value);\n    return <InputNumber {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...FixedDecimalScale.parameters?.docs?.source}}},AllowEmptyFormatting.parameters={...AllowEmptyFormatting.parameters,docs:{...AllowEmptyFormatting.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Not Allow Empty Formatting',\n    value: 155.1051,\n    allowEmptyFormatting: false\n  },\n  render: args => {\n    const [value, setValue] = useState(args.value);\n    return <InputNumber {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...AllowEmptyFormatting.parameters?.docs?.source}}},EmptyFormatPlaceholder.parameters={...EmptyFormatPlaceholder.parameters,docs:{...EmptyFormatPlaceholder.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Format',\n    value: 1555008877,\n    format: '+1 (###) ###-####',\n    emptyFormatPlaceholder: 'phone number in format: +1 (###) ###-####'\n  },\n  render: args => {\n    const [value, setValue] = useState(args.value);\n    return <InputNumber {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...EmptyFormatPlaceholder.parameters?.docs?.source}}},InputNumber_stories_Slider.parameters={...InputNumber_stories_Slider.parameters,docs:{...InputNumber_stories_Slider.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'without slider',\n    value: 150,\n    min: 100,\n    max: 200,\n    slider: false\n  },\n  render: args => {\n    const [value, setValue] = useState(args.value);\n    return <InputNumber {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...InputNumber_stories_Slider.parameters?.docs?.source}}},SliderTooltip.parameters={...SliderTooltip.parameters,docs:{...SliderTooltip.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Slider label',\n    value: 150,\n    min: 100,\n    max: 200,\n    slider: true,\n    sliderTooltip: 'slider tooltip here'\n  },\n  render: args => {\n    const [value, setValue] = useState(args.value);\n    return <InputNumber {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...SliderTooltip.parameters?.docs?.source}}},SliderLabel.parameters={...SliderLabel.parameters,docs:{...SliderLabel.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Slider label',\n    value: 150,\n    min: 100,\n    max: 200,\n    slider: true,\n    sliderLabel: n => `Slider Label '${n}' value`\n  },\n  render: args => {\n    const [value, setValue] = useState(args.value);\n    return <InputNumber {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...SliderLabel.parameters?.docs?.source}}},SelectAllOnFocus.parameters={...SelectAllOnFocus.parameters,docs:{...SelectAllOnFocus.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'not Select All On Focus',\n    value: 150,\n    selectAllOnFocus: false\n  },\n  render: args => {\n    const [value, setValue] = useState(args.value);\n    return <InputNumber {...args} value={value} onChange={e => setValue(e.target.value)} />;\n  }\n}",...SelectAllOnFocus.parameters?.docs?.source}}};const __namedExportsOrder=["Default","TextAlign","Direction","LetterSpacing","AlignActions","AlignActionsExternal","CmpSpacing","ColorActive","ColorLabel","ColorText","Disabled","EndCmp_","EndCmpExternal_","Error","Focused","FullWidth","HelperText","HideStartActionsOnEmpty_","Label","Margin_","OnChangeText","ReadOnly","Required","StartCmp_","StartCmpExternal_","Type","Value","Variant_","Min","Max","Range","StepRange","Prefix","Suffix","ThousandSeparator_","DecimalSeparator_","Decimal_","ValueIsNumericString","Mask","Format","PatternChar","FixedDecimalScale","AllowEmptyFormatting","EmptyFormatPlaceholder","Slider","SliderTooltip","SliderLabel","SelectAllOnFocus"];try{EndCmp_.displayName="EndCmp_",EndCmp_.__docgenInfo={description:"",displayName:"EndCmp_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TextField/stories/InputNumber.stories.tsx#EndCmp_"]={docgenInfo:EndCmp_.__docgenInfo,name:"EndCmp_",path:"src/components/_FIXED/TextField/stories/InputNumber.stories.tsx#EndCmp_"})}catch(__react_docgen_typescript_loader_error){}try{EndCmpExternal_.displayName="EndCmpExternal_",EndCmpExternal_.__docgenInfo={description:"",displayName:"EndCmpExternal_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TextField/stories/InputNumber.stories.tsx#EndCmpExternal_"]={docgenInfo:EndCmpExternal_.__docgenInfo,name:"EndCmpExternal_",path:"src/components/_FIXED/TextField/stories/InputNumber.stories.tsx#EndCmpExternal_"})}catch(__react_docgen_typescript_loader_error){}try{HideStartActionsOnEmpty_.displayName="HideStartActionsOnEmpty_",HideStartActionsOnEmpty_.__docgenInfo={description:"",displayName:"HideStartActionsOnEmpty_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TextField/stories/InputNumber.stories.tsx#HideStartActionsOnEmpty_"]={docgenInfo:HideStartActionsOnEmpty_.__docgenInfo,name:"HideStartActionsOnEmpty_",path:"src/components/_FIXED/TextField/stories/InputNumber.stories.tsx#HideStartActionsOnEmpty_"})}catch(__react_docgen_typescript_loader_error){}try{Margin_.displayName="Margin_",Margin_.__docgenInfo={description:"",displayName:"Margin_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TextField/stories/InputNumber.stories.tsx#Margin_"]={docgenInfo:Margin_.__docgenInfo,name:"Margin_",path:"src/components/_FIXED/TextField/stories/InputNumber.stories.tsx#Margin_"})}catch(__react_docgen_typescript_loader_error){}try{StartCmp_.displayName="StartCmp_",StartCmp_.__docgenInfo={description:"",displayName:"StartCmp_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TextField/stories/InputNumber.stories.tsx#StartCmp_"]={docgenInfo:StartCmp_.__docgenInfo,name:"StartCmp_",path:"src/components/_FIXED/TextField/stories/InputNumber.stories.tsx#StartCmp_"})}catch(__react_docgen_typescript_loader_error){}try{StartCmpExternal_.displayName="StartCmpExternal_",StartCmpExternal_.__docgenInfo={description:"",displayName:"StartCmpExternal_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TextField/stories/InputNumber.stories.tsx#StartCmpExternal_"]={docgenInfo:StartCmpExternal_.__docgenInfo,name:"StartCmpExternal_",path:"src/components/_FIXED/TextField/stories/InputNumber.stories.tsx#StartCmpExternal_"})}catch(__react_docgen_typescript_loader_error){}try{Variant_.displayName="Variant_",Variant_.__docgenInfo={description:"",displayName:"Variant_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TextField/stories/InputNumber.stories.tsx#Variant_"]={docgenInfo:Variant_.__docgenInfo,name:"Variant_",path:"src/components/_FIXED/TextField/stories/InputNumber.stories.tsx#Variant_"})}catch(__react_docgen_typescript_loader_error){}try{ThousandSeparator_.displayName="ThousandSeparator_",ThousandSeparator_.__docgenInfo={description:"",displayName:"ThousandSeparator_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TextField/stories/InputNumber.stories.tsx#ThousandSeparator_"]={docgenInfo:ThousandSeparator_.__docgenInfo,name:"ThousandSeparator_",path:"src/components/_FIXED/TextField/stories/InputNumber.stories.tsx#ThousandSeparator_"})}catch(__react_docgen_typescript_loader_error){}try{DecimalSeparator_.displayName="DecimalSeparator_",DecimalSeparator_.__docgenInfo={description:"",displayName:"DecimalSeparator_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TextField/stories/InputNumber.stories.tsx#DecimalSeparator_"]={docgenInfo:DecimalSeparator_.__docgenInfo,name:"DecimalSeparator_",path:"src/components/_FIXED/TextField/stories/InputNumber.stories.tsx#DecimalSeparator_"})}catch(__react_docgen_typescript_loader_error){}try{Decimal_.displayName="Decimal_",Decimal_.__docgenInfo={description:"",displayName:"Decimal_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/TextField/stories/InputNumber.stories.tsx#Decimal_"]={docgenInfo:Decimal_.__docgenInfo,name:"Decimal_",path:"src/components/_FIXED/TextField/stories/InputNumber.stories.tsx#Decimal_"})}catch(__react_docgen_typescript_loader_error){}}}]);