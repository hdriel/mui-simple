{"version":3,"file":"components-AppBar-__stories__-AppBar-stories.aaa0a092.iframe.bundle.js","mappings":";;;AAoBA;;;;;;AAMA;;;;;;;;AAUA;;;;;AAOA;;;;;AA4BA;;;ACvCA;;AAEA;;AAEA;;AAEA;;;;AAjCA;;;;;;;;;;AAaA;AACA;AACA;;;AAdA","sources":["webpack://@hdriel/mui-simple/./src/components/Menu/Menu.styled.tsx","webpack://@hdriel/mui-simple/./src/components/Paper/Paper.styled.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Menu as MuiMenu,\r\n  MenuList as MuiMenuList,\r\n  MenuItem as MuiMenuItem,\r\n  ListItemIcon as MuiListItemIcon,\r\n  ListItemText as MuiListItemText,\r\n  Popper as MuiPopper,\r\n  ClickAwayListener,\r\n  Grow,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport { styled, css } from \"@mui/material/styles\";\r\nimport Paper from \"../Paper/Paper\";\r\n\r\nexport const ContextMenuWrapper = styled(Box)`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const MenuWrapper = styled(Box)`\r\n  position: relative;\r\n  overflow: visible;\r\n  margin-top: 1.5px;\r\n\r\n  &::before {\r\n    ${(props) =>\r\n      props.arrow &&\r\n      css`\r\n        content: \"\";\r\n        display: block;\r\n        position: absolute;\r\n        top: 0;\r\n        right: 14px;\r\n        width: 10px;\r\n        height: 10px;\r\n        background-color: ${props.theme.palette.background.paper};\r\n        transform: translateY(-50%) rotate(45deg);\r\n        z-index: 0;\r\n      `}\r\n  }\r\n`;\r\n\r\nexport const Menu = styled(\r\n  ({ height, width, maxHeight, elevation, ...props }) => (\r\n    <MuiMenu\r\n      PaperProps={{\r\n        elevation,\r\n        sx: {\r\n          height,\r\n          width,\r\n          maxHeight,\r\n          overflowY: \"auto\",\r\n          filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\r\n          \"& .MuiAvatar-root\": {\r\n            width: 32,\r\n            height: 32,\r\n            ml: -0.5,\r\n            mr: 1,\r\n          },\r\n        },\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n)`\r\n  max-width: 100%;\r\n  & .MuiList-root:focus-visible {\r\n    outline: none;\r\n  }\r\n`;\r\nexport const MenuList = styled(MuiMenuList)``;\r\nexport const MenuItem = styled(MuiMenuItem)``;\r\nexport const ListItemIcon = styled(MuiListItemIcon)``;\r\nexport const ListItemText = styled(MuiListItemText)``;\r\nexport const Popper = styled(({ width, onClickAway, children, ...props }) => (\r\n  <MuiPopper {...props} sx={{ width, ...props.sx }}>\r\n    {({ TransitionProps, placement }) => (\r\n      <Grow\r\n        {...TransitionProps}\r\n        style={{\r\n          transformOrigin:\r\n            placement === \"bottom-start\" ? \"left top\" : \"left bottom\",\r\n        }}\r\n      >\r\n        <Paper>\r\n          <ClickAwayListener onClickAway={onClickAway}>\r\n            {children}\r\n          </ClickAwayListener>\r\n        </Paper>\r\n      </Grow>\r\n    )}\r\n  </MuiPopper>\r\n))`\r\n  max-width: 100%;\r\n`;\r\n","import { get } from 'lodash-es';\r\nimport { Paper as MuiPaper } from '@mui/material';\r\nimport { styled, css } from '@mui/material/styles';\r\nimport { numberToPx } from '../../utils/helpers';\r\n\r\nfunction imageStyle(props) {\r\n    if (!props.imageSrc) return css``;\r\n\r\n    return css`\r\n        background-color: unset;\r\n\r\n        &::before {\r\n            content: '';\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            background-image: url('${props.imageSrc}');\r\n            background-size: ${props.imageLayout};\r\n            opacity: ${props.imageOpacity};\r\n            z-index: -1;\r\n        }\r\n    `;\r\n}\r\n\r\nexport const Paper = styled(MuiPaper, {\r\n    shouldForwardProp: (propName) =>\r\n        !['muiColor', 'customColor', 'textColor', 'imageSrc', 'imageOpacity', 'imageOpacity', 'imageLayout'].includes(\r\n            propName\r\n        ),\r\n})`\r\n    width: ${(props) => numberToPx(props.width)};\r\n\r\n    height: ${(props) => numberToPx(props.height)};\r\n\r\n    background-color: ${(props) => get(props, `theme.palette.${props.muiColor}.main`, props.customColor)};\r\n\r\n    color: ${(props) => props.textColor ?? get(props, `theme.palette.${props.muiColor}.contrastText`)};\r\n\r\n    position: relative;\r\n    z-index: 0;\r\n    ${imageStyle};\r\n`;\r\n"],"names":[],"sourceRoot":""}