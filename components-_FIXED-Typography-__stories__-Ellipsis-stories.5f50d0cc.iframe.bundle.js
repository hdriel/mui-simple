"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[6936],{"./src/components/_FIXED/Typography/__stories__/Ellipsis.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Align:()=>Align,AlignCenter:()=>AlignCenter,AlignJustify:()=>AlignJustify,AlignLeft:()=>AlignLeft,AlignRight:()=>AlignRight,AutoWidth:()=>AutoWidth,BgColor:()=>BgColor,Bold:()=>Bold,Border:()=>Border,CharsCase_:()=>CharsCase_,ClassName:()=>ClassName,Color:()=>Color,Component:()=>Component,Default:()=>Default,GutterBottom:()=>GutterBottom,Italic:()=>Italic,LineHeight:()=>LineHeight,Link:()=>Link,Monospace:()=>Monospace,Nested:()=>Nested,NoWrap:()=>NoWrap,OnEllipsisChange:()=>OnEllipsisChange,Paragraph:()=>Paragraph,Rows:()=>Rows,ShowTooltipOnEllipsis:()=>ShowTooltipOnEllipsis,Size:()=>Size,Strike:()=>Strike,Sub:()=>Sub,Sup:()=>Sup,Tooltip:()=>Tooltip,TooltipPlacement:()=>TooltipPlacement,Underline:()=>Underline,Width:()=>Width,Width100:()=>Width100,Wrap:()=>Wrap,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Ellipsis_stories,size:()=>size});var react=__webpack_require__("./node_modules/react/index.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),Stack=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),Typography_styled=__webpack_require__("./src/components/_FIXED/Typography/Typography.styled.tsx"),useEllipsisActive=__webpack_require__("./src/hooks/useEllipsisActive.ts"),Typography_hooks=__webpack_require__("./src/components/_FIXED/Typography/Typography.hooks.tsx"),Text=__webpack_require__("./src/components/_FIXED/Typography/Text.tsx"),helpers=__webpack_require__("./src/utils/helpers.ts");const _excluded=["autoWidth","border","borderStyle","children","onEllipsisChange","showTooltipOnEllipsis","tooltip","rows","width","noWrap","alignCenter","alignRight","alignLeft","alignJustify","align"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}const TextEllipsis=_ref=>{let{autoWidth,border,borderStyle,children,onEllipsisChange,showTooltipOnEllipsis,tooltip,rows,width,noWrap,alignCenter,alignRight,alignLeft,alignJustify,align}=_ref,props=_objectWithoutProperties(_ref,_excluded);const alignItems=(0,Typography_hooks.v)({alignCenter,alignRight,alignLeft,alignJustify,align}),[ref,isEllipsis]=(0,useEllipsisActive.S)({active:showTooltipOnEllipsis&&(0,helpers.$K)(tooltip)&&!1!==tooltip,text:children,maxRows:+rows||0}),tooltipMessage=(0,Typography_hooks.d)({children,tooltip,isEllipsis,showTooltipOnEllipsis});return(0,react.useEffect)((()=>{onEllipsisChange?.(isEllipsis)}),[isEllipsis]),react.createElement(Typography_styled.O,{width,rows,border,noWrap,autoWidth,sx:borderStyle,textAlign:alignItems},react.createElement(Text.Z,_extends({innerRef:ref},props,{tooltip:tooltipMessage,isEllipsis:!0}),children,"Â "))};TextEllipsis.displayName="TextEllipsis",TextEllipsis.defaultProps={autoWidth:!0,border:void 0,borderStyle:void 0,component:"span",onEllipsisChange:void 0,rows:1,showTooltipOnEllipsis:!0,tooltip:!0,wrap:!0};const Typography_TextEllipsis=TextEllipsis;try{TextEllipsis.displayName="TextEllipsis",TextEllipsis.__docgenInfo={description:"",displayName:"TextEllipsis",props:{noWrap:{defaultValue:null,description:"",name:"noWrap",required:!1,type:{name:"boolean"}},onEllipsisChange:{defaultValue:{value:"undefined"},description:"",name:"onEllipsisChange",required:!1,type:{name:"(isEllipsis: boolean) => void"}},rows:{defaultValue:{value:"1"},description:"",name:"rows",required:!1,type:{name:"number"}},showTooltipOnEllipsis:{defaultValue:{value:"true"},description:"",name:"showTooltipOnEllipsis",required:!1,type:{name:"boolean"}},wrap:{defaultValue:{value:"true"},description:"",name:"wrap",required:!1,type:{name:"boolean"}},alignCenter:{defaultValue:null,description:"",name:"alignCenter",required:!1,type:{name:"boolean"}},alignJustify:{defaultValue:null,description:"",name:"alignJustify",required:!1,type:{name:"boolean"}},alignLeft:{defaultValue:null,description:"",name:"alignLeft",required:!1,type:{name:"boolean"}},alignRight:{defaultValue:null,description:"",name:"alignRight",required:!1,type:{name:"boolean"}},autoWidth:{defaultValue:{value:"true"},description:"",name:"autoWidth",required:!1,type:{name:"boolean"}},bgColor:{defaultValue:null,description:"",name:"bgColor",required:!1,type:{name:"string"}},bold:{defaultValue:null,description:"",name:"bold",required:!1,type:{name:"string | boolean"}},border:{defaultValue:{value:"undefined"},description:"",name:"border",required:!1,type:{name:"string | boolean"}},charsCase:{defaultValue:null,description:"",name:"charsCase",required:!1,type:{name:"enum",value:[{value:'"upper"'},{value:'"lower"'},{value:'"capital"'}]}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}},component:{defaultValue:{value:"span"},description:"",name:"component",required:!1,type:{name:"string"}},gutterBottom:{defaultValue:null,description:"",name:"gutterBottom",required:!1,type:{name:"boolean"}},italic:{defaultValue:null,description:"",name:"italic",required:!1,type:{name:"boolean"}},lineHeight:{defaultValue:null,description:"",name:"lineHeight",required:!1,type:{name:"number"}},link:{defaultValue:null,description:"",name:"link",required:!1,type:{name:"string"}},monospace:{defaultValue:null,description:"",name:"monospace",required:!1,type:{name:"boolean"}},paragraph:{defaultValue:null,description:"",name:"paragraph",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"string | number"}},strike:{defaultValue:null,description:"",name:"strike",required:!1,type:{name:"boolean"}},sub:{defaultValue:null,description:"",name:"sub",required:!1,type:{name:"boolean"}},sup:{defaultValue:null,description:"",name:"sup",required:!1,type:{name:"boolean"}},textDirection:{defaultValue:null,description:"",name:"textDirection",required:!1,type:{name:"enum",value:[{value:'"ltr"'},{value:'"rtl"'}]}},tooltip:{defaultValue:{value:"true"},description:"",name:"tooltip",required:!1,type:{name:"string | boolean"}},tooltipPlacement:{defaultValue:null,description:"",name:"tooltipPlacement",required:!1,type:{name:"enum",value:[{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"bottom"'},{value:'"left-end"'},{value:'"left-start"'},{value:'"left"'},{value:'"right-end"'},{value:'"right-start"'},{value:'"right"'},{value:'"top-end"'},{value:'"top-start"'},{value:'"top"'}]}},underline:{defaultValue:null,description:"",name:"underline",required:!1,type:{name:"boolean"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"string | number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Typography/TextEllipsis.tsx#TextEllipsis"]={docgenInfo:TextEllipsis.__docgenInfo,name:"TextEllipsis",path:"src/components/_FIXED/Typography/TextEllipsis.tsx#TextEllipsis"})}catch(__react_docgen_typescript_loader_error){}var dist=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),ToggleButtonGroup=__webpack_require__("./src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.tsx");function Ellipsis_stories_extends(){return Ellipsis_stories_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},Ellipsis_stories_extends.apply(this,arguments)}const Ellipsis_stories={parameters:{storySource:{source:"import React, { useState } from 'react';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport { Box, Stack } from '@mui/material';\n\nimport TextEllipsis from '../TextEllipsis';\nimport { action } from '@storybook/addon-actions';\nimport ToggleButtonGroup from '../../ToggleButtonGroup/ToggleButtonGroup';\n\nconst meta: Meta<typeof TextEllipsis> = {\n    title: 'Data-Display/Typography/Ellipsis',\n    component: TextEllipsis,\n    tags: ['autodocs'],\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof TextEllipsis>;\n\nconst smallIpsum = 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.';\nconst largeIpsum =\n    \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electr\";\n\nexport const Default: Story = {\n    args: {\n        children: largeIpsum,\n    },\n};\n\nexport const Border: Story = {\n    args: {\n        border: true,\n        rows: 2,\n        children: largeIpsum,\n    },\n};\n\nexport const AutoWidth: Story = {\n    args: {\n        autoWidth: true,\n        bgColor: '#dccc0c',\n        children: smallIpsum,\n    },\n};\n\nexport const Width100: Story = {\n    args: {\n        width: true,\n        bgColor: '#dccc0c',\n        children: smallIpsum,\n    },\n};\n\nexport const NoWrap: Story = {\n    args: {\n        noWrap: true,\n        children: largeIpsum,\n    },\n};\n\nexport const Nested: Story = {\n    args: {},\n    render: (args) => (\n        <Box>\n            <TextEllipsis border width={'auto'}>\n                Lorem Ipsum is simply dummy{' '}\n                <TextEllipsis border noWrap bold>\n                    text of the\n                </TextEllipsis>\n                printing and typesetting\n            </TextEllipsis>\n            <TextEllipsis border>\n                industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s\n            </TextEllipsis>\n        </Box>\n    ),\n};\n\nexport const OnEllipsisChange: Story = {\n    args: {\n        children: largeIpsum,\n        rows: 3,\n    },\n    render: (args) => {\n        const [ellipsisState, setEllipsisState] = useState(false);\n\n        return (\n            <TextEllipsis\n                {...args}\n                bgColor={ellipsisState ? 'primary' : 'secondary'}\n                onEllipsisChange={(value) => {\n                    action('onEllipsisChange')(value);\n                    setEllipsisState(value);\n                }}\n            />\n        );\n    },\n};\n\nexport const Rows: Story = {\n    args: {\n        wrap: true,\n        tooltip: true,\n        rows: 2,\n        children: largeIpsum,\n    },\n};\n\nexport const ShowTooltipOnEllipsis: Story = {\n    args: {\n        showTooltipOnEllipsis: false,\n        children: largeIpsum,\n    },\n};\n\nexport const size: Story = {\n    args: {\n        size: 30,\n        children: smallIpsum,\n    },\n};\n\nexport const Tooltip: Story = {\n    args: {\n        wrap: true,\n        tooltip: 'Lorem Ipsum',\n        children: largeIpsum,\n    },\n};\n\nexport const TooltipPlacement: Story = {\n    args: {\n        wrap: true,\n        tooltip: 'Lorem Ipsum',\n        tooltipPlacement: 'right',\n        children: largeIpsum,\n    },\n};\n\nexport const Width: Story = {\n    args: {\n        border: true,\n        width: 250,\n        children: smallIpsum,\n    },\n};\n\nexport const Wrap: Story = {\n    args: {\n        wrap: false,\n        children: largeIpsum,\n    },\n};\n\nexport const Align: Story = {\n    args: {\n        align: 'center',\n        rows: 3,\n        children: largeIpsum,\n    },\n    render: (args) => {\n        const [align, setAlign] = useState<'left' | 'center' | 'right' | 'justify' | 'inherit'>(undefined);\n\n        return (\n            <Stack spacing={3}>\n                <ToggleButtonGroup\n                    exclusive\n                    onChange={(event, v) => {\n                        event?.stopPropagation();\n                        setAlign(v);\n                    }}\n                    value={align}\n                    data={[\n                        { value: 'left', component: 'FormatAlignLeft' },\n                        { value: 'center', component: 'FormatAlignCenter' },\n                        { value: 'right', component: 'FormatAlignRight' },\n                        { value: 'justify', component: 'FormatAlignJustify' },\n                        { value: 'inherit', component: 'Normal' },\n                    ]}\n                />\n                <TextEllipsis {...args} align={align} />\n            </Stack>\n        );\n    },\n};\n\nexport const AlignCenter: Story = {\n    args: {\n        alignCenter: true,\n        children: largeIpsum,\n        rows: 3,\n    },\n};\n\nexport const AlignJustify: Story = {\n    args: {\n        alignJustify: true,\n        children: largeIpsum,\n        rows: 3,\n    },\n};\n\nexport const AlignLeft: Story = {\n    args: {\n        alignLeft: true,\n        children: largeIpsum,\n        rows: 3,\n    },\n};\n\nexport const AlignRight: Story = {\n    args: {\n        alignRight: true,\n        children: largeIpsum,\n        rows: 3,\n    },\n};\n\nexport const BgColor: Story = {\n    args: {\n        bgColor: 'warning',\n        children: largeIpsum,\n    },\n};\n\nexport const Bold: Story = {\n    args: {\n        bold: true,\n        children: largeIpsum,\n    },\n};\n\nexport const CharsCase_ = (args) => (\n    <Stack spacing={3}>\n        <TextEllipsis charsCase=\"lower\">lower: {largeIpsum}</TextEllipsis>\n        <TextEllipsis charsCase=\"upper\">upper: {largeIpsum}</TextEllipsis>\n        <TextEllipsis charsCase=\"capital\">capital: {largeIpsum}</TextEllipsis>\n    </Stack>\n);\n\nexport const Color: Story = {\n    args: {\n        color: '#10cca0',\n        children: largeIpsum,\n    },\n};\n\nexport const Component: Story = {\n    args: {\n        component: 'h1',\n        children: largeIpsum,\n    },\n};\n\nexport const GutterBottom: Story = {\n    args: {\n        gutterBottom: true,\n        children: largeIpsum,\n    },\n};\n\nexport const Italic: Story = {\n    args: {\n        italic: true,\n        children: largeIpsum,\n    },\n};\n\nexport const LineHeight: Story = {\n    args: {\n        lineHeight: '2em',\n        bgColor: '#00ff58',\n        children: largeIpsum,\n    },\n};\n\nexport const Link: Story = {\n    args: {\n        link: 'https://www.lipsum.com/',\n        children: largeIpsum,\n    },\n};\n\nexport const Monospace: Story = {\n    args: {\n        monospace: true,\n        children: largeIpsum,\n    },\n};\n\nexport const Paragraph: Story = {\n    args: {\n        paragraph: true,\n        children: largeIpsum,\n    },\n};\n\nexport const Size: Story = {\n    args: {\n        size: 30,\n        children: largeIpsum,\n    },\n};\n\nexport const Strike: Story = {\n    args: {\n        strike: true,\n        children: largeIpsum,\n    },\n};\n\nexport const Sub: Story = {\n    args: {\n        sub: true,\n        children: largeIpsum,\n    },\n};\n\nexport const Sup: Story = {\n    args: {\n        sup: true,\n        children: largeIpsum,\n    },\n};\n\nexport const Underline: Story = {\n    args: {\n        underline: true,\n        children: largeIpsum,\n    },\n};\n\nexport const ClassName: Story = {\n    args: {\n        className: 'mui-simple',\n        children: largeIpsum,\n    },\n};\n",locationsMap:{default:{startLoc:{col:30,line:23},endLoc:{col:1,line:27},startBody:{col:30,line:23},endBody:{col:1,line:27}},border:{startLoc:{col:29,line:29},endLoc:{col:1,line:35},startBody:{col:29,line:29},endBody:{col:1,line:35}},"auto-width":{startLoc:{col:32,line:37},endLoc:{col:1,line:43},startBody:{col:32,line:37},endBody:{col:1,line:43}},"width-100":{startLoc:{col:31,line:45},endLoc:{col:1,line:51},startBody:{col:31,line:45},endBody:{col:1,line:51}},"no-wrap":{startLoc:{col:29,line:53},endLoc:{col:1,line:58},startBody:{col:29,line:53},endBody:{col:1,line:58}},nested:{startLoc:{col:29,line:60},endLoc:{col:1,line:76},startBody:{col:29,line:60},endBody:{col:1,line:76}},"on-ellipsis-change":{startLoc:{col:39,line:78},endLoc:{col:1,line:97},startBody:{col:39,line:78},endBody:{col:1,line:97}},rows:{startLoc:{col:27,line:99},endLoc:{col:1,line:106},startBody:{col:27,line:99},endBody:{col:1,line:106}},"show-tooltip-on-ellipsis":{startLoc:{col:44,line:108},endLoc:{col:1,line:113},startBody:{col:44,line:108},endBody:{col:1,line:113}},size:{startLoc:{col:27,line:297},endLoc:{col:1,line:302},startBody:{col:27,line:297},endBody:{col:1,line:302}},tooltip:{startLoc:{col:30,line:122},endLoc:{col:1,line:128},startBody:{col:30,line:122},endBody:{col:1,line:128}},"tooltip-placement":{startLoc:{col:39,line:130},endLoc:{col:1,line:137},startBody:{col:39,line:130},endBody:{col:1,line:137}},width:{startLoc:{col:28,line:139},endLoc:{col:1,line:145},startBody:{col:28,line:139},endBody:{col:1,line:145}},wrap:{startLoc:{col:27,line:147},endLoc:{col:1,line:152},startBody:{col:27,line:147},endBody:{col:1,line:152}},align:{startLoc:{col:28,line:154},endLoc:{col:1,line:184},startBody:{col:28,line:154},endBody:{col:1,line:184}},"align-center":{startLoc:{col:34,line:186},endLoc:{col:1,line:192},startBody:{col:34,line:186},endBody:{col:1,line:192}},"align-justify":{startLoc:{col:35,line:194},endLoc:{col:1,line:200},startBody:{col:35,line:194},endBody:{col:1,line:200}},"align-left":{startLoc:{col:32,line:202},endLoc:{col:1,line:208},startBody:{col:32,line:202},endBody:{col:1,line:208}},"align-right":{startLoc:{col:33,line:210},endLoc:{col:1,line:216},startBody:{col:33,line:210},endBody:{col:1,line:216}},"bg-color":{startLoc:{col:30,line:218},endLoc:{col:1,line:223},startBody:{col:30,line:218},endBody:{col:1,line:223}},bold:{startLoc:{col:27,line:225},endLoc:{col:1,line:230},startBody:{col:27,line:225},endBody:{col:1,line:230}},"chars-case":{startLoc:{col:26,line:232},endLoc:{col:1,line:238},startBody:{col:26,line:232},endBody:{col:1,line:238}},color:{startLoc:{col:28,line:240},endLoc:{col:1,line:245},startBody:{col:28,line:240},endBody:{col:1,line:245}},component:{startLoc:{col:32,line:247},endLoc:{col:1,line:252},startBody:{col:32,line:247},endBody:{col:1,line:252}},"gutter-bottom":{startLoc:{col:35,line:254},endLoc:{col:1,line:259},startBody:{col:35,line:254},endBody:{col:1,line:259}},italic:{startLoc:{col:29,line:261},endLoc:{col:1,line:266},startBody:{col:29,line:261},endBody:{col:1,line:266}},"line-height":{startLoc:{col:33,line:268},endLoc:{col:1,line:274},startBody:{col:33,line:268},endBody:{col:1,line:274}},link:{startLoc:{col:27,line:276},endLoc:{col:1,line:281},startBody:{col:27,line:276},endBody:{col:1,line:281}},monospace:{startLoc:{col:32,line:283},endLoc:{col:1,line:288},startBody:{col:32,line:283},endBody:{col:1,line:288}},paragraph:{startLoc:{col:32,line:290},endLoc:{col:1,line:295},startBody:{col:32,line:290},endBody:{col:1,line:295}},strike:{startLoc:{col:29,line:304},endLoc:{col:1,line:309},startBody:{col:29,line:304},endBody:{col:1,line:309}},sub:{startLoc:{col:26,line:311},endLoc:{col:1,line:316},startBody:{col:26,line:311},endBody:{col:1,line:316}},sup:{startLoc:{col:26,line:318},endLoc:{col:1,line:323},startBody:{col:26,line:318},endBody:{col:1,line:323}},underline:{startLoc:{col:32,line:325},endLoc:{col:1,line:330},startBody:{col:32,line:325},endBody:{col:1,line:330}},"class-name":{startLoc:{col:32,line:332},endLoc:{col:1,line:337},startBody:{col:32,line:332},endBody:{col:1,line:337}}}}},title:"Data-Display/Typography/Ellipsis",component:Typography_TextEllipsis,tags:["autodocs"]},smallIpsum="Lorem Ipsum is simply dummy text of the printing and typesetting industry.",largeIpsum="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electr",Default={args:{children:largeIpsum}},Border={args:{border:!0,rows:2,children:largeIpsum}},AutoWidth={args:{autoWidth:!0,bgColor:"#dccc0c",children:smallIpsum}},Width100={args:{width:!0,bgColor:"#dccc0c",children:smallIpsum}},NoWrap={args:{noWrap:!0,children:largeIpsum}},Nested={args:{},render:args=>react.createElement(Box.Z,null,react.createElement(Typography_TextEllipsis,{border:!0,width:"auto"},"Lorem Ipsum is simply dummy"," ",react.createElement(Typography_TextEllipsis,{border:!0,noWrap:!0,bold:!0},"text of the"),"printing and typesetting"),react.createElement(Typography_TextEllipsis,{border:!0},"industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s"))},OnEllipsisChange={args:{children:largeIpsum,rows:3},render:args=>{const[ellipsisState,setEllipsisState]=(0,react.useState)(!1);return react.createElement(Typography_TextEllipsis,Ellipsis_stories_extends({},args,{bgColor:ellipsisState?"primary":"secondary",onEllipsisChange:value=>{(0,dist.aD)("onEllipsisChange")(value),setEllipsisState(value)}}))}},Rows={args:{wrap:!0,tooltip:!0,rows:2,children:largeIpsum}},ShowTooltipOnEllipsis={args:{showTooltipOnEllipsis:!1,children:largeIpsum}},size={args:{size:30,children:smallIpsum}},Tooltip={args:{wrap:!0,tooltip:"Lorem Ipsum",children:largeIpsum}},TooltipPlacement={args:{wrap:!0,tooltip:"Lorem Ipsum",tooltipPlacement:"right",children:largeIpsum}},Width={args:{border:!0,width:250,children:smallIpsum}},Wrap={args:{wrap:!1,children:largeIpsum}},Align={args:{align:"center",rows:3,children:largeIpsum},render:args=>{const[align,setAlign]=(0,react.useState)(void 0);return react.createElement(Stack.Z,{spacing:3},react.createElement(ToggleButtonGroup.Z,{exclusive:!0,onChange:(event,v)=>{event?.stopPropagation(),setAlign(v)},value:align,data:[{value:"left",component:"FormatAlignLeft"},{value:"center",component:"FormatAlignCenter"},{value:"right",component:"FormatAlignRight"},{value:"justify",component:"FormatAlignJustify"},{value:"inherit",component:"Normal"}]}),react.createElement(Typography_TextEllipsis,Ellipsis_stories_extends({},args,{align})))}},AlignCenter={args:{alignCenter:!0,children:largeIpsum,rows:3}},AlignJustify={args:{alignJustify:!0,children:largeIpsum,rows:3}},AlignLeft={args:{alignLeft:!0,children:largeIpsum,rows:3}},AlignRight={args:{alignRight:!0,children:largeIpsum,rows:3}},BgColor={args:{bgColor:"warning",children:largeIpsum}},Bold={args:{bold:!0,children:largeIpsum}},CharsCase_=args=>react.createElement(Stack.Z,{spacing:3},react.createElement(Typography_TextEllipsis,{charsCase:"lower"},"lower: ",largeIpsum),react.createElement(Typography_TextEllipsis,{charsCase:"upper"},"upper: ",largeIpsum),react.createElement(Typography_TextEllipsis,{charsCase:"capital"},"capital: ",largeIpsum));CharsCase_.displayName="CharsCase_";const Color={args:{color:"#10cca0",children:largeIpsum}},Component={args:{component:"h1",children:largeIpsum}},GutterBottom={args:{gutterBottom:!0,children:largeIpsum}},Italic={args:{italic:!0,children:largeIpsum}},LineHeight={args:{lineHeight:"2em",bgColor:"#00ff58",children:largeIpsum}},Link={args:{link:"https://www.lipsum.com/",children:largeIpsum}},Monospace={args:{monospace:!0,children:largeIpsum}},Paragraph={args:{paragraph:!0,children:largeIpsum}},Size={args:{size:30,children:largeIpsum}},Strike={args:{strike:!0,children:largeIpsum}},Sub={args:{sub:!0,children:largeIpsum}},Sup={args:{sup:!0,children:largeIpsum}},Underline={args:{underline:!0,children:largeIpsum}},ClassName={args:{className:"mui-simple",children:largeIpsum}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    children: largeIpsum\n  }\n}",...Default.parameters?.docs?.source}}},Border.parameters={...Border.parameters,docs:{...Border.parameters?.docs,source:{originalSource:"{\n  args: {\n    border: true,\n    rows: 2,\n    children: largeIpsum\n  }\n}",...Border.parameters?.docs?.source}}},AutoWidth.parameters={...AutoWidth.parameters,docs:{...AutoWidth.parameters?.docs,source:{originalSource:"{\n  args: {\n    autoWidth: true,\n    bgColor: '#dccc0c',\n    children: smallIpsum\n  }\n}",...AutoWidth.parameters?.docs?.source}}},Width100.parameters={...Width100.parameters,docs:{...Width100.parameters?.docs,source:{originalSource:"{\n  args: {\n    width: true,\n    bgColor: '#dccc0c',\n    children: smallIpsum\n  }\n}",...Width100.parameters?.docs?.source}}},NoWrap.parameters={...NoWrap.parameters,docs:{...NoWrap.parameters?.docs,source:{originalSource:"{\n  args: {\n    noWrap: true,\n    children: largeIpsum\n  }\n}",...NoWrap.parameters?.docs?.source}}},Nested.parameters={...Nested.parameters,docs:{...Nested.parameters?.docs,source:{originalSource:"{\n  args: {},\n  render: args => <Box>\n            <TextEllipsis border width={'auto'}>\n                Lorem Ipsum is simply dummy{' '}\n                <TextEllipsis border noWrap bold>\n                    text of the\n                </TextEllipsis>\n                printing and typesetting\n            </TextEllipsis>\n            <TextEllipsis border>\n                industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s\n            </TextEllipsis>\n        </Box>\n}",...Nested.parameters?.docs?.source}}},OnEllipsisChange.parameters={...OnEllipsisChange.parameters,docs:{...OnEllipsisChange.parameters?.docs,source:{originalSource:"{\n  args: {\n    children: largeIpsum,\n    rows: 3\n  },\n  render: args => {\n    const [ellipsisState, setEllipsisState] = useState(false);\n    return <TextEllipsis {...args} bgColor={ellipsisState ? 'primary' : 'secondary'} onEllipsisChange={value => {\n      action('onEllipsisChange')(value);\n      setEllipsisState(value);\n    }} />;\n  }\n}",...OnEllipsisChange.parameters?.docs?.source}}},Rows.parameters={...Rows.parameters,docs:{...Rows.parameters?.docs,source:{originalSource:"{\n  args: {\n    wrap: true,\n    tooltip: true,\n    rows: 2,\n    children: largeIpsum\n  }\n}",...Rows.parameters?.docs?.source}}},ShowTooltipOnEllipsis.parameters={...ShowTooltipOnEllipsis.parameters,docs:{...ShowTooltipOnEllipsis.parameters?.docs,source:{originalSource:"{\n  args: {\n    showTooltipOnEllipsis: false,\n    children: largeIpsum\n  }\n}",...ShowTooltipOnEllipsis.parameters?.docs?.source}}},size.parameters={...size.parameters,docs:{...size.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 30,\n    children: smallIpsum\n  }\n}",...size.parameters?.docs?.source}}},Tooltip.parameters={...Tooltip.parameters,docs:{...Tooltip.parameters?.docs,source:{originalSource:"{\n  args: {\n    wrap: true,\n    tooltip: 'Lorem Ipsum',\n    children: largeIpsum\n  }\n}",...Tooltip.parameters?.docs?.source}}},TooltipPlacement.parameters={...TooltipPlacement.parameters,docs:{...TooltipPlacement.parameters?.docs,source:{originalSource:"{\n  args: {\n    wrap: true,\n    tooltip: 'Lorem Ipsum',\n    tooltipPlacement: 'right',\n    children: largeIpsum\n  }\n}",...TooltipPlacement.parameters?.docs?.source}}},Width.parameters={...Width.parameters,docs:{...Width.parameters?.docs,source:{originalSource:"{\n  args: {\n    border: true,\n    width: 250,\n    children: smallIpsum\n  }\n}",...Width.parameters?.docs?.source}}},Wrap.parameters={...Wrap.parameters,docs:{...Wrap.parameters?.docs,source:{originalSource:"{\n  args: {\n    wrap: false,\n    children: largeIpsum\n  }\n}",...Wrap.parameters?.docs?.source}}},Align.parameters={...Align.parameters,docs:{...Align.parameters?.docs,source:{originalSource:"{\n  args: {\n    align: 'center',\n    rows: 3,\n    children: largeIpsum\n  },\n  render: args => {\n    const [align, setAlign] = useState<'left' | 'center' | 'right' | 'justify' | 'inherit'>(undefined);\n    return <Stack spacing={3}>\n                <ToggleButtonGroup exclusive onChange={(event, v) => {\n        event?.stopPropagation();\n        setAlign(v);\n      }} value={align} data={[{\n        value: 'left',\n        component: 'FormatAlignLeft'\n      }, {\n        value: 'center',\n        component: 'FormatAlignCenter'\n      }, {\n        value: 'right',\n        component: 'FormatAlignRight'\n      }, {\n        value: 'justify',\n        component: 'FormatAlignJustify'\n      }, {\n        value: 'inherit',\n        component: 'Normal'\n      }]} />\n                <TextEllipsis {...args} align={align} />\n            </Stack>;\n  }\n}",...Align.parameters?.docs?.source}}},AlignCenter.parameters={...AlignCenter.parameters,docs:{...AlignCenter.parameters?.docs,source:{originalSource:"{\n  args: {\n    alignCenter: true,\n    children: largeIpsum,\n    rows: 3\n  }\n}",...AlignCenter.parameters?.docs?.source}}},AlignJustify.parameters={...AlignJustify.parameters,docs:{...AlignJustify.parameters?.docs,source:{originalSource:"{\n  args: {\n    alignJustify: true,\n    children: largeIpsum,\n    rows: 3\n  }\n}",...AlignJustify.parameters?.docs?.source}}},AlignLeft.parameters={...AlignLeft.parameters,docs:{...AlignLeft.parameters?.docs,source:{originalSource:"{\n  args: {\n    alignLeft: true,\n    children: largeIpsum,\n    rows: 3\n  }\n}",...AlignLeft.parameters?.docs?.source}}},AlignRight.parameters={...AlignRight.parameters,docs:{...AlignRight.parameters?.docs,source:{originalSource:"{\n  args: {\n    alignRight: true,\n    children: largeIpsum,\n    rows: 3\n  }\n}",...AlignRight.parameters?.docs?.source}}},BgColor.parameters={...BgColor.parameters,docs:{...BgColor.parameters?.docs,source:{originalSource:"{\n  args: {\n    bgColor: 'warning',\n    children: largeIpsum\n  }\n}",...BgColor.parameters?.docs?.source}}},Bold.parameters={...Bold.parameters,docs:{...Bold.parameters?.docs,source:{originalSource:"{\n  args: {\n    bold: true,\n    children: largeIpsum\n  }\n}",...Bold.parameters?.docs?.source}}},CharsCase_.parameters={...CharsCase_.parameters,docs:{...CharsCase_.parameters?.docs,source:{originalSource:'args => <Stack spacing={3}>\n        <TextEllipsis charsCase="lower">lower: {largeIpsum}</TextEllipsis>\n        <TextEllipsis charsCase="upper">upper: {largeIpsum}</TextEllipsis>\n        <TextEllipsis charsCase="capital">capital: {largeIpsum}</TextEllipsis>\n    </Stack>',...CharsCase_.parameters?.docs?.source}}},Color.parameters={...Color.parameters,docs:{...Color.parameters?.docs,source:{originalSource:"{\n  args: {\n    color: '#10cca0',\n    children: largeIpsum\n  }\n}",...Color.parameters?.docs?.source}}},Component.parameters={...Component.parameters,docs:{...Component.parameters?.docs,source:{originalSource:"{\n  args: {\n    component: 'h1',\n    children: largeIpsum\n  }\n}",...Component.parameters?.docs?.source}}},GutterBottom.parameters={...GutterBottom.parameters,docs:{...GutterBottom.parameters?.docs,source:{originalSource:"{\n  args: {\n    gutterBottom: true,\n    children: largeIpsum\n  }\n}",...GutterBottom.parameters?.docs?.source}}},Italic.parameters={...Italic.parameters,docs:{...Italic.parameters?.docs,source:{originalSource:"{\n  args: {\n    italic: true,\n    children: largeIpsum\n  }\n}",...Italic.parameters?.docs?.source}}},LineHeight.parameters={...LineHeight.parameters,docs:{...LineHeight.parameters?.docs,source:{originalSource:"{\n  args: {\n    lineHeight: '2em',\n    bgColor: '#00ff58',\n    children: largeIpsum\n  }\n}",...LineHeight.parameters?.docs?.source}}},Link.parameters={...Link.parameters,docs:{...Link.parameters?.docs,source:{originalSource:"{\n  args: {\n    link: 'https://www.lipsum.com/',\n    children: largeIpsum\n  }\n}",...Link.parameters?.docs?.source}}},Monospace.parameters={...Monospace.parameters,docs:{...Monospace.parameters?.docs,source:{originalSource:"{\n  args: {\n    monospace: true,\n    children: largeIpsum\n  }\n}",...Monospace.parameters?.docs?.source}}},Paragraph.parameters={...Paragraph.parameters,docs:{...Paragraph.parameters?.docs,source:{originalSource:"{\n  args: {\n    paragraph: true,\n    children: largeIpsum\n  }\n}",...Paragraph.parameters?.docs?.source}}},Size.parameters={...Size.parameters,docs:{...Size.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 30,\n    children: largeIpsum\n  }\n}",...Size.parameters?.docs?.source}}},Strike.parameters={...Strike.parameters,docs:{...Strike.parameters?.docs,source:{originalSource:"{\n  args: {\n    strike: true,\n    children: largeIpsum\n  }\n}",...Strike.parameters?.docs?.source}}},Sub.parameters={...Sub.parameters,docs:{...Sub.parameters?.docs,source:{originalSource:"{\n  args: {\n    sub: true,\n    children: largeIpsum\n  }\n}",...Sub.parameters?.docs?.source}}},Sup.parameters={...Sup.parameters,docs:{...Sup.parameters?.docs,source:{originalSource:"{\n  args: {\n    sup: true,\n    children: largeIpsum\n  }\n}",...Sup.parameters?.docs?.source}}},Underline.parameters={...Underline.parameters,docs:{...Underline.parameters?.docs,source:{originalSource:"{\n  args: {\n    underline: true,\n    children: largeIpsum\n  }\n}",...Underline.parameters?.docs?.source}}},ClassName.parameters={...ClassName.parameters,docs:{...ClassName.parameters?.docs,source:{originalSource:"{\n  args: {\n    className: 'mui-simple',\n    children: largeIpsum\n  }\n}",...ClassName.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Border","AutoWidth","Width100","NoWrap","Nested","OnEllipsisChange","Rows","ShowTooltipOnEllipsis","size","Tooltip","TooltipPlacement","Width","Wrap","Align","AlignCenter","AlignJustify","AlignLeft","AlignRight","BgColor","Bold","CharsCase_","Color","Component","GutterBottom","Italic","LineHeight","Link","Monospace","Paragraph","Size","Strike","Sub","Sup","Underline","ClassName"];try{CharsCase_.displayName="CharsCase_",CharsCase_.__docgenInfo={description:"",displayName:"CharsCase_",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/Typography/__stories__/Ellipsis.stories.tsx#CharsCase_"]={docgenInfo:CharsCase_.__docgenInfo,name:"CharsCase_",path:"src/components/_FIXED/Typography/__stories__/Ellipsis.stories.tsx#CharsCase_"})}catch(__react_docgen_typescript_loader_error){}},"./src/hooks/useElementSize.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>useElementSize});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function useElementSize(resize=!1){const ref=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),[width,setWidth]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0),[height,setHeight]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0),handleResize=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>{if(ref.current){const{width,height}=ref.current?.getBoundingClientRect()??{};setWidth(width),setHeight(height)}}),[]);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{handleResize()}),[handleResize]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>(resize&&window.addEventListener("resize",handleResize),()=>{resize&&window.removeEventListener("resize",handleResize)})),[handleResize,resize]),[ref,{width,height}]}},"./src/hooks/useEllipsisActive.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{S:()=>useEllipsisActive});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_useElementSize__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/hooks/useElementSize.ts"),_utils_helpers__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/utils/helpers.ts");function useEllipsisActive({active,text,maxRows}){const[ref,{width:widthText}]=(0,_useElementSize__WEBPACK_IMPORTED_MODULE_1__.Z)(active),[isEllipsis,setIsEllipsis]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(active){const{offsetWidth}=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_2__.mY)(text),rows=function getElementRowCount(element){if(!element)return 1;const spanElement=("string"==typeof element.children?element.children:element.children?.[0])??element,style=getComputedStyle(spanElement),lineHeight=parseFloat(style.lineHeight),{height}=spanElement.getBoundingClientRect();return Math.round(height/lineHeight)}(ref.current);setIsEllipsis(!!(maxRows?rows>maxRows:rows<=1&&widthText&&offsetWidth+4>=widthText))}}),[ref.current,widthText]),[ref,isEllipsis]}}}]);