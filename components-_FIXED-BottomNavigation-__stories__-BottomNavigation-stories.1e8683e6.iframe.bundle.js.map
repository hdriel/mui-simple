{"version":3,"file":"components-_FIXED-BottomNavigation-__stories__-BottomNavigation-stories.1e8683e6.iframe.bundle.js","mappings":";;AAqDA;AAGA;ACTA;;AAEA;;AAEA;;AAEA;;;;;;AA9CA;;;;;;;;;;AAaA;AACA;AACA;;;AAdA;ACRA;;;;;;ACWA;;ACXA","sources":["webpack://mui-simple/./src/components/_FIXED/BottomNavigation/BottomNavigation.styled.tsx","webpack://mui-simple/./src/components/_FIXED/Paper/Paper.styled.tsx","webpack://mui-simple/./src/components/_FIXED/Paper/Paper.tsx","webpack://mui-simple/./src/components/_FIXED/SVGIcon/SVGIcon.styled.tsx","webpack://mui-simple/./src/components/_FIXED/SVGIcon/SVGIcon.tsx"],"sourcesContent":["import React from 'react';\nimport type { ComponentType, PropsWithChildren } from 'react';\nimport { styled } from '@mui/material/styles';\nimport {\n    BottomNavigation as MuiBottomNavigation,\n    BottomNavigationAction as MuiBottomNavigationAction,\n} from '@mui/material';\nimport type { BottomNavigationProps } from '@mui/material';\n\nimport Paper from '../Paper/Paper';\n\ninterface BottomNavigationStyledProps {\n    fixedToBottom?: boolean;\n    customColor?: string;\n    elevation?: number;\n    fixedToTop?: boolean;\n    width?: number | string;\n    position?: 'absolute' | 'fixed';\n}\n\ntype BottomNavigationStyledPropsType = BottomNavigationProps & BottomNavigationStyledProps & any;\n\nexport const BottomNavigation = styled(\n    ({\n        width,\n        elevation,\n        fixedToTop,\n        fixedToBottom,\n        position,\n        ...props\n    }: PropsWithChildren<BottomNavigationStyledProps>) => (\n        <Paper\n            sx={{\n                width,\n                ...((fixedToTop || fixedToBottom) && {\n                    position: position ?? 'fixed',\n                    left: 0,\n                    right: 0,\n                    top: fixedToTop ? 0 : undefined,\n                    bottom: fixedToBottom ? 0 : undefined,\n                    zIndex: 2,\n                }),\n            }}\n            elevation={elevation}\n        >\n            <MuiBottomNavigation {...props} />\n        </Paper>\n    ),\n    {\n        shouldForwardProp: (propName: string) => !['customColor'].includes(propName as string),\n    }\n)<BottomNavigationStyledPropsType>`\n    & .MuiBottomNavigationAction-root.Mui-selected {\n        color: ${(props: any) => props.customColor}\n` as ComponentType<BottomNavigationStyledPropsType>;\n\nexport const BottomNavigationAction: any = MuiBottomNavigationAction;\n","import { get } from 'lodash-es';\nimport { Paper as MuiPaper } from '@mui/material';\nimport { styled, css } from '@mui/material/styles';\nimport { numberToPx } from '../../../utils/helpers';\nimport type { ComponentType } from 'react';\nimport type { SerializedStyles } from '@emotion/serialize';\n\nfunction imageStyle(props): SerializedStyles {\n    if (!props.imageSrc) return css``;\n\n    return css`\n        background-color: unset;\n\n        &::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background-image: url('${props.imageSrc}');\n            background-size: ${props.imageLayout};\n            opacity: ${props.imageOpacity};\n            z-index: -1;\n        }\n    `;\n}\n\ninterface PaperStylesProps {\n    width: string | number;\n    height: string | number;\n    muiColor: string;\n    square: boolean;\n    variant: string;\n    customColor: string;\n    textColor: string;\n    imageSrc: string;\n    imageOpacity: number;\n    elevation: number;\n    imageLayout: string;\n}\nexport const Paper = styled(MuiPaper, {\n    shouldForwardProp: (propName: string) =>\n        !['muiColor', 'customColor', 'textColor', 'imageSrc', 'imageOpacity', 'imageLayout'].includes(\n            propName as string\n        ),\n})<PaperStylesProps>`\n    width: ${(props: any) => numberToPx(props.width)};\n\n    height: ${(props: any) => numberToPx(props.height)};\n\n    background-color: ${(props: any) => props.customColor};\n\n    color: ${(props: any) => props.textColor ?? get(props, `theme.palette.${props.muiColor}.contrastText`)};\n\n    position: relative;\n\n    z-index: 0;\n\n    ${imageStyle};\n` as ComponentType<PaperStylesProps>;\n","const _excluded = [\"color\", \"elevation\", \"height\", \"imageLayout\", \"imageOpacity\", \"imageSrc\", \"square\", \"textColor\", \"variant\", \"width\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport React from 'react';\nimport { Paper as MuiPaper } from './Paper.styled';\nimport { useCustomColor } from '../../../utils/helpers';\nconst Paper = _ref => {\n  let {\n      color,\n      elevation,\n      height,\n      imageLayout = 'cover',\n      imageOpacity = 1,\n      imageSrc,\n      square,\n      textColor: _textColor,\n      variant,\n      width\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  const [customColor, muiColor] = useCustomColor(color);\n  const [textColor] = useCustomColor(_textColor);\n  return /*#__PURE__*/React.createElement(MuiPaper, _extends({\n    customColor: customColor,\n    elevation: variant !== 'outlined' ? elevation : undefined,\n    height: height,\n    imageLayout: imageLayout,\n    imageOpacity: imageOpacity,\n    imageSrc: imageSrc,\n    muiColor: muiColor,\n    square: square,\n    textColor: textColor,\n    variant: variant,\n    width: width\n  }, props));\n};\nPaper.displayName = 'Paper';\nexport default Paper;\n;\nPaper.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Paper\",\n  \"props\": {\n    \"color\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\"\n    },\n    \"elevation\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"number\"\n      },\n      \"description\": \"\"\n    },\n    \"height\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"union\",\n        \"raw\": \"number | string\",\n        \"elements\": [{\n          \"name\": \"number\"\n        }, {\n          \"name\": \"string\"\n        }]\n      },\n      \"description\": \"\"\n    },\n    \"imageLayout\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"union\",\n        \"raw\": \"| 'contain'\\n| 'cover'\\n| 'auto'\\n| 'inherit'\\n| 'auto auto'\\n| 'initial'\\n| 'revert'\\n| 'revert-layer'\\n| 'unset'\\n| string\",\n        \"elements\": [{\n          \"name\": \"literal\",\n          \"value\": \"'contain'\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"'cover'\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"'auto'\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"'inherit'\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"'auto auto'\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"'initial'\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"'revert'\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"'revert-layer'\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"'unset'\"\n        }, {\n          \"name\": \"string\"\n        }]\n      },\n      \"description\": \"\",\n      \"defaultValue\": {\n        \"value\": \"'cover'\",\n        \"computed\": false\n      }\n    },\n    \"imageOpacity\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"number\"\n      },\n      \"description\": \"\",\n      \"defaultValue\": {\n        \"value\": \"1\",\n        \"computed\": false\n      }\n    },\n    \"imageSrc\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\"\n    },\n    \"square\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"boolean\"\n      },\n      \"description\": \"\"\n    },\n    \"textColor\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\"\n    },\n    \"variant\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"union\",\n        \"raw\": \"'elevation' | 'outlined'\",\n        \"elements\": [{\n          \"name\": \"literal\",\n          \"value\": \"'elevation'\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"'outlined'\"\n        }]\n      },\n      \"description\": \"\"\n    },\n    \"width\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"union\",\n        \"raw\": \"number | string\",\n        \"elements\": [{\n          \"name\": \"number\"\n        }, {\n          \"name\": \"string\"\n        }]\n      },\n      \"description\": \"\"\n    }\n  }\n};","import { styled } from '@mui/material/styles';\nimport InlineSVG from 'react-inlinesvg';\n\nexport const SVG = styled(InlineSVG, {\n    shouldForwardProp: (propName: string) => !['color'].includes(propName as string),\n})`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    svg {\n        ${(props: any) => ({ ...props })}\n    }\n`;\n","const _excluded = [\"children\", \"color\", \"height\", \"iconSrc\", \"muiIconName\", \"size\", \"sx\", \"width\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport React, { isValidElement } from 'react';\nimport MuiIconName from './MuiIconName';\nimport { SVG } from './SVGIcon.styled';\nimport { useCustomColor } from '../../../utils/helpers';\nconst SVGIcon = _ref => {\n  let {\n      children,\n      color,\n      height,\n      iconSrc,\n      muiIconName,\n      size,\n      sx: _sx,\n      width\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  const [customColor, muiColor] = useCustomColor(color);\n  const iconName = muiIconName || (typeof children === 'string' ? children : undefined);\n  const sx = _objectSpread({\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }, _sx);\n  if (children && /*#__PURE__*/isValidElement(children)) {\n    return children;\n  }\n  return /*#__PURE__*/React.createElement(MuiIconName, _extends({\n    name: iconName,\n    color: customColor,\n    width: size !== null && size !== void 0 ? size : width,\n    height: size !== null && size !== void 0 ? size : height,\n    sx: sx\n  }, props), iconSrc ? /*#__PURE__*/React.createElement(SVG, _extends({\n    src: iconSrc,\n    fill: customColor,\n    width: size !== null && size !== void 0 ? size : width,\n    height: size !== null && size !== void 0 ? size : height,\n    sx: sx\n  }, props)) : children);\n};\nSVGIcon.displayName = 'SVGIcon';\nexport default SVGIcon;\n;\nSVGIcon.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"SVGIcon\",\n  \"props\": {\n    \"muiIconName\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\"\n    },\n    \"iconSrc\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\"\n    },\n    \"color\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\"\n    },\n    \"width\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"union\",\n        \"raw\": \"string | number\",\n        \"elements\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"number\"\n        }]\n      },\n      \"description\": \"\"\n    },\n    \"height\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"union\",\n        \"raw\": \"string | number\",\n        \"elements\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"number\"\n        }]\n      },\n      \"description\": \"\"\n    },\n    \"size\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"union\",\n        \"raw\": \"string | number\",\n        \"elements\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"number\"\n        }]\n      },\n      \"description\": \"\"\n    },\n    \"sx\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"SxProps\"\n      },\n      \"description\": \"\"\n    }\n  }\n};"],"names":[],"sourceRoot":""}