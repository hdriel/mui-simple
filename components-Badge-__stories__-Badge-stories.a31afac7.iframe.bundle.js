"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[2719],{"./src/components/Badge/__stories__/Badge.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AnchorPosition:()=>AnchorPosition,Default:()=>Default,Hide:()=>Hide,Max99:()=>Max99,Overlap:()=>Overlap,ShowZero:()=>ShowZero,ThemedAndColored:()=>ThemedAndColored,Variant:()=>Variant,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Badge_stories});var templateObject_1,_a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v,_w,_x,_y,_z,react=__webpack_require__("./node_modules/react/index.js"),Mail=__webpack_require__("./node_modules/@mui/icons-material/esm/Mail.js"),Stack=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),Button=__webpack_require__("./node_modules/@mui/material/Button/Button.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),Badge=__webpack_require__("./node_modules/@mui/material/Badge/Badge.js"),__makeTemplateObject=function(cooked,raw){return Object.defineProperty?Object.defineProperty(cooked,"raw",{value:raw}):cooked.raw=raw,cooked},Badge_styled_Badge=(0,__webpack_require__("./node_modules/@mui/material/styles/styled.js").ZP)(Badge.Z,{shouldForwardProp:function(propName){return!["customColor"].includes(propName)}})(templateObject_1||(templateObject_1=__makeTemplateObject(["\n    & .MuiBadge-badge {\n        border: 1.5px solid ",";\n        background-color: ",";\n    }\n"],["\n    & .MuiBadge-badge {\n        border: 1.5px solid ",";\n        background-color: ",";\n    }\n"])),(function(props){return props.theme.palette.background.paper}),(function(props){return props.customColor})),helpers=__webpack_require__("./src/utils/helpers.ts"),_excluded=["variant","color","content","hide","showZero","max","overlap","vertical","horizontal"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function Badge_Badge(_ref){var variant=_ref.variant,color=_ref.color,content=_ref.content,hide=_ref.hide,showZero=_ref.showZero,max=_ref.max,overlap=_ref.overlap,vertical=_ref.vertical,horizontal=_ref.horizontal,props=_objectWithoutProperties(_ref,_excluded),_a=(0,helpers.Ek)(color),customColor=_a[0],muiColor=_a[1];return react.createElement(Badge_styled_Badge,_extends({color:muiColor,customColor:muiColor?void 0:customColor,badgeContent:content,variant,invisible:hide,showZero,max,overlap,anchorOrigin:(vertical||horizontal)&&{vertical:null!=vertical?vertical:"top",horizontal:null!=horizontal?horizontal:"right"}},props))}Badge_Badge.displayName="Badge",Badge_Badge.propTypes={color:prop_types_default().string,content:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().number]),hide:prop_types_default().bool,horizontal:prop_types_default().oneOf(["right","left"]),max:prop_types_default().number,overlap:prop_types_default().oneOf(["circular"]),showZero:prop_types_default().bool,variant:prop_types_default().oneOf(["dot"]),vertical:prop_types_default().oneOf(["top","bottom"])},Badge_Badge.defaultProps={color:void 0,content:0,hide:void 0,horizontal:void 0,max:void 0,overlap:void 0,showZero:void 0,variant:void 0,vertical:void 0};try{Badge_Badge.displayName="Badge",Badge_Badge.__docgenInfo={description:"",displayName:"Badge",props:{color:{defaultValue:{value:"undefined"},description:"",name:"color",required:!1,type:{name:"string"}},content:{defaultValue:{value:"0"},description:"",name:"content",required:!1,type:{name:"string | number"}},hide:{defaultValue:{value:"undefined"},description:"",name:"hide",required:!1,type:{name:"boolean"}},horizontal:{defaultValue:{value:"undefined"},description:"",name:"horizontal",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},max:{defaultValue:{value:"undefined"},description:"",name:"max",required:!1,type:{name:"number"}},overlap:{defaultValue:{value:"undefined"},description:"",name:"overlap",required:!1,type:{name:'"circular"'}},showZero:{defaultValue:{value:"undefined"},description:"",name:"showZero",required:!1,type:{name:"boolean"}},variant:{defaultValue:{value:"undefined"},description:"",name:"variant",required:!1,type:{name:'"dot"'}},vertical:{defaultValue:{value:"undefined"},description:"",name:"vertical",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"top"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Badge/Badge.tsx#Badge"]={docgenInfo:Badge_Badge.__docgenInfo,name:"Badge",path:"src/components/Badge/Badge.tsx#Badge"})}catch(__react_docgen_typescript_loader_error){}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function Badge_stories_extends(){return Badge_stories_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},Badge_stories_extends.apply(this,arguments)}const Badge_stories={parameters:{storySource:{source:'import React, { useState } from "react";\nimport { Mail as MainIcon } from "@mui/icons-material";\nimport { Stack, Button, Box } from "@mui/material";\nimport Badge from "../Badge";\nexport default {\n  title: "Data-Display/Badge",\n  component: Badge\n};\nconst actions = {};\nexport const Default = () => {\n  return <Badge {...actions}>\n      <MainIcon />\n    </Badge>;\n};\nexport const ThemedAndColored = () => {\n  return <Stack direction="row" spacing={3}>\n      {[undefined, "primary", "secondary", "info", "success", "warning", "error", "#d05e00"].map((color, index) => <Badge key={index} {...actions} content={1} color={color}>\n          <MainIcon />\n        </Badge>)}\n    </Stack>;\n};\nexport const Variant = () => {\n  return <Stack direction="row" spacing={3} alignItems={"center"}>\n      <Badge {...actions} content={"b"} color="secondary">\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} content={"b"} color="secondary" variant="dot">\n        <MainIcon />\n      </Badge>\n    </Stack>;\n};\nexport const Hide = () => {\n  const [hide, setHide] = useState(false);\n  return <Stack direction="row" spacing={3} alignItems={"center"}>\n      <Button color="secondary" onClick={() => setHide(h => !h)}>\n        {hide ? "show" : "hide"}\n      </Button>\n      <Badge {...actions} content={"b"} color="secondary" hide={hide}>\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} color="secondary" hide={hide}>\n        <MainIcon />\n      </Badge>\n    </Stack>;\n};\nexport const ShowZero = () => {\n  return <Stack direction="row" spacing={3} alignItems={"center"}>\n      <Badge {...actions} content={0} color="secondary" showZero={false}>\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} content={0} color="secondary" showZero={true}>\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} content={0} color="secondary">\n        <MainIcon />\n      </Badge>\n    </Stack>;\n};\nexport const Max99 = () => {\n  return <Stack direction="row" spacing={3} alignItems={"center"}>\n      <Badge {...actions} content={9}>\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} content={99}>\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} content={999}>\n        <MainIcon />\n      </Badge>\n    </Stack>;\n};\nconst shapeStyles = {\n  bgcolor: "secondary.main",\n  width: 40,\n  height: 40\n};\nconst shapeCircleStyles = {\n  borderRadius: "50%"\n};\nconst rectangle = <Box component="span" sx={shapeStyles} />;\nconst circle = <Box component="span" sx={{\n  ...shapeStyles,\n  ...shapeCircleStyles\n}} />;\nexport const Overlap = () => {\n  return <Stack direction="row" spacing={3} alignItems={"center"}>\n      <Badge {...actions} content={" "}>\n        {rectangle}\n      </Badge>\n      <Badge {...actions} content={" "} variant="dot">\n        {rectangle}\n      </Badge>\n      <Badge {...actions} content={" "} overlap={"circular"}>\n        {circle}\n      </Badge>\n      <Badge {...actions} content={" "} overlap={"circular"} variant="dot">\n        {circle}\n      </Badge>\n    </Stack>;\n};\nexport const AnchorPosition = () => {\n  return <Stack direction="column" spacing={3} alignItems={"center"}>\n      <Stack direction="row" spacing={5} alignItems={"center"}>\n        <Badge {...actions} content={"T"} vertical="top">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"B"} vertical="bottom">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"R"} horizontal="right">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"L"} horizontal="left">\n          <MainIcon />\n        </Badge>\n      </Stack>\n      <Stack direction="row" spacing={5} alignItems={"center"}>\n        <Badge {...actions} content={"TR"} vertical="top" horizontal="right">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"TL"} vertical="top" horizontal="left">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"BR"} vertical="bottom" horizontal="right">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"BL"} vertical="bottom" horizontal="left">\n          <MainIcon />\n        </Badge>\n      </Stack>\n    </Stack>;\n};\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...Default.parameters?.docs,\n    source: {\n      originalSource: "() => {\\n  return <Badge {...actions}>\\n      <MainIcon />\\n    </Badge>;\\n}",\n      ...Default.parameters?.docs?.source\n    }\n  }\n};\nThemedAndColored.parameters = {\n  ...ThemedAndColored.parameters,\n  docs: {\n    ...ThemedAndColored.parameters?.docs,\n    source: {\n      originalSource: "() => {\\n  return <Stack direction=\\"row\\" spacing={3}>\\n      {[undefined, \\"primary\\", \\"secondary\\", \\"info\\", \\"success\\", \\"warning\\", \\"error\\", \\"#d05e00\\"].map((color, index) => <Badge key={index} {...actions} content={1} color={color}>\\n          <MainIcon />\\n        </Badge>)}\\n    </Stack>;\\n}",\n      ...ThemedAndColored.parameters?.docs?.source\n    }\n  }\n};\nVariant.parameters = {\n  ...Variant.parameters,\n  docs: {\n    ...Variant.parameters?.docs,\n    source: {\n      originalSource: "() => {\\n  return <Stack direction=\\"row\\" spacing={3} alignItems={\\"center\\"}>\\n      <Badge {...actions} content={\\"b\\"} color=\\"secondary\\">\\n        <MainIcon />\\n      </Badge>\\n      <Badge {...actions} content={\\"b\\"} color=\\"secondary\\" variant=\\"dot\\">\\n        <MainIcon />\\n      </Badge>\\n    </Stack>;\\n}",\n      ...Variant.parameters?.docs?.source\n    }\n  }\n};\nHide.parameters = {\n  ...Hide.parameters,\n  docs: {\n    ...Hide.parameters?.docs,\n    source: {\n      originalSource: "() => {\\n  const [hide, setHide] = useState(false);\\n  return <Stack direction=\\"row\\" spacing={3} alignItems={\\"center\\"}>\\n      <Button color=\\"secondary\\" onClick={() => setHide(h => !h)}>\\n        {hide ? \\"show\\" : \\"hide\\"}\\n      </Button>\\n      <Badge {...actions} content={\\"b\\"} color=\\"secondary\\" hide={hide}>\\n        <MainIcon />\\n      </Badge>\\n      <Badge {...actions} color=\\"secondary\\" hide={hide}>\\n        <MainIcon />\\n      </Badge>\\n    </Stack>;\\n}",\n      ...Hide.parameters?.docs?.source\n    }\n  }\n};\nShowZero.parameters = {\n  ...ShowZero.parameters,\n  docs: {\n    ...ShowZero.parameters?.docs,\n    source: {\n      originalSource: "() => {\\n  return <Stack direction=\\"row\\" spacing={3} alignItems={\\"center\\"}>\\n      <Badge {...actions} content={0} color=\\"secondary\\" showZero={false}>\\n        <MainIcon />\\n      </Badge>\\n      <Badge {...actions} content={0} color=\\"secondary\\" showZero={true}>\\n        <MainIcon />\\n      </Badge>\\n      <Badge {...actions} content={0} color=\\"secondary\\">\\n        <MainIcon />\\n      </Badge>\\n    </Stack>;\\n}",\n      ...ShowZero.parameters?.docs?.source\n    }\n  }\n};\nMax99.parameters = {\n  ...Max99.parameters,\n  docs: {\n    ...Max99.parameters?.docs,\n    source: {\n      originalSource: "() => {\\n  return <Stack direction=\\"row\\" spacing={3} alignItems={\\"center\\"}>\\n      <Badge {...actions} content={9}>\\n        <MainIcon />\\n      </Badge>\\n      <Badge {...actions} content={99}>\\n        <MainIcon />\\n      </Badge>\\n      <Badge {...actions} content={999}>\\n        <MainIcon />\\n      </Badge>\\n    </Stack>;\\n}",\n      ...Max99.parameters?.docs?.source\n    }\n  }\n};\nOverlap.parameters = {\n  ...Overlap.parameters,\n  docs: {\n    ...Overlap.parameters?.docs,\n    source: {\n      originalSource: "() => {\\n  return <Stack direction=\\"row\\" spacing={3} alignItems={\\"center\\"}>\\n      <Badge {...actions} content={\\" \\"}>\\n        {rectangle}\\n      </Badge>\\n      <Badge {...actions} content={\\" \\"} variant=\\"dot\\">\\n        {rectangle}\\n      </Badge>\\n      <Badge {...actions} content={\\" \\"} overlap={\\"circular\\"}>\\n        {circle}\\n      </Badge>\\n      <Badge {...actions} content={\\" \\"} overlap={\\"circular\\"} variant=\\"dot\\">\\n        {circle}\\n      </Badge>\\n    </Stack>;\\n}",\n      ...Overlap.parameters?.docs?.source\n    }\n  }\n};\nAnchorPosition.parameters = {\n  ...AnchorPosition.parameters,\n  docs: {\n    ...AnchorPosition.parameters?.docs,\n    source: {\n      originalSource: "() => {\\n  return <Stack direction=\\"column\\" spacing={3} alignItems={\\"center\\"}>\\n      <Stack direction=\\"row\\" spacing={5} alignItems={\\"center\\"}>\\n        <Badge {...actions} content={\\"T\\"} vertical=\\"top\\">\\n          <MainIcon />\\n        </Badge>\\n        <Badge {...actions} content={\\"B\\"} vertical=\\"bottom\\">\\n          <MainIcon />\\n        </Badge>\\n        <Badge {...actions} content={\\"R\\"} horizontal=\\"right\\">\\n          <MainIcon />\\n        </Badge>\\n        <Badge {...actions} content={\\"L\\"} horizontal=\\"left\\">\\n          <MainIcon />\\n        </Badge>\\n      </Stack>\\n      <Stack direction=\\"row\\" spacing={5} alignItems={\\"center\\"}>\\n        <Badge {...actions} content={\\"TR\\"} vertical=\\"top\\" horizontal=\\"right\\">\\n          <MainIcon />\\n        </Badge>\\n        <Badge {...actions} content={\\"TL\\"} vertical=\\"top\\" horizontal=\\"left\\">\\n          <MainIcon />\\n        </Badge>\\n        <Badge {...actions} content={\\"BR\\"} vertical=\\"bottom\\" horizontal=\\"right\\">\\n          <MainIcon />\\n        </Badge>\\n        <Badge {...actions} content={\\"BL\\"} vertical=\\"bottom\\" horizontal=\\"left\\">\\n          <MainIcon />\\n        </Badge>\\n      </Stack>\\n    </Stack>;\\n}",\n      ...AnchorPosition.parameters?.docs?.source\n    }\n  }\n};',locationsMap:{default:{startLoc:{col:23,line:10},endLoc:{col:1,line:14},startBody:{col:23,line:10},endBody:{col:1,line:14}},"themed-and-colored":{startLoc:{col:32,line:15},endLoc:{col:1,line:21},startBody:{col:32,line:15},endBody:{col:1,line:21}},variant:{startLoc:{col:23,line:22},endLoc:{col:1,line:31},startBody:{col:23,line:22},endBody:{col:1,line:31}},hide:{startLoc:{col:20,line:32},endLoc:{col:1,line:45},startBody:{col:20,line:32},endBody:{col:1,line:45}},"show-zero":{startLoc:{col:24,line:46},endLoc:{col:1,line:58},startBody:{col:24,line:46},endBody:{col:1,line:58}},"max-99":{startLoc:{col:21,line:59},endLoc:{col:1,line:71},startBody:{col:21,line:59},endBody:{col:1,line:71}},overlap:{startLoc:{col:23,line:85},endLoc:{col:1,line:100},startBody:{col:23,line:85},endBody:{col:1,line:100}},"anchor-position":{startLoc:{col:30,line:101},endLoc:{col:1,line:132},startBody:{col:30,line:101},endBody:{col:1,line:132}}}}},title:"Data-Display/Badge",component:Badge_Badge};var actions={},Default=function(){return react.createElement(Badge_Badge,actions,react.createElement(Mail.Z,null))};Default.displayName="Default";var ThemedAndColored=function(){return react.createElement(Stack.Z,{direction:"row",spacing:3},[void 0,"primary","secondary","info","success","warning","error","#d05e00"].map((function(color,index){return react.createElement(Badge_Badge,Badge_stories_extends({key:index},actions,{content:1,color}),react.createElement(Mail.Z,null))})))};ThemedAndColored.displayName="ThemedAndColored";var Variant=function(){return react.createElement(Stack.Z,{direction:"row",spacing:3,alignItems:"center"},react.createElement(Badge_Badge,Badge_stories_extends({},actions,{content:"b",color:"secondary"}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_extends({},actions,{content:"b",color:"secondary",variant:"dot"}),react.createElement(Mail.Z,null)))};Variant.displayName="Variant";var Hide=function(){var _a=(0,react.useState)(!1),hide=_a[0],setHide=_a[1];return react.createElement(Stack.Z,{direction:"row",spacing:3,alignItems:"center"},react.createElement(Button.Z,{color:"secondary",onClick:function(){return setHide((function(h){return!h}))}},hide?"show":"hide"),react.createElement(Badge_Badge,Badge_stories_extends({},actions,{content:"b",color:"secondary",hide}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_extends({},actions,{color:"secondary",hide}),react.createElement(Mail.Z,null)))};Hide.displayName="Hide";var ShowZero=function(){return react.createElement(Stack.Z,{direction:"row",spacing:3,alignItems:"center"},react.createElement(Badge_Badge,Badge_stories_extends({},actions,{content:0,color:"secondary",showZero:!1}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_extends({},actions,{content:0,color:"secondary",showZero:!0}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_extends({},actions,{content:0,color:"secondary"}),react.createElement(Mail.Z,null)))};ShowZero.displayName="ShowZero";var Max99=function(){return react.createElement(Stack.Z,{direction:"row",spacing:3,alignItems:"center"},react.createElement(Badge_Badge,Badge_stories_extends({},actions,{content:9}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_extends({},actions,{content:99}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_extends({},actions,{content:999}),react.createElement(Mail.Z,null)))};Max99.displayName="Max99";var shapeStyles={bgcolor:"secondary.main",width:40,height:40},rectangle=react.createElement(Box.Z,{component:"span",sx:shapeStyles}),circle=react.createElement(Box.Z,{component:"span",sx:_objectSpread(_objectSpread({},shapeStyles),{borderRadius:"50%"})}),Overlap=function(){return react.createElement(Stack.Z,{direction:"row",spacing:3,alignItems:"center"},react.createElement(Badge_Badge,Badge_stories_extends({},actions,{content:" "}),rectangle),react.createElement(Badge_Badge,Badge_stories_extends({},actions,{content:" ",variant:"dot"}),rectangle),react.createElement(Badge_Badge,Badge_stories_extends({},actions,{content:" ",overlap:"circular"}),circle),react.createElement(Badge_Badge,Badge_stories_extends({},actions,{content:" ",overlap:"circular",variant:"dot"}),circle))};Overlap.displayName="Overlap";var AnchorPosition=function(){return react.createElement(Stack.Z,{direction:"column",spacing:3,alignItems:"center"},react.createElement(Stack.Z,{direction:"row",spacing:5,alignItems:"center"},react.createElement(Badge_Badge,Badge_stories_extends({},actions,{content:"T",vertical:"top"}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_extends({},actions,{content:"B",vertical:"bottom"}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_extends({},actions,{content:"R",horizontal:"right"}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_extends({},actions,{content:"L",horizontal:"left"}),react.createElement(Mail.Z,null))),react.createElement(Stack.Z,{direction:"row",spacing:5,alignItems:"center"},react.createElement(Badge_Badge,Badge_stories_extends({},actions,{content:"TR",vertical:"top",horizontal:"right"}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_extends({},actions,{content:"TL",vertical:"top",horizontal:"left"}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_extends({},actions,{content:"BR",vertical:"bottom",horizontal:"right"}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_extends({},actions,{content:"BL",vertical:"bottom",horizontal:"left"}),react.createElement(Mail.Z,null))))};AnchorPosition.displayName="AnchorPosition",Default.parameters=_objectSpread(_objectSpread({},Default.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_a=Default.parameters)||void 0===_a?void 0:_a.docs),{},{source:_objectSpread({originalSource:"() => {\n  return <Badge {...actions}>\n      <MainIcon />\n    </Badge>;\n}"},null===(_c=null===(_b=Default.parameters)||void 0===_b?void 0:_b.docs)||void 0===_c?void 0:_c.source)})}),ThemedAndColored.parameters=_objectSpread(_objectSpread({},ThemedAndColored.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_d=ThemedAndColored.parameters)||void 0===_d?void 0:_d.docs),{},{source:_objectSpread({originalSource:'() => {\n  return <Stack direction="row" spacing={3}>\n      {[undefined, "primary", "secondary", "info", "success", "warning", "error", "#d05e00"].map((color, index) => <Badge key={index} {...actions} content={1} color={color}>\n          <MainIcon />\n        </Badge>)}\n    </Stack>;\n}'},null===(_f=null===(_e=ThemedAndColored.parameters)||void 0===_e?void 0:_e.docs)||void 0===_f?void 0:_f.source)})}),Variant.parameters=_objectSpread(_objectSpread({},Variant.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_g=Variant.parameters)||void 0===_g?void 0:_g.docs),{},{source:_objectSpread({originalSource:'() => {\n  return <Stack direction="row" spacing={3} alignItems={"center"}>\n      <Badge {...actions} content={"b"} color="secondary">\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} content={"b"} color="secondary" variant="dot">\n        <MainIcon />\n      </Badge>\n    </Stack>;\n}'},null===(_j=null===(_h=Variant.parameters)||void 0===_h?void 0:_h.docs)||void 0===_j?void 0:_j.source)})}),Hide.parameters=_objectSpread(_objectSpread({},Hide.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_k=Hide.parameters)||void 0===_k?void 0:_k.docs),{},{source:_objectSpread({originalSource:'() => {\n  const [hide, setHide] = useState(false);\n  return <Stack direction="row" spacing={3} alignItems={"center"}>\n      <Button color="secondary" onClick={() => setHide(h => !h)}>\n        {hide ? "show" : "hide"}\n      </Button>\n      <Badge {...actions} content={"b"} color="secondary" hide={hide}>\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} color="secondary" hide={hide}>\n        <MainIcon />\n      </Badge>\n    </Stack>;\n}'},null===(_m=null===(_l=Hide.parameters)||void 0===_l?void 0:_l.docs)||void 0===_m?void 0:_m.source)})}),ShowZero.parameters=_objectSpread(_objectSpread({},ShowZero.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_o=ShowZero.parameters)||void 0===_o?void 0:_o.docs),{},{source:_objectSpread({originalSource:'() => {\n  return <Stack direction="row" spacing={3} alignItems={"center"}>\n      <Badge {...actions} content={0} color="secondary" showZero={false}>\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} content={0} color="secondary" showZero={true}>\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} content={0} color="secondary">\n        <MainIcon />\n      </Badge>\n    </Stack>;\n}'},null===(_q=null===(_p=ShowZero.parameters)||void 0===_p?void 0:_p.docs)||void 0===_q?void 0:_q.source)})}),Max99.parameters=_objectSpread(_objectSpread({},Max99.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_r=Max99.parameters)||void 0===_r?void 0:_r.docs),{},{source:_objectSpread({originalSource:'() => {\n  return <Stack direction="row" spacing={3} alignItems={"center"}>\n      <Badge {...actions} content={9}>\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} content={99}>\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} content={999}>\n        <MainIcon />\n      </Badge>\n    </Stack>;\n}'},null===(_t=null===(_s=Max99.parameters)||void 0===_s?void 0:_s.docs)||void 0===_t?void 0:_t.source)})}),Overlap.parameters=_objectSpread(_objectSpread({},Overlap.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_u=Overlap.parameters)||void 0===_u?void 0:_u.docs),{},{source:_objectSpread({originalSource:'() => {\n  return <Stack direction="row" spacing={3} alignItems={"center"}>\n      <Badge {...actions} content={" "}>\n        {rectangle}\n      </Badge>\n      <Badge {...actions} content={" "} variant="dot">\n        {rectangle}\n      </Badge>\n      <Badge {...actions} content={" "} overlap={"circular"}>\n        {circle}\n      </Badge>\n      <Badge {...actions} content={" "} overlap={"circular"} variant="dot">\n        {circle}\n      </Badge>\n    </Stack>;\n}'},null===(_w=null===(_v=Overlap.parameters)||void 0===_v?void 0:_v.docs)||void 0===_w?void 0:_w.source)})}),AnchorPosition.parameters=_objectSpread(_objectSpread({},AnchorPosition.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_x=AnchorPosition.parameters)||void 0===_x?void 0:_x.docs),{},{source:_objectSpread({originalSource:'() => {\n  return <Stack direction="column" spacing={3} alignItems={"center"}>\n      <Stack direction="row" spacing={5} alignItems={"center"}>\n        <Badge {...actions} content={"T"} vertical="top">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"B"} vertical="bottom">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"R"} horizontal="right">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"L"} horizontal="left">\n          <MainIcon />\n        </Badge>\n      </Stack>\n      <Stack direction="row" spacing={5} alignItems={"center"}>\n        <Badge {...actions} content={"TR"} vertical="top" horizontal="right">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"TL"} vertical="top" horizontal="left">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"BR"} vertical="bottom" horizontal="right">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"BL"} vertical="bottom" horizontal="left">\n          <MainIcon />\n        </Badge>\n      </Stack>\n    </Stack>;\n}'},null===(_z=null===(_y=AnchorPosition.parameters)||void 0===_y?void 0:_y.docs)||void 0===_z?void 0:_z.source)})});var __namedExportsOrder=["Default","ThemedAndColored","Variant","Hide","ShowZero","Max99","Overlap","AnchorPosition"]},"./src/utils/helpers.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$K:()=>isDefined,Ek:()=>useCustomColor,F2:()=>generatePassword,_f:()=>numberToPx,_v:()=>sleep,im:()=>getCapitalLetters,mY:()=>getTextWidth,q4:()=>getCustomColor,u_:()=>stringToColor,vQ:()=>copyToClipboard});var lodash_es__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/lodash-es/get.js"),_mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mui/system/esm/colorManipulator.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@mui/material/styles/useTheme.js"),toHex=function(){};function getCapitalLetters(str){var _a,chars=null!==(_a=null==str?void 0:str.split(" ").filter((function(v){return!!v})).map((function(word){return word[0].toUpperCase()})))&&void 0!==_a?_a:void 0;if(chars){var _b=[null==chars?void 0:chars[0],null==chars?void 0:chars.slice(-1)],firstChar=_b[0],secondChar=_b[1];return chars.length>1?[firstChar,secondChar]:[firstChar]}}function stringToColor(string){if(string){var i,hash=0;for(i=0;i<string.length;i+=1)hash=string.charCodeAt(i)+((hash<<5)-hash);var color="#";for(i=0;i<3;i+=1){color+="00".concat((hash>>8*i&255).toString(16)).slice(-2)}return color}}function numberToPx(field){return"number"==typeof field?"".concat(field,"px"):field}function isDefined(value){return null!=value}function useCustomColor(color,options){return getCustomColor({theme:(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_0__.Z)(),customColor:color},options)}function getCustomColor(props,_a){var _b,_c,_d,_e,_f=void 0===_a?{}:_a,_g=_f.field,field=void 0===_g?void 0:_g,_h=_f.muiLevel,muiLevel=void 0===_h?"main":_h,_j=_f.opacity,opacity=void 0===_j?1:_j,_darken=_f.darken,_lighten=_f.lighten,customColor=null!==(_b=null==props?void 0:props[field])&&void 0!==_b?_b:null==props?void 0:props.customColor;if(!customColor)return[];if(Array.isArray(customColor))return customColor;if("inherit"===customColor)return[void 0,"inherit"];var color=null!==(_e=null!==(_d=null!==(_c=(0,lodash_es__WEBPACK_IMPORTED_MODULE_1__.Z)(props,"theme.palette.".concat(customColor,".").concat(muiLevel)))&&void 0!==_c?_c:(0,lodash_es__WEBPACK_IMPORTED_MODULE_1__.Z)(props,"theme.palette.".concat(customColor)))&&void 0!==_d?_d:toHex(customColor))&&void 0!==_e?_e:customColor;if(!isValidColor(color))return[];var isMuiColor=color&&color!==customColor;return color=isDefined(opacity)?(0,_mui_material__WEBPACK_IMPORTED_MODULE_2__.Fq)(color,opacity):color,color=isDefined(_darken)?(0,_mui_material__WEBPACK_IMPORTED_MODULE_2__._j)(color,_darken):color,[color=isDefined(_lighten)?(0,_mui_material__WEBPACK_IMPORTED_MODULE_2__.$n)(color,_lighten):color,isMuiColor?customColor:void 0]}var isValidColor=function(color){return CSS.supports("color",color)},copyToClipboard=function(value){if(!value)return!1;var textField=document.createElement("textarea");return textField.innerText=value,document.body.appendChild(textField),textField.select(),document.execCommand("copy"),textField.remove(),!0},NUMBERS="0123456789",LOWERCASE="abcdefghijklmnopqrstuvwxyz",UPPERCASE="ABCDEFGHIJKLMNOPQRSTUVWXYZ",SYMBOL="!@#$%^&*()";function generatePassword(_a){for(var _b=void 0===_a?{}:_a,_c=_b.length,length=void 0===_c?12:_c,_d=_b.numbers,numbers=void 0===_d||_d,_e=_b.lowercase,lowercase=void 0===_e||_e,_f=_b.uppercase,uppercase=void 0===_f||_f,_g=_b.symbol,chars=[numbers&&NUMBERS,lowercase&&LOWERCASE,uppercase&&UPPERCASE,(void 0===_g||_g)&&SYMBOL].filter(Boolean).join(""),password="",i=0;i<=length;i++){var randomNumber=Math.floor(Math.random()*chars.length);password+=chars.substring(randomNumber,randomNumber+1)}return password}function sleep(delay){return void 0===delay&&(delay=0),new Promise((function(resolve){return setTimeout(resolve,delay)}))}function getTextWidth(text){var element=document.createElement("span");element.textContent=text,document.body.appendChild(element);var offsetWidth=element.offsetWidth,scrollWidth=element.scrollWidth;return element.parentElement.removeChild(element),{offsetWidth,scrollWidth}}}}]);