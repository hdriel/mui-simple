"use strict";(self.webpackChunk_hdriel_mui_simple=self.webpackChunk_hdriel_mui_simple||[]).push([[2719],{"./src/components/Badge/__stories__/Badge.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AnchorPosition:()=>AnchorPosition,Default:()=>Default,Hide:()=>Hide,Max99:()=>Max99,Overlap:()=>Overlap,ShowZero:()=>ShowZero,ThemedAndColored:()=>ThemedAndColored,Variant:()=>Variant,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Badge_stories});var _templateObject,react=__webpack_require__("./node_modules/react/index.js"),Mail=__webpack_require__("./node_modules/@mui/icons-material/esm/Mail.js"),Stack=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),Button=__webpack_require__("./node_modules/@mui/material/Button/Button.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),Badge=__webpack_require__("./node_modules/@mui/material/Badge/Badge.js");var Badge_styled_Badge=(0,__webpack_require__("./node_modules/@mui/material/styles/styled.js").ZP)(Badge.Z,{shouldForwardProp:propName=>!["customColor"].includes(propName)})(_templateObject||(_templateObject=function _taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}(["\n  & .MuiBadge-badge {\n    border: 1.5px solid ",";\n    background-color: ",";\n  }\n"])),(props=>props.theme.palette.background.paper),(props=>props.customColor));try{Badge_styled_Badge.displayName="Badge",Badge_styled_Badge.__docgenInfo={description:"",displayName:"Badge",props:{anchorOrigin:{defaultValue:{value:"{\nvertical: 'top',\nhorizontal: 'right',\n}"},description:"The anchor of the badge.",name:"anchorOrigin",required:!1,type:{name:"BadgeOrigin"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<BadgeClasses> & Partial<ClassNameMap<never>>"}},className:{defaultValue:null,description:"@ignore",name:"className",required:!1,type:{name:"string"}},color:{defaultValue:{value:"'default'"},description:"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).",name:"color",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"default"'},{value:'"primary"'},{value:'"secondary"'},{value:'"warning"'},{value:'"info"'},{value:'"success"'}]}},componentsProps:{defaultValue:{value:"{}"},description:"The extra props for the slot components.\nYou can override the existing props or add new ones.\n\nThis prop is an alias for the `slotProps` prop.\nIt's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.",name:"componentsProps",required:!1,type:{name:'{ root?: SlotComponentProps<"span", BadgeRootSlotPropsOverrides, { badgeContent: ReactNode; children?: ReactNode; invisible: boolean; max: number; slotProps?: ...; slots?: BadgeSlots; showZero: boolean; }>; badge?: SlotComponentProps<...>; }'}},components:{defaultValue:{value:"{}"},description:"The components used for each slot inside.\n\nThis prop is an alias for the `slots` prop.\nIt's recommended to use the `slots` prop instead.",name:"components",required:!1,type:{name:"{ Root?: ElementType<any>; Badge?: ElementType<any>; }"}},overlap:{defaultValue:{value:"'rectangular'"},description:"Wrapped shape the badge should overlap.",name:"overlap",required:!1,type:{name:"enum",value:[{value:'"circular"'},{value:'"rectangular"'}]}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},variant:{defaultValue:{value:"'standard'"},description:"The variant to use.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"standard"'},{value:'"dot"'}]}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLSpanElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Badge/Badge.styled.tsx#Badge"]={docgenInfo:Badge_styled_Badge.__docgenInfo,name:"Badge",path:"src/components/Badge/Badge.styled.tsx#Badge"})}catch(__react_docgen_typescript_loader_error){}var helpers=__webpack_require__("./src/utils/helpers.ts"),_excluded=["variant","color","content","hide","showZero","max","overlap","vertical","horizontal"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function Badge_Badge(_ref){var{variant,color,content,hide,showZero,max,overlap,vertical,horizontal}=_ref,props=_objectWithoutProperties(_ref,_excluded),[customColor,muiColor]=(0,helpers.Ek)(color);return react.createElement(Badge_styled_Badge,function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({color:muiColor,customColor:muiColor?void 0:customColor,badgeContent:content,variant,invisible:hide,showZero,max,overlap,anchorOrigin:(vertical||horizontal)&&{vertical:null!=vertical?vertical:"top",horizontal:null!=horizontal?horizontal:"right"}},props))}Badge_Badge.propTypes={color:prop_types_default().string,content:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().number]),variant:prop_types_default().oneOf(["dot"]),hide:prop_types_default().bool,showZero:prop_types_default().bool,max:prop_types_default().number,overlap:prop_types_default().oneOf(["circular"]),vertical:prop_types_default().oneOf(["top","bottom"]),horizontal:prop_types_default().oneOf(["right","left"])},Badge_Badge.defaultProps={color:void 0,content:0,variant:void 0,hide:void 0,showZero:void 0,max:void 0,overlap:void 0,vertical:void 0,horizontal:void 0};try{Badge_Badge.displayName="Badge",Badge_Badge.__docgenInfo={description:"",displayName:"Badge",props:{variant:{defaultValue:{value:"undefined"},description:"",name:"variant",required:!1,type:{name:"any"}},color:{defaultValue:{value:"undefined"},description:"",name:"color",required:!1,type:{name:"any"}},content:{defaultValue:{value:"0"},description:"",name:"content",required:!1,type:{name:"any"}},hide:{defaultValue:{value:"undefined"},description:"",name:"hide",required:!1,type:{name:"any"}},showZero:{defaultValue:{value:"undefined"},description:"",name:"showZero",required:!1,type:{name:"any"}},max:{defaultValue:{value:"undefined"},description:"",name:"max",required:!1,type:{name:"any"}},overlap:{defaultValue:{value:"undefined"},description:"",name:"overlap",required:!1,type:{name:"any"}},vertical:{defaultValue:{value:"undefined"},description:"",name:"vertical",required:!1,type:{name:"any"}},horizontal:{defaultValue:{value:"undefined"},description:"",name:"horizontal",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Badge/Badge.tsx#Badge"]={docgenInfo:Badge_Badge.__docgenInfo,name:"Badge",path:"src/components/Badge/Badge.tsx#Badge"})}catch(__react_docgen_typescript_loader_error){}var _Default$parameters,_Default$parameters2,_Default$parameters2$,_ThemedAndColored$par,_ThemedAndColored$par2,_ThemedAndColored$par3,_Variant$parameters,_Variant$parameters2,_Variant$parameters2$,_Hide$parameters,_Hide$parameters2,_Hide$parameters2$doc,_ShowZero$parameters,_ShowZero$parameters2,_ShowZero$parameters3,_Max99$parameters,_Max99$parameters2,_Max99$parameters2$do,_Overlap$parameters,_Overlap$parameters2,_Overlap$parameters2$,_AnchorPosition$param,_AnchorPosition$param2,_AnchorPosition$param3;function Badge_stories_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function Badge_stories_objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?Badge_stories_ownKeys(Object(source),!0).forEach((function(key){Badge_stories_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):Badge_stories_ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function Badge_stories_defineProperty(obj,key,value){return(key=function Badge_stories_toPropertyKey(arg){var key=function Badge_stories_toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}const Badge_stories={parameters:{storySource:{source:'var _Default$parameters, _Default$parameters2, _Default$parameters2$, _ThemedAndColored$par, _ThemedAndColored$par2, _ThemedAndColored$par3, _Variant$parameters, _Variant$parameters2, _Variant$parameters2$, _Hide$parameters, _Hide$parameters2, _Hide$parameters2$doc, _ShowZero$parameters, _ShowZero$parameters2, _ShowZero$parameters3, _Max99$parameters, _Max99$parameters2, _Max99$parameters2$do, _Overlap$parameters, _Overlap$parameters2, _Overlap$parameters2$, _AnchorPosition$param, _AnchorPosition$param2, _AnchorPosition$param3;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nimport React, { useState } from "react";\nimport { Mail as MainIcon } from "@mui/icons-material";\nimport { Stack, Button, Box } from "@mui/material";\nimport Badge from "../Badge";\nexport default {\n  title: "Data-Display/Badge",\n  component: Badge\n};\nvar actions = {};\nexport var Default = () => {\n  return /*#__PURE__*/React.createElement(Badge, _objectSpread({}, actions), /*#__PURE__*/React.createElement(MainIcon, null));\n};\nexport var ThemedAndColored = () => {\n  return /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    spacing: 3\n  }, [undefined, "primary", "secondary", "info", "success", "warning", "error", "#d05e00"].map((color, index) => /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({\n    key: index\n  }, actions), {}, {\n    content: 1,\n    color: color\n  }), /*#__PURE__*/React.createElement(MainIcon, null))));\n};\nexport var Variant = () => {\n  return /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    spacing: 3,\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    content: "b",\n    color: "secondary"\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    content: "b",\n    color: "secondary",\n    variant: "dot"\n  }), /*#__PURE__*/React.createElement(MainIcon, null)));\n};\nexport var Hide = () => {\n  var [hide, setHide] = useState(false);\n  return /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    spacing: 3,\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: "secondary",\n    onClick: () => setHide(h => !h)\n  }, hide ? "show" : "hide"), /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    content: "b",\n    color: "secondary",\n    hide: hide\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    color: "secondary",\n    hide: hide\n  }), /*#__PURE__*/React.createElement(MainIcon, null)));\n};\nexport var ShowZero = () => {\n  return /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    spacing: 3,\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    content: 0,\n    color: "secondary",\n    showZero: false\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    content: 0,\n    color: "secondary",\n    showZero: true\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    content: 0,\n    color: "secondary"\n  }), /*#__PURE__*/React.createElement(MainIcon, null)));\n};\nexport var Max99 = () => {\n  return /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    spacing: 3,\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    content: 9\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    content: 99\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    content: 999\n  }), /*#__PURE__*/React.createElement(MainIcon, null)));\n};\nvar shapeStyles = {\n  bgcolor: "secondary.main",\n  width: 40,\n  height: 40\n};\nvar shapeCircleStyles = {\n  borderRadius: "50%"\n};\nvar rectangle = /*#__PURE__*/React.createElement(Box, {\n  component: "span",\n  sx: shapeStyles\n});\nvar circle = /*#__PURE__*/React.createElement(Box, {\n  component: "span",\n  sx: _objectSpread(_objectSpread({}, shapeStyles), shapeCircleStyles)\n});\nexport var Overlap = () => {\n  return /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    spacing: 3,\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    content: " "\n  }), rectangle), /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    content: " ",\n    variant: "dot"\n  }), rectangle), /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    content: " ",\n    overlap: "circular"\n  }), circle), /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    content: " ",\n    overlap: "circular",\n    variant: "dot"\n  }), circle));\n};\nexport var AnchorPosition = () => {\n  return /*#__PURE__*/React.createElement(Stack, {\n    direction: "column",\n    spacing: 3,\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    spacing: 5,\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    content: "T",\n    vertical: "top"\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    content: "B",\n    vertical: "bottom"\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    content: "R",\n    horizontal: "right"\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    content: "L",\n    horizontal: "left"\n  }), /*#__PURE__*/React.createElement(MainIcon, null))), /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    spacing: 5,\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    content: "TR",\n    vertical: "top",\n    horizontal: "right"\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    content: "TL",\n    vertical: "top",\n    horizontal: "left"\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    content: "BR",\n    vertical: "bottom",\n    horizontal: "right"\n  }), /*#__PURE__*/React.createElement(MainIcon, null)), /*#__PURE__*/React.createElement(Badge, _objectSpread(_objectSpread({}, actions), {}, {\n    content: "BL",\n    vertical: "bottom",\n    horizontal: "left"\n  }), /*#__PURE__*/React.createElement(MainIcon, null))));\n};\nDefault.parameters = _objectSpread(_objectSpread({}, Default.parameters), {}, {\n  docs: _objectSpread(_objectSpread({}, (_Default$parameters = Default.parameters) === null || _Default$parameters === void 0 ? void 0 : _Default$parameters.docs), {}, {\n    source: _objectSpread({\n      originalSource: "() => {\\n  return <Badge {...actions}>\\n      <MainIcon />\\n    </Badge>;\\n}"\n    }, (_Default$parameters2 = Default.parameters) === null || _Default$parameters2 === void 0 ? void 0 : (_Default$parameters2$ = _Default$parameters2.docs) === null || _Default$parameters2$ === void 0 ? void 0 : _Default$parameters2$.source)\n  })\n});\nThemedAndColored.parameters = _objectSpread(_objectSpread({}, ThemedAndColored.parameters), {}, {\n  docs: _objectSpread(_objectSpread({}, (_ThemedAndColored$par = ThemedAndColored.parameters) === null || _ThemedAndColored$par === void 0 ? void 0 : _ThemedAndColored$par.docs), {}, {\n    source: _objectSpread({\n      originalSource: "() => {\\n  return <Stack direction=\\"row\\" spacing={3}>\\n      {[undefined, \\"primary\\", \\"secondary\\", \\"info\\", \\"success\\", \\"warning\\", \\"error\\", \\"#d05e00\\"].map((color, index) => <Badge key={index} {...actions} content={1} color={color}>\\n          <MainIcon />\\n        </Badge>)}\\n    </Stack>;\\n}"\n    }, (_ThemedAndColored$par2 = ThemedAndColored.parameters) === null || _ThemedAndColored$par2 === void 0 ? void 0 : (_ThemedAndColored$par3 = _ThemedAndColored$par2.docs) === null || _ThemedAndColored$par3 === void 0 ? void 0 : _ThemedAndColored$par3.source)\n  })\n});\nVariant.parameters = _objectSpread(_objectSpread({}, Variant.parameters), {}, {\n  docs: _objectSpread(_objectSpread({}, (_Variant$parameters = Variant.parameters) === null || _Variant$parameters === void 0 ? void 0 : _Variant$parameters.docs), {}, {\n    source: _objectSpread({\n      originalSource: "() => {\\n  return <Stack direction=\\"row\\" spacing={3} alignItems={\\"center\\"}>\\n      <Badge {...actions} content={\\"b\\"} color=\\"secondary\\">\\n        <MainIcon />\\n      </Badge>\\n      <Badge {...actions} content={\\"b\\"} color=\\"secondary\\" variant=\\"dot\\">\\n        <MainIcon />\\n      </Badge>\\n    </Stack>;\\n}"\n    }, (_Variant$parameters2 = Variant.parameters) === null || _Variant$parameters2 === void 0 ? void 0 : (_Variant$parameters2$ = _Variant$parameters2.docs) === null || _Variant$parameters2$ === void 0 ? void 0 : _Variant$parameters2$.source)\n  })\n});\nHide.parameters = _objectSpread(_objectSpread({}, Hide.parameters), {}, {\n  docs: _objectSpread(_objectSpread({}, (_Hide$parameters = Hide.parameters) === null || _Hide$parameters === void 0 ? void 0 : _Hide$parameters.docs), {}, {\n    source: _objectSpread({\n      originalSource: "() => {\\n  const [hide, setHide] = useState(false);\\n  return <Stack direction=\\"row\\" spacing={3} alignItems={\\"center\\"}>\\n      <Button color=\\"secondary\\" onClick={() => setHide(h => !h)}>\\n        {hide ? \\"show\\" : \\"hide\\"}\\n      </Button>\\n      <Badge {...actions} content={\\"b\\"} color=\\"secondary\\" hide={hide}>\\n        <MainIcon />\\n      </Badge>\\n      <Badge {...actions} color=\\"secondary\\" hide={hide}>\\n        <MainIcon />\\n      </Badge>\\n    </Stack>;\\n}"\n    }, (_Hide$parameters2 = Hide.parameters) === null || _Hide$parameters2 === void 0 ? void 0 : (_Hide$parameters2$doc = _Hide$parameters2.docs) === null || _Hide$parameters2$doc === void 0 ? void 0 : _Hide$parameters2$doc.source)\n  })\n});\nShowZero.parameters = _objectSpread(_objectSpread({}, ShowZero.parameters), {}, {\n  docs: _objectSpread(_objectSpread({}, (_ShowZero$parameters = ShowZero.parameters) === null || _ShowZero$parameters === void 0 ? void 0 : _ShowZero$parameters.docs), {}, {\n    source: _objectSpread({\n      originalSource: "() => {\\n  return <Stack direction=\\"row\\" spacing={3} alignItems={\\"center\\"}>\\n      <Badge {...actions} content={0} color=\\"secondary\\" showZero={false}>\\n        <MainIcon />\\n      </Badge>\\n      <Badge {...actions} content={0} color=\\"secondary\\" showZero={true}>\\n        <MainIcon />\\n      </Badge>\\n      <Badge {...actions} content={0} color=\\"secondary\\">\\n        <MainIcon />\\n      </Badge>\\n    </Stack>;\\n}"\n    }, (_ShowZero$parameters2 = ShowZero.parameters) === null || _ShowZero$parameters2 === void 0 ? void 0 : (_ShowZero$parameters3 = _ShowZero$parameters2.docs) === null || _ShowZero$parameters3 === void 0 ? void 0 : _ShowZero$parameters3.source)\n  })\n});\nMax99.parameters = _objectSpread(_objectSpread({}, Max99.parameters), {}, {\n  docs: _objectSpread(_objectSpread({}, (_Max99$parameters = Max99.parameters) === null || _Max99$parameters === void 0 ? void 0 : _Max99$parameters.docs), {}, {\n    source: _objectSpread({\n      originalSource: "() => {\\n  return <Stack direction=\\"row\\" spacing={3} alignItems={\\"center\\"}>\\n      <Badge {...actions} content={9}>\\n        <MainIcon />\\n      </Badge>\\n      <Badge {...actions} content={99}>\\n        <MainIcon />\\n      </Badge>\\n      <Badge {...actions} content={999}>\\n        <MainIcon />\\n      </Badge>\\n    </Stack>;\\n}"\n    }, (_Max99$parameters2 = Max99.parameters) === null || _Max99$parameters2 === void 0 ? void 0 : (_Max99$parameters2$do = _Max99$parameters2.docs) === null || _Max99$parameters2$do === void 0 ? void 0 : _Max99$parameters2$do.source)\n  })\n});\nOverlap.parameters = _objectSpread(_objectSpread({}, Overlap.parameters), {}, {\n  docs: _objectSpread(_objectSpread({}, (_Overlap$parameters = Overlap.parameters) === null || _Overlap$parameters === void 0 ? void 0 : _Overlap$parameters.docs), {}, {\n    source: _objectSpread({\n      originalSource: "() => {\\n  return <Stack direction=\\"row\\" spacing={3} alignItems={\\"center\\"}>\\n      <Badge {...actions} content={\\" \\"}>\\n        {rectangle}\\n      </Badge>\\n      <Badge {...actions} content={\\" \\"} variant=\\"dot\\">\\n        {rectangle}\\n      </Badge>\\n      <Badge {...actions} content={\\" \\"} overlap={\\"circular\\"}>\\n        {circle}\\n      </Badge>\\n      <Badge {...actions} content={\\" \\"} overlap={\\"circular\\"} variant=\\"dot\\">\\n        {circle}\\n      </Badge>\\n    </Stack>;\\n}"\n    }, (_Overlap$parameters2 = Overlap.parameters) === null || _Overlap$parameters2 === void 0 ? void 0 : (_Overlap$parameters2$ = _Overlap$parameters2.docs) === null || _Overlap$parameters2$ === void 0 ? void 0 : _Overlap$parameters2$.source)\n  })\n});\nAnchorPosition.parameters = _objectSpread(_objectSpread({}, AnchorPosition.parameters), {}, {\n  docs: _objectSpread(_objectSpread({}, (_AnchorPosition$param = AnchorPosition.parameters) === null || _AnchorPosition$param === void 0 ? void 0 : _AnchorPosition$param.docs), {}, {\n    source: _objectSpread({\n      originalSource: "() => {\\n  return <Stack direction=\\"column\\" spacing={3} alignItems={\\"center\\"}>\\n      <Stack direction=\\"row\\" spacing={5} alignItems={\\"center\\"}>\\n        <Badge {...actions} content={\\"T\\"} vertical=\\"top\\">\\n          <MainIcon />\\n        </Badge>\\n        <Badge {...actions} content={\\"B\\"} vertical=\\"bottom\\">\\n          <MainIcon />\\n        </Badge>\\n        <Badge {...actions} content={\\"R\\"} horizontal=\\"right\\">\\n          <MainIcon />\\n        </Badge>\\n        <Badge {...actions} content={\\"L\\"} horizontal=\\"left\\">\\n          <MainIcon />\\n        </Badge>\\n      </Stack>\\n      <Stack direction=\\"row\\" spacing={5} alignItems={\\"center\\"}>\\n        <Badge {...actions} content={\\"TR\\"} vertical=\\"top\\" horizontal=\\"right\\">\\n          <MainIcon />\\n        </Badge>\\n        <Badge {...actions} content={\\"TL\\"} vertical=\\"top\\" horizontal=\\"left\\">\\n          <MainIcon />\\n        </Badge>\\n        <Badge {...actions} content={\\"BR\\"} vertical=\\"bottom\\" horizontal=\\"right\\">\\n          <MainIcon />\\n        </Badge>\\n        <Badge {...actions} content={\\"BL\\"} vertical=\\"bottom\\" horizontal=\\"left\\">\\n          <MainIcon />\\n        </Badge>\\n      </Stack>\\n    </Stack>;\\n}"\n    }, (_AnchorPosition$param2 = AnchorPosition.parameters) === null || _AnchorPosition$param2 === void 0 ? void 0 : (_AnchorPosition$param3 = _AnchorPosition$param2.docs) === null || _AnchorPosition$param3 === void 0 ? void 0 : _AnchorPosition$param3.source)\n  })\n});',locationsMap:{default:{startLoc:{col:21,line:16},endLoc:{col:1,line:18},startBody:{col:21,line:16},endBody:{col:1,line:18}},"themed-and-colored":{startLoc:{col:30,line:19},endLoc:{col:1,line:29},startBody:{col:30,line:19},endBody:{col:1,line:29}},variant:{startLoc:{col:21,line:30},endLoc:{col:1,line:43},startBody:{col:21,line:30},endBody:{col:1,line:43}},hide:{startLoc:{col:18,line:44},endLoc:{col:1,line:61},startBody:{col:18,line:44},endBody:{col:1,line:61}},"show-zero":{startLoc:{col:22,line:62},endLoc:{col:1,line:79},startBody:{col:22,line:62},endBody:{col:1,line:79}},"max-99":{startLoc:{col:19,line:80},endLoc:{col:1,line:92},startBody:{col:19,line:80},endBody:{col:1,line:92}},overlap:{startLoc:{col:21,line:109},endLoc:{col:1,line:127},startBody:{col:21,line:109},endBody:{col:1,line:127}},"anchor-position":{startLoc:{col:28,line:128},endLoc:{col:1,line:170},startBody:{col:28,line:128},endBody:{col:1,line:170}}}}},title:"Data-Display/Badge",component:Badge_Badge};var actions={},Default=()=>react.createElement(Badge_Badge,Badge_stories_objectSpread({},actions),react.createElement(Mail.Z,null)),ThemedAndColored=()=>react.createElement(Stack.Z,{direction:"row",spacing:3},[void 0,"primary","secondary","info","success","warning","error","#d05e00"].map(((color,index)=>react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({key:index},actions),{},{content:1,color}),react.createElement(Mail.Z,null))))),Variant=()=>react.createElement(Stack.Z,{direction:"row",spacing:3,alignItems:"center"},react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{content:"b",color:"secondary"}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{content:"b",color:"secondary",variant:"dot"}),react.createElement(Mail.Z,null))),Hide=()=>{var[hide,setHide]=(0,react.useState)(!1);return react.createElement(Stack.Z,{direction:"row",spacing:3,alignItems:"center"},react.createElement(Button.Z,{color:"secondary",onClick:()=>setHide((h=>!h))},hide?"show":"hide"),react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{content:"b",color:"secondary",hide}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{color:"secondary",hide}),react.createElement(Mail.Z,null)))},ShowZero=()=>react.createElement(Stack.Z,{direction:"row",spacing:3,alignItems:"center"},react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{content:0,color:"secondary",showZero:!1}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{content:0,color:"secondary",showZero:!0}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{content:0,color:"secondary"}),react.createElement(Mail.Z,null))),Max99=()=>react.createElement(Stack.Z,{direction:"row",spacing:3,alignItems:"center"},react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{content:9}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{content:99}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{content:999}),react.createElement(Mail.Z,null))),shapeStyles={bgcolor:"secondary.main",width:40,height:40},rectangle=react.createElement(Box.Z,{component:"span",sx:shapeStyles}),circle=react.createElement(Box.Z,{component:"span",sx:Badge_stories_objectSpread(Badge_stories_objectSpread({},shapeStyles),{borderRadius:"50%"})}),Overlap=()=>react.createElement(Stack.Z,{direction:"row",spacing:3,alignItems:"center"},react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{content:" "}),rectangle),react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{content:" ",variant:"dot"}),rectangle),react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{content:" ",overlap:"circular"}),circle),react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{content:" ",overlap:"circular",variant:"dot"}),circle)),AnchorPosition=()=>react.createElement(Stack.Z,{direction:"column",spacing:3,alignItems:"center"},react.createElement(Stack.Z,{direction:"row",spacing:5,alignItems:"center"},react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{content:"T",vertical:"top"}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{content:"B",vertical:"bottom"}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{content:"R",horizontal:"right"}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{content:"L",horizontal:"left"}),react.createElement(Mail.Z,null))),react.createElement(Stack.Z,{direction:"row",spacing:5,alignItems:"center"},react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{content:"TR",vertical:"top",horizontal:"right"}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{content:"TL",vertical:"top",horizontal:"left"}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{content:"BR",vertical:"bottom",horizontal:"right"}),react.createElement(Mail.Z,null)),react.createElement(Badge_Badge,Badge_stories_objectSpread(Badge_stories_objectSpread({},actions),{},{content:"BL",vertical:"bottom",horizontal:"left"}),react.createElement(Mail.Z,null))));Default.parameters=Badge_stories_objectSpread(Badge_stories_objectSpread({},Default.parameters),{},{docs:Badge_stories_objectSpread(Badge_stories_objectSpread({},null===(_Default$parameters=Default.parameters)||void 0===_Default$parameters?void 0:_Default$parameters.docs),{},{source:Badge_stories_objectSpread({originalSource:"() => {\n  return <Badge {...actions}>\n      <MainIcon />\n    </Badge>;\n}"},null===(_Default$parameters2=Default.parameters)||void 0===_Default$parameters2||null===(_Default$parameters2$=_Default$parameters2.docs)||void 0===_Default$parameters2$?void 0:_Default$parameters2$.source)})}),ThemedAndColored.parameters=Badge_stories_objectSpread(Badge_stories_objectSpread({},ThemedAndColored.parameters),{},{docs:Badge_stories_objectSpread(Badge_stories_objectSpread({},null===(_ThemedAndColored$par=ThemedAndColored.parameters)||void 0===_ThemedAndColored$par?void 0:_ThemedAndColored$par.docs),{},{source:Badge_stories_objectSpread({originalSource:'() => {\n  return <Stack direction="row" spacing={3}>\n      {[undefined, "primary", "secondary", "info", "success", "warning", "error", "#d05e00"].map((color, index) => <Badge key={index} {...actions} content={1} color={color}>\n          <MainIcon />\n        </Badge>)}\n    </Stack>;\n}'},null===(_ThemedAndColored$par2=ThemedAndColored.parameters)||void 0===_ThemedAndColored$par2||null===(_ThemedAndColored$par3=_ThemedAndColored$par2.docs)||void 0===_ThemedAndColored$par3?void 0:_ThemedAndColored$par3.source)})}),Variant.parameters=Badge_stories_objectSpread(Badge_stories_objectSpread({},Variant.parameters),{},{docs:Badge_stories_objectSpread(Badge_stories_objectSpread({},null===(_Variant$parameters=Variant.parameters)||void 0===_Variant$parameters?void 0:_Variant$parameters.docs),{},{source:Badge_stories_objectSpread({originalSource:'() => {\n  return <Stack direction="row" spacing={3} alignItems={"center"}>\n      <Badge {...actions} content={"b"} color="secondary">\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} content={"b"} color="secondary" variant="dot">\n        <MainIcon />\n      </Badge>\n    </Stack>;\n}'},null===(_Variant$parameters2=Variant.parameters)||void 0===_Variant$parameters2||null===(_Variant$parameters2$=_Variant$parameters2.docs)||void 0===_Variant$parameters2$?void 0:_Variant$parameters2$.source)})}),Hide.parameters=Badge_stories_objectSpread(Badge_stories_objectSpread({},Hide.parameters),{},{docs:Badge_stories_objectSpread(Badge_stories_objectSpread({},null===(_Hide$parameters=Hide.parameters)||void 0===_Hide$parameters?void 0:_Hide$parameters.docs),{},{source:Badge_stories_objectSpread({originalSource:'() => {\n  const [hide, setHide] = useState(false);\n  return <Stack direction="row" spacing={3} alignItems={"center"}>\n      <Button color="secondary" onClick={() => setHide(h => !h)}>\n        {hide ? "show" : "hide"}\n      </Button>\n      <Badge {...actions} content={"b"} color="secondary" hide={hide}>\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} color="secondary" hide={hide}>\n        <MainIcon />\n      </Badge>\n    </Stack>;\n}'},null===(_Hide$parameters2=Hide.parameters)||void 0===_Hide$parameters2||null===(_Hide$parameters2$doc=_Hide$parameters2.docs)||void 0===_Hide$parameters2$doc?void 0:_Hide$parameters2$doc.source)})}),ShowZero.parameters=Badge_stories_objectSpread(Badge_stories_objectSpread({},ShowZero.parameters),{},{docs:Badge_stories_objectSpread(Badge_stories_objectSpread({},null===(_ShowZero$parameters=ShowZero.parameters)||void 0===_ShowZero$parameters?void 0:_ShowZero$parameters.docs),{},{source:Badge_stories_objectSpread({originalSource:'() => {\n  return <Stack direction="row" spacing={3} alignItems={"center"}>\n      <Badge {...actions} content={0} color="secondary" showZero={false}>\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} content={0} color="secondary" showZero={true}>\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} content={0} color="secondary">\n        <MainIcon />\n      </Badge>\n    </Stack>;\n}'},null===(_ShowZero$parameters2=ShowZero.parameters)||void 0===_ShowZero$parameters2||null===(_ShowZero$parameters3=_ShowZero$parameters2.docs)||void 0===_ShowZero$parameters3?void 0:_ShowZero$parameters3.source)})}),Max99.parameters=Badge_stories_objectSpread(Badge_stories_objectSpread({},Max99.parameters),{},{docs:Badge_stories_objectSpread(Badge_stories_objectSpread({},null===(_Max99$parameters=Max99.parameters)||void 0===_Max99$parameters?void 0:_Max99$parameters.docs),{},{source:Badge_stories_objectSpread({originalSource:'() => {\n  return <Stack direction="row" spacing={3} alignItems={"center"}>\n      <Badge {...actions} content={9}>\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} content={99}>\n        <MainIcon />\n      </Badge>\n      <Badge {...actions} content={999}>\n        <MainIcon />\n      </Badge>\n    </Stack>;\n}'},null===(_Max99$parameters2=Max99.parameters)||void 0===_Max99$parameters2||null===(_Max99$parameters2$do=_Max99$parameters2.docs)||void 0===_Max99$parameters2$do?void 0:_Max99$parameters2$do.source)})}),Overlap.parameters=Badge_stories_objectSpread(Badge_stories_objectSpread({},Overlap.parameters),{},{docs:Badge_stories_objectSpread(Badge_stories_objectSpread({},null===(_Overlap$parameters=Overlap.parameters)||void 0===_Overlap$parameters?void 0:_Overlap$parameters.docs),{},{source:Badge_stories_objectSpread({originalSource:'() => {\n  return <Stack direction="row" spacing={3} alignItems={"center"}>\n      <Badge {...actions} content={" "}>\n        {rectangle}\n      </Badge>\n      <Badge {...actions} content={" "} variant="dot">\n        {rectangle}\n      </Badge>\n      <Badge {...actions} content={" "} overlap={"circular"}>\n        {circle}\n      </Badge>\n      <Badge {...actions} content={" "} overlap={"circular"} variant="dot">\n        {circle}\n      </Badge>\n    </Stack>;\n}'},null===(_Overlap$parameters2=Overlap.parameters)||void 0===_Overlap$parameters2||null===(_Overlap$parameters2$=_Overlap$parameters2.docs)||void 0===_Overlap$parameters2$?void 0:_Overlap$parameters2$.source)})}),AnchorPosition.parameters=Badge_stories_objectSpread(Badge_stories_objectSpread({},AnchorPosition.parameters),{},{docs:Badge_stories_objectSpread(Badge_stories_objectSpread({},null===(_AnchorPosition$param=AnchorPosition.parameters)||void 0===_AnchorPosition$param?void 0:_AnchorPosition$param.docs),{},{source:Badge_stories_objectSpread({originalSource:'() => {\n  return <Stack direction="column" spacing={3} alignItems={"center"}>\n      <Stack direction="row" spacing={5} alignItems={"center"}>\n        <Badge {...actions} content={"T"} vertical="top">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"B"} vertical="bottom">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"R"} horizontal="right">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"L"} horizontal="left">\n          <MainIcon />\n        </Badge>\n      </Stack>\n      <Stack direction="row" spacing={5} alignItems={"center"}>\n        <Badge {...actions} content={"TR"} vertical="top" horizontal="right">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"TL"} vertical="top" horizontal="left">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"BR"} vertical="bottom" horizontal="right">\n          <MainIcon />\n        </Badge>\n        <Badge {...actions} content={"BL"} vertical="bottom" horizontal="left">\n          <MainIcon />\n        </Badge>\n      </Stack>\n    </Stack>;\n}'},null===(_AnchorPosition$param2=AnchorPosition.parameters)||void 0===_AnchorPosition$param2||null===(_AnchorPosition$param3=_AnchorPosition$param2.docs)||void 0===_AnchorPosition$param3?void 0:_AnchorPosition$param3.source)})});var __namedExportsOrder=["Default","ThemedAndColored","Variant","Hide","ShowZero","Max99","Overlap","AnchorPosition"]},"./src/utils/helpers.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$K:()=>isDefined,Ek:()=>useCustomColor,F2:()=>generatePassword,_f:()=>numberToPx,_v:()=>sleep,im:()=>getCapitalLetters,mY:()=>getTextWidth,q4:()=>getCustomColor,u_:()=>stringToColor,vQ:()=>copyToClipboard});var lodash_es__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/lodash-es/get.js"),_mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mui/system/esm/colorManipulator.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@mui/material/styles/useTheme.js"),toHex=__webpack_require__("./node_modules/colornames/index.js");function getCapitalLetters(str){var _str$split$filter$map,chars=null!==(_str$split$filter$map=null==str?void 0:str.split(" ").filter((v=>!!v)).map((word=>word[0].toUpperCase())))&&void 0!==_str$split$filter$map?_str$split$filter$map:void 0;if(chars){var[firstChar,secondChar]=[null==chars?void 0:chars[0],null==chars?void 0:chars.slice(-1)];return chars.length>1?[firstChar,secondChar]:[firstChar]}}function stringToColor(string){if(string){var i,hash=0;for(i=0;i<string.length;i+=1)hash=string.charCodeAt(i)+((hash<<5)-hash);var color="#";for(i=0;i<3;i+=1){color+="00".concat((hash>>8*i&255).toString(16)).slice(-2)}return color}}function numberToPx(field){return"number"==typeof field?"".concat(field,"px"):field}function isDefined(value){return null!=value}function useCustomColor(color,options){return getCustomColor({theme:(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_0__.Z)(),customColor:color},options)}function getCustomColor(props){var _props$field,_ref,_ref2,_get,{field,muiLevel="main",opacity=1,darken:_darken,lighten:_lighten}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},customColor=null!==(_props$field=null==props?void 0:props[field])&&void 0!==_props$field?_props$field:null==props?void 0:props.customColor;if(!customColor)return[];if(Array.isArray(customColor))return customColor;if("inherit"===customColor)return[void 0,"inherit"];var color=null!==(_ref=null!==(_ref2=null!==(_get=(0,lodash_es__WEBPACK_IMPORTED_MODULE_1__.Z)(props,"theme.palette.".concat(customColor,".").concat(muiLevel)))&&void 0!==_get?_get:(0,lodash_es__WEBPACK_IMPORTED_MODULE_1__.Z)(props,"theme.palette.".concat(customColor)))&&void 0!==_ref2?_ref2:toHex(customColor))&&void 0!==_ref?_ref:customColor;if(!isValidColor(color))return[];var isMuiColor=color&&color!==customColor;return color=isDefined(opacity)?(0,_mui_material__WEBPACK_IMPORTED_MODULE_2__.Fq)(color,opacity):color,color=isDefined(_darken)?(0,_mui_material__WEBPACK_IMPORTED_MODULE_2__._j)(color,_darken):color,[color=isDefined(_lighten)?(0,_mui_material__WEBPACK_IMPORTED_MODULE_2__.$n)(color,_lighten):color,isMuiColor?customColor:void 0]}var isValidColor=color=>CSS.supports("color",color),copyToClipboard=value=>{if(!value)return!1;var textField=document.createElement("textarea");return textField.innerText=value,document.body.appendChild(textField),textField.select(),document.execCommand("copy"),textField.remove(),!0},NUMBERS="0123456789",LOWERCASE="abcdefghijklmnopqrstuvwxyz",UPPERCASE="ABCDEFGHIJKLMNOPQRSTUVWXYZ",SYMBOL="!@#$%^&*()";function generatePassword(){for(var{length=12,numbers=!0,lowercase=!0,uppercase=!0,symbol=!0}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},chars=[numbers&&NUMBERS,lowercase&&LOWERCASE,uppercase&&UPPERCASE,symbol&&SYMBOL].filter(Boolean).join(""),password="",i=0;i<=length;i++){var randomNumber=Math.floor(Math.random()*chars.length);password+=chars.substring(randomNumber,randomNumber+1)}return password}function sleep(){var delay=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return new Promise((resolve=>setTimeout(resolve,delay)))}function getTextWidth(text){var element=document.createElement("span");element.textContent=text,document.body.appendChild(element);var{offsetWidth,scrollWidth}=element;return element.parentElement.removeChild(element),{offsetWidth,scrollWidth}}}}]);