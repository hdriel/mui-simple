"use strict";(self.webpackChunk_hdriel_mui_simple=self.webpackChunk_hdriel_mui_simple||[]).push([[4792],{"./src/components/Dialog/__stories__/Dialog.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Actioned:()=>Actioned,Default:()=>Default,DisableAutoPadding:()=>DisableAutoPadding,Dividers:()=>Dividers,Draggabled:()=>Draggabled,Fullscreen:()=>Fullscreen,Info:()=>Info,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Dialog_stories});var react=__webpack_require__("./node_modules/react/index.js"),Button=__webpack_require__("./node_modules/@mui/material/Button/Button.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),FormControl=__webpack_require__("./node_modules/@mui/material/FormControl/FormControl.js"),InputLabel=__webpack_require__("./node_modules/@mui/material/InputLabel/InputLabel.js"),Select=__webpack_require__("./node_modules/@mui/material/Select/Select.js"),MenuItem=__webpack_require__("./node_modules/@mui/material/MenuItem/MenuItem.js"),FormControlLabel=__webpack_require__("./node_modules/@mui/material/FormControlLabel/FormControlLabel.js"),Switch=__webpack_require__("./node_modules/@mui/material/Switch/Switch.js"),TextField=__webpack_require__("./node_modules/@mui/material/TextField/TextField.js"),Typography=__webpack_require__("./node_modules/@mui/material/Typography/Typography.js"),List=__webpack_require__("./node_modules/@mui/material/List/List.js"),ListItem=__webpack_require__("./node_modules/@mui/material/ListItem/ListItem.js"),ListItemButton=__webpack_require__("./node_modules/@mui/material/ListItemButton/ListItemButton.js"),ListItemAvatar=__webpack_require__("./node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js"),Avatar=__webpack_require__("./node_modules/@mui/material/Avatar/Avatar.js"),ListItemText=__webpack_require__("./node_modules/@mui/material/ListItemText/ListItemText.js"),blue=__webpack_require__("./node_modules/@mui/material/colors/blue.js"),Person=__webpack_require__("./node_modules/@mui/icons-material/esm/Person.js"),Add=__webpack_require__("./node_modules/@mui/icons-material/esm/Add.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),Slide=__webpack_require__("./node_modules/@mui/material/Slide/Slide.js"),Paper=__webpack_require__("./node_modules/@mui/material/Paper/Paper.js"),useMediaQuery=__webpack_require__("./node_modules/@mui/material/useMediaQuery/useMediaQuery.js"),Dialog=__webpack_require__("./node_modules/@mui/material/Dialog/Dialog.js"),DialogTitle=__webpack_require__("./node_modules/@mui/material/DialogTitle/DialogTitle.js"),DialogContent=__webpack_require__("./node_modules/@mui/material/DialogContent/DialogContent.js"),DialogContentText=__webpack_require__("./node_modules/@mui/material/DialogContentText/DialogContentText.js"),DialogActions=__webpack_require__("./node_modules/@mui/material/DialogActions/DialogActions.js"),useTheme=__webpack_require__("./node_modules/@mui/material/styles/useTheme.js"),cjs=__webpack_require__("./node_modules/react-draggable/build/cjs/cjs.js"),cjs_default=__webpack_require__.n(cjs),Button_Button=__webpack_require__("./src/components/Button/Button.tsx"),__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};const Transition=(0,react.forwardRef)((function Transition(_a,ref){var{children}=_a,props=__rest(_a,["children"]);return react.createElement(Slide.Z,Object.assign({direction:"up",ref},props),children)}));function PaperComponent(_a){var{titleId}=_a,props=__rest(_a,["titleId"]);return react.createElement(cjs_default(),{bounds:"body",handle:`#${titleId}`,cancel:'[class*="MuiDialogContent-root"]'},react.createElement(Paper.Z,Object.assign({},props)))}function Dialog_Dialog(_a){var{onClose,title,titleId,dividers,contentId,selectedValue,open,actions,fullWidth,maxWidth,fullScreen,draggable,children,autoContentPadding}=_a,props=__rest(_a,["onClose","title","titleId","dividers","contentId","selectedValue","open","actions","fullWidth","maxWidth","fullScreen","draggable","children","autoContentPadding"]);const theme=(0,useTheme.Z)(),fullScreenBreakPoint=(0,useMediaQuery.Z)(theme.breakpoints.down(fullScreen));return react.createElement(Dialog.Z,Object.assign({sx:{backgroundColor:"background.dialog"},onClose:()=>null==onClose?void 0:onClose(selectedValue),open,TransitionComponent:Transition,keepMounted:!0,scroll:"paper",fullWidth,maxWidth,"aria-labelledby":titleId,"aria-describedby":contentId,PaperComponent:draggable?props=>react.createElement(PaperComponent,Object.assign({titleId},props)):void 0,fullScreen:"boolean"==typeof fullScreen?fullScreen:fullScreenBreakPoint},props),title&&react.createElement(DialogTitle.Z,{style:Object.assign({},draggable&&{cursor:"move"}),id:titleId},title),react.createElement(DialogContent.Z,{sx:Object.assign({},!autoContentPadding&&{padding:0}),dividers},"string"==typeof children?react.createElement(DialogContentText.Z,{id:contentId},children):children),(null==actions?void 0:actions.length)?react.createElement(DialogActions.Z,null,actions.map(((action,index)=>{var _a;return react.createElement(Button_Button.Z,Object.assign({key:index},action,{onClick:action.onClick,autoFocus:action.autoFocus,variant:null!==(_a=action.variant)&&void 0!==_a?_a:"text"}),action.label)}))):null)}Dialog_Dialog.propTypes={open:prop_types_default().bool.isRequired,onClose:prop_types_default().func,selectedValue:prop_types_default().string,title:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().node]),titleId:prop_types_default().string,contentId:prop_types_default().string,fullWidth:prop_types_default().bool,dividers:prop_types_default().bool,autoContentPadding:prop_types_default().bool,draggable:prop_types_default().bool,maxWidth:prop_types_default().oneOf([!1,"xs","sm","md","lg","xl"]),fullScreen:prop_types_default().oneOf([!1,!0,"xs","sm","md","lg","xl"]),actions:prop_types_default().arrayOf(prop_types_default().shape({onClick:prop_types_default().func,label:prop_types_default().string,autoFocus:prop_types_default().bool}))},Dialog_Dialog.defaultProps={onClose:void 0,open:!1,selectedValue:void 0,title:"",titleId:"dialog-title-id",contentId:void 0,fullWidth:!1,dividers:!1,maxWidth:!1,draggable:!1,autoContentPadding:!0,fullScreen:!1,actions:[]};const Dialog_DialogContentText=DialogContentText.Z,components_Dialog_Dialog=Dialog_Dialog;try{Dialog_DialogContentText.displayName="DialogContentText",Dialog_DialogContentText.__docgenInfo={description:"",displayName:"DialogContentText",props:{component:{defaultValue:null,description:"The component used for the root node.\nEither a string to use a HTML element or a component.",name:"component",required:!0,type:{name:"ElementType<any>"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<DialogContentTextClasses> & Partial<ClassNameMap<never>>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ResponsiveStyleValue<string[] | Color> | ((theme: Theme) => ResponsiveStyleValue<string[] | Color>)"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"ResponsiveStyleValue<Width<string | number> | NonNullable<Width<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},alignItems:{defaultValue:null,description:"",name:"alignItems",required:!1,type:{name:"ResponsiveStyleValue<string[] | AlignItems> | ((theme: Theme) => ResponsiveStyleValue<string[] | AlignItems>)"}},fontSize:{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"ResponsiveStyleValue<FontSize<string | number> | NonNullable<FontSize<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},variant:{defaultValue:{value:"'body1'"},description:"Applies the theme typography styles.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"button"'},{value:'"caption"'},{value:'"h1"'},{value:'"h2"'},{value:'"h3"'},{value:'"h4"'},{value:'"h5"'},{value:'"h6"'},{value:'"inherit"'},{value:'"subtitle1"'},{value:'"subtitle2"'},{value:'"body1"'},{value:'"body2"'},{value:'"overline"'}]}},children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"ReactNode"}},minWidth:{defaultValue:null,description:"",name:"minWidth",required:!1,type:{name:"ResponsiveStyleValue<MinWidth<string | number> | NonNullable<MinWidth<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},bottom:{defaultValue:null,description:"",name:"bottom",required:!1,type:{name:"ResponsiveStyleValue<Bottom<string | number> | NonNullable<Bottom<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},left:{defaultValue:null,description:"",name:"left",required:!1,type:{name:"ResponsiveStyleValue<Left<string | number> | NonNullable<Left<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<Left<...> | NonNullable<...>[]>)"}},right:{defaultValue:null,description:"",name:"right",required:!1,type:{name:"ResponsiveStyleValue<Right<string | number> | NonNullable<Right<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},top:{defaultValue:null,description:"",name:"top",required:!1,type:{name:"ResponsiveStyleValue<Top<string | number> | NonNullable<Top<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<Top<string | number> | NonNullable<...>[]>)"}},gutterBottom:{defaultValue:{value:"false"},description:"If `true`, the text will have a bottom margin.",name:"gutterBottom",required:!1,type:{name:"boolean"}},paragraph:{defaultValue:{value:"false"},description:"If `true`, the element will be a paragraph element.",name:"paragraph",required:!1,type:{name:"boolean"}},lineHeight:{defaultValue:null,description:"",name:"lineHeight",required:!1,type:{name:"ResponsiveStyleValue<LineHeight<string | number> | NonNullable<LineHeight<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},border:{defaultValue:null,description:"",name:"border",required:!1,type:{name:'ResponsiveStyleValue<number | "inset" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "revert-layer" | "unset" | "none" | "medium" | "hidden" | "aliceblue" | "antiquewhite" | ... 184 more ... | "solid"> | ((theme: Theme) => ResponsiveStyleValue<...>)'}},noWrap:{defaultValue:{value:"false"},description:"If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n\nNote that text overflow can only happen with block or inline-block level elements\n(the element needs to have a width in order to overflow).",name:"noWrap",required:!1,type:{name:"boolean"}},bgcolor:{defaultValue:null,description:"",name:"bgcolor",required:!1,type:{name:"ResponsiveStyleValue<string[] | BackgroundColor> | ((theme: Theme) => ResponsiveStyleValue<string[] | BackgroundColor>)"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"ResponsiveStyleValue<Height<string | number> | NonNullable<Height<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},margin:{defaultValue:null,description:"",name:"margin",required:!1,type:{name:"ResponsiveStyleValue<Margin<string | number> | NonNullable<Margin<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},position:{defaultValue:null,description:"",name:"position",required:!1,type:{name:"ResponsiveStyleValue<Position | NonNullable<Position>[]> | ((theme: Theme) => ResponsiveStyleValue<Position | NonNullable<...>[]>)"}},align:{defaultValue:{value:"'inherit'"},description:"Set the text-align on the component.",name:"align",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'},{value:'"center"'},{value:'"inherit"'},{value:'"justify"'}]}},textAlign:{defaultValue:null,description:"",name:"textAlign",required:!1,type:{name:"ResponsiveStyleValue<TextAlign | NonNullable<TextAlign>[]> | ((theme: Theme) => ResponsiveStyleValue<TextAlign | NonNullable<...>[]>)"}},p:{defaultValue:null,description:"",name:"p",required:!1,type:{name:"ResponsiveStyleValue<Padding<string | number> | NonNullable<Padding<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},alignContent:{defaultValue:null,description:"",name:"alignContent",required:!1,type:{name:"ResponsiveStyleValue<string[] | AlignContent> | ((theme: Theme) => ResponsiveStyleValue<string[] | AlignContent>)"}},alignSelf:{defaultValue:null,description:"",name:"alignSelf",required:!1,type:{name:"ResponsiveStyleValue<string[] | AlignSelf> | ((theme: Theme) => ResponsiveStyleValue<string[] | AlignSelf>)"}},boxShadow:{defaultValue:null,description:"",name:"boxShadow",required:!1,type:{name:"ResponsiveStyleValue<number | BoxShadow> | ((theme: Theme) => ResponsiveStyleValue<number | BoxShadow>)"}},boxSizing:{defaultValue:null,description:"",name:"boxSizing",required:!1,type:{name:"ResponsiveStyleValue<BoxSizing | NonNullable<BoxSizing>[]> | ((theme: Theme) => ResponsiveStyleValue<BoxSizing | NonNullable<...>[]>)"}},columnGap:{defaultValue:null,description:"",name:"columnGap",required:!1,type:{name:"ResponsiveStyleValue<ColumnGap<string | number> | NonNullable<ColumnGap<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},display:{defaultValue:null,description:"",name:"display",required:!1,type:{name:"ResponsiveStyleValue<string[] | Display> | ((theme: Theme) => ResponsiveStyleValue<string[] | Display>)"}},flexBasis:{defaultValue:null,description:"",name:"flexBasis",required:!1,type:{name:"ResponsiveStyleValue<FlexBasis<string | number> | NonNullable<FlexBasis<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},flexDirection:{defaultValue:null,description:"",name:"flexDirection",required:!1,type:{name:"ResponsiveStyleValue<FlexDirection | NonNullable<FlexDirection>[]> | ((theme: Theme) => ResponsiveStyleValue<FlexDirection | NonNullable<...>[]>)"}},flexGrow:{defaultValue:null,description:"",name:"flexGrow",required:!1,type:{name:"ResponsiveStyleValue<FlexGrow | NonNullable<FlexGrow>[]> | ((theme: Theme) => ResponsiveStyleValue<FlexGrow | NonNullable<...>[]>)"}},flexShrink:{defaultValue:null,description:"",name:"flexShrink",required:!1,type:{name:"ResponsiveStyleValue<FlexShrink | NonNullable<FlexShrink>[]> | ((theme: Theme) => ResponsiveStyleValue<FlexShrink | NonNullable<...>[]>)"}},flexWrap:{defaultValue:null,description:"",name:"flexWrap",required:!1,type:{name:"ResponsiveStyleValue<FlexWrap | NonNullable<FlexWrap>[]> | ((theme: Theme) => ResponsiveStyleValue<FlexWrap | NonNullable<...>[]>)"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"ResponsiveStyleValue<string[] | FontFamily> | ((theme: Theme) => ResponsiveStyleValue<string[] | FontFamily>)"}},fontStyle:{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:"ResponsiveStyleValue<string[] | FontStyle> | ((theme: Theme) => ResponsiveStyleValue<string[] | FontStyle>)"}},fontWeight:{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:"ResponsiveStyleValue<string | (string & {}) | (number & {})> | ((theme: Theme) => ResponsiveStyleValue<string | (string & {}) | (number & {})>)"}},gridAutoColumns:{defaultValue:null,description:"",name:"gridAutoColumns",required:!1,type:{name:"ResponsiveStyleValue<GridAutoColumns<string | number> | NonNullable<GridAutoColumns<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},gridAutoFlow:{defaultValue:null,description:"",name:"gridAutoFlow",required:!1,type:{name:"ResponsiveStyleValue<string[] | GridAutoFlow> | ((theme: Theme) => ResponsiveStyleValue<string[] | GridAutoFlow>)"}},gridAutoRows:{defaultValue:null,description:"",name:"gridAutoRows",required:!1,type:{name:"ResponsiveStyleValue<GridAutoRows<string | number> | NonNullable<GridAutoRows<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},gridTemplateAreas:{defaultValue:null,description:"",name:"gridTemplateAreas",required:!1,type:{name:"ResponsiveStyleValue<string[] | GridTemplateAreas> | ((theme: Theme) => ResponsiveStyleValue<string[] | GridTemplateAreas>)"}},gridTemplateColumns:{defaultValue:null,description:"",name:"gridTemplateColumns",required:!1,type:{name:"ResponsiveStyleValue<GridTemplateColumns<string | number> | NonNullable<GridTemplateColumns<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},gridTemplateRows:{defaultValue:null,description:"",name:"gridTemplateRows",required:!1,type:{name:"ResponsiveStyleValue<GridTemplateRows<string | number> | NonNullable<GridTemplateRows<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},justifyContent:{defaultValue:null,description:"",name:"justifyContent",required:!1,type:{name:"ResponsiveStyleValue<string[] | JustifyContent> | ((theme: Theme) => ResponsiveStyleValue<string[] | JustifyContent>)"}},justifyItems:{defaultValue:null,description:"",name:"justifyItems",required:!1,type:{name:"ResponsiveStyleValue<string[] | JustifyItems> | ((theme: Theme) => ResponsiveStyleValue<string[] | JustifyItems>)"}},justifySelf:{defaultValue:null,description:"",name:"justifySelf",required:!1,type:{name:"ResponsiveStyleValue<string[] | JustifySelf> | ((theme: Theme) => ResponsiveStyleValue<string[] | JustifySelf>)"}},letterSpacing:{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"ResponsiveStyleValue<LetterSpacing<string | number> | NonNullable<LetterSpacing<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},marginBottom:{defaultValue:null,description:"",name:"marginBottom",required:!1,type:{name:"ResponsiveStyleValue<MarginBottom<string | number> | NonNullable<MarginBottom<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},marginLeft:{defaultValue:null,description:"",name:"marginLeft",required:!1,type:{name:"ResponsiveStyleValue<MarginLeft<string | number> | NonNullable<MarginLeft<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},marginRight:{defaultValue:null,description:"",name:"marginRight",required:!1,type:{name:"ResponsiveStyleValue<MarginRight<string | number> | NonNullable<MarginRight<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},marginTop:{defaultValue:null,description:"",name:"marginTop",required:!1,type:{name:"ResponsiveStyleValue<MarginTop<string | number> | NonNullable<MarginTop<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},maxHeight:{defaultValue:null,description:"",name:"maxHeight",required:!1,type:{name:"ResponsiveStyleValue<MaxHeight<string | number> | NonNullable<MaxHeight<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},maxWidth:{defaultValue:{value:"false"},description:"",name:"maxWidth",required:!1,type:{name:"ResponsiveStyleValue<MaxWidth<string | number> | NonNullable<MaxWidth<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},minHeight:{defaultValue:null,description:"",name:"minHeight",required:!1,type:{name:"ResponsiveStyleValue<MinHeight<string | number> | NonNullable<MinHeight<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},order:{defaultValue:null,description:"",name:"order",required:!1,type:{name:"ResponsiveStyleValue<Order | NonNullable<Order>[]> | ((theme: Theme) => ResponsiveStyleValue<Order | NonNullable<Order>[]>)"}},paddingBottom:{defaultValue:null,description:"",name:"paddingBottom",required:!1,type:{name:"ResponsiveStyleValue<PaddingBottom<string | number> | NonNullable<PaddingBottom<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},paddingLeft:{defaultValue:null,description:"",name:"paddingLeft",required:!1,type:{name:"ResponsiveStyleValue<PaddingLeft<string | number> | NonNullable<PaddingLeft<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},paddingRight:{defaultValue:null,description:"",name:"paddingRight",required:!1,type:{name:"ResponsiveStyleValue<PaddingRight<string | number> | NonNullable<PaddingRight<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},paddingTop:{defaultValue:null,description:"",name:"paddingTop",required:!1,type:{name:"ResponsiveStyleValue<PaddingTop<string | number> | NonNullable<PaddingTop<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},rowGap:{defaultValue:null,description:"",name:"rowGap",required:!1,type:{name:"ResponsiveStyleValue<RowGap<string | number> | NonNullable<RowGap<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},textOverflow:{defaultValue:null,description:"",name:"textOverflow",required:!1,type:{name:"ResponsiveStyleValue<string[] | TextOverflow> | ((theme: Theme) => ResponsiveStyleValue<string[] | TextOverflow>)"}},textTransform:{defaultValue:null,description:"",name:"textTransform",required:!1,type:{name:"ResponsiveStyleValue<TextTransform | NonNullable<TextTransform>[]> | ((theme: Theme) => ResponsiveStyleValue<TextTransform | NonNullable<...>[]>)"}},visibility:{defaultValue:null,description:"",name:"visibility",required:!1,type:{name:"ResponsiveStyleValue<Visibility | NonNullable<Visibility>[]> | ((theme: Theme) => ResponsiveStyleValue<Visibility | NonNullable<...>[]>)"}},whiteSpace:{defaultValue:null,description:"",name:"whiteSpace",required:!1,type:{name:"ResponsiveStyleValue<WhiteSpace | NonNullable<WhiteSpace>[]> | ((theme: Theme) => ResponsiveStyleValue<WhiteSpace | NonNullable<...>[]>)"}},zIndex:{defaultValue:null,description:"",name:"zIndex",required:!1,type:{name:"ResponsiveStyleValue<string | (string & {}) | (number & {})> | ((theme: Theme) => ResponsiveStyleValue<string | (string & {}) | (number & {})>)"}},borderBottom:{defaultValue:null,description:"",name:"borderBottom",required:!1,type:{name:"ResponsiveStyleValue<BorderBottom<string | number> | NonNullable<BorderBottom<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},borderColor:{defaultValue:null,description:"",name:"borderColor",required:!1,type:{name:"ResponsiveStyleValue<string[] | BorderColor> | ((theme: Theme) => ResponsiveStyleValue<string[] | BorderColor>)"}},borderLeft:{defaultValue:null,description:"",name:"borderLeft",required:!1,type:{name:"ResponsiveStyleValue<BorderLeft<string | number> | NonNullable<BorderLeft<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},borderRadius:{defaultValue:null,description:"",name:"borderRadius",required:!1,type:{name:"ResponsiveStyleValue<BorderRadius<string | number> | NonNullable<BorderRadius<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},borderRight:{defaultValue:null,description:"",name:"borderRight",required:!1,type:{name:"ResponsiveStyleValue<BorderRight<string | number> | NonNullable<BorderRight<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},borderTop:{defaultValue:null,description:"",name:"borderTop",required:!1,type:{name:"ResponsiveStyleValue<BorderTop<string | number> | NonNullable<BorderTop<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},flex:{defaultValue:null,description:"",name:"flex",required:!1,type:{name:"ResponsiveStyleValue<Flex<string | number> | NonNullable<Flex<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<Flex<...> | NonNullable<...>[]>)"}},gap:{defaultValue:null,description:"",name:"gap",required:!1,type:{name:"ResponsiveStyleValue<Gap<string | number> | NonNullable<Gap<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<Gap<string | number> | NonNullable<...>[]>)"}},gridArea:{defaultValue:null,description:"",name:"gridArea",required:!1,type:{name:"ResponsiveStyleValue<GridArea | NonNullable<GridArea>[]> | ((theme: Theme) => ResponsiveStyleValue<GridArea | NonNullable<...>[]>)"}},gridColumn:{defaultValue:null,description:"",name:"gridColumn",required:!1,type:{name:"ResponsiveStyleValue<GridColumn | NonNullable<GridColumn>[]> | ((theme: Theme) => ResponsiveStyleValue<GridColumn | NonNullable<...>[]>)"}},gridRow:{defaultValue:null,description:"",name:"gridRow",required:!1,type:{name:"ResponsiveStyleValue<GridRow | NonNullable<GridRow>[]> | ((theme: Theme) => ResponsiveStyleValue<GridRow | NonNullable<GridRow>[]>)"}},overflow:{defaultValue:null,description:"",name:"overflow",required:!1,type:{name:"ResponsiveStyleValue<string[] | Overflow> | ((theme: Theme) => ResponsiveStyleValue<string[] | Overflow>)"}},padding:{defaultValue:null,description:"",name:"padding",required:!1,type:{name:"ResponsiveStyleValue<Padding<string | number> | NonNullable<Padding<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},m:{defaultValue:null,description:"",name:"m",required:!1,type:{name:"ResponsiveStyleValue<Margin<string | number> | NonNullable<Margin<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},mt:{defaultValue:null,description:"",name:"mt",required:!1,type:{name:"ResponsiveStyleValue<MarginTop<string | number> | NonNullable<MarginTop<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},mr:{defaultValue:null,description:"",name:"mr",required:!1,type:{name:"ResponsiveStyleValue<MarginRight<string | number> | NonNullable<MarginRight<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},mb:{defaultValue:null,description:"",name:"mb",required:!1,type:{name:"ResponsiveStyleValue<MarginBottom<string | number> | NonNullable<MarginBottom<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},ml:{defaultValue:null,description:"",name:"ml",required:!1,type:{name:"ResponsiveStyleValue<MarginLeft<string | number> | NonNullable<MarginLeft<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},mx:{defaultValue:null,description:"",name:"mx",required:!1,type:{name:"ResponsiveStyleValue<MarginLeft<string | number> | NonNullable<MarginLeft<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},marginX:{defaultValue:null,description:"",name:"marginX",required:!1,type:{name:"ResponsiveStyleValue<MarginLeft<string | number> | NonNullable<MarginLeft<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},my:{defaultValue:null,description:"",name:"my",required:!1,type:{name:"ResponsiveStyleValue<MarginTop<string | number> | NonNullable<MarginTop<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},marginY:{defaultValue:null,description:"",name:"marginY",required:!1,type:{name:"ResponsiveStyleValue<MarginTop<string | number> | NonNullable<MarginTop<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},pt:{defaultValue:null,description:"",name:"pt",required:!1,type:{name:"ResponsiveStyleValue<PaddingTop<string | number> | NonNullable<PaddingTop<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},pr:{defaultValue:null,description:"",name:"pr",required:!1,type:{name:"ResponsiveStyleValue<PaddingRight<string | number> | NonNullable<PaddingRight<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},pb:{defaultValue:null,description:"",name:"pb",required:!1,type:{name:"ResponsiveStyleValue<PaddingBottom<string | number> | NonNullable<PaddingBottom<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},pl:{defaultValue:null,description:"",name:"pl",required:!1,type:{name:"ResponsiveStyleValue<PaddingLeft<string | number> | NonNullable<PaddingLeft<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},px:{defaultValue:null,description:"",name:"px",required:!1,type:{name:"ResponsiveStyleValue<PaddingLeft<string | number> | NonNullable<PaddingLeft<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},paddingX:{defaultValue:null,description:"",name:"paddingX",required:!1,type:{name:"ResponsiveStyleValue<PaddingLeft<string | number> | NonNullable<PaddingLeft<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},py:{defaultValue:null,description:"",name:"py",required:!1,type:{name:"ResponsiveStyleValue<PaddingTop<string | number> | NonNullable<PaddingTop<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},paddingY:{defaultValue:null,description:"",name:"paddingY",required:!1,type:{name:"ResponsiveStyleValue<PaddingTop<string | number> | NonNullable<PaddingTop<string | number>>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"}},typography:{defaultValue:null,description:"",name:"typography",required:!1,type:{name:"ResponsiveStyleValue<string> | ((theme: Theme) => ResponsiveStyleValue<string>)"}},displayPrint:{defaultValue:null,description:"",name:"displayPrint",required:!1,type:{name:"ResponsiveStyleValue<string[] | Display> | ((theme: Theme) => ResponsiveStyleValue<string[] | Display>)"}},variantMapping:{defaultValue:{value:"{\nh1: 'h1',\nh2: 'h2',\nh3: 'h3',\nh4: 'h4',\nh5: 'h5',\nh6: 'h6',\nsubtitle1: 'h6',\nsubtitle2: 'h6',\nbody1: 'p',\nbody2: 'p',\ninherit: 'p',\n}"},description:"The component maps the variant prop to a range of different HTML element types.\nFor instance, subtitle1 to `<h6>`.\nIf you wish to change that mapping, you can provide your own.\nAlternatively, you can use the `component` prop.",name:"variantMapping",required:!1,type:{name:'Partial<Record<OverridableStringUnion<"inherit" | Variant, TypographyPropsVariantOverrides>, string>>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Dialog/Dialog.tsx#DialogContentText"]={docgenInfo:Dialog_DialogContentText.__docgenInfo,name:"DialogContentText",path:"src/components/Dialog/Dialog.tsx#DialogContentText"})}catch(__react_docgen_typescript_loader_error){}try{Dialog_Dialog.displayName="Dialog",Dialog_Dialog.__docgenInfo={description:"",displayName:"Dialog",props:{onClose:{defaultValue:{value:"undefined"},description:"",name:"onClose",required:!1,type:{name:"any"}},title:{defaultValue:{value:""},description:"",name:"title",required:!1,type:{name:"any"}},titleId:{defaultValue:{value:"dialog-title-id"},description:"",name:"titleId",required:!1,type:{name:"any"}},dividers:{defaultValue:{value:"false"},description:"",name:"dividers",required:!1,type:{name:"any"}},contentId:{defaultValue:{value:"undefined"},description:"",name:"contentId",required:!1,type:{name:"any"}},selectedValue:{defaultValue:{value:"undefined"},description:"",name:"selectedValue",required:!1,type:{name:"any"}},open:{defaultValue:{value:"false"},description:"",name:"open",required:!1,type:{name:"any"}},actions:{defaultValue:{value:"[]"},description:"",name:"actions",required:!1,type:{name:"any"}},fullWidth:{defaultValue:{value:"false"},description:"",name:"fullWidth",required:!1,type:{name:"any"}},maxWidth:{defaultValue:{value:"false"},description:"",name:"maxWidth",required:!1,type:{name:"any"}},fullScreen:{defaultValue:{value:"false"},description:"",name:"fullScreen",required:!1,type:{name:"any"}},draggable:{defaultValue:{value:"false"},description:"",name:"draggable",required:!1,type:{name:"any"}},autoContentPadding:{defaultValue:{value:"true"},description:"",name:"autoContentPadding",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Dialog/Dialog.tsx#Dialog"]={docgenInfo:Dialog_Dialog.__docgenInfo,name:"Dialog",path:"src/components/Dialog/Dialog.tsx#Dialog"})}catch(__react_docgen_typescript_loader_error){}var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v,_w;const Dialog_stories={parameters:{storySource:{source:'var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w;\nimport React, { useState } from "react";\nimport { Typography, Button, List, TextField, ListItem, ListItemButton, ListItemAvatar, Avatar, Box, ListItemText, FormControl, InputLabel, Select, MenuItem, FormControlLabel, Switch } from "@mui/material";\nimport { blue } from "@mui/material/colors";\nimport { Person as PersonIcon, Add as AddIcon } from "@mui/icons-material";\nimport Dialog, { DialogContentText } from "../Dialog";\nexport default {\n  title: "Feedback/Dialog",\n  component: Dialog,\n  decorators: [Story => /*#__PURE__*/React.createElement("div", {\n    style: {\n      width: "100%",\n      height: "100vh"\n    }\n  }, /*#__PURE__*/React.createElement(Story, null))]\n};\nexport const Default = () => {\n  return /*#__PURE__*/React.createElement(Dialog, null);\n};\nexport const Draggabled = () => {\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Button, {\n    variant: "outlined",\n    onClick: handleClickOpen\n  }, "Open dialog"), /*#__PURE__*/React.createElement(Dialog, {\n    title: "Draggable title section",\n    open: open,\n    onClose: handleClose,\n    draggable: true\n  }, "To draggable dialog component click on title section and drag to anywhere"));\n};\nexport const Dividers = () => {\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: "outlined",\n    onClick: handleClickOpen\n  }, "Open dialog"), /*#__PURE__*/React.createElement(Dialog, {\n    title: "Dividers",\n    open: open,\n    dividers: true,\n    onClose: handleClose,\n    actions: [{\n      label: "OK",\n      onClick: () => handleClose()\n    }]\n  }, /*#__PURE__*/React.createElement(DialogContentText, null, "See, there are dividers between title, content and actions")));\n};\nexport const Fullscreen = () => {\n  const [open, setOpen] = useState(false);\n  const [fullWidth, setFullWidth] = useState(true);\n  const [maxWidth, setMaxWidth] = useState("sm");\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleMaxWidthChange = event => setMaxWidth(event.target.value);\n  const handleFullWidthChange = event => setFullWidth(event.target.checked);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: "outlined",\n    onClick: handleClickOpen\n  }, "Open max-width dialog"), /*#__PURE__*/React.createElement(Dialog, {\n    title: "Optional sizes",\n    fullWidth: fullWidth,\n    maxWidth: maxWidth,\n    open: open,\n    onClose: handleClose\n  }, /*#__PURE__*/React.createElement(DialogContentText, null, "You can set my maximum width and whether to adapt or not."), /*#__PURE__*/React.createElement(Box, {\n    noValidate: true,\n    component: "form",\n    sx: {\n      display: "flex",\n      flexDirection: "column",\n      m: "auto",\n      width: "fit-content"\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    sx: {\n      mt: 2,\n      minWidth: 120\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: "max-width"\n  }, "maxWidth"), /*#__PURE__*/React.createElement(Select, {\n    autoFocus: true,\n    value: maxWidth,\n    onChange: handleMaxWidthChange,\n    label: "maxWidth",\n    inputProps: {\n      name: "max-width",\n      id: "max-width"\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: false\n  }, "false"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: "xs"\n  }, "xs"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: "sm"\n  }, "sm"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: "md"\n  }, "md"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: "lg"\n  }, "lg"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: "xl"\n  }, "xl"))), /*#__PURE__*/React.createElement(FormControlLabel, {\n    sx: {\n      mt: 1\n    },\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: fullWidth,\n      onChange: handleFullWidthChange\n    }),\n    label: "Full width"\n  }))));\n};\nexport const Actioned = () => {\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Button, {\n    variant: "outlined",\n    onClick: handleClickOpen\n  }, "Open form dialog"), /*#__PURE__*/React.createElement(Dialog, {\n    title: "Subscribe",\n    open: open,\n    onClose: handleClose,\n    actions: [{\n      label: "Cancel",\n      onClick: () => handleClose()\n    }, {\n      label: "Subscribe",\n      onClick: () => handleClose()\n    }]\n  }, /*#__PURE__*/React.createElement(DialogContentText, null, "To subscribe to this website, please enter your email address here. We will send updates occasionally."), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: "dense",\n    id: "name",\n    label: "Email Address",\n    type: "email",\n    fullWidth: true,\n    variant: "standard"\n  })));\n};\nexport const Info = () => {\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: "outlined",\n    onClick: handleClickOpen\n  }, "Open alert dialog"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    titleId: "alert-dialog-title",\n    contentId: "alert-dialog-description",\n    title: "Use Google\'s location service?",\n    autoContentPadding: true\n  }, "Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running."));\n};\nexport const DisableAutoPadding = () => {\n  const emails = ["username@gmail.com", "user02@gmail.com"];\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(emails[1]);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Typography, {\n    variant: "subtitle1",\n    component: "div"\n  }, "Selected: ", selectedValue), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement(Button, {\n    variant: "outlined",\n    onClick: handleClickOpen\n  }, "Open simple dialog"), /*#__PURE__*/React.createElement(Dialog, {\n    selectedValue: selectedValue,\n    open: open,\n    onClose: handleClose,\n    title: "Set backup account",\n    autoContentPadding: false\n  }, /*#__PURE__*/React.createElement(List, {\n    sx: {\n      pt: 0\n    }\n  }, emails.map(email => /*#__PURE__*/React.createElement(ListItem, {\n    key: email,\n    disableGutters: true\n  }, /*#__PURE__*/React.createElement(ListItemButton, {\n    onClick: () => handleClose(email),\n    key: email\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, null, /*#__PURE__*/React.createElement(Avatar, {\n    sx: {\n      bgcolor: blue[100],\n      color: blue[600]\n    }\n  }, /*#__PURE__*/React.createElement(PersonIcon, null))), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: email\n  })))), /*#__PURE__*/React.createElement(ListItem, {\n    disableGutters: true\n  }, /*#__PURE__*/React.createElement(ListItemButton, {\n    autoFocus: true,\n    onClick: () => handleClose("addAccount")\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, null, /*#__PURE__*/React.createElement(Avatar, null, /*#__PURE__*/React.createElement(AddIcon, null))), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: "Add account"\n  }))))));\n};\nDefault.parameters = Object.assign(Object.assign({}, Default.parameters), {\n  docs: Object.assign(Object.assign({}, (_a = Default.parameters) === null || _a === void 0 ? void 0 : _a.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  return <Dialog />;\\n}"\n    }, (_c = (_b = Default.parameters) === null || _b === void 0 ? void 0 : _b.docs) === null || _c === void 0 ? void 0 : _c.source)\n  })\n});\nDraggabled.parameters = Object.assign(Object.assign({}, Draggabled.parameters), {\n  docs: Object.assign(Object.assign({}, (_d = Draggabled.parameters) === null || _d === void 0 ? void 0 : _d.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  const [open, setOpen] = useState(false);\\n  const handleClickOpen = () => setOpen(true);\\n  const handleClose = () => setOpen(false);\\n  return <div>\\n      <Button variant=\\"outlined\\" onClick={handleClickOpen}>\\n        Open dialog\\n      </Button>\\n      <Dialog title=\\"Draggable title section\\" open={open} onClose={handleClose} draggable>\\n        To draggable dialog component click on title section and drag to\\n        anywhere\\n      </Dialog>\\n    </div>;\\n}"\n    }, (_f = (_e = Draggabled.parameters) === null || _e === void 0 ? void 0 : _e.docs) === null || _f === void 0 ? void 0 : _f.source)\n  })\n});\nDividers.parameters = Object.assign(Object.assign({}, Dividers.parameters), {\n  docs: Object.assign(Object.assign({}, (_g = Dividers.parameters) === null || _g === void 0 ? void 0 : _g.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  const [open, setOpen] = useState(false);\\n  const handleClickOpen = () => setOpen(true);\\n  const handleClose = () => setOpen(false);\\n  return <>\\n      <Button variant=\\"outlined\\" onClick={handleClickOpen}>\\n        Open dialog\\n      </Button>\\n      <Dialog title=\\"Dividers\\" open={open} dividers onClose={handleClose} actions={[{\\n      label: \\"OK\\",\\n      onClick: () => handleClose()\\n    }]}>\\n        <DialogContentText>\\n          See, there are dividers between title, content and actions\\n        </DialogContentText>\\n      </Dialog>\\n    </>;\\n}"\n    }, (_j = (_h = Dividers.parameters) === null || _h === void 0 ? void 0 : _h.docs) === null || _j === void 0 ? void 0 : _j.source)\n  })\n});\nFullscreen.parameters = Object.assign(Object.assign({}, Fullscreen.parameters), {\n  docs: Object.assign(Object.assign({}, (_k = Fullscreen.parameters) === null || _k === void 0 ? void 0 : _k.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  const [open, setOpen] = useState(false);\\n  const [fullWidth, setFullWidth] = useState(true);\\n  const [maxWidth, setMaxWidth] = useState(\\"sm\\");\\n  const handleClickOpen = () => setOpen(true);\\n  const handleClose = () => setOpen(false);\\n  const handleMaxWidthChange = event => setMaxWidth(event.target.value);\\n  const handleFullWidthChange = event => setFullWidth(event.target.checked);\\n  return <>\\n      <Button variant=\\"outlined\\" onClick={handleClickOpen}>\\n        Open max-width dialog\\n      </Button>\\n      <Dialog title=\\"Optional sizes\\" fullWidth={fullWidth} maxWidth={maxWidth} open={open} onClose={handleClose}>\\n        <DialogContentText>\\n          You can set my maximum width and whether to adapt or not.\\n        </DialogContentText>\\n        <Box noValidate component=\\"form\\" sx={{\\n        display: \\"flex\\",\\n        flexDirection: \\"column\\",\\n        m: \\"auto\\",\\n        width: \\"fit-content\\"\\n      }}>\\n          <FormControl sx={{\\n          mt: 2,\\n          minWidth: 120\\n        }}>\\n            <InputLabel htmlFor=\\"max-width\\">maxWidth</InputLabel>\\n            <Select autoFocus value={maxWidth} onChange={handleMaxWidthChange} label=\\"maxWidth\\" inputProps={{\\n            name: \\"max-width\\",\\n            id: \\"max-width\\"\\n          }}>\\n              <MenuItem value={false}>false</MenuItem>\\n              <MenuItem value=\\"xs\\">xs</MenuItem>\\n              <MenuItem value=\\"sm\\">sm</MenuItem>\\n              <MenuItem value=\\"md\\">md</MenuItem>\\n              <MenuItem value=\\"lg\\">lg</MenuItem>\\n              <MenuItem value=\\"xl\\">xl</MenuItem>\\n            </Select>\\n          </FormControl>\\n          <FormControlLabel sx={{\\n          mt: 1\\n        }} control={<Switch checked={fullWidth} onChange={handleFullWidthChange} />} label=\\"Full width\\" />\\n        </Box>\\n      </Dialog>\\n    </>;\\n}"\n    }, (_m = (_l = Fullscreen.parameters) === null || _l === void 0 ? void 0 : _l.docs) === null || _m === void 0 ? void 0 : _m.source)\n  })\n});\nActioned.parameters = Object.assign(Object.assign({}, Actioned.parameters), {\n  docs: Object.assign(Object.assign({}, (_o = Actioned.parameters) === null || _o === void 0 ? void 0 : _o.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  const [open, setOpen] = useState(false);\\n  const handleClickOpen = () => setOpen(true);\\n  const handleClose = () => setOpen(false);\\n  return <div>\\n      <Button variant=\\"outlined\\" onClick={handleClickOpen}>\\n        Open form dialog\\n      </Button>\\n      <Dialog title=\\"Subscribe\\" open={open} onClose={handleClose} actions={[{\\n      label: \\"Cancel\\",\\n      onClick: () => handleClose()\\n    }, {\\n      label: \\"Subscribe\\",\\n      onClick: () => handleClose()\\n    }]}>\\n        <DialogContentText>\\n          To subscribe to this website, please enter your email address here. We\\n          will send updates occasionally.\\n        </DialogContentText>\\n        <TextField autoFocus margin=\\"dense\\" id=\\"name\\" label=\\"Email Address\\" type=\\"email\\" fullWidth variant=\\"standard\\" />\\n      </Dialog>\\n    </div>;\\n}"\n    }, (_q = (_p = Actioned.parameters) === null || _p === void 0 ? void 0 : _p.docs) === null || _q === void 0 ? void 0 : _q.source)\n  })\n});\nInfo.parameters = Object.assign(Object.assign({}, Info.parameters), {\n  docs: Object.assign(Object.assign({}, (_r = Info.parameters) === null || _r === void 0 ? void 0 : _r.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  const [open, setOpen] = React.useState(false);\\n  const handleClickOpen = () => setOpen(true);\\n  const handleClose = () => setOpen(false);\\n  return <>\\n      <Button variant=\\"outlined\\" onClick={handleClickOpen}>\\n        Open alert dialog\\n      </Button>\\n      <Dialog open={open} onClose={handleClose} titleId=\\"alert-dialog-title\\" contentId=\\"alert-dialog-description\\" title=\\"Use Google\'s location service?\\" autoContentPadding>\\n        Let Google help apps determine location. This means sending anonymous\\n        location data to Google, even when no apps are running.\\n      </Dialog>\\n    </>;\\n}"\n    }, (_t = (_s = Info.parameters) === null || _s === void 0 ? void 0 : _s.docs) === null || _t === void 0 ? void 0 : _t.source)\n  })\n});\nDisableAutoPadding.parameters = Object.assign(Object.assign({}, DisableAutoPadding.parameters), {\n  docs: Object.assign(Object.assign({}, (_u = DisableAutoPadding.parameters) === null || _u === void 0 ? void 0 : _u.docs), {\n    source: Object.assign({\n      originalSource: "() => {\\n  const emails = [\\"username@gmail.com\\", \\"user02@gmail.com\\"];\\n  const [open, setOpen] = useState(false);\\n  const [selectedValue, setSelectedValue] = useState(emails[1]);\\n  const handleClickOpen = () => setOpen(true);\\n  const handleClose = value => {\\n    setOpen(false);\\n    setSelectedValue(value);\\n  };\\n  return <div>\\n      <Typography variant=\\"subtitle1\\" component=\\"div\\">\\n        Selected: {selectedValue}\\n      </Typography>\\n      <br />\\n      <Button variant=\\"outlined\\" onClick={handleClickOpen}>\\n        Open simple dialog\\n      </Button>\\n      <Dialog selectedValue={selectedValue} open={open} onClose={handleClose} title=\\"Set backup account\\" autoContentPadding={false}>\\n        <List sx={{\\n        pt: 0\\n      }}>\\n          {emails.map(email => <ListItem key={email} disableGutters>\\n              <ListItemButton onClick={() => handleClose(email)} key={email}>\\n                <ListItemAvatar>\\n                  <Avatar sx={{\\n                bgcolor: blue[100],\\n                color: blue[600]\\n              }}>\\n                    <PersonIcon />\\n                  </Avatar>\\n                </ListItemAvatar>\\n                <ListItemText primary={email} />\\n              </ListItemButton>\\n            </ListItem>)}\\n\\n          <ListItem disableGutters>\\n            <ListItemButton autoFocus onClick={() => handleClose(\\"addAccount\\")}>\\n              <ListItemAvatar>\\n                <Avatar>\\n                  <AddIcon />\\n                </Avatar>\\n              </ListItemAvatar>\\n              <ListItemText primary=\\"Add account\\" />\\n            </ListItemButton>\\n          </ListItem>\\n        </List>\\n      </Dialog>\\n    </div>;\\n}"\n    }, (_w = (_v = DisableAutoPadding.parameters) === null || _v === void 0 ? void 0 : _v.docs) === null || _w === void 0 ? void 0 : _w.source)\n  })\n});',locationsMap:{default:{startLoc:{col:23,line:17},endLoc:{col:1,line:19},startBody:{col:23,line:17},endBody:{col:1,line:19}},draggabled:{startLoc:{col:26,line:20},endLoc:{col:1,line:33},startBody:{col:26,line:20},endBody:{col:1,line:33}},dividers:{startLoc:{col:24,line:34},endLoc:{col:1,line:51},startBody:{col:24,line:34},endBody:{col:1,line:51}},fullscreen:{startLoc:{col:26,line:52},endLoc:{col:1,line:116},startBody:{col:26,line:52},endBody:{col:1,line:116}},actioned:{startLoc:{col:24,line:117},endLoc:{col:1,line:144},startBody:{col:24,line:117},endBody:{col:1,line:144}},info:{startLoc:{col:20,line:145},endLoc:{col:1,line:160},startBody:{col:20,line:145},endBody:{col:1,line:160}},"disable-auto-padding":{startLoc:{col:34,line:161},endLoc:{col:1,line:207},startBody:{col:34,line:161},endBody:{col:1,line:207}}}}},title:"Feedback/Dialog",component:components_Dialog_Dialog,decorators:[Story=>react.createElement("div",{style:{width:"100%",height:"100vh"}},react.createElement(Story,null))]},Default=()=>react.createElement(components_Dialog_Dialog,null),Draggabled=()=>{const[open,setOpen]=(0,react.useState)(!1);return react.createElement("div",null,react.createElement(Button.Z,{variant:"outlined",onClick:()=>setOpen(!0)},"Open dialog"),react.createElement(components_Dialog_Dialog,{title:"Draggable title section",open,onClose:()=>setOpen(!1),draggable:!0},"To draggable dialog component click on title section and drag to anywhere"))},Dividers=()=>{const[open,setOpen]=(0,react.useState)(!1),handleClose=()=>setOpen(!1);return react.createElement(react.Fragment,null,react.createElement(Button.Z,{variant:"outlined",onClick:()=>setOpen(!0)},"Open dialog"),react.createElement(components_Dialog_Dialog,{title:"Dividers",open,dividers:!0,onClose:handleClose,actions:[{label:"OK",onClick:()=>handleClose()}]},react.createElement(Dialog_DialogContentText,null,"See, there are dividers between title, content and actions")))},Fullscreen=()=>{const[open,setOpen]=(0,react.useState)(!1),[fullWidth,setFullWidth]=(0,react.useState)(!0),[maxWidth,setMaxWidth]=(0,react.useState)("sm");return react.createElement(react.Fragment,null,react.createElement(Button.Z,{variant:"outlined",onClick:()=>setOpen(!0)},"Open max-width dialog"),react.createElement(components_Dialog_Dialog,{title:"Optional sizes",fullWidth,maxWidth,open,onClose:()=>setOpen(!1)},react.createElement(Dialog_DialogContentText,null,"You can set my maximum width and whether to adapt or not."),react.createElement(Box.Z,{noValidate:!0,component:"form",sx:{display:"flex",flexDirection:"column",m:"auto",width:"fit-content"}},react.createElement(FormControl.Z,{sx:{mt:2,minWidth:120}},react.createElement(InputLabel.Z,{htmlFor:"max-width"},"maxWidth"),react.createElement(Select.Z,{autoFocus:!0,value:maxWidth,onChange:event=>setMaxWidth(event.target.value),label:"maxWidth",inputProps:{name:"max-width",id:"max-width"}},react.createElement(MenuItem.Z,{value:!1},"false"),react.createElement(MenuItem.Z,{value:"xs"},"xs"),react.createElement(MenuItem.Z,{value:"sm"},"sm"),react.createElement(MenuItem.Z,{value:"md"},"md"),react.createElement(MenuItem.Z,{value:"lg"},"lg"),react.createElement(MenuItem.Z,{value:"xl"},"xl"))),react.createElement(FormControlLabel.Z,{sx:{mt:1},control:react.createElement(Switch.Z,{checked:fullWidth,onChange:event=>setFullWidth(event.target.checked)}),label:"Full width"}))))},Actioned=()=>{const[open,setOpen]=(0,react.useState)(!1),handleClose=()=>setOpen(!1);return react.createElement("div",null,react.createElement(Button.Z,{variant:"outlined",onClick:()=>setOpen(!0)},"Open form dialog"),react.createElement(components_Dialog_Dialog,{title:"Subscribe",open,onClose:handleClose,actions:[{label:"Cancel",onClick:()=>handleClose()},{label:"Subscribe",onClick:()=>handleClose()}]},react.createElement(Dialog_DialogContentText,null,"To subscribe to this website, please enter your email address here. We will send updates occasionally."),react.createElement(TextField.Z,{autoFocus:!0,margin:"dense",id:"name",label:"Email Address",type:"email",fullWidth:!0,variant:"standard"})))},Info=()=>{const[open,setOpen]=react.useState(!1);return react.createElement(react.Fragment,null,react.createElement(Button.Z,{variant:"outlined",onClick:()=>setOpen(!0)},"Open alert dialog"),react.createElement(components_Dialog_Dialog,{open,onClose:()=>setOpen(!1),titleId:"alert-dialog-title",contentId:"alert-dialog-description",title:"Use Google's location service?",autoContentPadding:!0},"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running."))},DisableAutoPadding=()=>{const emails=["username@gmail.com","user02@gmail.com"],[open,setOpen]=(0,react.useState)(!1),[selectedValue,setSelectedValue]=(0,react.useState)(emails[1]),handleClose=value=>{setOpen(!1),setSelectedValue(value)};return react.createElement("div",null,react.createElement(Typography.Z,{variant:"subtitle1",component:"div"},"Selected: ",selectedValue),react.createElement("br",null),react.createElement(Button.Z,{variant:"outlined",onClick:()=>setOpen(!0)},"Open simple dialog"),react.createElement(components_Dialog_Dialog,{selectedValue,open,onClose:handleClose,title:"Set backup account",autoContentPadding:!1},react.createElement(List.Z,{sx:{pt:0}},emails.map((email=>react.createElement(ListItem.ZP,{key:email,disableGutters:!0},react.createElement(ListItemButton.Z,{onClick:()=>handleClose(email),key:email},react.createElement(ListItemAvatar.Z,null,react.createElement(Avatar.Z,{sx:{bgcolor:blue.Z[100],color:blue.Z[600]}},react.createElement(Person.Z,null))),react.createElement(ListItemText.Z,{primary:email}))))),react.createElement(ListItem.ZP,{disableGutters:!0},react.createElement(ListItemButton.Z,{autoFocus:!0,onClick:()=>handleClose("addAccount")},react.createElement(ListItemAvatar.Z,null,react.createElement(Avatar.Z,null,react.createElement(Add.Z,null))),react.createElement(ListItemText.Z,{primary:"Add account"}))))))};Default.parameters=Object.assign(Object.assign({},Default.parameters),{docs:Object.assign(Object.assign({},null===(_a=Default.parameters)||void 0===_a?void 0:_a.docs),{source:Object.assign({originalSource:"() => {\n  return <Dialog />;\n}"},null===(_c=null===(_b=Default.parameters)||void 0===_b?void 0:_b.docs)||void 0===_c?void 0:_c.source)})}),Draggabled.parameters=Object.assign(Object.assign({},Draggabled.parameters),{docs:Object.assign(Object.assign({},null===(_d=Draggabled.parameters)||void 0===_d?void 0:_d.docs),{source:Object.assign({originalSource:'() => {\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  return <div>\n      <Button variant="outlined" onClick={handleClickOpen}>\n        Open dialog\n      </Button>\n      <Dialog title="Draggable title section" open={open} onClose={handleClose} draggable>\n        To draggable dialog component click on title section and drag to\n        anywhere\n      </Dialog>\n    </div>;\n}'},null===(_f=null===(_e=Draggabled.parameters)||void 0===_e?void 0:_e.docs)||void 0===_f?void 0:_f.source)})}),Dividers.parameters=Object.assign(Object.assign({},Dividers.parameters),{docs:Object.assign(Object.assign({},null===(_g=Dividers.parameters)||void 0===_g?void 0:_g.docs),{source:Object.assign({originalSource:'() => {\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  return <>\n      <Button variant="outlined" onClick={handleClickOpen}>\n        Open dialog\n      </Button>\n      <Dialog title="Dividers" open={open} dividers onClose={handleClose} actions={[{\n      label: "OK",\n      onClick: () => handleClose()\n    }]}>\n        <DialogContentText>\n          See, there are dividers between title, content and actions\n        </DialogContentText>\n      </Dialog>\n    </>;\n}'},null===(_j=null===(_h=Dividers.parameters)||void 0===_h?void 0:_h.docs)||void 0===_j?void 0:_j.source)})}),Fullscreen.parameters=Object.assign(Object.assign({},Fullscreen.parameters),{docs:Object.assign(Object.assign({},null===(_k=Fullscreen.parameters)||void 0===_k?void 0:_k.docs),{source:Object.assign({originalSource:'() => {\n  const [open, setOpen] = useState(false);\n  const [fullWidth, setFullWidth] = useState(true);\n  const [maxWidth, setMaxWidth] = useState("sm");\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleMaxWidthChange = event => setMaxWidth(event.target.value);\n  const handleFullWidthChange = event => setFullWidth(event.target.checked);\n  return <>\n      <Button variant="outlined" onClick={handleClickOpen}>\n        Open max-width dialog\n      </Button>\n      <Dialog title="Optional sizes" fullWidth={fullWidth} maxWidth={maxWidth} open={open} onClose={handleClose}>\n        <DialogContentText>\n          You can set my maximum width and whether to adapt or not.\n        </DialogContentText>\n        <Box noValidate component="form" sx={{\n        display: "flex",\n        flexDirection: "column",\n        m: "auto",\n        width: "fit-content"\n      }}>\n          <FormControl sx={{\n          mt: 2,\n          minWidth: 120\n        }}>\n            <InputLabel htmlFor="max-width">maxWidth</InputLabel>\n            <Select autoFocus value={maxWidth} onChange={handleMaxWidthChange} label="maxWidth" inputProps={{\n            name: "max-width",\n            id: "max-width"\n          }}>\n              <MenuItem value={false}>false</MenuItem>\n              <MenuItem value="xs">xs</MenuItem>\n              <MenuItem value="sm">sm</MenuItem>\n              <MenuItem value="md">md</MenuItem>\n              <MenuItem value="lg">lg</MenuItem>\n              <MenuItem value="xl">xl</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControlLabel sx={{\n          mt: 1\n        }} control={<Switch checked={fullWidth} onChange={handleFullWidthChange} />} label="Full width" />\n        </Box>\n      </Dialog>\n    </>;\n}'},null===(_m=null===(_l=Fullscreen.parameters)||void 0===_l?void 0:_l.docs)||void 0===_m?void 0:_m.source)})}),Actioned.parameters=Object.assign(Object.assign({},Actioned.parameters),{docs:Object.assign(Object.assign({},null===(_o=Actioned.parameters)||void 0===_o?void 0:_o.docs),{source:Object.assign({originalSource:'() => {\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  return <div>\n      <Button variant="outlined" onClick={handleClickOpen}>\n        Open form dialog\n      </Button>\n      <Dialog title="Subscribe" open={open} onClose={handleClose} actions={[{\n      label: "Cancel",\n      onClick: () => handleClose()\n    }, {\n      label: "Subscribe",\n      onClick: () => handleClose()\n    }]}>\n        <DialogContentText>\n          To subscribe to this website, please enter your email address here. We\n          will send updates occasionally.\n        </DialogContentText>\n        <TextField autoFocus margin="dense" id="name" label="Email Address" type="email" fullWidth variant="standard" />\n      </Dialog>\n    </div>;\n}'},null===(_q=null===(_p=Actioned.parameters)||void 0===_p?void 0:_p.docs)||void 0===_q?void 0:_q.source)})}),Info.parameters=Object.assign(Object.assign({},Info.parameters),{docs:Object.assign(Object.assign({},null===(_r=Info.parameters)||void 0===_r?void 0:_r.docs),{source:Object.assign({originalSource:'() => {\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  return <>\n      <Button variant="outlined" onClick={handleClickOpen}>\n        Open alert dialog\n      </Button>\n      <Dialog open={open} onClose={handleClose} titleId="alert-dialog-title" contentId="alert-dialog-description" title="Use Google\'s location service?" autoContentPadding>\n        Let Google help apps determine location. This means sending anonymous\n        location data to Google, even when no apps are running.\n      </Dialog>\n    </>;\n}'},null===(_t=null===(_s=Info.parameters)||void 0===_s?void 0:_s.docs)||void 0===_t?void 0:_t.source)})}),DisableAutoPadding.parameters=Object.assign(Object.assign({},DisableAutoPadding.parameters),{docs:Object.assign(Object.assign({},null===(_u=DisableAutoPadding.parameters)||void 0===_u?void 0:_u.docs),{source:Object.assign({originalSource:'() => {\n  const emails = ["username@gmail.com", "user02@gmail.com"];\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(emails[1]);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n  return <div>\n      <Typography variant="subtitle1" component="div">\n        Selected: {selectedValue}\n      </Typography>\n      <br />\n      <Button variant="outlined" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n      <Dialog selectedValue={selectedValue} open={open} onClose={handleClose} title="Set backup account" autoContentPadding={false}>\n        <List sx={{\n        pt: 0\n      }}>\n          {emails.map(email => <ListItem key={email} disableGutters>\n              <ListItemButton onClick={() => handleClose(email)} key={email}>\n                <ListItemAvatar>\n                  <Avatar sx={{\n                bgcolor: blue[100],\n                color: blue[600]\n              }}>\n                    <PersonIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={email} />\n              </ListItemButton>\n            </ListItem>)}\n\n          <ListItem disableGutters>\n            <ListItemButton autoFocus onClick={() => handleClose("addAccount")}>\n              <ListItemAvatar>\n                <Avatar>\n                  <AddIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary="Add account" />\n            </ListItemButton>\n          </ListItem>\n        </List>\n      </Dialog>\n    </div>;\n}'},null===(_w=null===(_v=DisableAutoPadding.parameters)||void 0===_v?void 0:_v.docs)||void 0===_w?void 0:_w.source)})});const __namedExportsOrder=["Default","Draggabled","Dividers","Fullscreen","Actioned","Info","DisableAutoPadding"]},"./src/components/Button/Button.styled.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{hE:()=>ButtonGroup,hU:()=>IconButton,zx:()=>Button});var _mui_material_styles__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),_mui_material__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mui/material/Button/Button.js"),_mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mui/system/esm/colorManipulator.js"),_mui_material__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/IconButton/IconButton.js"),_mui_material__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/material/ButtonGroup/ButtonGroup.js");const Button=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_0__.ZP)(_mui_material__WEBPACK_IMPORTED_MODULE_1__.Z,{shouldForwardProp:propName=>!["disableElevation","customColor"].includes(propName)})`
  width: ${props=>props.fullWidth?"100%":"max-content"};
  &:not(.MuiButton-contained) {
    color: ${props=>props.customColor} !important;
    border-color: ${props=>props.customColor&&(0,_mui_material__WEBPACK_IMPORTED_MODULE_2__.Fq)(props.customColor,.5)} !important;
  }

  &.MuiButton-contained {
    background-color: ${props=>props.customColor} !important;
    color: white;
    &:not(:last-of-type) {
      border-color: white;
    }
  }
`,IconButton=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_0__.ZP)(_mui_material__WEBPACK_IMPORTED_MODULE_3__.Z,{shouldForwardProp:propName=>!["disableElevation","customColor"].includes(propName)})`
  box-sizing: border-box;
`,ButtonGroup=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_0__.ZP)(_mui_material__WEBPACK_IMPORTED_MODULE_4__.Z,{shouldForwardProp:propName=>!["customColor"].includes(propName)})`
  width: ${props=>props.fullWidth?"100%":"max-content"};
  & .MuiButtonGroup-grouped {
    &:not(.MuiButton-contained) {
      color: ${props=>props.customColor};
      border-color: ${props=>props.customColor&&(0,_mui_material__WEBPACK_IMPORTED_MODULE_2__.Fq)(props.customColor,.5)};
    }

    &.MuiButton-contained {
      background-color: ${props=>props.customColor};
      color: white;
      &:not(:last-of-type) {
        border-color: white;
      }
    }
  }
`;try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<ButtonClasses> & Partial<ClassNameMap<never>>"}},color:{defaultValue:{value:"'primary'"},description:"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).",name:"color",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"inherit"'},{value:'"primary"'},{value:'"secondary"'},{value:'"warning"'},{value:'"info"'},{value:'"success"'}]}},disabled:{defaultValue:{value:"false\nfalse"},description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},disableElevation:{defaultValue:{value:"false"},description:"If `true`, no elevation is used.",name:"disableElevation",required:!1,type:{name:"boolean"}},disableFocusRipple:{defaultValue:{value:"false"},description:"If `true`, the  keyboard focus ripple is disabled.",name:"disableFocusRipple",required:!1,type:{name:"boolean"}},endIcon:{defaultValue:null,description:"Element placed after the children.",name:"endIcon",required:!1,type:{name:"ReactNode"}},fullWidth:{defaultValue:{value:"false"},description:"If `true`, the button will take up the full width of its container.",name:"fullWidth",required:!1,type:{name:"boolean"}},href:{defaultValue:null,description:"The URL to link to when the button is clicked.\nIf defined, an `a` element will be used as the root node.",name:"href",required:!1,type:{name:"string"}},size:{defaultValue:{value:"'medium'"},description:"The size of the component.\n`small` is equivalent to the dense button styling.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},startIcon:{defaultValue:null,description:"Element placed before the children.",name:"startIcon",required:!1,type:{name:"ReactNode"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},variant:{defaultValue:{value:"'text'"},description:"The variant to use.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"outlined"'},{value:'"text"'},{value:'"contained"'}]}},disableRipple:{defaultValue:{value:"false"},description:"If `true`, the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the `.Mui-focusVisible` class.",name:"disableRipple",required:!1,type:{name:"boolean"}},tabIndex:{defaultValue:{value:"0"},description:"",name:"tabIndex",required:!1,type:{name:"number"}},action:{defaultValue:null,description:"A ref for imperative actions.\nIt currently only supports `focusVisible()` action.",name:"action",required:!1,type:{name:"Ref<ButtonBaseActions>"}},centerRipple:{defaultValue:{value:"false"},description:"If `true`, the ripples are centered.\nThey won't start at the cursor interaction position.",name:"centerRipple",required:!1,type:{name:"boolean"}},disableTouchRipple:{defaultValue:{value:"false"},description:"If `true`, the touch ripple effect is disabled.",name:"disableTouchRipple",required:!1,type:{name:"boolean"}},focusRipple:{defaultValue:{value:"false"},description:"If `true`, the base button will have a keyboard focus ripple.",name:"focusRipple",required:!1,type:{name:"boolean"}},focusVisibleClassName:{defaultValue:null,description:"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\nif needed.",name:"focusVisibleClassName",required:!1,type:{name:"string"}},LinkComponent:{defaultValue:{value:"'a'"},description:"The component used to render a link when the `href` prop is provided.",name:"LinkComponent",required:!1,type:{name:"ElementType<any>"}},onFocusVisible:{defaultValue:null,description:"Callback fired when the component is focused with a keyboard.\nWe trigger a `onFocus` callback too.",name:"onFocusVisible",required:!1,type:{name:"FocusEventHandler<any>"}},TouchRippleProps:{defaultValue:null,description:"Props applied to the `TouchRipple` element.",name:"TouchRippleProps",required:!1,type:{name:"Partial<TouchRippleProps>"}},touchRippleRef:{defaultValue:null,description:"A ref that points to the `TouchRipple` element.",name:"touchRippleRef",required:!1,type:{name:"Ref<TouchRippleActions>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLButtonElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/Button.styled.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"src/components/Button/Button.styled.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}try{IconButton.displayName="IconButton",IconButton.__docgenInfo={description:"",displayName:"IconButton",props:{children:{defaultValue:null,description:"The icon to display.\nThe content of the component.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<IconButtonClasses> & Partial<ClassNameMap<never>>"}},color:{defaultValue:{value:"'default'"},description:"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).",name:"color",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"default"'},{value:'"inherit"'},{value:'"primary"'},{value:'"secondary"'},{value:'"warning"'},{value:'"info"'},{value:'"success"'}]}},disabled:{defaultValue:{value:"false\nfalse"},description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},disableFocusRipple:{defaultValue:{value:"false"},description:"If `true`, the  keyboard focus ripple is disabled.",name:"disableFocusRipple",required:!1,type:{name:"boolean"}},edge:{defaultValue:{value:"false"},description:"If given, uses a negative margin to counteract the padding on one\nside (this is often helpful for aligning the left or right\nside of the icon with content above or below, without ruining the border\nsize and shape).",name:"edge",required:!1,type:{name:'false | "end" | "start"'}},size:{defaultValue:{value:"'medium'"},description:"The size of the component.\n`small` is equivalent to the dense button styling.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},disableRipple:{defaultValue:{value:"false"},description:"If `true`, the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the `.Mui-focusVisible` class.",name:"disableRipple",required:!1,type:{name:"boolean"}},tabIndex:{defaultValue:{value:"0"},description:"",name:"tabIndex",required:!1,type:{name:"number"}},action:{defaultValue:null,description:"A ref for imperative actions.\nIt currently only supports `focusVisible()` action.",name:"action",required:!1,type:{name:"Ref<ButtonBaseActions>"}},centerRipple:{defaultValue:{value:"false"},description:"If `true`, the ripples are centered.\nThey won't start at the cursor interaction position.",name:"centerRipple",required:!1,type:{name:"boolean"}},disableTouchRipple:{defaultValue:{value:"false"},description:"If `true`, the touch ripple effect is disabled.",name:"disableTouchRipple",required:!1,type:{name:"boolean"}},focusRipple:{defaultValue:{value:"false"},description:"If `true`, the base button will have a keyboard focus ripple.",name:"focusRipple",required:!1,type:{name:"boolean"}},focusVisibleClassName:{defaultValue:null,description:"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\nif needed.",name:"focusVisibleClassName",required:!1,type:{name:"string"}},LinkComponent:{defaultValue:{value:"'a'"},description:"The component used to render a link when the `href` prop is provided.",name:"LinkComponent",required:!1,type:{name:"ElementType<any>"}},onFocusVisible:{defaultValue:null,description:"Callback fired when the component is focused with a keyboard.\nWe trigger a `onFocus` callback too.",name:"onFocusVisible",required:!1,type:{name:"FocusEventHandler<any>"}},TouchRippleProps:{defaultValue:null,description:"Props applied to the `TouchRipple` element.",name:"TouchRippleProps",required:!1,type:{name:"Partial<TouchRippleProps>"}},touchRippleRef:{defaultValue:null,description:"A ref that points to the `TouchRipple` element.",name:"touchRippleRef",required:!1,type:{name:"Ref<TouchRippleActions>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLButtonElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/Button.styled.tsx#IconButton"]={docgenInfo:IconButton.__docgenInfo,name:"IconButton",path:"src/components/Button/Button.styled.tsx#IconButton"})}catch(__react_docgen_typescript_loader_error){}try{ButtonGroup.displayName="ButtonGroup",ButtonGroup.__docgenInfo={description:"",displayName:"ButtonGroup",props:{children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<ButtonGroupClasses> & Partial<ClassNameMap<never>>"}},color:{defaultValue:{value:"'primary'"},description:"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).",name:"color",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"inherit"'},{value:'"primary"'},{value:'"secondary"'},{value:'"warning"'},{value:'"info"'},{value:'"success"'}]}},disabled:{defaultValue:{value:"false"},description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},disableElevation:{defaultValue:{value:"false"},description:"If `true`, no elevation is used.",name:"disableElevation",required:!1,type:{name:"boolean"}},disableFocusRipple:{defaultValue:{value:"false"},description:"If `true`, the button keyboard focus ripple is disabled.",name:"disableFocusRipple",required:!1,type:{name:"boolean"}},disableRipple:{defaultValue:{value:"false"},description:"If `true`, the button ripple effect is disabled.",name:"disableRipple",required:!1,type:{name:"boolean"}},fullWidth:{defaultValue:{value:"false"},description:"If `true`, the buttons will take up the full width of its container.",name:"fullWidth",required:!1,type:{name:"boolean"}},orientation:{defaultValue:{value:"'horizontal'"},description:"The component orientation (layout flow direction).",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},size:{defaultValue:{value:"'medium'"},description:"The size of the component.\n`small` is equivalent to the dense button styling.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},variant:{defaultValue:{value:"'outlined'"},description:"The variant to use.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"outlined"'},{value:'"text"'},{value:'"contained"'}]}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/Button.styled.tsx#ButtonGroup"]={docgenInfo:ButtonGroup.__docgenInfo,name:"ButtonGroup",path:"src/components/Button/Button.styled.tsx#ButtonGroup"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Button/Button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_5__),_Progress_CircularProgress_CircularProgress__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Progress/CircularProgress/CircularProgress.tsx"),_Button_styled__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Button/Button.styled.tsx"),_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Tooltip/Tooltip.tsx"),_utils_helpers__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/utils/helpers.ts"),__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};const spinner=react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Progress_CircularProgress_CircularProgress__WEBPACK_IMPORTED_MODULE_1__.Z,{color:"inherit",size:15}),Button=(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(((_a,ref)=>{var{variant,disabled,startIcon,endIcon,onClick,onRightClick,link,color,disableRipple,isLoading,loadingIconPosition,loadingLabel,size,icon,fullWidth,tooltipProps,uppercase,minWidth,sx,children}=_a,props=__rest(_a,["variant","disabled","startIcon","endIcon","onClick","onRightClick","link","color","disableRipple","isLoading","loadingIconPosition","loadingLabel","size","icon","fullWidth","tooltipProps","uppercase","minWidth","sx","children"]);const[customColor,muiColor]=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_4__.Ek)(color),onRightClickHandler=e=>{e.preventDefault(),null==onRightClick||onRightClick(e)};if(icon||isLoading&&!loadingLabel&&!startIcon&&!endIcon)return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_3__.Z,Object.assign({},tooltipProps),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_styled__WEBPACK_IMPORTED_MODULE_2__.hU,Object.assign({ref,sx:Object.assign({minWidth,color:muiColor?void 0:customColor},sx),color:muiColor,size,disableRipple:!!disabled||disableRipple,onClick:disabled?void 0:onClick,onContextMenu:disabled?void 0:onRightClick?onRightClickHandler:props.onContextMenu,href:link},props),isLoading?spinner:icon));const startIconCmp=isLoading?"start"===loadingIconPosition&&startIcon&&spinner:startIcon,endIconCmp=isLoading?"end"===loadingIconPosition&&endIcon&&spinner:endIcon,content=isLoading&&(loadingLabel||!startIconCmp&&!endIconCmp&&children)||children;return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_3__.Z,Object.assign({},tooltipProps),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_styled__WEBPACK_IMPORTED_MODULE_2__.zx,Object.assign({ref,variant,disabled:isLoading||disabled,startIcon:startIconCmp,endIcon:endIconCmp,onClick,onContextMenu:onRightClick?onRightClickHandler:props.onContextMenu,href:link,disableRipple,customColor:muiColor?void 0:customColor,color:muiColor,size,fullWidth,sx:Object.assign(Object.assign({minWidth},!uppercase&&{textTransform:"none"}),sx)},props),content))}));Button.propTypes={variant:prop_types__WEBPACK_IMPORTED_MODULE_5___default().oneOf(["contained","outlined","text"]),fullWidth:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool,disabled:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool,startIcon:prop_types__WEBPACK_IMPORTED_MODULE_5___default().node,endIcon:prop_types__WEBPACK_IMPORTED_MODULE_5___default().node,onClick:prop_types__WEBPACK_IMPORTED_MODULE_5___default().func,onRightClick:prop_types__WEBPACK_IMPORTED_MODULE_5___default().func,link:prop_types__WEBPACK_IMPORTED_MODULE_5___default().string,color:prop_types__WEBPACK_IMPORTED_MODULE_5___default().string,disableRipple:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool,isLoading:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool,loadingIconPosition:prop_types__WEBPACK_IMPORTED_MODULE_5___default().oneOf(["start","end"]),loadingLabel:prop_types__WEBPACK_IMPORTED_MODULE_5___default().string,disableElevation:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool,icon:prop_types__WEBPACK_IMPORTED_MODULE_5___default().node,size:prop_types__WEBPACK_IMPORTED_MODULE_5___default().oneOf(["small","medium","large"]),tooltipProps:prop_types__WEBPACK_IMPORTED_MODULE_5___default().object,uppercase:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool,minWidth:prop_types__WEBPACK_IMPORTED_MODULE_5___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_5___default().string,prop_types__WEBPACK_IMPORTED_MODULE_5___default().number])},Button.defaultProps={variant:void 0,fullWidth:void 0,disabled:void 0,startIcon:void 0,endIcon:void 0,onClick:void 0,onRightClick:void 0,link:void 0,color:void 0,disableRipple:void 0,isLoading:void 0,loadingIconPosition:void 0,loadingLabel:void 0,disableElevation:void 0,icon:void 0,size:void 0,tooltipProps:void 0,uppercase:!0,minWidth:void 0};const __WEBPACK_DEFAULT_EXPORT__=Button;try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{variant:{defaultValue:{value:"undefined"},description:'The variant of the button allowed types: "contained", "outlined", "text"',name:"variant",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"undefined"},description:"The disabled field of button, when is disabled - onClick event won't fire",name:"disabled",required:!1,type:{name:"boolean"}},startIcon:{defaultValue:{value:"undefined"},description:"",name:"startIcon",required:!1,type:{name:"boolean"}},endIcon:{defaultValue:{value:"undefined"},description:"",name:"endIcon",required:!1,type:{name:"any"}},onClick:{defaultValue:{value:"undefined"},description:"",name:"onClick",required:!1,type:{name:"Function"}},onRightClick:{defaultValue:{value:"undefined"},description:"",name:"onRightClick",required:!1,type:{name:"Function"}},link:{defaultValue:{value:"undefined"},description:"",name:"link",required:!1,type:{name:"string"}},color:{defaultValue:{value:"undefined"},description:"",name:"color",required:!1,type:{name:"string"}},disableRipple:{defaultValue:{value:"undefined"},description:"",name:"disableRipple",required:!1,type:{name:"string"}},isLoading:{defaultValue:{value:"undefined"},description:"",name:"isLoading",required:!1,type:{name:"boolean"}},loadingIconPosition:{defaultValue:{value:"undefined"},description:"",name:"loadingIconPosition",required:!1,type:{name:"string"}},loadingLabel:{defaultValue:{value:"undefined"},description:"",name:"loadingLabel",required:!1,type:{name:"string"}},size:{defaultValue:{value:"undefined"},description:"",name:"size",required:!1,type:{name:"string | number"}},icon:{defaultValue:{value:"undefined"},description:"",name:"icon",required:!1,type:{name:"any"}},fullWidth:{defaultValue:{value:"undefined"},description:"",name:"fullWidth",required:!1,type:{name:"boolean"}},tooltipProps:{defaultValue:{value:"undefined"},description:"",name:"tooltipProps",required:!1,type:{name:"object"}},uppercase:{defaultValue:{value:"true"},description:"",name:"uppercase",required:!1,type:{name:"boolean"}},minWidth:{defaultValue:{value:"undefined"},description:"",name:"minWidth",required:!1,type:{name:"string | number"}},sx:{defaultValue:null,description:"",name:"sx",required:!0,type:{name:"object"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/Button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"src/components/Button/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Progress/CircularProgress/CircularProgress.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>CircularProgress_CircularProgress});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),CircularProgress=__webpack_require__("./node_modules/@mui/material/CircularProgress/CircularProgress.js"),Typography=__webpack_require__("./node_modules/@mui/material/Typography/Typography.js"),__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};const BoxWrapper=(0,styled.ZP)(Box.Z)`
  position: relative;
  display: inline-flex;
`,CenterBoxContent=(0,styled.ZP)(Box.Z)`
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
`,CircularProgress_styled_CircularProgress=(0,styled.ZP)((_a=>{var{theme,size,showProgress,variant,value}=_a,props=__rest(_a,["theme","size","showProgress","variant","value"]);return react.createElement(BoxWrapper,null,react.createElement(CircularProgress.Z,Object.assign({value,variant:value&&void 0===variant?"determinate":variant,size},props)),react.createElement(CircularProgress.Z,{value:100,variant:"determinate",size,sx:{position:"absolute",left:0,color:"rgba(0,0,0,0.1)"}}),react.createElement(CenterBoxContent,null,react.createElement(Typography.Z,{variant:"caption",component:"div",color:"text.secondary"},showProgress&&void 0!==value?`${Math.round(value)}%`:"")))}),{shouldForwardProp:propName=>!["customColor"].includes(propName)})`
  &.MuiCircularProgress-root {
    color: ${props=>props.customColor};
  }
  //animation-duration: 760ms;
`;try{CircularProgress_styled_CircularProgress.displayName="CircularProgress",CircularProgress_styled_CircularProgress.__docgenInfo={description:"",displayName:"CircularProgress",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Progress/CircularProgress/CircularProgress.styled.tsx#CircularProgress"]={docgenInfo:CircularProgress_styled_CircularProgress.__docgenInfo,name:"CircularProgress",path:"src/components/Progress/CircularProgress/CircularProgress.styled.tsx#CircularProgress"})}catch(__react_docgen_typescript_loader_error){}var helpers=__webpack_require__("./src/utils/helpers.ts"),CircularProgress_rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};function CircularProgress_CircularProgress(_a){var{color,value,showProgress,thickness,size,disableShrink}=_a,props=CircularProgress_rest(_a,["color","value","showProgress","thickness","size","disableShrink"]);const[customColor,muiColor]=(0,helpers.Ek)(color);return react.createElement(CircularProgress_styled_CircularProgress,Object.assign({color:muiColor,customColor:muiColor?void 0:customColor,variant:value?"determinate":void 0,value,thickness,size,showProgress,disableShrink},props))}CircularProgress_CircularProgress.propTypes={color:prop_types_default().string,variant:prop_types_default().oneOf(["determinate","indeterminate"]),value:prop_types_default().number,thickness:prop_types_default().number,size:prop_types_default().number,showProgress:prop_types_default().bool,disableShrink:prop_types_default().bool},CircularProgress_CircularProgress.defaultProps={color:void 0,variant:void 0,value:void 0,thickness:void 0,size:void 0,showProgress:!0,disableShrink:void 0};try{CircularProgress_CircularProgress.displayName="CircularProgress",CircularProgress_CircularProgress.__docgenInfo={description:"",displayName:"CircularProgress",props:{color:{defaultValue:{value:"undefined"},description:"",name:"color",required:!1,type:{name:"any"}},value:{defaultValue:{value:"undefined"},description:"",name:"value",required:!1,type:{name:"any"}},showProgress:{defaultValue:{value:"true"},description:"",name:"showProgress",required:!1,type:{name:"any"}},thickness:{defaultValue:{value:"undefined"},description:"",name:"thickness",required:!1,type:{name:"any"}},size:{defaultValue:{value:"undefined"},description:"",name:"size",required:!1,type:{name:"any"}},disableShrink:{defaultValue:{value:"undefined"},description:"",name:"disableShrink",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Progress/CircularProgress/CircularProgress.tsx#CircularProgress"]={docgenInfo:CircularProgress_CircularProgress.__docgenInfo,name:"CircularProgress",path:"src/components/Progress/CircularProgress/CircularProgress.tsx#CircularProgress"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Tooltip/Tooltip.consts.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{J:()=>TOOLTIP_PLACEMENTS});const TOOLTIP_PLACEMENTS=["bottom-end","bottom-start","bottom","left-end","left-start","left","right-end","right-start","right","top-end","top-start","top"]},"./src/components/Tooltip/Tooltip.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>Tooltip_Tooltip});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),react_is=__webpack_require__("./node_modules/react-is/index.js"),Zoom=__webpack_require__("./node_modules/@mui/material/Zoom/Zoom.js"),Tooltip=__webpack_require__("./node_modules/@mui/material/Tooltip/Tooltip.js");const Tooltip_styled_Zoom=Zoom.Z,Tooltip_styled_Tooltip=Tooltip.Z;try{Tooltip_styled_Zoom.displayName="Zoom",Tooltip_styled_Zoom.__docgenInfo={description:"",displayName:"Zoom",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tooltip/Tooltip.styled.tsx#Zoom"]={docgenInfo:Tooltip_styled_Zoom.__docgenInfo,name:"Zoom",path:"src/components/Tooltip/Tooltip.styled.tsx#Zoom"})}catch(__react_docgen_typescript_loader_error){}try{Tooltip_styled_Tooltip.displayName="Tooltip",Tooltip_styled_Tooltip.__docgenInfo={description:"",displayName:"Tooltip",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tooltip/Tooltip.styled.tsx#Tooltip"]={docgenInfo:Tooltip_styled_Tooltip.__docgenInfo,name:"Tooltip",path:"src/components/Tooltip/Tooltip.styled.tsx#Tooltip"})}catch(__react_docgen_typescript_loader_error){}var __rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};const MyCustomChildrenComponent=_a=>{var{innerRef,children}=_a,props=__rest(_a,["innerRef","children"]);return react.createElement("div",Object.assign({},props,{ref:innerRef,style:{width:"max-content"}}),children)},CustomChildTooltipWrapper=(0,react.forwardRef)((function WrappedMyComponent(props,ref){return react.createElement(MyCustomChildrenComponent,Object.assign({},props,{innerRef:ref}))}));try{CustomChildTooltipWrapper.displayName="CustomChildTooltipWrapper",CustomChildTooltipWrapper.__docgenInfo={description:"",displayName:"CustomChildTooltipWrapper",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tooltip/Tooltip.helper.tsx#CustomChildTooltipWrapper"]={docgenInfo:CustomChildTooltipWrapper.__docgenInfo,name:"CustomChildTooltipWrapper",path:"src/components/Tooltip/Tooltip.helper.tsx#CustomChildTooltipWrapper"})}catch(__react_docgen_typescript_loader_error){}var Tooltip_consts=__webpack_require__("./src/components/Tooltip/Tooltip.consts.ts"),Tooltip_rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};function Tooltip_Tooltip(_a){var{title,placement,followCursor,bgcolor,color,fontSize,lineHeight,children}=_a,props=Tooltip_rest(_a,["title","placement","followCursor","bgcolor","color","fontSize","lineHeight","children"]);return title&&(0,react.isValidElement)(children)?react.createElement(Tooltip_styled_Tooltip,Object.assign({TransitionComponent:Tooltip_styled_Zoom,title,arrow:!0,followCursor,placement,componentsProps:{tooltip:{sx:{bgcolor,color,fontSize,lineHeight,"& .MuiTooltip-arrow":{color:bgcolor}}}}},props),(0,react_is.isForwardRef)(children)?children:react.createElement(CustomChildTooltipWrapper,null,children)):children}Tooltip_Tooltip.propTypes={title:prop_types_default().string,placement:prop_types_default().oneOf(Tooltip_consts.J),followCursor:prop_types_default().bool,bgcolor:prop_types_default().string,color:prop_types_default().string,fontSize:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().number]),lineHeight:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().number])},Tooltip_Tooltip.defaultProps={title:void 0,placement:"bottom",followCursor:void 0,bgcolor:void 0,color:void 0,fontSize:16,lineHeight:1.2};try{Tooltip_Tooltip.displayName="Tooltip",Tooltip_Tooltip.__docgenInfo={description:"",displayName:"Tooltip",props:{title:{defaultValue:{value:"undefined"},description:"",name:"title",required:!1,type:{name:"any"}},placement:{defaultValue:{value:"bottom"},description:"",name:"placement",required:!1,type:{name:"any"}},followCursor:{defaultValue:{value:"undefined"},description:"",name:"followCursor",required:!1,type:{name:"any"}},bgcolor:{defaultValue:{value:"undefined"},description:"",name:"bgcolor",required:!1,type:{name:"any"}},color:{defaultValue:{value:"undefined"},description:"",name:"color",required:!1,type:{name:"any"}},fontSize:{defaultValue:{value:"16"},description:"",name:"fontSize",required:!1,type:{name:"any"}},lineHeight:{defaultValue:{value:"1.2"},description:"",name:"lineHeight",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tooltip/Tooltip.tsx#Tooltip"]={docgenInfo:Tooltip_Tooltip.__docgenInfo,name:"Tooltip",path:"src/components/Tooltip/Tooltip.tsx#Tooltip"})}catch(__react_docgen_typescript_loader_error){}},"./src/utils/helpers.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$K:()=>isDefined,Ek:()=>useCustomColor,F2:()=>generatePassword,_f:()=>numberToPx,_v:()=>sleep,im:()=>getCapitalLetters,mY:()=>getTextWidth,q4:()=>getCustomColor,u_:()=>stringToColor,vQ:()=>copyToClipboard});var lodash_es__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/lodash-es/get.js"),_mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mui/system/esm/colorManipulator.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@mui/material/styles/useTheme.js");const toHex=__webpack_require__("./node_modules/colornames/index.js");function getCapitalLetters(str){var _a;const chars=null!==(_a=null==str?void 0:str.split(" ").filter((v=>!!v)).map((word=>word[0].toUpperCase())))&&void 0!==_a?_a:void 0;if(!chars)return;const[firstChar,secondChar]=[null==chars?void 0:chars[0],null==chars?void 0:chars.slice(-1)];return chars.length>1?[firstChar,secondChar]:[firstChar]}function stringToColor(string){if(!string)return;let i,hash=0;for(i=0;i<string.length;i+=1)hash=string.charCodeAt(i)+((hash<<5)-hash);let color="#";for(i=0;i<3;i+=1){color+=`00${(hash>>8*i&255).toString(16)}`.slice(-2)}return color}function numberToPx(field){return"number"==typeof field?`${field}px`:field}function isDefined(value){return null!=value}function useCustomColor(color,options){return getCustomColor({theme:(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_0__.Z)(),customColor:color},options)}function getCustomColor(props,{field,muiLevel="main",opacity=1,darken:_darken,lighten:_lighten}={}){var _a,_b,_c,_d;const customColor=null!==(_a=null==props?void 0:props[field])&&void 0!==_a?_a:null==props?void 0:props.customColor;if(!customColor)return[];if(Array.isArray(customColor))return customColor;if("inherit"===customColor)return[void 0,"inherit"];let color=null!==(_d=null!==(_c=null!==(_b=(0,lodash_es__WEBPACK_IMPORTED_MODULE_1__.Z)(props,`theme.palette.${customColor}.${muiLevel}`))&&void 0!==_b?_b:(0,lodash_es__WEBPACK_IMPORTED_MODULE_1__.Z)(props,`theme.palette.${customColor}`))&&void 0!==_c?_c:toHex(customColor))&&void 0!==_d?_d:customColor;if(!isValidColor(color))return[];const isMuiColor=color&&color!==customColor;return color=isDefined(opacity)?(0,_mui_material__WEBPACK_IMPORTED_MODULE_2__.Fq)(color,opacity):color,color=isDefined(_darken)?(0,_mui_material__WEBPACK_IMPORTED_MODULE_2__._j)(color,_darken):color,color=isDefined(_lighten)?(0,_mui_material__WEBPACK_IMPORTED_MODULE_2__.$n)(color,_lighten):color,[color,isMuiColor?customColor:void 0]}const isValidColor=color=>CSS.supports("color",color),copyToClipboard=value=>{if(!value)return!1;const textField=document.createElement("textarea");return textField.innerText=value,document.body.appendChild(textField),textField.select(),document.execCommand("copy"),textField.remove(),!0},NUMBERS="0123456789",LOWERCASE="abcdefghijklmnopqrstuvwxyz",UPPERCASE="ABCDEFGHIJKLMNOPQRSTUVWXYZ",SYMBOL="!@#$%^&*()";function generatePassword({length=12,numbers=!0,lowercase=!0,uppercase=!0,symbol=!0}={}){const chars=[numbers&&NUMBERS,lowercase&&LOWERCASE,uppercase&&UPPERCASE,symbol&&SYMBOL].filter(Boolean).join("");let password="";for(let i=0;i<=length;i++){const randomNumber=Math.floor(Math.random()*chars.length);password+=chars.substring(randomNumber,randomNumber+1)}return password}function sleep(delay=0){return new Promise((resolve=>setTimeout(resolve,delay)))}function getTextWidth(text){const element=document.createElement("span");element.textContent=text,document.body.appendChild(element);const{offsetWidth,scrollWidth}=element;return element.parentElement.removeChild(element),{offsetWidth,scrollWidth}}}}]);
//# sourceMappingURL=components-Dialog-__stories__-Dialog-stories.d1580f37.iframe.bundle.js.map