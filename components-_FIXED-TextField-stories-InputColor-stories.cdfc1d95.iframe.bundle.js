"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[2533],{"./src/components/_FIXED/TextField/stories/InputColor.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AlignActions:()=>AlignActions,AlignActionsExternal:()=>AlignActionsExternal,AutoComplete:()=>AutoComplete,CmpSpacing:()=>CmpSpacing,ColorActive:()=>ColorActive,ColorLabel:()=>ColorLabel,ColorText:()=>ColorText,CopyAction:()=>CopyAction,CopyIcon:()=>CopyIcon,CopyMessage:()=>CopyMessage,DebounceDelay:()=>DebounceDelay,Default:()=>Default,Direction:()=>Direction,Disabled:()=>Disabled,EndCmpExternal_:()=>EndCmpExternal_,EndCmp_:()=>EndCmp_,Error:()=>Error,Focused:()=>Focused,FullWidth:()=>FullWidth,HelperText:()=>HelperText,HideStartActionsOnEmpty_:()=>HideStartActionsOnEmpty_,Label:()=>Label,Margin_:()=>Margin_,OnChangeColor:()=>OnChangeColor,OpacityAction:()=>OpacityAction,OpacityIcon:()=>OpacityIcon,OpacityLabel:()=>OpacityLabel,ReadOnly:()=>ReadOnly,Required:()=>Required,Rows:()=>Rows,StartCmpExternal_:()=>StartCmpExternal_,StartCmp_:()=>StartCmp_,Value:()=>Value,Variant_:()=>Variant_,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,maxRows:()=>maxRows});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_icons_material__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/icons-material/esm/Send.js"),_mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),_InputColor__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/_FIXED/TextField/InputColor.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Inputs/Inputs/InputColor",component:_InputColor__WEBPACK_IMPORTED_MODULE_1__.A,tags:["autodocs"]},render=args=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(args.value);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputColor__WEBPACK_IMPORTED_MODULE_1__.A,{...args,value,onChange:e=>{args.onChange?.(e),setValue(e.target.value)}})},Default={args:{},render},Direction={args:{label:"RTL Direction",direction:"rtl",value:"right to left direction"},render},AlignActions={args:{alignActions:"flex-start",startCmp:"Email",endCmp:"Fingerprint",label:"Align Actions",value:"#F0F0F0"},render},AlignActionsExternal={args:{alignActions:"flex-start",startCmpExternal:"Email",endCmpExternal:"Fingerprint",label:"Align Actions External",value:"#F0F0F0"},render},AutoComplete={args:{autoComplete:"email",name:"email",label:"Auto Complete"},render},CmpSpacing={args:{alignActions:"flex-start",startCmp:"Email",endCmp:"Fingerprint",cmpSpacing:6,label:"Cmp Spacing",value:"#F0F0F0"},render},ColorActive={args:{colorActive:"warning",label:"Color Active",value:"#F0F0F0"},render},ColorLabel={args:{colorLabel:"success",label:"Color Label",value:"#F0F0F0"},render},ColorText={args:{colorText:"#D10DAA",label:"Color Text",value:"#F0F0F0"},render},Disabled={args:{colorText:"#D10DAA",label:"Disabled",value:"#F0F0F0",disabled:!0},render},EndCmp_=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__.A,{spacing:3},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputColor__WEBPACK_IMPORTED_MODULE_1__.A,{...args,endCmp:"Send",label:"End Cmp",value:"#ff0f0f"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputColor__WEBPACK_IMPORTED_MODULE_1__.A,{...args,endCmp:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_3__.A,null),label:"End Cmp",value:"#ff0f0f"})),EndCmpExternal_=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__.A,{spacing:3},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputColor__WEBPACK_IMPORTED_MODULE_1__.A,{...args,endCmpExternal:"Send",label:"End Cmp External",value:"#ff0f0f"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputColor__WEBPACK_IMPORTED_MODULE_1__.A,{...args,endCmpExternal:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_3__.A,null),label:"End Cmp External",value:"#ff0f0f"})),Error={args:{error:!0,label:"With Error",value:"#F0F0F0"},render},Focused={args:{focused:!0,label:"Focused",value:"#F0F0F0"},render},FullWidth={args:{fullWidth:!1,label:"Not FullWidth",value:"#F0F0F0"},render},HelperText={args:{helperText:"some helperText",label:"HelperText",value:"#F0F0F0"},render},HideStartActionsOnEmpty_=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__.A,{spacing:3},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputColor__WEBPACK_IMPORTED_MODULE_1__.A,{...args,hideStartActionsOnEmpty:!0,startCmp:"Send",endCmp:"Fingerprint",label:"Hide Start Actions OnEmpty"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputColor__WEBPACK_IMPORTED_MODULE_1__.A,{...args,hideStartActionsOnEmpty:!1,startCmp:"Send",endCmp:"Fingerprint",label:"Not Hide Start Actions OnEmpty"})),Label={args:{label:"Some Label Input"},render},Margin_=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__.A,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{backgroundColor:"#8d8773",textAlign:"center"}},"some text for see the margin"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputColor__WEBPACK_IMPORTED_MODULE_1__.A,{...args,label:"None Margin"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{backgroundColor:"#8d8773",textAlign:"center"}},"some text for see the margin"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputColor__WEBPACK_IMPORTED_MODULE_1__.A,{...args,margin:"normal",label:"Normal Margin"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{backgroundColor:"#8d8773",textAlign:"center"}},"some text for see the margin"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputColor__WEBPACK_IMPORTED_MODULE_1__.A,{...args,margin:"dense",label:"Dense Margin"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{backgroundColor:"#8d8773",textAlign:"center"}},"some text for see the margin")),maxRows={args:{maxRows:3,label:"MaxRows 3"},render},OnChangeColor={args:{label:"color field state",value:""},render},DebounceDelay={args:{label:"Debounce Delay",debounceDelay:400,value:"warning.main"},render},ReadOnly={args:{readOnly:!0,label:"Read Only",value:"secondary"},render},Required={args:{required:!0,label:"Required field"},render},Rows={args:{rows:3,label:"Rows 3"},render},StartCmp_=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__.A,{spacing:3},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputColor__WEBPACK_IMPORTED_MODULE_1__.A,{...args,startCmp:"Send",label:"Start Cmp",value:"#ff0f0f"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputColor__WEBPACK_IMPORTED_MODULE_1__.A,{...args,startCmp:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_3__.A,null),label:"Start Cmp",value:"#ff0f0f"})),StartCmpExternal_=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__.A,{spacing:3},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputColor__WEBPACK_IMPORTED_MODULE_1__.A,{...args,startCmpExternal:"Send",label:"Start Cmp External",value:"#ff0f0f"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputColor__WEBPACK_IMPORTED_MODULE_1__.A,{...args,startCmpExternal:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_3__.A,null),label:"Start Cmp External",value:"#ff0f0f"})),Value={args:{value:"#F0F0F0"},render},Variant_=args=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("#ff0f0f");return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__.A,{spacing:3},["filled","outlined","standard"].map((variant=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputColor__WEBPACK_IMPORTED_MODULE_1__.A,{...args,key:variant,variant,label:`${variant} variant`,value,onChange:e=>setValue(e.target.value)}))))},CopyMessage={args:{copyMessage:"Hi copy you color to clipboard"},render},OpacityAction={args:{opacityAction:!1},render},OpacityLabel={args:{opacityAction:!0,opacityLabel:"Change color opacity action"},render},OpacityIcon={args:{opacityAction:!0,opacityIcon:"AcUnit"},render},CopyAction={args:{copyAction:!1,value:""},render},CopyIcon={args:{copyAction:!0,copyIcon:"ContentCut"},render},__namedExportsOrder=["Default","Direction","AlignActions","AlignActionsExternal","AutoComplete","CmpSpacing","ColorActive","ColorLabel","ColorText","Disabled","EndCmp_","EndCmpExternal_","Error","Focused","FullWidth","HelperText","HideStartActionsOnEmpty_","Label","Margin_","maxRows","OnChangeColor","DebounceDelay","ReadOnly","Required","Rows","StartCmp_","StartCmpExternal_","Value","Variant_","CopyMessage","OpacityAction","OpacityLabel","OpacityIcon","CopyAction","CopyIcon"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {},\n  render\n}",...Default.parameters?.docs?.source}}},Direction.parameters={...Direction.parameters,docs:{...Direction.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'RTL Direction',\n    direction: 'rtl',\n    value: 'right to left direction'\n  },\n  render\n}",...Direction.parameters?.docs?.source}}},AlignActions.parameters={...AlignActions.parameters,docs:{...AlignActions.parameters?.docs,source:{originalSource:"{\n  args: {\n    alignActions: 'flex-start',\n    startCmp: 'Email',\n    endCmp: 'Fingerprint',\n    label: 'Align Actions',\n    value: '#F0F0F0'\n  },\n  render\n}",...AlignActions.parameters?.docs?.source}}},AlignActionsExternal.parameters={...AlignActionsExternal.parameters,docs:{...AlignActionsExternal.parameters?.docs,source:{originalSource:"{\n  args: {\n    alignActions: 'flex-start',\n    startCmpExternal: 'Email',\n    endCmpExternal: 'Fingerprint',\n    label: 'Align Actions External',\n    value: '#F0F0F0'\n  },\n  render\n}",...AlignActionsExternal.parameters?.docs?.source}}},AutoComplete.parameters={...AutoComplete.parameters,docs:{...AutoComplete.parameters?.docs,source:{originalSource:"{\n  args: {\n    autoComplete: 'email',\n    name: 'email',\n    label: 'Auto Complete'\n  },\n  render\n}",...AutoComplete.parameters?.docs?.source}}},CmpSpacing.parameters={...CmpSpacing.parameters,docs:{...CmpSpacing.parameters?.docs,source:{originalSource:"{\n  args: {\n    alignActions: 'flex-start',\n    startCmp: 'Email',\n    endCmp: 'Fingerprint',\n    cmpSpacing: 6,\n    label: 'Cmp Spacing',\n    value: '#F0F0F0'\n  },\n  render\n}",...CmpSpacing.parameters?.docs?.source}}},ColorActive.parameters={...ColorActive.parameters,docs:{...ColorActive.parameters?.docs,source:{originalSource:"{\n  args: {\n    colorActive: 'warning',\n    label: 'Color Active',\n    value: '#F0F0F0'\n  },\n  render\n}",...ColorActive.parameters?.docs?.source}}},ColorLabel.parameters={...ColorLabel.parameters,docs:{...ColorLabel.parameters?.docs,source:{originalSource:"{\n  args: {\n    colorLabel: 'success',\n    label: 'Color Label',\n    value: '#F0F0F0'\n  },\n  render\n}",...ColorLabel.parameters?.docs?.source}}},ColorText.parameters={...ColorText.parameters,docs:{...ColorText.parameters?.docs,source:{originalSource:"{\n  args: {\n    colorText: '#D10DAA',\n    label: 'Color Text',\n    value: '#F0F0F0'\n  },\n  render\n}",...ColorText.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    colorText: '#D10DAA',\n    label: 'Disabled',\n    value: '#F0F0F0',\n    disabled: true\n  },\n  render\n}",...Disabled.parameters?.docs?.source}}},EndCmp_.parameters={...EndCmp_.parameters,docs:{...EndCmp_.parameters?.docs,source:{originalSource:'(args): ReactElement | React.ReactNode => <Stack spacing={3}>\n        <InputColor {...args} endCmp="Send" label="End Cmp" value={\'#ff0f0f\'} />\n        <InputColor {...args} endCmp={<SendIcon />} label="End Cmp" value={\'#ff0f0f\'} />\n    </Stack>',...EndCmp_.parameters?.docs?.source}}},EndCmpExternal_.parameters={...EndCmpExternal_.parameters,docs:{...EndCmpExternal_.parameters?.docs,source:{originalSource:'(args): ReactElement | React.ReactNode => <Stack spacing={3}>\n        <InputColor {...args} endCmpExternal="Send" label="End Cmp External" value={\'#ff0f0f\'} />\n        <InputColor {...args} endCmpExternal={<SendIcon />} label="End Cmp External" value={\'#ff0f0f\'} />\n    </Stack>',...EndCmpExternal_.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:"{\n  args: {\n    error: true,\n    label: 'With Error',\n    value: '#F0F0F0'\n  },\n  render\n}",...Error.parameters?.docs?.source}}},Focused.parameters={...Focused.parameters,docs:{...Focused.parameters?.docs,source:{originalSource:"{\n  args: {\n    focused: true,\n    label: 'Focused',\n    value: '#F0F0F0'\n  },\n  render\n}",...Focused.parameters?.docs?.source}}},FullWidth.parameters={...FullWidth.parameters,docs:{...FullWidth.parameters?.docs,source:{originalSource:"{\n  args: {\n    fullWidth: false,\n    label: 'Not FullWidth',\n    value: '#F0F0F0'\n  },\n  render\n}",...FullWidth.parameters?.docs?.source}}},HelperText.parameters={...HelperText.parameters,docs:{...HelperText.parameters?.docs,source:{originalSource:"{\n  args: {\n    helperText: 'some helperText',\n    label: 'HelperText',\n    value: '#F0F0F0'\n  },\n  render\n}",...HelperText.parameters?.docs?.source}}},HideStartActionsOnEmpty_.parameters={...HideStartActionsOnEmpty_.parameters,docs:{...HideStartActionsOnEmpty_.parameters?.docs,source:{originalSource:'(args): ReactElement | React.ReactNode => <Stack spacing={3}>\n        <InputColor {...args} hideStartActionsOnEmpty={true} startCmp="Send" endCmp="Fingerprint" label="Hide Start Actions OnEmpty" />\n        <InputColor {...args} hideStartActionsOnEmpty={false} startCmp="Send" endCmp="Fingerprint" label="Not Hide Start Actions OnEmpty" />\n    </Stack>',...HideStartActionsOnEmpty_.parameters?.docs?.source}}},Label.parameters={...Label.parameters,docs:{...Label.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Some Label Input'\n  },\n  render\n}",...Label.parameters?.docs?.source}}},Margin_.parameters={...Margin_.parameters,docs:{...Margin_.parameters?.docs,source:{originalSource:"(args): ReactElement | React.ReactNode => <Stack>\n        <div style={{\n    backgroundColor: '#8d8773',\n    textAlign: 'center'\n  }}>some text for see the margin</div>\n        <InputColor {...args} label=\"None Margin\" />\n        <div style={{\n    backgroundColor: '#8d8773',\n    textAlign: 'center'\n  }}>some text for see the margin</div>\n        <InputColor {...args} margin=\"normal\" label=\"Normal Margin\" />\n        <div style={{\n    backgroundColor: '#8d8773',\n    textAlign: 'center'\n  }}>some text for see the margin</div>\n        <InputColor {...args} margin=\"dense\" label=\"Dense Margin\" />\n        <div style={{\n    backgroundColor: '#8d8773',\n    textAlign: 'center'\n  }}>some text for see the margin</div>\n    </Stack>",...Margin_.parameters?.docs?.source}}},maxRows.parameters={...maxRows.parameters,docs:{...maxRows.parameters?.docs,source:{originalSource:"{\n  args: {\n    maxRows: 3,\n    label: 'MaxRows 3'\n  },\n  render\n}",...maxRows.parameters?.docs?.source}}},OnChangeColor.parameters={...OnChangeColor.parameters,docs:{...OnChangeColor.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'color field state',\n    value: ''\n  },\n  render\n}",...OnChangeColor.parameters?.docs?.source}}},DebounceDelay.parameters={...DebounceDelay.parameters,docs:{...DebounceDelay.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Debounce Delay',\n    debounceDelay: 400,\n    value: 'warning.main'\n  },\n  render\n}",...DebounceDelay.parameters?.docs?.source}}},ReadOnly.parameters={...ReadOnly.parameters,docs:{...ReadOnly.parameters?.docs,source:{originalSource:"{\n  args: {\n    readOnly: true,\n    label: 'Read Only',\n    value: 'secondary'\n  },\n  render\n}",...ReadOnly.parameters?.docs?.source}}},Required.parameters={...Required.parameters,docs:{...Required.parameters?.docs,source:{originalSource:"{\n  args: {\n    required: true,\n    label: 'Required field'\n  },\n  render\n}",...Required.parameters?.docs?.source}}},Rows.parameters={...Rows.parameters,docs:{...Rows.parameters?.docs,source:{originalSource:"{\n  args: {\n    rows: 3,\n    label: 'Rows 3'\n  },\n  render\n}",...Rows.parameters?.docs?.source}}},StartCmp_.parameters={...StartCmp_.parameters,docs:{...StartCmp_.parameters?.docs,source:{originalSource:'(args): ReactElement | React.ReactNode => <Stack spacing={3}>\n        <InputColor {...args} startCmp="Send" label="Start Cmp" value={\'#ff0f0f\'} />\n        <InputColor {...args} startCmp={<SendIcon />} label="Start Cmp" value={\'#ff0f0f\'} />\n    </Stack>',...StartCmp_.parameters?.docs?.source}}},StartCmpExternal_.parameters={...StartCmpExternal_.parameters,docs:{...StartCmpExternal_.parameters?.docs,source:{originalSource:'(args): ReactElement | React.ReactNode => <Stack spacing={3}>\n        <InputColor {...args} startCmpExternal="Send" label="Start Cmp External" value={\'#ff0f0f\'} />\n        <InputColor {...args} startCmpExternal={<SendIcon />} label="Start Cmp External" value={\'#ff0f0f\'} />\n    </Stack>',...StartCmpExternal_.parameters?.docs?.source}}},Value.parameters={...Value.parameters,docs:{...Value.parameters?.docs,source:{originalSource:"{\n  args: {\n    value: '#F0F0F0'\n  },\n  render\n}",...Value.parameters?.docs?.source}}},Variant_.parameters={...Variant_.parameters,docs:{...Variant_.parameters?.docs,source:{originalSource:"(args): ReactElement | React.ReactNode => {\n  const [value, setValue] = useState('#ff0f0f');\n  return <Stack spacing={3}>\n            {['filled', 'outlined', 'standard'].map(variant => <InputColor {...args} key={variant} variant={variant} label={`${variant} variant`} value={value} onChange={e => setValue(e.target.value)} />)}\n        </Stack>;\n}",...Variant_.parameters?.docs?.source}}},CopyMessage.parameters={...CopyMessage.parameters,docs:{...CopyMessage.parameters?.docs,source:{originalSource:"{\n  args: {\n    copyMessage: 'Hi copy you color to clipboard'\n  },\n  render\n}",...CopyMessage.parameters?.docs?.source}}},OpacityAction.parameters={...OpacityAction.parameters,docs:{...OpacityAction.parameters?.docs,source:{originalSource:"{\n  args: {\n    opacityAction: false\n  },\n  render\n}",...OpacityAction.parameters?.docs?.source}}},OpacityLabel.parameters={...OpacityLabel.parameters,docs:{...OpacityLabel.parameters?.docs,source:{originalSource:"{\n  args: {\n    opacityAction: true,\n    opacityLabel: 'Change color opacity action'\n  },\n  render\n}",...OpacityLabel.parameters?.docs?.source}}},OpacityIcon.parameters={...OpacityIcon.parameters,docs:{...OpacityIcon.parameters?.docs,source:{originalSource:"{\n  args: {\n    opacityAction: true,\n    opacityIcon: 'AcUnit'\n  },\n  render\n}",...OpacityIcon.parameters?.docs?.source}}},CopyAction.parameters={...CopyAction.parameters,docs:{...CopyAction.parameters?.docs,source:{originalSource:"{\n  args: {\n    copyAction: false,\n    value: ''\n  },\n  render\n}",...CopyAction.parameters?.docs?.source}}},CopyIcon.parameters={...CopyIcon.parameters,docs:{...CopyIcon.parameters?.docs,source:{originalSource:"{\n  args: {\n    copyAction: true,\n    copyIcon: 'ContentCut'\n  },\n  render\n}",...CopyIcon.parameters?.docs?.source}}}}}]);