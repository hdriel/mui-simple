"use strict";(self.webpackChunkmui_simple=self.webpackChunkmui_simple||[]).push([[6166],{"./src/components/_FIXED/Menu/__stories__/Menu.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AlternativeContent:()=>AlternativeContent,AnchorElementRef:()=>AnchorElementRef,AnchorPosition:()=>AnchorPosition,Arrow:()=>Arrow,BoundChildrenId:()=>BoundChildrenId,Default:()=>Default,Dense:()=>Dense,DisableRipple:()=>DisableRipple,DisableScrollLock:()=>DisableScrollLock,Elevation:()=>Elevation,Height:()=>Height,MaxHeight:()=>MaxHeight,Options:()=>Options,OptionsDirectionRow:()=>OptionsDirectionRow,Width:()=>Width,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v,_w,_x,_y,_z,_0,_1,_2,_3,_4,_5,_6,_7,_8,_9,_10,_11,_12,_13,_14,_15,_16,_17,_18,_19,_20,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),mui_image__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/mui-image/es/index.js"),_mui_material__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),_mui_material__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),_Menu__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/_FIXED/Menu/Menu.tsx"),_Button_Button__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/_FIXED/Button/Button.tsx"),_ToggleButtonGroup_ToggleButtonGroup__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.tsx"),_Menu_mocks__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/_FIXED/Menu/__stories__/Menu.mocks.tsx");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const __WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:"import React, { useRef, useState } from 'react';\nimport { Image as MuiImage } from 'mui-image';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport { Box, Stack } from '@mui/material';\nimport Menu, { MenuOption } from '../Menu';\nimport Button from '../../Button/Button';\nimport ToggleButtonGroup from '../../ToggleButtonGroup/ToggleButtonGroup';\nimport { shortcutOptions, optionLongList, options } from './Menu.mocks';\nconst meta: Meta<typeof Menu> = {\n  title: 'Navigation/Menu',\n  component: Menu,\n  tags: ['autodocs']\n};\nexport default meta;\ntype Story = StoryObj<typeof Menu>;\nexport const Default: Story = {\n  args: {\n    options\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\n            </Menu>;\n  }\n};\nexport const AlternativeContent: Story = {\n  args: {\n    options,\n    alternativeContent: <MuiImage src=\"1.jpg\" width={400} height={400} />\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\n            </Menu>;\n  }\n};\nexport const AnchorElementRef: Story = {\n  args: {\n    options\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const ref = useRef();\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Box sx={{\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    }}>\n                <Menu {...args} open={open} onClose={onCloseHandler} anchorElementRef={ref}>\n                    <Button onClick={() => setOpen(true)}>Open Menu</Button>\n                </Menu>\n                <span ref={ref}>Menu will popup here</span>\n            </Box>;\n  }\n};\nexport const AnchorPosition: Story = {\n  args: {\n    options,\n    anchorPosition: {\n      vertical: 'top',\n      horizontal: 'right'\n    }\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\n            </Menu>;\n  }\n};\nexport const Arrow: Story = {\n  args: {\n    options,\n    arrow: true\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\n            </Menu>;\n  }\n};\nexport const BoundChildrenId: Story = {\n  args: {\n    options: options.slice(0, -2)\n  },\n  render: args => {\n    const [id, setId] = useState('b1');\n    return <Stack spacing={5}>\n                <ToggleButtonGroup exclusive enforceValueSet value={id} onChange={(event, newId) => setId((newId as string))} data={[{\n        value: 'b1',\n        component: 'btn 1'\n      }, {\n        value: 'b2',\n        component: 'btn 2'\n      }, {\n        value: 'b3',\n        component: 'btn 3'\n      }]} />\n\n                <Box sx={{\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }}>\n                    <Menu {...args} boundChildrenId={id} optionsDirection=\"row\">\n                        <Button id=\"b1\">Button 1</Button>\n                        <Button id=\"b2\">Button 2</Button>\n                        <Button id=\"b3\">Button 3</Button>\n                    </Menu>\n                </Box>\n            </Stack>;\n  }\n};\nexport const Dense: Story = {\n  args: {\n    options,\n    dense: true\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\n            </Menu>;\n  }\n};\nexport const DisableRipple: Story = {\n  args: {\n    options,\n    disableRipple: true\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\n            </Menu>;\n  }\n};\nexport const Elevation: Story = {\n  args: {\n    options,\n    elevation: 0\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\n            </Menu>;\n  }\n};\nexport const Height: Story = {\n  args: {\n    options: optionLongList,\n    height: 400\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\n            </Menu>;\n  }\n};\nexport const MaxHeight: Story = {\n  args: {\n    options: optionLongList,\n    maxHeight: 200\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\n            </Menu>;\n  }\n};\nexport const DisableScrollLock: Story = {\n  args: {\n    options: shortcutOptions,\n    disableScrollLock: true,\n    children: <Button>Open Menu</Button>\n  },\n  render: args => {\n    return <Menu {...args} open>\n                <Button>Open Menu</Button>\n            </Menu>;\n  }\n};\nexport const Width: Story = {\n  args: {\n    options: shortcutOptions,\n    maxHeight: 200,\n    open: true,\n    width: 300,\n    children: <Button>Open Menu</Button>\n  }\n};\nexport const Options: Story = {\n  args: {},\n  render: args => {\n    return <Box sx={{\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    }}>\n                <Menu {...args} open options={options.map(option => ({\n        ...option,\n        check: true\n      }))}>\n                    <Button>Checked List</Button>\n                </Menu>\n                <Menu {...args} open options={optionLongList}>\n                    <Button>String List</Button>\n                </Menu>\n                <Menu {...args} open options={shortcutOptions} width={200}>\n                    <Button>Shortcut & icons</Button>\n                </Menu>\n                <Menu {...args} open alternativeContent={<MuiImage src=\"1.jpg\" width={200} height={300} />}>\n                    <Button>Alternative Content</Button>\n                </Menu>\n            </Box>;\n  }\n};\nexport const OptionsDirectionRow: Story = {\n  args: {},\n  render: args => {\n    return <Menu {...args} open options={optionLongList} optionsDirection=\"row\">\n                <Button>String List</Button>\n            </Menu>;\n  }\n};\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...Default.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    options\\n  },\\n  render: args => {\\n    const [open, setOpen] = useState(false);\\n    const onCloseHandler = () => {\\n      setOpen(false);\\n      return true;\\n    };\\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\\n            </Menu>;\\n  }\\n}\",\n      ...Default.parameters?.docs?.source\n    }\n  }\n};\nAlternativeContent.parameters = {\n  ...AlternativeContent.parameters,\n  docs: {\n    ...AlternativeContent.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    options,\\n    alternativeContent: <MuiImage src=\\\"1.jpg\\\" width={400} height={400} />\\n  },\\n  render: args => {\\n    const [open, setOpen] = useState(false);\\n    const onCloseHandler = () => {\\n      setOpen(false);\\n      return true;\\n    };\\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\\n            </Menu>;\\n  }\\n}\",\n      ...AlternativeContent.parameters?.docs?.source\n    }\n  }\n};\nAnchorElementRef.parameters = {\n  ...AnchorElementRef.parameters,\n  docs: {\n    ...AnchorElementRef.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    options\\n  },\\n  render: args => {\\n    const [open, setOpen] = useState(false);\\n    const ref = useRef();\\n    const onCloseHandler = () => {\\n      setOpen(false);\\n      return true;\\n    };\\n    return <Box sx={{\\n      display: 'flex',\\n      justifyContent: 'space-between',\\n      alignItems: 'center'\\n    }}>\\n                <Menu {...args} open={open} onClose={onCloseHandler} anchorElementRef={ref}>\\n                    <Button onClick={() => setOpen(true)}>Open Menu</Button>\\n                </Menu>\\n                <span ref={ref}>Menu will popup here</span>\\n            </Box>;\\n  }\\n}\",\n      ...AnchorElementRef.parameters?.docs?.source\n    }\n  }\n};\nAnchorPosition.parameters = {\n  ...AnchorPosition.parameters,\n  docs: {\n    ...AnchorPosition.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    options,\\n    anchorPosition: {\\n      vertical: 'top',\\n      horizontal: 'right'\\n    }\\n  },\\n  render: args => {\\n    const [open, setOpen] = useState(false);\\n    const onCloseHandler = () => {\\n      setOpen(false);\\n      return true;\\n    };\\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\\n            </Menu>;\\n  }\\n}\",\n      ...AnchorPosition.parameters?.docs?.source\n    }\n  }\n};\nArrow.parameters = {\n  ...Arrow.parameters,\n  docs: {\n    ...Arrow.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    options,\\n    arrow: true\\n  },\\n  render: args => {\\n    const [open, setOpen] = useState(false);\\n    const onCloseHandler = () => {\\n      setOpen(false);\\n      return true;\\n    };\\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\\n            </Menu>;\\n  }\\n}\",\n      ...Arrow.parameters?.docs?.source\n    }\n  }\n};\nBoundChildrenId.parameters = {\n  ...BoundChildrenId.parameters,\n  docs: {\n    ...BoundChildrenId.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    options: options.slice(0, -2)\\n  },\\n  render: args => {\\n    const [id, setId] = useState('b1');\\n    return <Stack spacing={5}>\\n                <ToggleButtonGroup exclusive enforceValueSet value={id} onChange={(event, newId) => setId((newId as string))} data={[{\\n        value: 'b1',\\n        component: 'btn 1'\\n      }, {\\n        value: 'b2',\\n        component: 'btn 2'\\n      }, {\\n        value: 'b3',\\n        component: 'btn 3'\\n      }]} />\\n\\n                <Box sx={{\\n        display: 'flex',\\n        flexDirection: 'row',\\n        alignItems: 'center',\\n        justifyContent: 'space-between'\\n      }}>\\n                    <Menu {...args} boundChildrenId={id} optionsDirection=\\\"row\\\">\\n                        <Button id=\\\"b1\\\">Button 1</Button>\\n                        <Button id=\\\"b2\\\">Button 2</Button>\\n                        <Button id=\\\"b3\\\">Button 3</Button>\\n                    </Menu>\\n                </Box>\\n            </Stack>;\\n  }\\n}\",\n      ...BoundChildrenId.parameters?.docs?.source\n    }\n  }\n};\nDense.parameters = {\n  ...Dense.parameters,\n  docs: {\n    ...Dense.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    options,\\n    dense: true\\n  },\\n  render: args => {\\n    const [open, setOpen] = useState(false);\\n    const onCloseHandler = () => {\\n      setOpen(false);\\n      return true;\\n    };\\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\\n            </Menu>;\\n  }\\n}\",\n      ...Dense.parameters?.docs?.source\n    }\n  }\n};\nDisableRipple.parameters = {\n  ...DisableRipple.parameters,\n  docs: {\n    ...DisableRipple.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    options,\\n    disableRipple: true\\n  },\\n  render: args => {\\n    const [open, setOpen] = useState(false);\\n    const onCloseHandler = () => {\\n      setOpen(false);\\n      return true;\\n    };\\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\\n            </Menu>;\\n  }\\n}\",\n      ...DisableRipple.parameters?.docs?.source\n    }\n  }\n};\nElevation.parameters = {\n  ...Elevation.parameters,\n  docs: {\n    ...Elevation.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    options,\\n    elevation: 0\\n  },\\n  render: args => {\\n    const [open, setOpen] = useState(false);\\n    const onCloseHandler = () => {\\n      setOpen(false);\\n      return true;\\n    };\\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\\n            </Menu>;\\n  }\\n}\",\n      ...Elevation.parameters?.docs?.source\n    }\n  }\n};\nHeight.parameters = {\n  ...Height.parameters,\n  docs: {\n    ...Height.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    options: optionLongList,\\n    height: 400\\n  },\\n  render: args => {\\n    const [open, setOpen] = useState(false);\\n    const onCloseHandler = () => {\\n      setOpen(false);\\n      return true;\\n    };\\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\\n            </Menu>;\\n  }\\n}\",\n      ...Height.parameters?.docs?.source\n    }\n  }\n};\nMaxHeight.parameters = {\n  ...MaxHeight.parameters,\n  docs: {\n    ...MaxHeight.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    options: optionLongList,\\n    maxHeight: 200\\n  },\\n  render: args => {\\n    const [open, setOpen] = useState(false);\\n    const onCloseHandler = () => {\\n      setOpen(false);\\n      return true;\\n    };\\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\\n            </Menu>;\\n  }\\n}\",\n      ...MaxHeight.parameters?.docs?.source\n    }\n  }\n};\nDisableScrollLock.parameters = {\n  ...DisableScrollLock.parameters,\n  docs: {\n    ...DisableScrollLock.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    options: shortcutOptions,\\n    disableScrollLock: true,\\n    children: <Button>Open Menu</Button>\\n  },\\n  render: args => {\\n    return <Menu {...args} open>\\n                <Button>Open Menu</Button>\\n            </Menu>;\\n  }\\n}\",\n      ...DisableScrollLock.parameters?.docs?.source\n    }\n  }\n};\nWidth.parameters = {\n  ...Width.parameters,\n  docs: {\n    ...Width.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    options: shortcutOptions,\\n    maxHeight: 200,\\n    open: true,\\n    width: 300,\\n    children: <Button>Open Menu</Button>\\n  }\\n}\",\n      ...Width.parameters?.docs?.source\n    }\n  }\n};\nOptions.parameters = {\n  ...Options.parameters,\n  docs: {\n    ...Options.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {},\\n  render: args => {\\n    return <Box sx={{\\n      display: 'flex',\\n      flexDirection: 'row',\\n      alignItems: 'center',\\n      justifyContent: 'space-between'\\n    }}>\\n                <Menu {...args} open options={options.map(option => ({\\n        ...option,\\n        check: true\\n      }))}>\\n                    <Button>Checked List</Button>\\n                </Menu>\\n                <Menu {...args} open options={optionLongList}>\\n                    <Button>String List</Button>\\n                </Menu>\\n                <Menu {...args} open options={shortcutOptions} width={200}>\\n                    <Button>Shortcut & icons</Button>\\n                </Menu>\\n                <Menu {...args} open alternativeContent={<MuiImage src=\\\"1.jpg\\\" width={200} height={300} />}>\\n                    <Button>Alternative Content</Button>\\n                </Menu>\\n            </Box>;\\n  }\\n}\",\n      ...Options.parameters?.docs?.source\n    }\n  }\n};\nOptionsDirectionRow.parameters = {\n  ...OptionsDirectionRow.parameters,\n  docs: {\n    ...OptionsDirectionRow.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {},\\n  render: args => {\\n    return <Menu {...args} open options={optionLongList} optionsDirection=\\\"row\\\">\\n                <Button>String List</Button>\\n            </Menu>;\\n  }\\n}\",\n      ...OptionsDirectionRow.parameters?.docs?.source\n    }\n  }\n};",locationsMap:{default:{startLoc:{col:30,line:16},endLoc:{col:1,line:30},startBody:{col:30,line:16},endBody:{col:1,line:30}},"alternative-content":{startLoc:{col:41,line:31},endLoc:{col:1,line:46},startBody:{col:41,line:31},endBody:{col:1,line:46}},"anchor-element-ref":{startLoc:{col:39,line:47},endLoc:{col:1,line:69},startBody:{col:39,line:47},endBody:{col:1,line:69}},"anchor-position":{startLoc:{col:37,line:70},endLoc:{col:1,line:88},startBody:{col:37,line:70},endBody:{col:1,line:88}},arrow:{startLoc:{col:28,line:89},endLoc:{col:1,line:104},startBody:{col:28,line:89},endBody:{col:1,line:104}},"bound-children-id":{startLoc:{col:38,line:105},endLoc:{col:1,line:137},startBody:{col:38,line:105},endBody:{col:1,line:137}},dense:{startLoc:{col:28,line:138},endLoc:{col:1,line:153},startBody:{col:28,line:138},endBody:{col:1,line:153}},"disable-ripple":{startLoc:{col:36,line:154},endLoc:{col:1,line:169},startBody:{col:36,line:154},endBody:{col:1,line:169}},elevation:{startLoc:{col:32,line:170},endLoc:{col:1,line:185},startBody:{col:32,line:170},endBody:{col:1,line:185}},height:{startLoc:{col:29,line:186},endLoc:{col:1,line:201},startBody:{col:29,line:186},endBody:{col:1,line:201}},"max-height":{startLoc:{col:32,line:202},endLoc:{col:1,line:217},startBody:{col:32,line:202},endBody:{col:1,line:217}},"disable-scroll-lock":{startLoc:{col:40,line:218},endLoc:{col:1,line:229},startBody:{col:40,line:218},endBody:{col:1,line:229}},width:{startLoc:{col:28,line:230},endLoc:{col:1,line:238},startBody:{col:28,line:230},endBody:{col:1,line:238}},options:{startLoc:{col:30,line:239},endLoc:{col:1,line:265},startBody:{col:30,line:239},endBody:{col:1,line:265}},"options-direction-row":{startLoc:{col:42,line:266},endLoc:{col:1,line:273},startBody:{col:42,line:266},endBody:{col:1,line:273}}}}},title:"Navigation/Menu",component:_Menu__WEBPACK_IMPORTED_MODULE_2__.Z,tags:["autodocs"]};var Default={args:{options:_Menu_mocks__WEBPACK_IMPORTED_MODULE_5__.YM},render:function(args){var _a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),open=_a[0],setOpen=_a[1];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},args,{open,onClose:function(){return setOpen(!1),!0}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,{onClick:function(){return setOpen(!0)}},"Open Menu"))}},AlternativeContent={args:{options:_Menu_mocks__WEBPACK_IMPORTED_MODULE_5__.YM,alternativeContent:react__WEBPACK_IMPORTED_MODULE_0__.createElement(mui_image__WEBPACK_IMPORTED_MODULE_1__.E,{src:"1.jpg",width:400,height:400})},render:function(args){var _a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),open=_a[0],setOpen=_a[1];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},args,{open,onClose:function(){return setOpen(!1),!0}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,{onClick:function(){return setOpen(!0)}},"Open Menu"))}},AnchorElementRef={args:{options:_Menu_mocks__WEBPACK_IMPORTED_MODULE_5__.YM},render:function(args){var _a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),open=_a[0],setOpen=_a[1],ref=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__.Z,{sx:{display:"flex",justifyContent:"space-between",alignItems:"center"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},args,{open,onClose:function(){return setOpen(!1),!0},anchorElementRef:ref}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,{onClick:function(){return setOpen(!0)}},"Open Menu")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{ref},"Menu will popup here"))}},AnchorPosition={args:{options:_Menu_mocks__WEBPACK_IMPORTED_MODULE_5__.YM,anchorPosition:{vertical:"top",horizontal:"right"}},render:function(args){var _a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),open=_a[0],setOpen=_a[1];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},args,{open,onClose:function(){return setOpen(!1),!0}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,{onClick:function(){return setOpen(!0)}},"Open Menu"))}},Arrow={args:{options:_Menu_mocks__WEBPACK_IMPORTED_MODULE_5__.YM,arrow:!0},render:function(args){var _a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),open=_a[0],setOpen=_a[1];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},args,{open,onClose:function(){return setOpen(!1),!0}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,{onClick:function(){return setOpen(!0)}},"Open Menu"))}},BoundChildrenId={args:{options:_Menu_mocks__WEBPACK_IMPORTED_MODULE_5__.YM.slice(0,-2)},render:function(args){var _a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("b1"),id=_a[0],setId=_a[1];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_7__.Z,{spacing:5},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ToggleButtonGroup_ToggleButtonGroup__WEBPACK_IMPORTED_MODULE_4__.Z,{exclusive:!0,enforceValueSet:!0,value:id,onChange:function(event,newId){return setId(newId)},data:[{value:"b1",component:"btn 1"},{value:"b2",component:"btn 2"},{value:"b3",component:"btn 3"}]}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__.Z,{sx:{display:"flex",flexDirection:"row",alignItems:"center",justifyContent:"space-between"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},args,{boundChildrenId:id,optionsDirection:"row"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,{id:"b1"},"Button 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,{id:"b2"},"Button 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,{id:"b3"},"Button 3"))))}},Dense={args:{options:_Menu_mocks__WEBPACK_IMPORTED_MODULE_5__.YM,dense:!0},render:function(args){var _a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),open=_a[0],setOpen=_a[1];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},args,{open,onClose:function(){return setOpen(!1),!0}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,{onClick:function(){return setOpen(!0)}},"Open Menu"))}},DisableRipple={args:{options:_Menu_mocks__WEBPACK_IMPORTED_MODULE_5__.YM,disableRipple:!0},render:function(args){var _a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),open=_a[0],setOpen=_a[1];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},args,{open,onClose:function(){return setOpen(!1),!0}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,{onClick:function(){return setOpen(!0)}},"Open Menu"))}},Elevation={args:{options:_Menu_mocks__WEBPACK_IMPORTED_MODULE_5__.YM,elevation:0},render:function(args){var _a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),open=_a[0],setOpen=_a[1];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},args,{open,onClose:function(){return setOpen(!1),!0}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,{onClick:function(){return setOpen(!0)}},"Open Menu"))}},Height={args:{options:_Menu_mocks__WEBPACK_IMPORTED_MODULE_5__.E9,height:400},render:function(args){var _a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),open=_a[0],setOpen=_a[1];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},args,{open,onClose:function(){return setOpen(!1),!0}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,{onClick:function(){return setOpen(!0)}},"Open Menu"))}},MaxHeight={args:{options:_Menu_mocks__WEBPACK_IMPORTED_MODULE_5__.E9,maxHeight:200},render:function(args){var _a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),open=_a[0],setOpen=_a[1];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},args,{open,onClose:function(){return setOpen(!1),!0}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,{onClick:function(){return setOpen(!0)}},"Open Menu"))}},DisableScrollLock={args:{options:_Menu_mocks__WEBPACK_IMPORTED_MODULE_5__.JV,disableScrollLock:!0,children:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,null,"Open Menu")},render:function(args){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},args,{open:!0}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,null,"Open Menu"))}},Width={args:{options:_Menu_mocks__WEBPACK_IMPORTED_MODULE_5__.JV,maxHeight:200,open:!0,width:300,children:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,null,"Open Menu")}},Options={args:{},render:function(args){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__.Z,{sx:{display:"flex",flexDirection:"row",alignItems:"center",justifyContent:"space-between"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},args,{open:!0,options:_Menu_mocks__WEBPACK_IMPORTED_MODULE_5__.YM.map((function(option){return _objectSpread(_objectSpread({},option),{},{check:!0})}))}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,null,"Checked List")),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},args,{open:!0,options:_Menu_mocks__WEBPACK_IMPORTED_MODULE_5__.E9}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,null,"String List")),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},args,{open:!0,options:_Menu_mocks__WEBPACK_IMPORTED_MODULE_5__.JV,width:200}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,null,"Shortcut & icons")),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},args,{open:!0,alternativeContent:react__WEBPACK_IMPORTED_MODULE_0__.createElement(mui_image__WEBPACK_IMPORTED_MODULE_1__.E,{src:"1.jpg",width:200,height:300})}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,null,"Alternative Content")))}},OptionsDirectionRow={args:{},render:function(args){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},args,{open:!0,options:_Menu_mocks__WEBPACK_IMPORTED_MODULE_5__.E9,optionsDirection:"row"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.Z,null,"String List"))}};Default.parameters=_objectSpread(_objectSpread({},Default.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_a=Default.parameters)||void 0===_a?void 0:_a.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    options\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\n            </Menu>;\n  }\n}"},null===(_c=null===(_b=Default.parameters)||void 0===_b?void 0:_b.docs)||void 0===_c?void 0:_c.source)})}),AlternativeContent.parameters=_objectSpread(_objectSpread({},AlternativeContent.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_d=AlternativeContent.parameters)||void 0===_d?void 0:_d.docs),{},{source:_objectSpread({originalSource:'{\n  args: {\n    options,\n    alternativeContent: <MuiImage src="1.jpg" width={400} height={400} />\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\n            </Menu>;\n  }\n}'},null===(_f=null===(_e=AlternativeContent.parameters)||void 0===_e?void 0:_e.docs)||void 0===_f?void 0:_f.source)})}),AnchorElementRef.parameters=_objectSpread(_objectSpread({},AnchorElementRef.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_g=AnchorElementRef.parameters)||void 0===_g?void 0:_g.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    options\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const ref = useRef();\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Box sx={{\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    }}>\n                <Menu {...args} open={open} onClose={onCloseHandler} anchorElementRef={ref}>\n                    <Button onClick={() => setOpen(true)}>Open Menu</Button>\n                </Menu>\n                <span ref={ref}>Menu will popup here</span>\n            </Box>;\n  }\n}"},null===(_j=null===(_h=AnchorElementRef.parameters)||void 0===_h?void 0:_h.docs)||void 0===_j?void 0:_j.source)})}),AnchorPosition.parameters=_objectSpread(_objectSpread({},AnchorPosition.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_k=AnchorPosition.parameters)||void 0===_k?void 0:_k.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    options,\n    anchorPosition: {\n      vertical: 'top',\n      horizontal: 'right'\n    }\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\n            </Menu>;\n  }\n}"},null===(_m=null===(_l=AnchorPosition.parameters)||void 0===_l?void 0:_l.docs)||void 0===_m?void 0:_m.source)})}),Arrow.parameters=_objectSpread(_objectSpread({},Arrow.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_o=Arrow.parameters)||void 0===_o?void 0:_o.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    options,\n    arrow: true\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\n            </Menu>;\n  }\n}"},null===(_q=null===(_p=Arrow.parameters)||void 0===_p?void 0:_p.docs)||void 0===_q?void 0:_q.source)})}),BoundChildrenId.parameters=_objectSpread(_objectSpread({},BoundChildrenId.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_r=BoundChildrenId.parameters)||void 0===_r?void 0:_r.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    options: options.slice(0, -2)\n  },\n  render: args => {\n    const [id, setId] = useState('b1');\n    return <Stack spacing={5}>\n                <ToggleButtonGroup exclusive enforceValueSet value={id} onChange={(event, newId) => setId((newId as string))} data={[{\n        value: 'b1',\n        component: 'btn 1'\n      }, {\n        value: 'b2',\n        component: 'btn 2'\n      }, {\n        value: 'b3',\n        component: 'btn 3'\n      }]} />\n\n                <Box sx={{\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }}>\n                    <Menu {...args} boundChildrenId={id} optionsDirection=\"row\">\n                        <Button id=\"b1\">Button 1</Button>\n                        <Button id=\"b2\">Button 2</Button>\n                        <Button id=\"b3\">Button 3</Button>\n                    </Menu>\n                </Box>\n            </Stack>;\n  }\n}"},null===(_t=null===(_s=BoundChildrenId.parameters)||void 0===_s?void 0:_s.docs)||void 0===_t?void 0:_t.source)})}),Dense.parameters=_objectSpread(_objectSpread({},Dense.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_u=Dense.parameters)||void 0===_u?void 0:_u.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    options,\n    dense: true\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\n            </Menu>;\n  }\n}"},null===(_w=null===(_v=Dense.parameters)||void 0===_v?void 0:_v.docs)||void 0===_w?void 0:_w.source)})}),DisableRipple.parameters=_objectSpread(_objectSpread({},DisableRipple.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_x=DisableRipple.parameters)||void 0===_x?void 0:_x.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    options,\n    disableRipple: true\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\n            </Menu>;\n  }\n}"},null===(_z=null===(_y=DisableRipple.parameters)||void 0===_y?void 0:_y.docs)||void 0===_z?void 0:_z.source)})}),Elevation.parameters=_objectSpread(_objectSpread({},Elevation.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_0=Elevation.parameters)||void 0===_0?void 0:_0.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    options,\n    elevation: 0\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\n            </Menu>;\n  }\n}"},null===(_2=null===(_1=Elevation.parameters)||void 0===_1?void 0:_1.docs)||void 0===_2?void 0:_2.source)})}),Height.parameters=_objectSpread(_objectSpread({},Height.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_3=Height.parameters)||void 0===_3?void 0:_3.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    options: optionLongList,\n    height: 400\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\n            </Menu>;\n  }\n}"},null===(_5=null===(_4=Height.parameters)||void 0===_4?void 0:_4.docs)||void 0===_5?void 0:_5.source)})}),MaxHeight.parameters=_objectSpread(_objectSpread({},MaxHeight.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_6=MaxHeight.parameters)||void 0===_6?void 0:_6.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    options: optionLongList,\n    maxHeight: 200\n  },\n  render: args => {\n    const [open, setOpen] = useState(false);\n    const onCloseHandler = () => {\n      setOpen(false);\n      return true;\n    };\n    return <Menu {...args} open={open} onClose={onCloseHandler}>\n                <Button onClick={() => setOpen(true)}>Open Menu</Button>\n            </Menu>;\n  }\n}"},null===(_8=null===(_7=MaxHeight.parameters)||void 0===_7?void 0:_7.docs)||void 0===_8?void 0:_8.source)})}),DisableScrollLock.parameters=_objectSpread(_objectSpread({},DisableScrollLock.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_9=DisableScrollLock.parameters)||void 0===_9?void 0:_9.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    options: shortcutOptions,\n    disableScrollLock: true,\n    children: <Button>Open Menu</Button>\n  },\n  render: args => {\n    return <Menu {...args} open>\n                <Button>Open Menu</Button>\n            </Menu>;\n  }\n}"},null===(_11=null===(_10=DisableScrollLock.parameters)||void 0===_10?void 0:_10.docs)||void 0===_11?void 0:_11.source)})}),Width.parameters=_objectSpread(_objectSpread({},Width.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_12=Width.parameters)||void 0===_12?void 0:_12.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    options: shortcutOptions,\n    maxHeight: 200,\n    open: true,\n    width: 300,\n    children: <Button>Open Menu</Button>\n  }\n}"},null===(_14=null===(_13=Width.parameters)||void 0===_13?void 0:_13.docs)||void 0===_14?void 0:_14.source)})}),Options.parameters=_objectSpread(_objectSpread({},Options.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_15=Options.parameters)||void 0===_15?void 0:_15.docs),{},{source:_objectSpread({originalSource:"{\n  args: {},\n  render: args => {\n    return <Box sx={{\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    }}>\n                <Menu {...args} open options={options.map(option => ({\n        ...option,\n        check: true\n      }))}>\n                    <Button>Checked List</Button>\n                </Menu>\n                <Menu {...args} open options={optionLongList}>\n                    <Button>String List</Button>\n                </Menu>\n                <Menu {...args} open options={shortcutOptions} width={200}>\n                    <Button>Shortcut & icons</Button>\n                </Menu>\n                <Menu {...args} open alternativeContent={<MuiImage src=\"1.jpg\" width={200} height={300} />}>\n                    <Button>Alternative Content</Button>\n                </Menu>\n            </Box>;\n  }\n}"},null===(_17=null===(_16=Options.parameters)||void 0===_16?void 0:_16.docs)||void 0===_17?void 0:_17.source)})}),OptionsDirectionRow.parameters=_objectSpread(_objectSpread({},OptionsDirectionRow.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_18=OptionsDirectionRow.parameters)||void 0===_18?void 0:_18.docs),{},{source:_objectSpread({originalSource:'{\n  args: {},\n  render: args => {\n    return <Menu {...args} open options={optionLongList} optionsDirection="row">\n                <Button>String List</Button>\n            </Menu>;\n  }\n}'},null===(_20=null===(_19=OptionsDirectionRow.parameters)||void 0===_19?void 0:_19.docs)||void 0===_20?void 0:_20.source)})});var __namedExportsOrder=["Default","AlternativeContent","AnchorElementRef","AnchorPosition","Arrow","BoundChildrenId","Dense","DisableRipple","Elevation","Height","MaxHeight","DisableScrollLock","Width","Options","OptionsDirectionRow"]},"./src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.styled.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{CO:()=>ToggleButton,iz:()=>Divider,th:()=>ToggleButtonGroup,vv:()=>ToggleButtonGroups});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js"),_mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mui/material/Divider/Divider.js"),_mui_material__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/Paper/Paper.js"),_mui_material__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroup.js"),_mui_material__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@mui/system/esm/colorManipulator.js"),_mui_material__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@mui/material/ToggleButton/ToggleButton.js"),__makeTemplateObject=function(cooked,raw){return Object.defineProperty?Object.defineProperty(cooked,"raw",{value:raw}):cooked.raw=raw,cooked};function _objectDestructuringEmpty(obj){if(null==obj)throw new TypeError("Cannot destructure "+obj)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var templateObject_1,templateObject_2,templateObject_3,templateObject_4,templateObject_5,Divider=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_1__.ZP)((function(_ref){var props=_extends({},(_objectDestructuringEmpty(_ref),_ref));return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({flexItem:!0,orientation:"vertical"},props))}))(templateObject_1||(templateObject_1=__makeTemplateObject(["\n    margin: ",";\n"],["\n    margin: ",";\n"])),(function(props){return props.theme.spacing(1,.5)})),ToggleButtonGroups=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_1__.ZP)((function(_ref2){var props=_extends({},(_objectDestructuringEmpty(_ref2),_ref2));return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__.Z,_extends({elevation:0},props))}),{shouldForwardProp:function(propName){return!["fullWidth"].includes(propName)}})(templateObject_2||(templateObject_2=__makeTemplateObject(["\n    width: ",";\n    display: flex;\n    border: ",";\n    flex-wrap: wrap;\n\n    & .MuiToggleButtonGroup-grouped {\n        margin: ",";\n        border: 0;\n        &.Mui-disabled {\n            border: 0;\n        }\n        &:not(:first-of-type) {\n            border-radius: ",";\n        }\n        &:first-of-type {\n            border-radius: ",";\n        }\n    }\n"],["\n    width: ",";\n    display: flex;\n    border: ",";\n    flex-wrap: wrap;\n\n    & .MuiToggleButtonGroup-grouped {\n        margin: ",";\n        border: 0;\n        &.Mui-disabled {\n            border: 0;\n        }\n        &:not(:first-of-type) {\n            border-radius: ",";\n        }\n        &:first-of-type {\n            border-radius: ",";\n        }\n    }\n"])),(function(props){return props.fullWidth?"100%":"max-content"}),(function(_a){var theme=_a.theme;return"1px solid ".concat(theme.palette.divider)}),(function(props){return props.theme.spacing(.5)}),(function(props){return props.theme.shape.borderRadius}),(function(props){return props.theme.shape.borderRadius})),ToggleButtonGroup=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_1__.ZP)((function(_ref3){var props=_extends({},(_objectDestructuringEmpty(_ref3),_ref3));return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__.Z,props)}),{shouldForwardProp:function(propName){return!["customColor"].includes(propName)}})(templateObject_4||(templateObject_4=__makeTemplateObject(["\n    & .Mui-selected // , & .MuiTouchRipple-root\n    {\n        color: ",";\n    }\n\n    & .Mui-selected {\n        ","\n    }\n"],["\n    & .Mui-selected // , & .MuiTouchRipple-root\n    {\n        color: ",";\n    }\n\n    & .Mui-selected {\n        ","\n    }\n"])),(function(props){return props.customColor}),(function(props){var color=props.customColor&&(0,_mui_material__WEBPACK_IMPORTED_MODULE_5__.Fq)(props.customColor,.2);return(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.iv)(templateObject_3||(templateObject_3=__makeTemplateObject(["\n                background-color: ",";\n            "],["\n                background-color: ",";\n            "])),color?"".concat(color," !important"):"")})),ToggleButton=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_1__.ZP)(_mui_material__WEBPACK_IMPORTED_MODULE_7__.Z)(templateObject_5||(templateObject_5=__makeTemplateObject(["\n    width: max-content;\n"],["\n    width: max-content;\n"])));try{Divider.displayName="Divider",Divider.__docgenInfo={description:"",displayName:"Divider",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.styled.tsx#Divider"]={docgenInfo:Divider.__docgenInfo,name:"Divider",path:"src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.styled.tsx#Divider"})}catch(__react_docgen_typescript_loader_error){}try{ToggleButtonGroups.displayName="ToggleButtonGroups",ToggleButtonGroups.__docgenInfo={description:"",displayName:"ToggleButtonGroups",props:{fullWidth:{defaultValue:null,description:"",name:"fullWidth",required:!1,type:{name:"boolean"}},disableRipple:{defaultValue:null,description:"",name:"disableRipple",required:!1,type:{name:"boolean"}},justifyContent:{defaultValue:null,description:"",name:"justifyContent",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.styled.tsx#ToggleButtonGroups"]={docgenInfo:ToggleButtonGroups.__docgenInfo,name:"ToggleButtonGroups",path:"src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.styled.tsx#ToggleButtonGroups"})}catch(__react_docgen_typescript_loader_error){}try{ToggleButtonGroup.displayName="ToggleButtonGroup",ToggleButtonGroup.__docgenInfo={description:"",displayName:"ToggleButtonGroup",props:{orientation:{defaultValue:null,description:"",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}},exclusive:{defaultValue:null,description:"",name:"exclusive",required:!1,type:{name:"boolean"}},fullWidth:{defaultValue:null,description:"",name:"fullWidth",required:!1,type:{name:"boolean"}},disableRipple:{defaultValue:null,description:"",name:"disableRipple",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"(event: any, newValues: string | string[]) => void"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}},enforceValueSet:{defaultValue:null,description:"",name:"enforceValueSet",required:!1,type:{name:"boolean"}},data:{defaultValue:null,description:"",name:"data",required:!1,type:{name:"{ value: string; disabled?: boolean; component: ReactNode | ReactElement<any, string | JSXElementConstructor<any>>; }[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.styled.tsx#ToggleButtonGroup"]={docgenInfo:ToggleButtonGroup.__docgenInfo,name:"ToggleButtonGroup",path:"src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.styled.tsx#ToggleButtonGroup"})}catch(__react_docgen_typescript_loader_error){}try{ToggleButton.displayName="ToggleButton",ToggleButton.__docgenInfo={description:"",displayName:"ToggleButton",props:{children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<ToggleButtonClasses> & Partial<ClassNameMap<never>>"}},color:{defaultValue:{value:"'standard'"},description:"The color of the button when it is in an active state.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).",name:"color",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"standard"'},{value:'"success"'},{value:'"warning"'},{value:'"info"'},{value:'"primary"'},{value:'"secondary"'}]}},disabled:{defaultValue:{value:"false\nfalse"},description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},disableFocusRipple:{defaultValue:{value:"false"},description:"If `true`, the  keyboard focus ripple is disabled.",name:"disableFocusRipple",required:!1,type:{name:"boolean"}},fullWidth:{defaultValue:{value:"false"},description:"If `true`, the button will take up the full width of its container.",name:"fullWidth",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Callback fired when the state changes.\n@param event The event source of the callback.\n@param value of the selected button.",name:"onChange",required:!1,type:{name:"(event: MouseEvent<HTMLElement, MouseEvent>, value: any) => void"}},onClick:{defaultValue:null,description:"Callback fired when the button is clicked.\n@param event The event source of the callback.\n@param value of the selected button.",name:"onClick",required:!1,type:{name:"(event: MouseEvent<HTMLElement, MouseEvent>, value: any) => void"}},selected:{defaultValue:null,description:"If `true`, the button is rendered in an active state.",name:"selected",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"'medium'"},description:"The size of the component.\nThe prop defaults to the value inherited from the parent ToggleButtonGroup component.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},value:{defaultValue:null,description:"The value to associate with the button when selected in a\nToggleButtonGroup.",name:"value",required:!0,type:{name:"{}"}},disableRipple:{defaultValue:{value:"false"},description:"If `true`, the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the `.Mui-focusVisible` class.",name:"disableRipple",required:!1,type:{name:"boolean"}},tabIndex:{defaultValue:{value:"0"},description:"",name:"tabIndex",required:!1,type:{name:"number"}},action:{defaultValue:null,description:"A ref for imperative actions.\nIt currently only supports `focusVisible()` action.",name:"action",required:!1,type:{name:"Ref<ButtonBaseActions>"}},centerRipple:{defaultValue:{value:"false"},description:"If `true`, the ripples are centered.\nThey won't start at the cursor interaction position.",name:"centerRipple",required:!1,type:{name:"boolean"}},disableTouchRipple:{defaultValue:{value:"false"},description:"If `true`, the touch ripple effect is disabled.",name:"disableTouchRipple",required:!1,type:{name:"boolean"}},focusRipple:{defaultValue:{value:"false"},description:"If `true`, the base button will have a keyboard focus ripple.",name:"focusRipple",required:!1,type:{name:"boolean"}},focusVisibleClassName:{defaultValue:null,description:"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\nif needed.",name:"focusVisibleClassName",required:!1,type:{name:"string"}},LinkComponent:{defaultValue:{value:"'a'"},description:"The component used to render a link when the `href` prop is provided.",name:"LinkComponent",required:!1,type:{name:"ElementType<any>"}},onFocusVisible:{defaultValue:null,description:"Callback fired when the component is focused with a keyboard.\nWe trigger a `onFocus` callback too.",name:"onFocusVisible",required:!1,type:{name:"FocusEventHandler<any>"}},TouchRippleProps:{defaultValue:null,description:"Props applied to the `TouchRipple` element.",name:"TouchRippleProps",required:!1,type:{name:"Partial<TouchRippleProps>"}},touchRippleRef:{defaultValue:null,description:"A ref that points to the `TouchRipple` element.",name:"touchRippleRef",required:!1,type:{name:"Ref<TouchRippleActions>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLButtonElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.styled.tsx#ToggleButton"]={docgenInfo:ToggleButton.__docgenInfo,name:"ToggleButton",path:"src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.styled.tsx#ToggleButton"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_ToggleButtonGroup_styled__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.styled.tsx"),_utils_helpers__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/utils/helpers.ts"),_SVGIcon_SVGIcon__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/SVGIcon/SVGIcon.tsx"),_excluded=["value","onChange","size","exclusive","orientation","disableRipple","enforceValueSet","data","color","fullWidth"],_excluded2=["value","disabled","component"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var ToggleButtonGroup=function(_ref){var selectedValue=_ref.value,onChange=_ref.onChange,size=_ref.size,exclusive=_ref.exclusive,orientation=_ref.orientation,disableRipple=_ref.disableRipple,enforceValueSet=_ref.enforceValueSet,data=_ref.data,color=_ref.color,fullWidth=_ref.fullWidth,props=_objectWithoutProperties(_ref,_excluded),_a=(0,_utils_helpers__WEBPACK_IMPORTED_MODULE_2__.Ek)(color),customColor=_a[0],muiColor=_a[1],commonsValues=[].concat(selectedValue);function onChangeHandler(event,newValues){onChange&&(enforceValueSet?(exclusive&&null!==newValues&&onChange(event,newValues),!exclusive&&(null==newValues?void 0:newValues.length)&&onChange(event,newValues)):onChange(event,newValues))}function onButtonClickHandler(value,event){event.target.value||(event.stopPropagation(),null==onChangeHandler||onChangeHandler(event,exclusive?null:commonsValues.filter((function(cv){return cv!==value}))))}return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ToggleButtonGroup_styled__WEBPACK_IMPORTED_MODULE_1__.th,_extends({color:muiColor,customColor:muiColor?void 0:customColor,orientation,value:exclusive?selectedValue:commonsValues,exclusive,size,onChange:onChangeHandler,fullWidth},props),data?[].concat(data).filter(Boolean).map((function(_ref2,index){var value=_ref2.value,disabled=_ref2.disabled,component=_ref2.component,toggleProps=_objectWithoutProperties(_ref2,_excluded2);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ToggleButtonGroup_styled__WEBPACK_IMPORTED_MODULE_1__.CO,_extends({key:index,name:value,disableRipple,value,disabled,onClick:onButtonClickHandler.bind(null,value),sx:_objectSpread(_objectSpread({},fullWidth&&{flex:"1 1 auto"}),toggleProps.sx)},toggleProps),"string"==typeof component?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SVGIcon_SVGIcon__WEBPACK_IMPORTED_MODULE_3__.Z,null,component):component)})):null)};ToggleButtonGroup.displayName="ToggleButtonGroup",ToggleButtonGroup.displayName="ToggleButtonGroup",ToggleButtonGroup.defaultProps={color:void 0,orientation:void 0,size:void 0,exclusive:void 0,fullWidth:void 0,disableRipple:void 0,onChange:void 0,enforceValueSet:void 0,data:[]};const __WEBPACK_DEFAULT_EXPORT__=ToggleButtonGroup;try{ToggleButtonGroup.displayName="ToggleButtonGroup",ToggleButtonGroup.__docgenInfo={description:"",displayName:"ToggleButtonGroup",props:{orientation:{defaultValue:{value:"undefined"},description:"",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},size:{defaultValue:{value:"undefined"},description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}},exclusive:{defaultValue:{value:"undefined"},description:"",name:"exclusive",required:!1,type:{name:"boolean"}},fullWidth:{defaultValue:{value:"undefined"},description:"",name:"fullWidth",required:!1,type:{name:"boolean"}},disableRipple:{defaultValue:{value:"undefined"},description:"",name:"disableRipple",required:!1,type:{name:"boolean"}},onChange:{defaultValue:{value:"undefined"},description:"",name:"onChange",required:!1,type:{name:"(event: any, newValues: string | string[]) => void"}},color:{defaultValue:{value:"undefined"},description:"",name:"color",required:!1,type:{name:"string"}},enforceValueSet:{defaultValue:{value:"undefined"},description:"",name:"enforceValueSet",required:!1,type:{name:"boolean"}},data:{defaultValue:{value:"[]"},description:"",name:"data",required:!1,type:{name:"{ value: string; disabled?: boolean; component: ReactNode | ReactElement<any, string | JSXElementConstructor<any>>; }[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.tsx#ToggleButtonGroup"]={docgenInfo:ToggleButtonGroup.__docgenInfo,name:"ToggleButtonGroup",path:"src/components/_FIXED/ToggleButtonGroup/ToggleButtonGroup.tsx#ToggleButtonGroup"})}catch(__react_docgen_typescript_loader_error){}}}]);